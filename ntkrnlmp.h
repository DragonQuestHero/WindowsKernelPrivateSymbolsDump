/*
 * PDB file: ntkrnlmp.pdb
 * Image architecture: AMD64 (0x8664)
 *
 * Dumped by pdbex tool v0.18, by wbenny
 */

struct _IMAGE_INFO;
enum _ADJUST_REASON;
enum MCA_EXCEPTION_TYPE;
enum _PPM_PERF_ACTION;
enum POWER_MESSAGE_TYPE;
enum _IOP_RESERVE_IRP_TYPE;
enum _CONFIGURATION_TYPE;
enum TEST_HOOK_CALLBACK_ENUM;
enum POWER_SETTING_REGISTRANT_TYPE;
enum _PARTITION_STYLE;
enum POWER_POLICY_DEVICE_TYPE;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
enum _THERMAL_CHANNEL;
enum _FT_PARTITION_STATE;
struct _UNICODE_STRING;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
enum MONITOR_MESSAGE_TYPE;
enum _CC_TEST_EVENT_TYPE;
struct _MMWSL;
enum _OB_PREOP_CALLBACK_STATUS;
enum _PFK_POWER_ACTION_PHASE_ID;
enum NETWORK_OPEN_LOCATION_QUALIFIER;
enum _TYPE_OF_MEMORY;
struct _LIST_ENTRY;
struct _KDEVICE_QUEUE_ENTRY;
struct _WAIT_CONTEXT_BLOCK;
struct _KDEVICE_QUEUE;
struct _KDPC;
struct _DISPATCHER_HEADER;
struct _KEVENT;
struct _DEVICE_OBJECT;
enum _BUS_DATA_TYPE;
enum FT_TYPE;
struct _EMP_LAZY_CALLBACK_BLOCK;
enum _EXCEPTION_DISPOSITION;
enum _SYSTEM_POWER_STATE;
enum _HEADLESS_TERM_SERIAL_PORT;
enum _TIMER_SET_INFORMATION_CLASS;
enum _SECTION_INHERIT;
enum _PCW_CALLBACK_TYPE;
enum _ETW_SESSION_NOTIFICATION_TYPE;
enum _MMFLUSH_TYPE;
struct _PERFINFO_VIRTUAL_ALLOC;
enum _WORKER_FUNCTION;
enum _TPM_BOOT_ENTROPY_RESULT_CODE;
struct _GUID;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
struct _GENERIC_MAPPING;
enum _POOL_TYPE;
struct _OBJECT_TYPE_INITIALIZER;
enum _ETW_PROVIDER_STATE;
enum _WORKER_FACTORY_CALLBACK_CLASS;
struct _PS_CPU_QUOTA_QUERY_ENTRY;
enum _WHEA_ERROR_SEVERITY;
enum WMISERVICECODES;
enum _RTL_GENERIC_COMPARE_RESULTS;
enum _KINTERRUPT_POLARITY;
enum MARK_TYPE;
enum _IO_QUERY_DEVICE_DATA_FORMAT;
enum _IO_ALLOCATION_ACTION;
enum _ACPI_REG_TYPE;
struct _OBJECT_DUMP_CONTROL;
enum _KWAIT_SIGNAL_TYPE;
enum _PNP_VETO_TYPE;
enum tagWMIACTIONCODE;
enum VF_PENDING_DEFER_OPTION;
enum _MM_PAGE_ACCESS_TYPE;
struct _IO_STATUS_BLOCK;
struct _FILE_IO_COMPLETION_INFORMATION;
enum _KSTACK_TYPE;
struct _SM_STORE_MANAGER_CONTEXT;
enum _CLFS_MGMT_NOTIFICATION_TYPE;
enum _IO_ACCESS_MODE;
union _ULARGE_INTEGER;
struct _KTIMER_TABLE_ENTRY;
enum _PS_IFEO_KEY_STATE;
enum _VALUE_SEARCH_RETURN_TYPE;
struct _SYSTEM_VA_LIST_INFORMATION;
enum _PF_HARD_FAULT_TYPE;
struct _PSEUDO_DESCRIPTOR_32;
enum _FILE_INFORMATION_CLASS;
enum SWITCH_CONTEXT_PLATFORM_ID;
struct _AMD64_M128;
struct _AMD64_LEGACY_SAVE_AREA;
struct _PS_ATTRIBUTE;
enum SeCmAuditType;
union _SLIST_HEADER;
struct _GROUP_AFFINITY;
struct _flags;
struct _CACHED_KSTACK_LIST;
struct _KNODE;
enum _DEBUG_CONTROL_SPACE_ITEM;
struct _DBGKM_CREATE_THREAD;
struct _DBGKM_CREATE_PROCESS;
enum _INTENT_LOCK_TYPE;
enum _TOKEN_INFORMATION_CLASS;
struct _PCI_PMCSR_BSE;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
enum _MM_PAGE_PRIORITY;
enum PROFILE_DEPARTURE_STYLE;
struct _PHYSICAL_TO_VIRTUAL;
struct _PCI_PMCSR;
enum _OB_OPEN_REASON;
enum _EX_POOL_PRIORITY;
enum _SUBKEY_SEARCH_TYPE;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
enum _COVERAGE_REQUEST_CODES;
enum _CMP_COPY_TYPE;
union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS;
enum _HAL_PLATFORM_TIMER_SOURCE;
struct _ENUM_HANDLES_CONTEXT;
enum _WHEA_CPU_VENDOR;
enum KTM_FINALIZE_TYPE;
struct _SINGLE_LIST_ENTRY;
struct _GENERAL_LOOKASIDE;
enum _KBUGCHECK_BUFFER_DUMP_STATE;
enum _FP_IEEE_COMPARE_RESULT;
enum _ENUM_TYPE;
enum _KBUGCHECK_CALLBACK_REASON;
enum _PLUGPLAY_CONTROL_CLASS;
union _LARGE_INTEGER;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
enum _CLFS_IOSTATS_CLASS;
enum PNPR_EXTENDED_STATUS;
struct _INTERRUPT_HT_INTR_INFO;
enum _KEY_SET_INFORMATION_CLASS;
struct _WHEA_IPF_MCA_DESCRIPTOR;
enum _DEVICE_USAGE_NOTIFICATION_TYPE;
struct _WMI_TRACE_PACKET;
struct _SYSTEM_TRACE_HEADER;
struct _ETW_TP_EVENT_POOL_TH_MIN_SET;
enum _POST_BLOCK_TYPE;
struct _M128A;
struct _XSAVE_FORMAT;
struct _CONTEXT;
struct _FIBER;
enum NEGOTIATE_MESSAGES;
struct _PROCESSOR_POWER_POLICY_INFO;
enum _MUTANT_INFORMATION_CLASS;
struct _EX_RUNDOWN_REF_CACHE_AWARE;
struct _LOADER_PERFORMANCE_DATA;
enum SQM_EVENT;
enum _CMOS_DEVICE_TYPE;
struct _ACCESS_REASONS;
struct _CONTEXT_CHUNK;
struct _HAL_PLATFORM_INFORMATION;
enum CPU_VENDORS;
enum DISK_CACHE_RETENTION_PRIORITY;
struct _EX_RUNDOWN_REF;
struct _FILE_COMPLETION_INFORMATION;
enum _POP_DEVICE_IDLE_TYPE;
enum PCI_HT_CapabilitiesType;
enum _STORAGE_PROPERTY_ID;
struct _PSP_QUOTA_ENTRY;
struct _EPROCESS_QUOTA_BLOCK;
enum _PO_SLEEP_DISABLE_REASON;
enum _MEMORY_CACHING_TYPE;
enum PROFILE_STATUS;
enum _SECURITY_LOGON_TYPE;
struct _RTL_BALANCED_LINKS;
struct _KTMOBJECT_NAMESPACE_LINK;
enum WMIDPREQUESTCODE;
struct _SYSTEM_POOLTAG;
enum _DISK_SNAPSHOT_STATE;
enum _ERROR_SEVERITY_VALUE;
struct _PAGED_LOOKASIDE_LIST;
enum _HV_X64_POWER_CHANGE_METHOD;
struct _PNP_LOCK_MOUNTABLE_DEVICE_CONTEXT;
enum _MM_POOL_PRIORITIES;
struct _ASSEMBLY_STORAGE_MAP;
enum _SECURITY_IMPERSONATION_LEVEL;
enum _PSP_RATE_APC_STATE;
struct _FLS_CALLBACK_INFO;
enum _WHEA_ERROR_SOURCE_TYPE;
enum _WHEA_ERROR_SOURCE_STATE;
union _XPF_MCE_FLAGS;
union _XPF_MC_BANK_FLAGS;
struct _WHEA_XPF_MC_BANK_DESCRIPTOR;
struct _WHEA_XPF_MCE_DESCRIPTOR;
union _WHEA_NOTIFICATION_FLAGS;
struct _WHEA_NOTIFICATION_DESCRIPTOR;
struct _WHEA_XPF_CMC_DESCRIPTOR;
struct _WHEA_XPF_NMI_DESCRIPTOR;
struct _WHEA_IPF_CMC_DESCRIPTOR;
struct _WHEA_IPF_CPE_DESCRIPTOR;
struct _WHEA_PCI_SLOT_NUMBER;
union _AER_ROOTPORT_DESCRIPTOR_FLAGS;
struct _WHEA_AER_ROOTPORT_DESCRIPTOR;
union _AER_ENDPOINT_DESCRIPTOR_FLAGS;
struct _WHEA_AER_ENDPOINT_DESCRIPTOR;
union _AER_BRIDGE_DESCRIPTOR_FLAGS;
struct _WHEA_AER_BRIDGE_DESCRIPTOR;
struct _WHEA_GENERIC_ERROR_DESCRIPTOR;
struct _WHEA_ERROR_SOURCE_DESCRIPTOR;
enum _FIRMWARE_TYPE;
enum _WHEA_ERROR_TYPE;
enum _RESOURCE_HANDLER_TYPE;
struct _EFI_DEVICE_PATH;
struct _FILEPATH_DEVICE_PATH;
enum _AUDIT_EVENT_TYPE;
union _UNWIND_CODE;
struct _ETW_KERNEL_TRACE_TIMESTAMP;
struct _ACE_HEADER;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
enum _MM_POOL_FAILURE_REASONS;
enum _DEVICE_POWER_STATE;
struct _RTL_MODULE_BASIC_INFO;
enum _PSPOWEREVENTTYPE;
enum _IOV_REFERENCE_TYPE;
struct _ACTIVATION_CONTEXT_STACK;
enum _IO_PAGING_PRIORITY;
enum _REG_NOTIFY_CLASS;
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK;
enum _MI_SYSTEM_VA_TYPE;
enum _EVENT_INFORMATION_CLASS;
enum _IO_COMPLETION_INFORMATION_CLASS;
struct _QUAD;
enum _MI_DYNAMIC_MEMORY_LOCKTYPE;
enum _ARBITER_REQUEST_SOURCE;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
enum _CLFS_LOG_ARCHIVE_MODE;
enum WDIP_SEM_ALLOC_TYPE;
struct _MMPTE_HARDWARE;
struct _HARDWARE_PTE;
struct _MMPTE_PROTOTYPE;
struct _MMPTE_SOFTWARE;
struct _MMPTE_TIMESTAMP;
struct _MMPTE_TRANSITION;
struct _MMPTE_SUBSECTION;
struct _MMPTE_LIST;
struct _EX_PUSH_LOCK;
struct _WHEAP_ERROR_SOURCE_TYPE_CONFIG;
enum _POLICY_AUDIT_EVENT_TYPE_EX;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
enum _PF_FILE_ACCESS_TYPE;
enum _ADDITIVE_MODE;
struct _XSAVE_AREA_HEADER;
struct _XSAVE_AREA;
enum _EVENT_TYPE;
struct _VI_POOL_PAGE_HEADER;
struct _VI_POOL_ENTRY_INUSE;
struct _VI_POOL_ENTRY;
struct _DRIVER_EXTENSION;
enum _IO_CONTAINER_NOTIFICATION_CLASS;
enum _MI_VAD_TYPE;
enum _SUITE_TYPE;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
enum _WOW64_SHARED_INFORMATION;
enum EMP_NODE_TYPE;
struct _KDESCRIPTOR;
struct _KSPECIAL_REGISTERS;
enum _REQUESTER_TYPE;
enum _TRUSTED_INFORMATION_CLASS;
struct _OB_PRE_OPERATION_INFORMATION;
struct _SID_AND_ATTRIBUTES;
struct _TOKEN_GROUPS;
enum HV_ERROR_TYPES;
enum _LSA_SID_NAME_MAPPING_OPERATION_TYPE;
enum _CLS_IOSTATS_CLASS;
struct _KSPIN_LOCK_QUEUE;
enum _CLFS_CONTEXT_MODE;
struct _FS_FILTER_CALLBACKS;
enum _CM_SHARE_DISPOSITION;
enum _IRQ_PRIORITY;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
enum _TRANSACTION_STATE;
enum _SYSTEM_DLL_TYPE;
union _MCI_STATS;
union _MCI_ADDR;
struct _MCA_EXCEPTION;
enum _TAG_UNNAMED_1;
struct _PP_LOOKASIDE_LIST;
enum _THREAD_UMS_INFORMATION_COMMAND;
enum _WHEA_ERROR_PACKET_DATA_FORMAT;
enum _VI_DEADLOCK_RESOURCE_TYPE;
enum _INTERFACE_TYPE;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _SMKM_CRYPTO_REG_PARAMS;
enum _TAG_UNNAMED_2;
enum _IO_NOTIFICATION_EVENT_CATEGORY;
enum _KDPC_IMPORTANCE;
enum _stringsSectionType;
enum PCI_EXPRESS_L1_EXIT_LATENCY;
enum _WORKING_SET_TYPE;
struct _RTL_TRACE_BLOCK;
enum _DUMP_TYPES;
struct _MMCLONE_HEADER;
enum _EMULATOR_PORT_ACCESS_TYPE;
struct _AMD64_XMM_SAVE_AREA32;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
enum _BALANCE_OBJECT;
enum _WATCHDOG_INFORMATION_CLASS;
struct _CLIENT_ID;
struct _SYSTEM_THREAD_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
enum _SYSDBG_COMMAND;
enum BUS_QUERY_ID_TYPE;
enum PCI_EXPRESS_L0s_EXIT_LATENCY;
enum _PFSN_BOOT_PHASE_ID;
enum WMIENABLEDISABLEFUNCTION;
enum _KPROCESS_STATE;
enum _HV_CALL_CODE;
enum _REGOPERATION;
enum _KEY_INFORMATION_CLASS;
enum _HAL_SET_INFORMATION_CLASS;
enum WMIP_LEGACY_WORK_TYPE;
enum _DEVICE_INSTALL_STATE;
enum _PROCESS_TLS_INFORMATION_TYPE;
enum _BCD_OBJECT_ALIAS;
struct _CURDIR;
enum _TAG_UNNAMED_3;
struct _WNODE_HEADER;
struct tagWNODE_SINGLE_INSTANCE;
enum _WOW64_TURBO_SERVICE_TYPE;
enum VI_FAULTS_DECISION_INDEX;
struct _STRING;
struct _RTL_DRIVE_LETTER_CURDIR;
enum KE_PROCESSOR_CHANGE_NOTIFY_STATE;
enum _TABLE_SEARCH_RESULT;
enum DEVICE_TEXT_TYPE;
enum _EXTENDED_AGP_REGISTER;
enum _CC_READ_PATTERN;
enum _DEBUGOBJECTINFOCLASS;
struct _IOV_STACK_LOCATION;
struct _IOV_SESSION_DATA;
enum _FUNCTION_TABLE_TYPE;
enum _PNP_UNLOCK_UNLINK_ACTION;
struct _RTL_CRITICAL_SECTION_DEBUG;
enum _FP__IEEE_ROUNDING_MODE;
struct _KAFFINITY_EX;
struct _PROCESSOR_PERF_STATES;
enum _PNP_DEVNODE_STATE;
enum _SEMAPHORE_INFORMATION_CLASS;
struct _MAPPING;
enum _INTEL_CACHE_TYPE;
enum SYSID_ENTRY_TYPE;
enum _THREADINFOCLASS;
enum POWER_STATE_HANDLER_TYPE;
enum _HARDWARE_PROFILE_BUS_TYPE;
enum KERNEL_MCE_DELIVERY_OPERATION;
enum _MEMORY_INFORMATION_CLASS;
enum PCI_EXPRESS_CARD_PRESENCE;
struct _TRIAGE_DATA_BLOCK;
enum _KWAIT_BLOCK_STATE;
enum KTM_STATE;
enum _MODE;
enum _CREATE_FILE_TYPE;
struct CHUNKHEADER;
enum _OBJECT_INFORMATION_CLASS;
enum _WAIT_TYPE;
enum _HARDWARE_COUNTER_TYPE;
enum _IO_PRIORITY_HINT;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
enum _KTHREAD_STATE;
struct _EM_ENTRY_REGISTRATION;
enum _POWERSTATETASK;
enum _HAL_QUERY_INFORMATION_CLASS;
struct _PROCESSOR_NUMBER;
struct _COUNTER_READING;
struct _THREAD_PERFORMANCE_DATA;
enum _LINK_TRACKING_INFORMATION_TYPE;
struct _RESOURCE_HASH_ENTRY;
enum _PLUGPLAY_EVENT_CATEGORY;
enum _HV_GUEST_OS_MICROSOFT_IDS;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
enum _KINTERRUPT_MODE;
struct _TOKEN_PRIMARY_GROUP;
enum _KTMOBJECT_TYPE;
enum _ETW_RT_EVENT_LOSS;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
enum _WIN32_POWERINFO_TYPE;
enum tagWMI_CLOCK_TYPE;
struct EFI_GUID;
struct _VENDOR_DEVICE_PATH;
enum _PCI_HARDWARE_INTERFACE;
enum EVENTSECURITYOPERATION;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SID;
struct _PROC_HISTORY_ENTRY;
enum _EX_HOST_INFORMATION_CLASS;
enum _FP__IEEE_FORMAT;
enum _DMA_SPEED;
enum _LICENSING_TAMPER_STATE;
struct LIST_ENTRY32;
enum _ARM_FUNCTION_TABLE_TYPE;
struct _ARM_DYNAMIC_FUNCTION_TABLE;
enum _PORT_INFORMATION_CLASS;
enum _IPI_TYPE;
enum _PS_STD_HANDLE_STATE;
enum _DEVICE_RELATION_TYPE;
struct _REGENTRY;
struct _TEB_ACTIVE_FRAME_CONTEXT;
enum _KEY_VALUE_INFORMATION_CLASS;
struct _LUID;
struct _LUID_AND_ATTRIBUTES;
struct _TOKEN_PRIVILEGES;
enum _DMA_WIDTH;
enum _SHRINK_VOLUME_REQUEST_TYPES;
struct _IO_TIMER;
enum _PROCESSOR_CACHE_TYPE;
enum POWER_INFORMATION_LEVEL;
enum _SE_ADT_PARAMETER_TYPE;
enum _PROC_HYPERVISOR_STATE;
union _WHEA_PERSISTENCE_INFO;
enum COMPARTMENT_ID;
struct _PORT_MESSAGE;
struct _LPC_CLIENT_DIED_MSG;
enum _ETW_BUFFER_STATE;
enum _RESOURCE_TRANSLATION_DIRECTION;
enum _ALPC_PORT_INFORMATION_CLASS;
struct PPM_WMI_PERF_STATE;
enum _KTRANSACTION_OUTCOME;
enum VF_DEVOBJ_TYPE;
enum _SYSTEM_INFORMATION_CLASS;
enum KCONTINUE_STATUS;
enum _KWAIT_STATE;
struct _BOOTDISK_INFORMATION_EX;
enum _MM_ROTATE_DIRECTION;
union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS;
enum _SECURITY_OPERATION_CODE;
enum _CLS_CONTEXT_MODE;
struct INSTID;
struct tagINSTIDCHUNK;
enum PCI_EXPRESS_ASPM_SUPPORT;
enum _KENLISTMENT_STATE;
struct _KENLISTMENT_HISTORY;
enum _ETW_NOTIFICATION_TYPE;
enum _KERNEL_STACK_LIMITS;
struct _KTRANSACTION_HISTORY;
struct _OBJECT_TYPE_INFORMATION;
struct _HEAP_EVENT_SUBSEGMENT_ALLOC_FREE;
struct _HEAP_SUBSEGMENT_ALLOC;
enum _TOKEN_TYPE;
struct _HAL_ACPI_AUDIT_INFORMATION;
enum VF_FAILURE_CLASS;
enum _FS_FILTER_SECTION_SYNC_TYPE;
enum _RTL_UMS_THREAD_INFO_CLASS;
enum _MEMORY_CACHING_TYPE_ORIG;
struct _GDI_TEB_BATCH;
enum _FIRMWARE_REENTRY;
struct _SE_AUDIT_PROCESS_CREATION_INFO;
struct _MMPTE_FLUSH_LIST;
struct _KLOCK_QUEUE_HANDLE;
enum _POLICY_LSA_SERVER_ROLE;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
enum _FSINFOCLASS;
struct _SYSTEM_POWER_STATE_CONTEXT;
enum _POWER_STATE_TYPE;
union _POWER_STATE;
enum POWER_ACTION;
struct _IO_STACK_LOCATION;
struct _IRP_MINI_SNAPSHOT;
struct _IOFCALLDRIVER_STACKDATA;
enum PCI_BUS_WIDTH;
struct _PO_HIBER_PERF;
struct PO_MEMORY_IMAGE;
enum _WATCHDOG_HANDLER_ACTION;
enum _SHUTDOWN_ACTION;
struct _IMAGE_RESOURCE_DATA_ENTRY;
enum _DPFLTR_TYPE;
enum _HV_STATS_OBJECT_TYPE;
enum _SE_AUDIT_OPERATION;
enum _PSW32JOBCALLOUTTYPE;
enum SYSTEM_POWER_CONDITION;
struct _VERIFIER_SHARED_EXPORT_THUNK;
enum _AMD64_UNWIND_OP_CODES;
enum _WHEA_PCIEXPRESS_DEVICE_TYPE;
enum _IO_COMPLETION_ROUTINE_RESULT;
enum _KD_OPTION;
enum _CLS_LOG_INFORMATION_CLASS;
struct _CM_HASH_ENTRY;
struct _MM_KERNEL_DUMP_CONTEXT;
enum _PP_NPAGED_LOOKASIDE_NUMBER;
enum _JOURNAL_INFORMATION_CLASS;
enum _EXT_TDOP;
struct _CM_INT13_DRIVE_PARAMETER;
enum PS_CREATE_STATE;
enum _SYSTEM_MEMORY_LIST_COMMAND;
enum _ACCESS_REASON_TYPE;
struct _VF_SUSPECT_DRIVER_ENTRY;
enum PO_WAKE_SOURCE_TYPE;
struct _PS_ATTRIBUTE_LIST;
enum _IO_CONTAINER_INFORMATION_CLASS;
enum _DBGKD_MAJOR_TYPES;
enum _TRANSACTION_OUTCOME;
struct _GET_PEB_ADDRESS;
enum _HV_CPUID_FUNCTION;
enum _SYSTEM_VA_TYPE;
enum _WORKING_SET_TRIMMER_STATE;
struct _PHYSICAL_MEMORY_RUN64;
struct _PHYSICAL_MEMORY_DESCRIPTOR64;
struct _EXCEPTION_RECORD64;
struct _DUMP_HEADER64;
enum _HAL_DISPLAY_BIOS_INFORMATION;
enum PO_FIXED_WAKE_SOURCE_TYPE;
enum _STORAGE_BUS_TYPE;
struct _PERFINFO_WORKINGSETMANAGER_INFORMATION;
enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE;
enum INTERRUPT_CONNECTION_TYPE;
enum _RTL_UMS_SCHEDULER_REASON;
enum _LSA_LOOKUP_DOMAIN_INFO_CLASS;
enum _FP_IEEE_OPERATION_CODE;
enum _FILE_OBJECT_EXTENSION_TYPE;
struct _KAPC;
enum _MEMORY_WORKING_SET_EX_LOCATION;
struct _ACCESS_ALLOWED_OBJECT_ACE;
enum _VF_ISSUE_TYPE;
struct _CACHE_DESCRIPTOR;
enum _WRITE_CACHE_TYPE;
enum _TIMER_TYPE;
struct _LSA_DISPATCH_TABLE;
enum _ARBITER_ACTION;
struct _WIN32_PARSEMETHOD_PARAMETERS;
enum _LSA_TOKEN_INFORMATION_TYPE;
enum _TRANSACTION_INFORMATION_CLASS;
struct _REENUMERATE_SELF_INTERFACE_STANDARD;
enum _POLICY_NOTIFICATION_INFORMATION_CLASS;
enum HAL_INTERRUPT_TARGET_TYPE;
struct _KEY_VALUE_FULL_INFORMATION;
enum _UNWIND_OP_CODES;
struct _PROC_PERF_CONSTRAINT;
enum ReplacesCorHdrNumericDefines;
enum LSA_FOREST_TRUST_COLLISION_RECORD_TYPE;
struct _TEB_ACTIVE_FRAME_CONTEXT32;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX32;
enum _TP_LOG_LEVEL;
enum _MM_TRIM_WHILE_AGING_STATE;
enum _EVENT_TRACE_INFORMATION_CLASS;
enum _HARDERROR_RESPONSE;
enum _MM_STORE_KEY_TYPE;
enum PCI_EXPRESS_ASPM_CONTROL;
struct _ETW_CRITSEC_EVENT_INIT;
enum RTL_BSD_ITEM_TYPE;
enum LATENCY_TIME;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
enum _PFFI_CONFLICT_TYPE;
enum _PSPROCESSPRIORITYMODE;
enum VERIFIER_MODE;
enum BATTERY_QUERY_INFORMATION_LEVEL;
struct _INITIAL_PRIVILEGE_SET;
enum _ENLISTMENT_INFORMATION_CLASS;
struct _RELATION_LIST_ENTRY;
struct _FILE_LINK_INFORMATION;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
enum _KBUGCHECK_DUMP_IO_TYPE;
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;
enum NOTIFY_MAPPED_WRITE_STATUS;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
struct PPM_PERFSTATE_EVENT;
enum _KPROFILE_SOURCE;
struct _SLIST_ENTRY32;
enum _ACL_INFORMATION_CLASS;
enum _CM_SERVICE_LOAD_TYPE;
struct _KMUTANT;
struct _PERFINFO_EVENT_MATCH_ID;
enum PCI_EXPRESS_DEVICE_TYPE;
struct _DUMP_INITIALIZATION_CONTEXT;
struct _DUMP_STACK_CONTEXT;
enum _SM_ENCRYPTION_SCOPE;
enum IMAGE_AUX_SYMBOL_TYPE;
struct _INTERRUPT_REMAPPING_INFO;
enum HAL_APIC_DESTINATION_MODE;
struct _INTERRUPT_VECTOR_DATA;
enum _WORK_QUEUE_TYPE;
enum _IRQ_DEVICE_POLICY_USHORT;
enum _NT_PRODUCT_TYPE;
struct _PCI_MSI_MESSAGE_ADDRESS;
struct _PERFINFO_BOOT_PREFETCH_INFORMATION;
enum _CONFIGURATION_CLASS;
enum _PF_PHASED_SCENARIO_TYPE;
enum _PSW32THREADCALLOUTTYPE;
struct _EMP_RULE_PARSER_STACK;
enum _MM_FLUSH_REASON;
struct _TXN_PARAMETER_BLOCK;
enum _TRACE_INFORMATION_CLASS;
enum _WORKERFACTORYINFOCLASS;
enum _CRASHDMP_EVENTS;
enum _MANDATORY_LEVEL;
enum _LOCK_OPERATION;
enum _RM_COMMAND_NUMBER;
enum _LSA_SID_NAME_MAPPING_OPERATION_ERROR;
enum _POLICY_AUDIT_EVENT_TYPE;
enum _TP_DEBUG_CLASS;
enum _KRESOURCEMANAGER_STATE;
enum _UMS_THREAD_STATE;
enum _DEVICE_REMOVAL_POLICY;
enum _KOBJECTS;
enum _CRASHDUMP_CONFIGURATION;
enum _LSA_COMMAND_NUMBER;
enum _KTBFLUSH_TYPE;
struct _LSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT;
union _LSA_SID_NAME_MAPPING_OPERATION_OUTPUT;
enum POWER_PLATFORM_ROLE;
struct _KQUEUE;
union EX_QUEUE_WORKER_INFO;
struct _EX_WORK_QUEUE;
enum _HEAP_INFORMATION_CLASS;
struct _EVENT_INSTANCE_HEADER;
enum _IA64_FUNCTION_TABLE_TYPE;
enum _SEP_ACL_TYPE;
struct _ETW_UMS_EVENT_PARK;
enum PCI_EXPRESS_POWER_STATE;
enum _EX_HOST_CALLBACK_REASON;
enum ST_STORE<SM_TRAITS>::_ST_LAZY_WORK_TYPE;
struct ST_STORE<SM_TRAITS>::_ST_LAZY_WORK;
enum IMPORT_OBJECT_NAME_TYPE;
enum _HV_HYPERVISOR_INTERFACE;
struct _RTL_SPLAY_LINKS;
enum _INTERLOCKED_RESULT;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
enum _TOKEN_ELEVATION_TYPE;
enum _MMLISTS;
enum _STORAGE_IDENTIFIER_CODE_SET;
enum _TP_CALLBACK_PRIORITY;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
enum ACTCTX_REQUESTED_RUN_LEVEL;
enum _MEMORY_RESERVE_TYPE;
struct _LPCP_MESSAGE;
enum _MONITOR_DISPLAY_STATE;
enum _WOW64_FUNCTION_CODE64;
enum _CM_SERVICE_NODE_TYPE;
struct _KDPC_DATA;
enum ETWTRACECONTROLCODE;
enum _STORAGE_MEDIA_TYPE;
enum _HV_CPU_COUNTER;
enum _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE;
enum _IOP_PRIORITY_HINT;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
enum _IO_ACCESS_TYPE;
enum _STORAGE_IDENTIFIER_TYPE;
struct _PROCESSOR_IDLE_STATE;
struct _PROCESSOR_IDLE_STATES;
enum _TIMER_INFORMATION_CLASS;
enum _REG_ACTION;
enum _STORAGE_PORT_CODE_SET;
struct _MMVAD_FLAGS;
struct _MMVAD_FLAGS3;
struct _MMVAD_FLAGS2;
struct _MMSECURE_FLAGS;
struct _MMADDRESS_LIST;
struct _MMVAD_LONG;
struct _PROC_PERF_DOMAIN;
enum _ARBITER_RESULT;
union _KWAIT_STATUS_REGISTER;
struct _KAPC_STATE;
struct _KTIMER;
struct _KWAIT_BLOCK;
struct _KSEMAPHORE;
struct _KTHREAD;
enum _PNP_QUERY_RELATION;
enum _SID_NAME_USE;
enum _MM_SYSTEM_SIZE;
enum _HV_SERVICE_BRANCH;
enum _KAPC_ENVIRONMENT;
enum _IO_SESSION_STATE;
enum _ACCESS_MASK_FORMAT;
enum _HARDERROR_RESPONSE_OPTION;
enum _PS_RESOURCE_TYPE;
enum DEVICE_REGISTRY_PROPERTY;
enum _IRQ_GROUP_POLICY;
enum SA_AttrTarget;
enum _KWAIT_REASON;
enum _VF_ERROR_ID;
enum _PF_FUS_PHASE_ID;
enum _POWER_REQUEST_TYPE;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
enum _PF_ACCESS_TRACING_COMMAND;
enum _TP_TRACE_TYPE;
struct _WDBGEXTS_QUERY_INTERFACE;
struct _EISA_IRQ_DESCRIPTOR;
struct _EISA_IRQ_CONFIGURATION;
enum _CM_ERROR_CONTROL_TYPE;
union _UMS_APC_CONTROL;
enum _PF_TRACE_TYPE;
enum _POLICY_INFORMATION_CLASS;
enum _AMD64_FUNCTION_TABLE_TYPE;
struct _MI_PHYSICAL_VIEW;
enum _TAG_UNNAMED_4;
enum _KTRANSACTION_STATE;
enum _ATOM_INFORMATION_CLASS;
enum _DBG_STATE;
enum PCI_EXPRESS_MRL_STATE;
struct _SCATTER_GATHER_ELEMENT;
enum _HV_GUEST_OS_VENDOR;
enum EM_RULE_STATE;
struct _PROCESS_HANDLE_INFORMATION;
enum _PS_ATTRIBUTE_NUM;
enum WELL_KNOWN_SID_TYPE;
enum _SECTION_INFORMATION_CLASS;
struct _SUPPORTED_RANGE;
enum POP_SUBSTITUTION_POLICY;
struct _SMBIOS_STRUCT_HEADER;
enum VF_EVENTS;
enum VF_OBJECT_TYPE;
struct _AMD64_DESCRIPTOR;
enum LSA_FOREST_TRUST_RECORD_TYPE;
enum IO_DEVICE_RELATIONSHIP;
enum PCI_EXPRESS_INDICATOR_STATE;
enum PCI_EXPRESS_MAX_PAYLOAD_SIZE;
enum VfBugcheckWorkaroundType;
enum BATTERY_SET_INFORMATION_LEVEL;
enum _PERFINFO_CCSWAP_TYPE;
enum _POLICY_DOMAIN_INFORMATION_CLASS;
struct _HANDLE_TRACE_DB_ENTRY;
union _WHEA_XPF_BUS_CHECK;
enum ST_STORE<SM_TRAITS>::_ST_PERSIST_PHASE;
enum _JOBOBJECTINFOCLASS;
union _KGDTENTRY64;
enum _DBGKM_APINUMBER;
enum _PROCESSINFOCLASS;
struct tagAHCACHESTATS;
struct tagSTOREDCACHEHEADER;
struct _PROCESSOR_PERF_INFO;
struct _KGATE;
enum _IO_SESSION_EVENT;
enum _WHEA_RAW_DATA_FORMAT;
enum IMPORT_OBJECT_TYPE;
struct _MSWmi_Guid;
enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION;
enum _SEP_RM_LSA_MEMORY_TYPE;
enum _SEP_LSA_WORK_ITEM_TAG;
enum _RTL_PATH_TYPE;
struct _PROC_IDLE_STATE_BUCKET;
struct _PROC_IDLE_STATE_ACCOUNTING;
struct _PROC_IDLE_ACCOUNTING;
enum _SEP_TOKEN_AUDIT_POLICY_VALUE;
enum _RTL_RXACT_OPERATION;
enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
enum ACCESS_MASK_FIELD_TO_UPDATE;
enum _DISK_SAN_POLICY;
enum _DETECTION_TYPE;
struct _HEAP_EVENT_RANGE_CREATE;
struct _HEAP_RANGE_CREATE;
enum _STORAGE_ID_NAA_FORMAT;
enum _MEDIA_TYPE;
enum _WRITE_CACHE_ENABLE;
enum _BIN_TYPES;
struct _HEAP_RANGE_DESTROY;
enum _DISK_CACHE_STATE;
enum _MOUNTMGR_AUTO_MOUNT_STATE;
struct _KEY_VALUE_PARTIAL_INFORMATION;
enum _ST_ETW_TERMINATION_REASON;
enum _WRITE_THROUGH;
enum _STORAGE_QUERY_TYPE;
struct _X86_DESCRIPTOR;
enum _ST_IO_TYPE;
enum _STORAGE_ASSOCIATION_TYPE;
union _WHEA_REVISION;
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR;
enum _WRITE_CACHE_CHANGE;
enum _SM_LOG_ENTRY_TYPE;
enum _FSRTL_COMPARISON_RESULT;
enum _COMPLETION_PACKET_TYPE;
enum _FSRTL_CHANGE_BACKING_TYPE;
struct _KCRM_MARSHAL_HEADER;
enum _ST_ETW_EVENT;
enum _FAST_IO_POSSIBLE;
enum _TRANSFER_TYPE;
enum NETWORK_OPEN_INTEGRITY_QUALIFIER;
struct _PS_PER_CPU_QUOTA_CACHE_AWARE;
enum ROT_BAR_TYPE;
enum _BCB_PIN_COUNT_SOURCE;
enum _CC_MAPPING_PRIORITY;
enum _RTLP_WALK_STACK_TYPE;
enum UNMAP_ACTIONS;
enum _FT_STATE;
enum _MI_SUBSECTION_STATUS;
enum _BLOB_ID;
enum _TAG_UNNAMED_5;
enum _PSP_ENVIRONMENT_BLOCK_PARSE_STATE;
enum _WMI_HEADER_TYPE;
enum _ETW_GUID_TYPE;
enum _HOTPATCH_HOOK_TYPE;
enum _HEADLESS_CMD;
enum _HEADLESS_TERM_PORT_TYPE;
enum ETWTRACECONTROLCODE_PRIV;
enum _TAG_UNNAMED_6;
enum CM_LOGREC_ACTION;
enum _CM_LOAD_FAILURE_TYPE;
enum _CLFS_MGMT_POLICY_TYPE;
enum UoWActionType;
struct _MMADDRESS_NODE;
struct _MM_AVL_TABLE;
enum _COMPARISON;
enum _HV_FILE_STATUS;
enum _CM_LOCK_TYPE;
enum WPP_DEFINE_BIT_NAMES;
enum SWITCH_CONTEXT_TYPE;
enum SWITCH_CONTEXT_DLL_TRIGGER_CONDITION;
enum _NODE_TYPE;
enum _ATTACH_VIRTUAL_DISK_FLAG;
enum HSTORAGE_TYPE;
enum _ST_WORK_TYPE;
enum TM_LOGREC_TYPE;
enum IRPLOCK;
enum _ST_QUERY_REASON;
enum PROFILE_NOTIFICATION_TIME;
enum ARBITER_WHICHSTATE;
struct _PROCESS_FOREGROUND_BACKGROUND;
enum _SM_STORE_TYPE;
enum PPVREMOVAL_OPTION;
enum SQM_TYPE;
enum _PFFB_BUFFER_TYPE;
enum PPVFAILURE_TYPE;
struct _PERFINFO_PO_SESSION_CALLOUT_RET;
enum _PNP_DEVICE_DELETE_TYPE;
struct _POLICY_AUDIT_SUBCATEGORIES_INFO;
enum _PFFI_FILEINFO_INFO_TYPE;
enum _PNP_DEVICE_ACTION_REQUEST;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _ALPC_PORT_ATTRIBUTES;
enum _INBV_DISPLAY_STATE;
enum _PFSN_TRACING_STATE;
enum PNP_LOCK_LEVEL;
struct _NT_TIB;
struct _TEB;
enum _CONTEXT_OPERATION;
struct _MUILANGINFO;
struct _HAL_NUMA_TOPOLOGY_INTERFACE;
enum _PF_ROBUSTNESS_CONTROL_COMMAND;
enum _MI_STORE_BIT_TYPE;
enum _MI_PFN_CACHE_ATTRIBUTE;
enum _MM_POOL_TYPES;
enum _MM_PREEMPTIVE_TRIMS;
enum WDIP_SEM_INSTANCE_STATE;
enum IOV_LOG_EVENT;
enum IRP_DATABASE_EVENT;
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY;
enum _PATH_TYPE;
enum SQM_EVENT_TYPE;
enum DISPLAYCONFIG_SCANLINE_ORDERING;
enum _VdmServiceClass;
enum DEVOBJ_RELATION;
enum _DUMPWRITER_DATA_CLASS;
enum _IRQ_DEVICE_POLICY;
enum DATABASELOCKSTATE;
enum _APPHELPCACHESERVICECLASS;
enum LANGSPECTYPE_Tag;
enum _tokentype;
enum STATE;
enum TRIPLE_LIST_UPDATE_TYPE;
enum _ADD_DRIVER_STAGE;
enum _TAG_UNNAMED_7;
enum _RTL_NORM_FORM;
enum BTS_PROCESSOR_FAMILY;
enum _PFP_SCENCTX_PREFETCH_STATE;
enum _AEL_MSG_NUMBER;
enum _PFS_PRIVATE_PAGE_SOURCE_TYPE;
enum tagTYSPEC;
enum _PF_VOLUME_SUPPORT_RESULT;
enum VF_POOL_DELAY_FREE_TYPE;
enum _PPM_CHECK_PHASE;
enum _ARC_CODES;
struct _REG_SET_KEY_SECURITY_INFORMATION;
enum WMIGUIDINDEXES;
enum _EX_WF_CREATE_CLASS;
struct _RTL_AVL_TABLE;
struct _KTMOBJECT_NAMESPACE;
enum _TAG_UNNAMED_8;
enum _SMKM_FRONTEND_STORE_STATE;
struct _MEMORY_WORKING_SET_BLOCK;
struct _MEMORY_WORKING_SET_INFORMATION;
enum _SM_STORE_MANAGER_TYPE;
union _HV_X64_MSR_APIC_ASSIST_CONTENTS;
enum _ST_STATS_LEVEL;
enum _SMKM_CALLBACK_TYPE;
enum _SMST_ENCRYPT_OPTIONS;
enum _STORE_INFORMATION_CLASS;
enum _SM_ETW_KEYWORD_TYPE;
enum _SM_PAGE_REQUEST_TYPE;
enum _ST_COMPACTION_STATE;
struct _WORK_QUEUE_ITEM;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_EMPTY_QUEUE_CONTEXT;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
enum _ST_COMPACTION_CHECK_RESULT;
enum _SM_STORE_ACTION_TYPE;
struct _REG_ENUMERATE_KEY_INFORMATION;
enum _SM_STORE_UNPERSIST_PHASE;
enum _SM_FP_RESOURCE_TYPE;
struct _TARGET_DEVICE_REMOVAL_NOTIFICATION;
enum _ST_STATS_IO_TYPE;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
enum _ST_IDLENESS_STATE;
enum _ST_MAINTENANCE_TYPE;
struct _SMC_CACHE_PARAMETERS;
enum _SMKM_IO_STREAM_TYPE;
enum _SM_PAGE_TYPE;
struct _PROCESSOR_GROUP_INFO;
enum _STDM_ERROR_MODE;
enum _PF_LOG_ENTRY_TYPE;
enum _PF_EVENT_TYPE;
struct _DIAGNOSTIC_BUFFER;
struct _POWER_REQUEST_OVERRIDE_INFO;
struct _EVENT_FILTER_HEADER;
enum _PF_EVENT_AGCX_CONTEXT_TYPE_INFO;
struct _TP_TASK_CALLBACKS;
enum _ST_ETW_CORRUPTION_TYPE;
struct _X86_FLOATING_SAVE_AREA;
struct _X86_CONTEXT;
enum _ST_STATE_PARAM_TYPE;
struct _NON_PAGED_DEBUG_INFO;
enum _B_TREE_NODE_TYPE;
struct _CM_SERIAL_DEVICE_DATA;
union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS;
struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION;
enum _PF_POWER_ACTION_PHASE_ID;
struct _POWER_SETTING_REGISTRATION;
struct XSAVE_CPU_INFO;
enum ST_STORE<SM_TRAITS>::_ST_DEVICE_FAIL_TYPE;
enum ST_STORE<SM_TRAITS>::_STNP_TREE_TYPE;
enum _PFS_DEVICE_TYPE;
struct LIST_ENTRY64;
struct _IA64_DYNAMIC_FUNCTION_TABLE;
struct _AMD64_DYNAMIC_FUNCTION_TABLE;
struct _CROSS_PLATFORM_DYNAMIC_FUNCTION_TABLE;
struct _ETW_REPLY_QUEUE;
enum _TAG_UNNAMED_9;
enum _SM_UNPERSIST_FAIL_REASON;
enum _BG_ANIMATION_TYPE;
struct _EX_FAST_REF;
struct _ETW_REF_CLOCK;
struct _TOKEN_SOURCE;
struct _TOKEN_CONTROL;
struct _SECURITY_CLIENT_CONTEXT;
struct _RTL_BITMAP;
struct _WMI_LOGGER_CONTEXT;
struct _SM_CACHE_STATS_ENTRY;
struct _ST_READ_LATENCY_BUCKET;
struct _ST_READ_LATENCY_STATS;
struct _SMP_CACHE_STATS;
struct _REMOTE_PORT_VIEW;
enum _HOTPATCH_VALIDATION_OPTIONS;
struct _VF_AVL_TABLE;
enum _HOTPATCH_MODULE_ID_METHOD;
enum _HOTPATCH_FIXUP_TYPE;
struct _FLOAT128;
struct _IA64_KEXCEPTION_FRAME;
enum _LDR_RES_LANGUAGE_TYPES;
struct _ETW_HEAP_EVENT_FREE;
struct _PCI_MSI_MESSAGE_CONTROL;
enum LanguageFallbackOrder;
struct _DEBUG_PARAMETERS;
enum _BOUNDARY_ENTRY_TYPE;
enum VI_PNP_HOW_PROCESSED;
enum MEMORY_PERSISTANCE;
struct _LSA_ADT_STRING_LIST_ENTRY;
enum _TAG_UNNAMED_10;
enum _WPP_TRACE_API_SUITE;
enum _WPP_FLAG_LEN_ENUM_MAX;
enum WPP_CTL_NAMES;
union _MCG_STATUS;
enum _WPP_FLAG_LEN_ENUM;
enum _PFFI_SUBSTATUS;
enum _SUPERFETCH_INFORMATION_CLASS;
enum _PFP_SCENCTX_PREFETCH_WAITER_STATE;
enum _PF_TRIM_WHILE_AGING_STATE;
struct _CLS_IO_STATISTICS_HEADER;
struct _CLS_IO_STATISTICS;
enum _PF_SCENARIO_TYPE;
enum _PF_LOGON_PHASE_ID;
enum _PFP_POWER_ACTION_DPC_TYPE;
struct _PS_SYSTEM_DLL_INFO;
enum _PFP_TRACE_STOP_REASONS;
enum _PF_BOOT_SCENARIO_PHASE;
enum _PF_ENTRY_INFO_TYPE;
struct _DBGKD_GET_VERSION32;
enum _PF_ENABLE_STATUS;
enum _PF_XP_LOG_ENTRY_TYPE;
union _CLS_LSN;
enum _PFP_BUFFER_TYPE;
struct _GET_CONTEXT_EX;
enum _PFNL_ENTRY_TYPE;
enum _TAG_UNNAMED_11;
struct _SM_CACHE_STATS_BUCKET;
enum _HEAP_FAILURE_TYPE;
enum ACE_TYPE_TO_COPY;
enum _PF_BOOT_PHASE_ID;
struct _THREAD_BASIC_INFORMATION;
struct WMIGUIDPROPERTIES;
enum _PF_PREFETCH_TRACE_END_REASON;
struct _WIN32_POWEREVENT_PARAMETERS;
enum VI_DEADLOCK_ALLOC_TYPE;
enum _PREFETCHER_INFORMATION_CLASS;
enum _PFSN_PREFETCH_TYPE;
struct _PPC_CONTEXT;
enum _SYSPART_EFI_DEVICE_TYPE;
enum _PTE_CHANGE_TYPE;
struct MARK_HANDLE_INFO;
enum _SEGMENT_DEREFERENCE_OBJECT;
enum PLT_RBAR_STATE;
enum _CONTEXT_TYPE;
enum _RESULT;
struct _PS_MEMORY_RESERVE;
enum _PSP_NODE_PLACEMENT;
enum _VA_MATCH_TYPE;
enum BL_LOG_ENTRY_TYPE;
struct _NT_TIB32;
enum _PERFDIAG_TRACESTATE;
enum _VIRTUAL_DISK_ACCESS_MASK;
enum _OPEN_VIRTUAL_DISK_FLAG;
enum _KERNSNAP_APC_STATE;
struct _WMI_PNP_RECORD;
enum _SQM_EVENT;
enum XIPCMD;
union _SM_PAGE_KEY;
struct SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY;
enum CHARTYPE;
enum ARG_TYPE;
struct tagStringHashElement;
enum SCOPE_LEVEL;
enum NL_ADDRESS_TYPE;
struct _VPB;
struct _PPM_FFH_THROTTLE_STATE_INFO;
struct _PROC_IDLE_SNAP;
struct _PROCESSOR_POWER_STATE;
struct _HARD_DISK_IDENTIFIER;
struct _REMOVABLE_DISK_IDENTIFIER;
struct _CDROM_IDENTIFIER;
struct _FILE_PATH;
struct _FILE_IDENTIFIER;
struct _RAM_DISK_IDENTIFIER;
struct _BLOCK_IO_IDENTIFIER;
struct _PARTITION_IDENTIFIER_EX;
struct _PPM_IDLE_STATE;
struct _PPM_IDLE_STATES;
struct _TOKEN_USER;
struct _TOKEN_OWNER;
struct _TOKEN_DEFAULT_DACL;
struct _LSA_TOKEN_INFORMATION_V1;
struct _FILE_GET_QUOTA_INFORMATION;
struct _IOFCOMPLETEREQUEST_STACKDATA;
struct _KTRANSACTION;
struct _RTLP_RUN_ONCE_WAIT;
struct _PERFINFO_PFN_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _DBGKD_RELEASE_BREAKPOINT;
struct _TEB_ACTIVE_FRAME32;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
union _WHEA_TIMESTAMP;
struct _MOD_TYPE_STRINGS;
struct _VF_AVL_TREE_NODE;
struct _VF_TARGET_ALL_SHARED_EXPORT_THUNKS;
struct _VF_TARGET_DRIVER;
struct _KPROCESSOR_STATE;
struct _GENERAL_LOOKASIDE_POOL;
struct _KTIMER_TABLE;
struct _KREQUEST_PACKET;
struct _REQUEST_MAILBOX;
struct _KPRCB;
struct _MAILSLOT_CREATE_PARAMETERS;
struct _X86_KSPECIAL_REGISTERS;
union _KEXECUTE_OPTIONS;
union _KSTACK_COUNT;
struct _KGUARDED_MUTEX;
struct _KPROCESS;
struct _TEB_ACTIVE_FRAME64;
struct _FSRTL_ADVANCED_FCB_HEADER;
struct _SHARE_ACCESS;
struct _FAST_MUTEX;
struct _VCB;
struct _TABLE_ENTRY_HEADER;
struct _PHYSICAL_MEMORY_RANGE;
struct _DISK_SIGNATURE;
union _HV_X64_MSR_POWER_STATE_CONFIG;
struct _PCI_CAPABILITIES_HEADER;
struct _PM_SUPPORT;
struct _PCI_PMC;
struct _PCI_PM_CAPABILITY;
struct _TRIAGE_PNP_DEVICE_COMPLETION_QUEUE;
struct _ETW_THREAD_AFFINITY_EVENT;
struct _ALPC_DISPATCH_CONTEXT;
union _PS_CLIENT_SECURITY_CONTEXT;
struct _ETHREAD;
struct _DEVICE_DESCRIPTION;
struct _IA64_KSWITCH_FRAME;
struct _CLIENT_ID32;
struct _PORT_MESSAGE32;
struct _ALPC_LOG_ENTRY_WAIT_FOR_REPLY;
struct _SMKM_STORE_REF;
struct _PF_QUEUE;
struct _SMKM_WATCHDOG_CONTEXT;
struct _SMKM_STORE_LIST;
struct VLOCK;
struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>;
struct _ST_WORK_ITEM_HDR;
struct _ST_READ_PARAMS;
struct ST_STORE<SM_TRAITS>::_ST_IO_PARAMS;
struct ST_STORE<SM_TRAITS>::_ST_STATS_PARAMS;
struct ST_STORE<SM_TRAITS>::_ST_REMOVE_PARAMS;
struct ST_STORE<SM_TRAITS>::_ST_DEVICE_IO;
struct ST_STORE<SM_TRAITS>::_ST_MAINTENANCE_PARAMS;
struct ST_STORE<SM_TRAITS>::_ST_STATE_PARAMS;
struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_WORK_ITEM;
struct _SM_FORWARD_PROGRESS_CTX;
struct _SM_LOG_CTX;
struct _SMKM_STORE_MGR_PARAMS;
struct SMKM_STORE_MGR<SM_TRAITS>;
struct _SMC_CACHE_REF;
struct _SMKM_KEYGEN_CTX;
struct _SMC_CACHE_MANAGER;
struct _SM_REGISTRATION_CONTEXT;
struct _SM_GLOBALS;
struct _INTERRUPT_CONNECTION_DATA;
struct _MEMORY_BASIC_INFORMATION32;
struct _DBGKD_SEARCH_MEMORY;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct _ARM_KSPECIAL_REGISTERS;
struct _ARM_CONTEXT;
struct _ARM_KPROCESSOR_STATE;
struct _UMS_CONTROL_BLOCK;
struct _RTL_UMS_CONTEXT;
struct _SECURITY_SUBJECT_CONTEXT;
struct _KENLISTMENT;
struct _DEVOBJ_EXTENSION;
struct _OBJECT_HEADER_QUOTA_INFO;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
struct _ETW_BUFFER_CONTEXT;
struct _IO_COMPLETION_CONTEXT;
struct _KUMS_CONTEXT_HEADER;
struct _KTRAP_FRAME;
struct _KEXCEPTION_FRAME;
struct ST_STORE<SM_TRAITS>::_ST_PAGE_INFO;
struct _SLIST_ENTRY;
struct _PERFINFO_FILENAME_SAME_INFORMATION;
struct _RTL_UMS_COMPLETION_LIST;
struct _SECTION_IMAGE_INFORMATION64;
struct _DBGKM_ERROR_MSG64;
struct _KTHREAD_COUNTERS;
struct _TIME_FIELDS;
struct _XSTATE_CONTEXT;
struct _XSTATE_SAVE;
struct _PO_SHUTDOWN_NOTIFICATION;
struct _RTL_CRITICAL_SECTION;
struct _XSAVE_SUPPORTED_CPU;
struct _XSAVE_VENDOR;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _POLICY_AUDIT_CATEGORIES_INFO;
struct _XSAVE_FEATURE;
struct _XSAVE_POLICY;
struct _PERFINFO_SPINLOCK_CONFIG;
struct XSAVE_CPU_ERRATA;
struct _ACTIVATION_CONTEXT_DATA;
struct _HBIN;
struct _DMA_ADAPTER;
struct _MUILANGUAGES;
struct _RUN_ENTRY;
struct _LSA_TRANSLATED_NAME;
union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS;
struct _DEVICE_MAP;
struct _OWNER_ENTRY;
struct _ERESOURCE;
struct _KTM;
struct _SCATTER_GATHER_LIST;
struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION;
struct _OBJECT_DIRECTORY;
union _WHEA_PCIEXPRESS_VERSION;
struct _VI_ETW_REGHANDLE;
struct _LOOKASIDE_LIST_EX;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _HIVE_LOAD_FAILURE;
struct _IO_SECURITY_CONTEXT;
struct _AMD64_KSPECIAL_REGISTERS;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct _TRIAGE_9F_PNP;
struct _IO_PROC_INIT_VALUES;
struct _LSA_TRUST_INFORMATION;
struct _VF_POOL_DELAY_FREE_DATA;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct _PROC_PERF_LOAD;
struct _WHEAP_MEMORY_PFA_ENTRY;
struct _WAITING_IRP;
struct _SYSDBG_CONTROL_SPACE;
struct _REG_DELETE_KEY_INFORMATION;
struct _FAT_STATISTICS;
struct _WDIP_SEM_LIST;
struct _UNWIND_HISTORY_TABLE_ENTRY;
struct _UNWIND_HISTORY_TABLE;
struct _LUTF8_STRING;
union _PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA;
struct _REG_LOAD_KEY_INFORMATION;
struct _PERFINFO_GROUPMASK;
struct _AMD64_CONTEXT;
struct _AMD64_FIBER;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _MMWSLE_FREE_ENTRY;
struct _BOOT_AREA_INFO;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct _PERFINFO_SAMPLED_PROFILE_INFORMATION;
struct _PERFINFO_SAMPLED_PROFILE_CACHE;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_RESOURCE_LIST;
union HANDLE3264;
struct WMIMARKASCLOSED;
union _PCC_OUTPUT_BUFFER;
struct _AGP_TARGET_BUS_INTERFACE_STANDARD;
struct _JOB_ACCESS_STATE;
struct MSIX_TABLE_POINTER;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct _VF_BTS_DATA_MANAGEMENT_AREA;
struct _EFI_FIRMWARE_INFORMATION;
union _FOUR_PART_VERSION;
struct _IMAGE_INFO_EX;
union _HV_PARTITION_PRIVILEGE_MASK;
struct _GENERATE_NAME_CONTEXT;
struct _FILE_OBJECT;
struct _DRIVER_OBJECT;
struct _VIRTUAL_STORAGE_TYPE;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _LOCKTREE_NODE;
struct _OBJECT_CREATE_INFORMATION;
struct _IO_CLIENT_EXTENSION;
struct _INTERFACE;
union _PCI_EXPRESS_ROOT_ERROR_STATUS;
struct _EVENT_DESCRIPTOR;
struct USN_JOURNAL_DATA;
struct _IA64_CONTEXT;
union _FS_FILTER_PARAMETERS;
struct _FS_FILTER_CALLBACK_DATA;
struct _WHEAP_ERROR_SOURCE_TABLE;
struct tagLC_ID;
struct threadlocaleinfostruct;
struct _SYSDBG_MSR;
struct _FAST_IO_DISPATCH;
struct _ALPC_PROCESS_CONTEXT;
struct _MDL;
struct _MI_FLUSH_ENTRY;
struct _PROCESS_WS_WATCH_INFORMATION;
struct SMBIOSVERSIONINFO;
struct _RTL_USER_PROCESS_PARAMETERS;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
struct _FILE_BASIC_INFORMATION;
struct _POWER_LEGACY_EVENT_VETO;
struct _VF_AVL_TREE;
struct _VF_TARGET_DRIVERS_AVL_TREE;
struct _LSA_FOREST_TRUST_COLLISION_RECORD;
struct _FILE_STANDARD_INFORMATION;
struct _EVENT_HEADER_EXTENDED_DATA_ITEM;
struct _DBGKD_READ_WRITE_IO64;
struct _MMSUPPORT_FLAGS;
struct _MMSUPPORT;
struct _EPROCESS;
struct _KERNEL_STACK_SEGMENT;
struct _KERNEL_STACK_CONTROL;
struct _IA64_DBGKD_CONTROL_SET;
struct _PS_CPU_QUOTA_BLOCK;
struct CM_LOGREC;
struct CM_CREATE_KEY_LOGREC;
struct _HANDLE_TABLE;
struct _HANDLE_TRACE_DEBUG_INFO;
struct _PO_BROADCAST_SYSTEM_STATE;
struct _WIN32_POWERSTATE_PARAMETERS;
struct _PNP_REPLACE_POWER_CONTEXT;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
struct _HANDLE_TABLE_ENTRY;
struct _FILE_SET_SPARSE_BUFFER;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
struct _HANDLE_TABLE_ENTRY_INFO;
struct _TERMINATION_PORT;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct _ARBITER_BOOT_ALLOCATION_PARAMETERS;
struct _WOW64_FLOATING_SAVE_AREA;
struct _WOW64_CONTEXT;
union _PSP_CPU_QUOTA_APC;
struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct _EJOB;
struct _POP_HIBER_CONTEXT;
struct _stat32i64;
union _PSP_FAULT_COUNTER;
struct _PSP_WS_WATCH_INFORMATION;
struct _PAGEFAULT_HISTORY;
struct _MI_FIXUP_RECORD;
struct _ARC_DISK_INFORMATION;
struct _PEB;
struct _KPCR;
struct _PEB_LDR_DATA;
struct _PO_IRP_QUEUE;
struct HAL_DISPATCH;
struct _OBJECT_NAME_INFORMATION;
struct _MACHINE_FRAME;
union INTEL_CACHE_INFO_EBX;
struct _PO_SESSION_INIT;
struct _X86PAE_HARDWARE_PTE;
struct _MMWSLENTRY;
struct _MMWSLE;
struct _MMWSLE_NONDIRECT_HASH;
struct _MMWSLE_HASH;
struct HRSRC__;
struct _PO_DIAG_STACK_RECORD;
struct WHEA_PCIXDEVICE_REGISTER_PAIR;
struct _PO_NOTIFY_ORDER_LEVEL;
struct _stat32;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct _VI_VERIFIER_ISSUE;
struct _PRIVILEGE_SET;
struct _ACCESS_STATE;
struct _AUX_ACCESS_DATA;
struct _PSP_OBJECT_CREATION_STATE;
struct _KPROCESS_VALUES;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct _CPTABLEINFO;
struct _NLSTABLEINFO;
union _WHEA_PCIEXPRESS_COMMAND_STATUS;
struct _ACTIVATION_CONTEXT;
struct _BUS_HANDLER;
struct _CACHE_MANAGER_CALLBACKS;
struct _VF_TARGET_VERIFIED_DRIVER_DATA;
struct _CM_INDEX_HINT_BLOCK;
struct _TEB_ACTIVE_FRAME_EX64;
struct _PCI_SLOT_NUMBER;
struct _EX_DEBUG_LOG_EVENT;
struct _WMI_FILEIO_NOTIFY_ROUTINES;
union _WHEA_ERROR_STATUS;
struct _COMPRESSED_DATA_INFO;
struct _TRIAGE_DEVICE_NODE;
struct _EVENT_TRACE_TIME_PROFILE_INFORMATION;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
struct PROCESSOR_IDLESTATE_INFO;
struct _IRP;
union _MM_STORE_KEY;
struct _JOBOBJECT_JOBSET_INFORMATION;
struct HKL__;
struct SET_POWER_SETTING_VALUE;
struct _EVENT_HEADER;
struct _EVENT_RECORD;
struct _BATTERY_INFORMATION;
struct _SEGMENT_FLAGS;
struct _MAPPED_FILE_SEGMENT;
struct _TEB_ACTIVE_FRAME;
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
struct _NAMED_PIPE_CREATE_PARAMETERS;
struct _PCW_PROCESSOR_INFO;
struct _X86PAE_HARDWARE_PDE;
struct _SCSI_REQUEST_BLOCK;
struct _OBJECT_NAMESPACE_LOOKUPTABLE;
struct _PERFINFO_TRIMPROCESS_INFORMATION;
struct _MMINPAGE_FLAGS3;
struct _ACPI_CMOS_INTERFACE_STANDARD;
struct _WMI_UDP;
struct _SD_CHANGE_MACHINE_SID_OUTPUT;
struct _DEVICE_CAPABILITIES;
struct _ENCRYPTED_DATA_INFO;
struct _HVLP_HYPERCALL_PAGE_INFO;
struct _DBGKD_SET_SPECIAL_CALL32;
struct _SYSTEM_BIGPOOL_ENTRY;
struct _PERFINFO_FILE_INFORMATION;
union _ETW_QUEUE_BUFFER_HEADER;
struct _PO_DEVICE_NOTIFY;
struct _PO_IRP_MANAGER;
struct _DEVICE_NODE;
struct _SMKM_STORE_QUEUE;
struct _AMD64_KPROCESSOR_STATE;
struct _POWER_SEQUENCE;
struct _STRING64;
struct _PERFINFO_SYSCALL_ENTER_DATA;
struct _X86_FXSAVE_FORMAT;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
struct _ETW_COUNTERS;
struct _OBJECT_DIRECTORY_INFORMATION;
union _HV_X64_HYPERCALL_OUTPUT;
struct _PROCESSOR_PCC_INTERFACE_STANDARD;
struct _ETW_LAST_ENABLE_INFO;
struct _DEVICE_OBJECT_POWER_EXTENSION;
struct _SECTION_OBJECT_POINTERS;
struct _RTL_STACK_DATABASE_LOCK;
struct _RTL_STD_LIST_HEAD;
struct _TRUSTED_DOMAIN_AUTH_INFORMATION;
struct _LOAD_DLL_EVENT_DATA;
struct _IOV_FORCED_PENDING_TRACE;
union _AMD_L2_CACHE_INFO;
struct _BOOT_ENTRY;
struct _BOOT_ENTRY_LIST;
struct _MEMORY_BASIC_INFORMATION64;
struct _SINGLE_LIST_ENTRY32;
struct _PARTITION_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION;
struct _Wx86TIB;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _DMA_OPERATIONS;
struct _EXCEPTION_RECORD;
struct _DBGKD_CREATE_FILE;
struct _DBGKD_READ_FILE;
struct _DBGKD_WRITE_FILE;
struct _DBGKD_CLOSE_FILE;
struct _DBGKD_FILE_IO;
struct _CM_PERF_COUNTERS;
struct _PCI_AGP_ISOCH_STATUS;
struct _SE_ACCESS_REPLY;
struct _PROCESSOR_POWER_POLICY;
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
struct _WMI_POWER_RECORD;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _KI_UMS_STAGING_AREA;
struct _LUNICODE_STRING;
struct _ETW_PERF_COUNTERS;
struct _PRIV_CHECK_CTX;
struct _CM_HARDWARE_PROFILE;
struct _OBJECT_ATTRIBUTES32;
struct _KRESOURCEMANAGER_COMPLETION_BINDING;
struct _KRESOURCEMANAGER;
struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS;
struct _SYSTEM_ALARM_OBJECT_ACE;
struct GUIDREGINFO;
struct _TRANSACTION_NOTIFICATION;
struct _KTMNOTIFICATION_PACKET;
struct _PCW_CALLBACK_TABLE;
struct _PER_FILEOBJECT_CTXCTRL;
struct _HEAP_EVENT_RANGE;
union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS;
struct _IOV_REQUEST_PACKET;
struct _OB_POST_CREATE_HANDLE_INFORMATION;
struct _IOV_DATABASE_HEADER;
struct _JOURNAL_RENAME_KEY_INFORMATION;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER64;
struct _VF_WATCHDOG_IRP;
struct _DBGKM_CREATE_THREAD64;
struct _ARM_DBGKD_CONTROL_SET;
struct _UNWIND_INFO;
struct _DBGKM_EXIT_THREAD;
struct _COVERAGE_MODULE_INFO;
struct _PERFINFO_PO_POSTSLEEP;
struct _FILE_FS_VOLUME_INFORMATION;
struct _TRANSLATOR_INTERFACE;
struct _EFI_DRIVER_ENTRY;
struct _EFI_DRIVER_ENTRY_LIST;
struct _SCOPE_TABLE;
struct _POWER_DISPLAY_BRIGHTNESS_VALUE;
struct _HV_HYPERVISOR_VERSION_INFO;
union _HV_CPUID_RESULT;
struct _PS_INITIAL_TEB;
struct _DBGKD_RESTORE_BREAKPOINT;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _RUNTIME_FUNCTION;
struct _EMP_ENTRY_DB_RECORD;
struct _FILETIME;
struct _JOURNAL_CLIENT_INFORMATION;
struct _LSA_REFERENCED_DOMAIN_LIST;
struct _PERFINFO_TRACE_HEADER;
struct _PERFINFO_PO_CALIBRATED_PERFCOUNTER;
struct _MTRR_DEFAULT;
struct _PROCESSOR_LOCKSTEP;
struct _NEW_RANGE;
struct tagShimCacheEntryData;
struct tagSHIMCACHEENTRY;
struct _TRANSACTION_LIST_ENTRY;
struct _TP_POOL;
union _HV_X64_MSR_GUEST_OS_ID_CONTENTS;
struct _ENCRYPTION_BUFFER;
struct _REPARSE_POINT_INFORMATION;
struct _HV_HIVE_CELL_PAIR;
struct _SMBIOS_TABLE_HEADER;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _HEADLESS_LOADER_BLOCK;
struct _DBGKD_READ_WRITE_MSR;
struct _PCIX_BRIDGE_CAPABILITY;
union tagMATCHMODE;
struct _I386_LOADER_BLOCK;
union _WOW64_EXECUTE_OPTIONS;
struct _WOW64INFO;
struct _SYSTEM_POOL_ENTRY;
struct _CM_POST_KEY_BODY;
struct _PCI_HEADER_TYPE_2;
union _PSP_CREATE_THREAD_FLAGS;
struct _SYSTEM_ACPI_AUDIT_INFORMATION;
struct _FILE_ACCESS_INFORMATION;
struct _ETW_UMS_EVENT_DISASSOCIATE;
union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS;
struct _CALL_PERFORMANCE_DATA;
struct _SE_CM_VALUE_AUDIT_DATA;
struct _PARTITION_DESCRIPTOR;
struct in6_addr;
struct SCOPE_ID;
struct sockaddr_in6;
struct _DBGKD_GET_SET_BUS_DATA;
struct _KI_LOCAL_ARRAY9;
struct _MMPTE;
struct _PO_WAKE_SOURCE_INFO;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _DBGKD_WRITE_BREAKPOINT64;
union _WHEA_PROCESSOR_FAMILY_INFO;
struct _VARIABLE_NAME;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _MMSECTION_FLAGS;
struct _SECTION;
struct _IO_SESSION_CONNECT_INFO;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct _LSA_AUTH_INFORMATION;
struct _SYSDBG_VIRTUAL;
struct _EX_EXTENSION_REGISTRATION_1;
struct _KFLOATING_SAVE;
struct _CSV_NAMESPACE_INFO;
struct _PERFINFO_PROCESS_INSWAP;
struct _SYSTEM_VERIFIER_ISSUE;
union _AMD_L1_CACHE_INFO;
struct _WHEA_DRS_OBJECT;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
struct _DBGKD_CONTINUE;
struct _KINTERRUPT;
struct _OBJECT_ATTRIBUTES64;
union _PCI_EXPRESS_DEVICE_STATUS_REGISTER;
struct _IMAGE_SYMBOL;
struct _EX_PUSH_LOCK_CACHE_AWARE;
struct _TRACE_GUID_PROPERTIES;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct _PO_POWER_REQUEST;
struct _TRUSTED_POSIX_OFFSET_INFO;
struct _DIAGNOSTIC_CONTEXT;
struct _HWPROFILE_NOTIFY_ENTRY;
struct _VIRTUAL_EFI_RUNTIME_SERVICES;
struct _RESUME_INFORMATION_BLOCK;
struct _WHEA_PCIEXPRESS_DEVICE_ID;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct _PCC_HEADER;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
struct _TRANSACTION_PROPERTIES_INFORMATION;
struct ISBASENAME;
struct _PO_WAKE_SOURCE_HEADER;
struct _RTL_UMS_SCHEDULER_STARTUP_INFO;
struct _AMD64_XMM_SAVE_AREA32_2;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _VERIFIER_TRIAGE_RULE;
struct _ARBITER_LIST_ENTRY;
struct _ETW_SET_MARK_INFORMATION;
struct _ETW_TRACE_SESSION_SETTINGS;
struct _BUFFER_INFO;
struct _RTL_TRACE_DATABASE;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
struct _TRIPLE_LIST_ENTRY;
struct _TRIPLE_LIST;
struct _AMD64_DBGKD_CONTROL_REPORT;
struct _RTL_TRACE_ENUMERATE;
struct CM_Power_Data_s;
struct _TP_NBQ_GUARD;
struct _HEADLESS_RSP_GET_BYTE;
struct ACPI_REGS_INTERFACE_STANDARD;
struct _PI_RESOURCE_ARBITER_ENTRY;
struct _GROUP_RELATIONSHIP;
struct _ETW_HEAP_EVENT_EXPANSION;
struct _PPC_KSPECIAL_REGISTERS;
struct _PPC_KPROCESSOR_STATE;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct _HAL_ENLIGHTENMENT;
struct _LSA_FOREST_TRUST_DOMAIN_INFO;
union _WHEA_XPF_CACHE_CHECK;
struct _ADAPTER_OBJECT;
struct POWER_ACTION_POLICY;
struct SYSTEM_POWER_LEVEL;
union _KIDTENTRY64;
struct _PAE_ADDRESS;
struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION;
struct _TOKEN_LINKED_TOKEN;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct _PP_LOOKASIDE_LIST64;
struct _WMIP_GUIDENTRY_NONPAGED;
struct _SD_CHANGE_MACHINE_SID_INPUT;
struct _SD_GLOBAL_CHANGE_INPUT;
struct _IO_REMOVE_LOCK_COMMON_BLOCK;
struct _IO_REMOVE_LOCK_DBG_BLOCK;
struct _IO_PRIVATE_REMOVE_LOCK;
struct _FILE_FS_LABEL_INFORMATION;
struct _TRACE_ENABLE_CONTEXT_EX;
struct _SUPPORTED_RANGES;
struct _OBJECT_HEADER_CREATOR_INFO;
struct _KNONVOLATILE_CONTEXT_POINTERS;
struct _GETSETCONTEXT;
struct _DBGKM_LOAD_DLL32;
struct _EXCEPTION_RECORD32;
struct _DBGKM_EXCEPTION32;
struct _DBGKM_CREATE_THREAD32;
struct _DBGKM_CREATE_PROCESS32;
struct _DBGKM_EXIT_PROCESS;
struct _DBGKM_UNLOAD_DLL32;
struct _SECTION_IMAGE_INFORMATION32;
struct _DBGKM_ERROR_MSG32;
struct _PCI_TYPE1_CFG_CYCLE_BITS;
struct _HAL_PROCESSOR_FEATURE;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
struct _EXFAT_STATISTICS;
struct TESTHOOKCALLBACK_REGISTRATION_STRUCT;
struct _REG_QUERY_KEY_SECURITY_INFORMATION;
struct _POP_THERMAL_ZONE_METRICS;
struct _EVENT_TRACE_HEADER;
struct _EVENT_TRACE;
struct _WMI_DATATRACER_CSWAP;
struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR;
struct _PARTITION_INFORMATION_MBR;
union _WHEA_ERROR_INJECTION_CAPABILITIES;
struct _POWER_SETTING_VALUE;
struct _POWER_LEGACY_EVENT;
struct _POWER_MESSAGE;
union _PCI_EXPRESS_SRIOV_STATUS;
struct _WMI_TRACE_RUNDOWN_NOTIFICATION;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
struct _PM_DISPATCH_TABLE;
struct _ETW_PRIORITY_EVENT;
struct _OEM_FONT_FILE_HEADER;
struct _RTL_PROCESS_LOCK_INFORMATION;
struct _TRUSTED_DOMAIN_NAME_INFO;
struct _OSVERSIONINFOA;
struct _SECTIONBASICINFO;
struct _NLS_DATA_BLOCK;
struct _WHEA_X86_REGISTER_STATE;
struct _PROFILE_PARAMETER_BLOCK;
struct _TPM_BOOT_ENTROPY_LDR_RESULT;
struct _LOADER_PARAMETER_EXTENSION;
struct _REG_NOTIFY_INFORMATION;
union _WHEA_ERROR_PACKET_FLAGS;
struct _MIPS32_CONTEXT;
struct _DBGKD_PRINT_TRACE;
struct _DBGKD_TRACE_IO;
struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION;
struct SYSTEM_BATTERY_STATE;
struct _INITIAL_TEB;
struct _WHEA128A;
struct _WHEA_X64_REGISTER_STATE;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_OPTIONAL_HEADER;
struct _IMAGE_NT_HEADERS;
struct _EISA_PORT_DESCRIPTOR;
struct _EISA_PORT_CONFIGURATION;
struct _PERFINFO_SAMPLED_PROFILE_CONFIG;
struct _WMI_SPLITIO_NOTIFY_ROUTINES;
struct _KCRM_PROP_REQUEST;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
struct _ACCESS_DENIED_ACE;
struct _TOKEN_MANDATORY_LABEL;
struct _MCA_DRIVER_INFO;
struct _READCONTROLSPACE;
struct EXT_API_VERSION;
struct _LPC_UNREGISTER_PROCESS_MSG;
struct _EX_PUSH_LOCK_CACHE_AWARE_PADDED;
struct _WHEA_PCIXDEVICE_ID;
struct _WHEA_PCIXDEVICE_ERROR_SECTION;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct _DEBUG_TYPED_DATA;
struct _EXT_TYPED_DATA;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
union _HV_X64_MSR_REFERENCE_TSC_CONTENTS;
struct _HAL_BUS_INFORMATION;
struct _DBGKM_EXCEPTION64;
struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _IA64_LOADER_BLOCK;
struct _LSA_TRANSLATED_SID2;
struct _ALPC_LOG_ENTRY_RECEIVE_MESSAGE;
struct _PCI_HEADER_TYPE_1;
struct _EVENT_INSTANCE_GUID_HEADER;
struct _PCI_HEADER_TYPE_0;
struct _PCI_COMMON_CONFIG;
struct _DMA_CONFIGURATION_BYTE0;
union _IMAGE_AUX_SYMBOL;
struct _DBGKD_LOAD_SYMBOLS32;
struct _FILE_PIPE_LOCAL_INFORMATION;
union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER;
struct _MUILANGLIST;
struct _MMPFN_MEMSNAP_INFORMATION;
struct _MUIREGISTRYINFO;
struct _DEVICE_MEDIA_INFO;
struct _UNLOADED_DRIVERS;
struct _MUISTRINGPOOL;
union _HV_STATS_OBJECT_IDENTITY;
struct _DBGKD_REQUEST_BREAKPOINT;
struct _DBGKD_CONTROL_REQUEST;
struct _MUILANGCFGLIST;
union _WHEA_NMI_ERROR_SECTION_FLAGS;
struct _MUILANGCFGNODE;
struct _WMI_SPINLOCK;
struct _MUILANGLISTNODE;
struct _PCI_AGP_APERTURE_PAGE_SIZE;
struct _ZONE_SEGMENT_HEADER;
struct _PLUGPLAY_NOTIFICATION_HEADER;
struct _WIN32_POWERINFO_USERPRESENT;
struct _LSA_TOKEN_INFORMATION_NULL;
struct _STRING32;
struct _PEB32;
struct _DBGKD_SET_INTERNAL_BREAKPOINT32;
struct _SD_GLOBAL_CHANGE_OUTPUT;
struct _PROCESSOR_IDLE_DOMAIN;
struct _PROCESSOR_IDLE_DOMAINS;
struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER;
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS;
union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK;
union _PCI_EXPRESS_AER_CAPABILITIES;
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS;
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK;
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY;
union _PCI_EXPRESS_SEC_AER_CAPABILITIES;
struct _PCI_EXPRESS_BRIDGE_AER_CAPABILITY;
struct _SYSDBG_IO_SPACE;
struct _VIDEO_RECORD;
struct _PERFINFO_CONTIGUOUS_PAGE_GENERATE;
struct _IO_CSQ_IRP_CONTEXT;
struct PROCESSOR_IDLE_TIMES;
struct _EVENTLOGRECORD;
struct _PLUGPLAY_NOTIFY_HDR;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
struct _VHD_DISK_SIGNATURE;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct _RTL_BITMAP_EX;
struct PPM_IDLE_STATE_BUCKET_EX;
struct _DMA_CONFIGURATION_BYTE1;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct _COVERAGE_MODULE_REQUEST;
struct _ETW_HEAP_EVENT_REALLOC;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
struct _WMI_IMAGEID_INFORMATION64;
struct _EVENT_TRACE_SESSION_SECURITY_INFORMATION;
struct _LOADER_PARTITION_INFORMATION_EX;
struct _CI_LOG_MMCSS_STOP;
struct _SEP_LSA_WORK_ITEM;
struct _EVENT_TRACE_STACK_TRACING_INFORMATION;
struct _EVENT_TRACE_POOLTAG_FILTER_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION;
union _PCI_EXPRESS_SRIOV_CAPS;
union _PCI_EXPRESS_SRIOV_CONTROL;
union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY;
struct _PCI_EXPRESS_SRIOV_CAPABILITY;
struct _ARM_KSWITCH_FRAME;
struct _CM_SCSI_DEVICE_DATA;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct _TP_CALLBACK_INSTANCE;
struct _CACHE_UNINITIALIZE_EVENT;
struct _TRIAGE_PNP_DEVICE_COMPLETION_REQUEST;
struct _TP_TASK;
struct _POOLED_USAGE_AND_LIMITS;
struct _IMAGE_BASE_RELOCATION;
struct _READCONTROLSPACE32;
struct _PREFIX_TABLE;
struct _WMI_REGISTRY;
struct _DBGKD_READ_MEMORY64;
struct _FILE_MAILSLOT_PEEK_BUFFER;
struct _FILE_FULL_DIR_INFORMATION;
struct _FILE_REPARSE_POINT_INFORMATION;
struct _RTL_STACK_CONTEXT_ENTRY;
struct _CM_SONIC_DEVICE_DATA;
struct _IMAGE_DEBUG_DIRECTORY;
struct _TRIPLE_LIST_ITERATOR;
struct _PPM_LOCK;
union _WHEA_XPF_TLB_CHECK;
union _WHEA_XPF_MS_CHECK;
struct _STORAGE_WRITE_CACHE_PROPERTY;
struct _EVENT_TRACE_PERFORMANCE_INFORMATION;
struct _IMAGE_THUNK_DATA64;
struct _GET_INPUT_LINE;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct _INVERTED_FUNCTION_TABLE;
struct _TRIAGE_9F_POWER;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
struct _TRIAGE_EX_WORK_QUEUE;
struct _PO_WAKE_SOURCE_TIMER;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES_EX;
struct _LSA_FOREST_TRUST_BINARY_DATA;
struct _WIN32_DELETEMETHOD_PARAMETERS;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _PERFINFO_PROCESS_PERFCTR32;
union _MM_STORE_SUB_KEY_DESCRIPTOR;
struct _PCIBUSDATA;
struct _WINDBG_EXTENSION_APIS;
struct _PO_MEMORY_RANGE;
struct DEBUG_DEVICE_ADDRESS;
struct DEBUG_MEMORY_REQUIREMENTS;
struct DEBUG_DEVICE_DESCRIPTOR;
struct _KD_SYMBOLS_INFO;
struct _HEAP_EVENT_COMMIT_DECOMMIT;
struct _REG_PRE_CREATE_KEY_INFORMATION;
struct _SE_ADT_PARAMETER_ARRAY_ENTRY;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _FAR_JMP_16;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct _Wx86ThreadState32;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct _FILE_OBJECTID_BUFFER;
struct _COMPATIBILITY_CONTEXT_ELEMENT;
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
struct _IO_COUNTERS;
struct _PO_WAKE_SOURCE_FIXED;
struct _DBGKD_READ_MEMORY32;
struct _WIN32_OPENMETHOD_PARAMETERS;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
struct _EXTSTACKTRACE;
struct _PO_APP_TRACE;
struct _SYSTEM_PROCESSOR_INFORMATION;
struct POP_POWER_REQUEST_ATTRIBUTE;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct _DBGKD_READ_WRITE_IO32;
struct localeinfo_struct;
struct _OB_POST_DUPLICATE_HANDLE_INFORMATION;
struct _GDI_TEB_BATCH32;
struct _IO_REMOVE_LOCK_TRACKING_BLOCK;
struct lconv;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
struct _IOP_PROCESS_LOCK;
struct _RTL_DYNAMIC_HASH_TABLE;
struct __lc_time_data;
struct _TP_CLEANUP_GROUP;
struct _KCRM_PROTOCOL_BLOB;
struct threadmbcinfostruct;
struct _THREAD_TLS_INFORMATION;
struct _PROCESS_TLS_INFORMATION;
struct _REG_CREATE_KEY_INFORMATION_V1;
struct _IA64_UNWIND_INFO;
struct _LPCP_NONPAGED_PORT_QUEUE;
struct _LPCP_PORT_QUEUE;
struct _LPCP_PORT_OBJECT;
union _VIA_L2_CACHE_INFO;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
struct _POP_TRIGGER_WAIT;
struct _PERFINFO_BATTERY_LIFE_INFO;
struct _SHRINK_VOLUME_INFORMATION;
struct _ARBITER_CONFLICT_INFO;
struct _STORAGE_BUS_RESET_REQUEST;
struct _ATOM_BASIC_INFORMATION;
struct _EVENT_DATA_DESCRIPTOR;
struct _MESSAGE_RESOURCE_BLOCK;
struct _RC_CONFIG;
struct _MOF_FIELD;
struct _CPE_DRIVER_INFO;
struct _AMD64_OBSOLETE_CONTEXT_2;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _ENLISTMENT_BASIC_INFORMATION;
struct _ACTIVATION_CONTEXT_STACK64;
struct _IMAGE_NT_HEADERS64;
struct _POLICY_PRIMARY_DOMAIN_INFO;
struct _REQUEST_OPLOCK_INPUT_BUFFER;
struct _POLICY_DNS_DOMAIN_INFO;
struct _IMAGE_TLS_DIRECTORY32;
struct _ETW_HEAP_EVENT_RUNDOWN_RANGE;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _OBJECT_HANDLE_COUNT_ENTRY;
struct _OBJECT_HANDLE_COUNT_DATABASE;
struct _POP_ACTION_TRIGGER;
struct _ETW_PER_SESSION_QUOTA;
struct _STORAGE_DEVICE_NUMBER;
struct _IA64_KSPECIAL_REGISTERS;
struct _ETW_UMGL_KEY;
struct _DBGKD_WRITE_MEMORY64;
struct _DBGKD_GET_CONTEXT;
struct _DBGKD_SET_CONTEXT;
struct _AMD64_DBGKD_CONTROL_SET;
struct _X86_DBGKD_CONTROL_SET;
struct _PPC_DBGKD_CONTROL_SET;
struct _DBGKD_ANY_CONTROL_SET;
struct _DBGKD_CONTINUE2;
struct _DBGKD_READ_WRITE_IO_EXTENDED64;
struct _DBGKD_QUERY_SPECIAL_CALLS;
struct _DBGKD_SET_SPECIAL_CALL64;
struct _DBGKD_SET_INTERNAL_BREAKPOINT64;
struct _DBGKD_GET_INTERNAL_BREAKPOINT64;
struct _DBGKD_GET_VERSION64;
struct _DBGKD_BREAKPOINTEX;
struct _DBGKD_FILL_MEMORY;
struct _DBGKD_QUERY_MEMORY;
struct _DBGKD_SWITCH_PARTITION;
struct _PNP_LOCATION_INTERFACE;
struct _IO_CSQ;
struct _IO_COMPLETION_BASIC_INFORMATION;
struct _WMI_TXR;
struct _BATTERY_QUERY_INFORMATION;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct _DBGKD_MANIPULATE_STATE64;
struct _DBGKD_LOAD_SYMBOLS64;
struct _DBGKD_WAIT_STATE_CHANGE64;
union INTEL_CACHE_INFO_EAX;
struct _DBGKM_EXCEPTION;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _IMAGE_FUNCTION_ENTRY64;
struct _KTHREAD_VALUES;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct _FILE_ZERO_DATA_INFORMATION;
struct STARTING_VCN_INPUT_BUFFER;
struct _LDR_SERVICE_TAG_RECORD;
struct _PROCESSOR_LOAD;
struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR;
struct _DBGKD_PRINT_STRING;
struct _TEB_ACTIVE_FRAME_CONTEXT64;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX64;
struct _IO_INTERRUPT_MESSAGE_INFO;
struct _GET_EXPRESSION_EX;
union _DBGKD_TRACE_DATA;
struct _REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION;
struct _KBUGCHECK_REASON_CALLBACK_RECORD;
struct _PCAT_FIRMWARE_INFORMATION;
struct _MUICCHEADER;
struct _LSA_FOREST_TRUST_COLLISION_INFORMATION;
struct _PPMWMIGUIDREGINFO;
struct _EXTSTACKTRACE64;
struct _PERFINFO_SYSCALL_EXIT_DATA;
struct _LSA_SID_NAME_MAPPING_OPERATION_REMOVE_INPUT;
struct _IO_DISCONNECT_INTERRUPT_PARAMETERS;
struct _XSAVE_VENDORS;
struct _SYSTEM_PREFETCH_STATS;
struct _TRUSTED_DOMAIN_INFORMATION_EX;
struct _TRUSTED_DOMAIN_FULL_INFORMATION;
struct _OB_OPERATION_REGISTRATION;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct _OBJECT_HEADER_NAME_INFO;
struct _MEMORY_BASIC_INFORMATION;
struct _PCI_TYPE0_CFG_CYCLE_BITS;
struct _OBJECT_DIRECTORY_ENTRY;
struct _OB_PRE_CREATE_HANDLE_INFORMATION;
union _OB_PRE_OPERATION_PARAMETERS;
struct _ETW_TP_EVENT_CALLBACK_CANCEL;
union _OB_POST_OPERATION_PARAMETERS;
struct _WHEA_PCIEXPRESS_ERROR_SECTION;
struct _OB_POST_OPERATION_INFORMATION;
struct _FILE_ATTRIBUTE_CACHE_VALUE;
struct _FILE_ATTRIBUTE_CACHE_PAIR;
union _AMD64_UNWIND_CODE;
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION;
struct _PROCESSOR_RELATIONSHIP;
struct _IMAGE_TLS_DIRECTORY64;
struct _RTL_BITMAP_RUN;
struct _VI_FAULT_TRACE;
struct _PO_DEVICE_NOTIFY_ORDER;
struct _POP_DEVICE_SYS_STATE;
struct _MMPFNLIST;
struct _IA64_KNONVOLATILE_CONTEXT_POINTERS;
struct BATTERY_REPORTING_SCALE;
struct SYSTEM_POWER_CAPABILITIES;
struct _POP_POWER_ACTION;
struct _POP_SHUTDOWN_BUG_CHECK;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct OFFSETINSTANCEDATAANDLENGTH;
struct _MM_STORE_KEY_DESCRIPTOR;
struct _ACL;
struct IMPORT_OBJECT_HEADER;
struct _FILE_FS_CONTROL_INFORMATION;
struct _KTSS64;
struct _CLIENT_ID64;
struct _MEMORY_RESERVE_HEADER;
struct _HAL_PROCESSOR_SPEED_INFO;
struct _KBUGCHECK_CALLBACK_RECORD;
struct _TXFS_GET_METADATA_INFO_OUT;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _CONTEXT32_RECORD_ENTRY;
struct _CROSS_PLATFORM_KSPECIAL_REGISTERS;
struct _DUMP_POINTERS_VERSION;
struct _DUMP_POINTERS_EX;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct _TRUSTED_CONTROLLERS_INFO;
struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO;
struct _THERMAL_INFORMATION_EX;
struct _POOL_TRACKER_TABLE;
struct _KLDR_DATA_TABLE_ENTRY64;
struct _POP_MEMORY_RANGE;
struct _FILE_MOVE_CLUSTER_INFORMATION;
struct _SECTION_IMAGE_INFORMATION;
struct _RTL_USER_PROCESS_INFORMATION;
struct _IOSPACE_EX32;
struct _WMI_TRACE_MESSAGE_PACKET;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
struct _WDBGEXTS_DISASSEMBLE_BUFFER;
struct _CLFS_NODE_ID;
struct _POP_SYSTEM_IDLE;
struct _SYSTEM_PERFORMANCE_INFORMATION;
struct VOLUME_BITMAP_BUFFER;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct _KEVENT_PAIR;
struct _NUMA_NODE_RELATIONSHIP;
struct _CACHE_RELATIONSHIP;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
struct _ALPHA_NT5_CONTEXT;
struct _PCI_COMMON_HEADER;
struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct _PRIVATE_CACHE_MAP_FLAGS;
struct _PRIVATE_CACHE_MAP;
struct _SHARED_CACHE_MAP;
struct _DISPATCHER_HEADER64;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _QUOTA_LIMITS;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
struct _EXT_FIND_FILE;
struct _PORT_VIEW;
struct _PROCESS_CYCLE_TIME_INFORMATION;
struct PROCESSOR_OBJECT_INFO_EX;
struct _PROCESS_PRIORITY_CLASS;
struct _DBGKM_APIMSG32;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct _DISK_PARTITION;
union _PROCESS_AFFINITY_UPDATE_MODE;
struct _KI_LOCAL_ARRAY1;
struct _IA64_KTRAP_FRAME;
struct BATTERY_NOTIFY;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct _FT_MEMBER_DESCRIPTION;
struct _FT_DESCRIPTION;
struct _PROCESS_EXCEPTION_PORT;
struct _CM_EISA_SLOT_INFORMATION;
struct _WIN32_JOBCALLOUT_PARAMETERS;
struct _PERFINFO_DRIVER_MAJORFUNCTION;
struct _PHYSICAL;
struct _PERFINFO_DRIVER_COMPLETE_REQUEST_RET;
struct _HV_REFERENCE_TSC_PAGE;
struct _KDPC_WATCHDOG_INFORMATION;
struct _KEY_BASIC_INFORMATION;
struct _TRACE_ENABLE_FLAG_EXT_ITEM;
struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD;
struct _COVERAGE_MODULES;
struct _REG_UNLOAD_KEY_INFORMATION;
struct _TXFS_SAVEPOINT_INFORMATION;
struct _HAL_ERROR_INFO;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
struct _REG_DELETE_VALUE_KEY_INFORMATION;
struct _KI_LOCAL_ARRAY0;
struct _PF_KERNEL_GLOBALS;
struct _TRACE_ENABLE_FLAG_EXT_HEADER;
struct _CLS_CONTAINER_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION_GPT;
struct _PROCESS_HANDLE_TRACING_ENABLE;
struct _SE_AUDIT_INFO;
struct _PNP_REPLACE_PARAMETERS;
struct _POLICY_PD_ACCOUNT_INFO;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
union _PS_EXCEPTION_FLAGS;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct _IMAGE_RELOCATION;
union _KGDT_BASE;
struct _STORAGE_DEVICE_DESCRIPTOR;
struct _KIPI_COUNTS;
struct _FILE_SYMLINK_SUPPORT_INFORMATION;
struct _EVENT_FILTER_DESCRIPTOR;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _KERNEL_USER_TIMES;
struct _LDR_IMPORT_CALLBACK_INFO;
struct _DECRYPTION_STATUS_BUFFER;
struct _UCALLOUT_FRAME;
struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION;
struct _ARC_DISK_SIGNATURE;
struct _IOP_ARC_TABLE_ENTRY;
struct _KEY_VALUE_ENTRY;
struct _THERMAL_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct _NEGOTIATE_PACKAGE_PREFIX;
struct _WHEA_FIRMWARE_ERROR_RECORD_REFERENCE;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct _SCSI_INQUIRY_DATA;
struct _MAP_REGISTER_ENTRY;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct _WHEA_XPF_CONTEXT_INFO;
struct _TRANSACTION_BIND_INFORMATION;
struct _EM_ENTRY_DATA;
union _RTL_ELEVATION_FLAGS;
struct _EX_ATTRIBUTE_INFORMATION_REGISTRATION;
union _WHEA_ERROR_RECORD_HEADER_FLAGS;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct _CLS_INFORMATION;
struct _WMI_QUEUE;
struct _NETWORK_OPEN_ECP_CONTEXT_V0;
struct _NEGOTIATE_CALLER_NAME_RESPONSE;
struct _TP_DIRECT;
struct _UMS_CREATE_THREAD_ATTRIBUTES;
struct _LPCP_CONNECTION_MESSAGE;
struct _KTMOBJECT_CURSOR;
struct _RTL_QUERY_REGISTRY_TABLE;
struct _HAL_PROFILE_SOURCE_LIST;
union _WHEA_XPF_PROCINFO_VALIDBITS;
struct _WHEA_XPF_PROCINFO;
struct _LSA_AUTH_CALLBACKS;
struct _EISA_MEMORY_TYPE;
struct PCI_HT_INTERRUPT_INDEX_N;
struct _RTL_TRACE_SEGMENT;
struct _XSTATE_FEATURE;
struct _FSRTL_PER_STREAM_CONTEXT;
struct _PEB64;
struct _RTL_BUFFER;
struct _RTL_ANSI_STRING_BUFFER;
struct _WMI_DISKIO_NOTIFY_ROUTINES;
struct _PO_MEMORY_RANGE_TABLE;
union _MCI_STATUS;
struct _FILE_QUERY_SPARING_BUFFER;
struct _TRUSTED_PASSWORD_INFO;
struct _POP_POLICY_NOTIFY_CONTEXT;
struct _WMI_DISKIO_READWRITE_INIT;
struct _LDR_DATA_TABLE_ENTRY32;
struct _FILE_QUOTA_INFORMATION;
struct _POLICY_MODIFICATION_INFO;
struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD;
struct _IA64_FIBER;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct _CM_HARDWARE_PROFILE_ACPI_ALIAS;
struct _MUICCENTRY;
struct _LOGICAL_DISK_EXTENTS;
union _PROCESS_MEMORY_ALLOCATION_MODE;
struct _SYSTEM_HANDLE_INFORMATION;
struct _POWER_REQUEST_ACTION;
struct _DEVICE_FLAGS;
struct _CONFIGURATION_COMPONENT;
struct _IOP_MINI_COMPLETION_PACKET;
struct _IMAGE_THUNK_DATA32;
struct _LINK_TRACKING_PACKET;
struct _GDI_TEB_BATCH64;
struct _POP_SWITCH_DEVICE;
struct _KLDR_DATA_TABLE_ENTRY;
struct USN_RECORD;
struct _IO_ERROR_LOG_PACKET;
struct _IO_ERROR_LOG_MESSAGE;
struct _GET_SET_SYMPATH;
struct _POWER_REQUEST;
struct _RTL_BARRIER;
struct _EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID;
struct _WMI_PAGE_FAULT;
struct _PERFINFO_CCSWAP_IDLE_SHORT;
struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY;
struct _SCSI_PASS_THROUGH_DIRECT;
struct _MPIO_PASS_THROUGH_PATH_DIRECT;
struct _WHEA_NMI_ERROR_SECTION;
struct _IMAGE_ROM_HEADERS;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _LDR_ENUM_RESOURCE_ENTRY;
struct _IOP_FOEXT_STREAM_ID;
struct _SYSTEM_PROCESS_ID_INFORMATION;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct _IMAGE_VXD_HEADER;
struct _POWER_REQUEST_LIST;
struct _POLICY_AUDIT_EVENTS_INFO;
union _PCI_EXPRESS_SLOT_CONTROL_REGISTER;
struct _GET_CURRENT_THREAD_ADDRESS;
union _WHEA_ERROR_RECORD_HEADER_VALIDBITS;
struct _WHEA_ERROR_RECORD_HEADER;
struct _IOSPACE;
struct _CI_LOG_SCHEDULER_WAKEUP;
struct _LSA_COMMAND_MESSAGE;
struct _KSTACK_AREA;
struct _VM_COUNTERS;
struct _SL_KMEM_CACHE;
struct _PERFINFO_PPM_THERMAL_CONSTRAINT;
struct _FILE_PIPE_PEEK_BUFFER;
struct _POP_SLEEP_STATS;
struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE_HEADER;
struct _OBJECT_SYMBOLIC_LINK;
struct POP_POWER_SETTING_VALUE;
struct _FILE_PIPE_EVENT_BUFFER;
struct _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION;
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
struct _IMAGE_LINENUMBER;
struct _SE_EXPORTS;
struct _HV_VIRTUAL_APIC_ASSIST;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION;
struct _FP_64;
struct _FILESYSTEM_STATISTICS;
struct _TP_IO;
struct _WMI_CONTEXTSWAP;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct _SYSTEM_PROCESS_INFORMATION;
struct _DBGKD_READ_WRITE_IO_EXTENDED32;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
struct _DBGKD_WRITE_BREAKPOINT32;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _RTLP_CURDIR_REF;
struct FIND_BY_SID_DATA;
struct _X86_DBGKD_CONTROL_REPORT;
struct _POLICY_PRIVILEGE_DEFINITION;
struct _ACTIVATION_CONTEXT_STACK32;
struct _PHYSICAL_WITH_FLAGS;
struct _PCI_AGP_ISOCH_COMMAND;
struct _IO_DRIVER_CREATE_CONTEXT;
struct _SYSTEM_INTERRUPT_INFORMATION;
struct _PEB32_WITH_WOW64INFO;
struct _ECP_LIST;
struct _PERFINFO_PO_PRESLEEP;
struct _SE_SECURITY_DESCRIPTOR;
struct _OSVERSIONINFOW;
struct _IO_TRIAGE_DUMP_DATA_ARRAY;
struct _IO_TRIAGE_PTR_DATA_BLOCK;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
struct _SYSTEM_POOL_INFORMATION;
struct _REG_QUERY_VALUE_KEY_INFORMATION;
struct _FIRMWARE_INFORMATION_LOADER_BLOCK;
struct _LOADER_PARAMETER_BLOCK;
struct _CONFIGURATION_COMPONENT_DATA;
union _PAT_ATTRIBUTES;
struct _NT_TIB64;
struct _VIRTUAL_TO_PHYSICAL;
struct _NETWORK_LOADER_BLOCK;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _KAPC_STATE64;
struct _PNP_REPLACE_PROCESSOR_LIST;
struct _LEGACY_BUS_INFORMATION;
struct _X86_KTRAP_FRAME;
struct _IMAGE_SYMBOL_EX;
struct _ETW_TP_EVENT_CALLBACK_ENQUEUE;
struct _POP_THERMAL_ZONE;
struct _LOAD_ASDATA_TABLE;
struct _PERFINFO_SET_DEVICES_STATE_RET;
struct _LAST_EXCEPTION_LOG;
struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION;
struct _EVENT_TRACE_EXECUTIVE_RESOURCE_INFORMATION;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
struct _DISPATCHER_CONTEXT;
union _AMD_L3_CACHE_INFO;
struct _IDE_IO_CONTROL;
struct tagWNODE_METHOD_ITEM;
struct _SYSTEM_PROCESSOR_PERF_PARK_INFORMATION;
struct _REASSIGN_BLOCKS;
struct _KGROUP;
struct _NEGOTIATE_PACKAGE_PREFIXES;
union _KGDT_LIMIT;
struct _TEB64;
struct _WHEA_XPF_MCA_SECTION;
struct _OBJECT_HEADER;
struct _FILE_BOTH_DIR_INFORMATION;
struct _OBJECT_TYPE;
struct _SE_CM_VALUE_AUDIT;
struct _FILEOFFSET_INFORMATION;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct _KEY_HANDLE_TAGS_INFORMATION;
struct _IMAGE_IMPORT_BY_NAME;
struct _TEB32;
struct _CSTRING;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct _OBJECT_ATTRIBUTES;
struct _LINK_TRACKING_INFORMATION;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _COUNTED_REASON_CONTEXT;
struct _CONFIGURATION_INFORMATION;
struct _BATTERY_STATUS;
struct _BATTERY_WAIT_STATUS;
struct _TP_WORK;
struct STARTING_LCN_INPUT_BUFFER;
struct _DBGKD_WRITE_MEMORY32;
struct _DBGKD_GET_INTERNAL_BREAKPOINT32;
struct _DBGKD_MANIPULATE_STATE32;
struct _WMI_IMAGELOAD_INFORMATION32;
struct _PROCESSOR_IDLE_STATE_EX;
union _WHEA_GENERIC_ERROR_BLOCKSTATUS;
struct _WHEA_GENERIC_ERROR;
struct _HOTPATCH_HOOK_DESCRIPTOR;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
struct _SE_ADT_PARAMETER_ARRAY;
struct _HAL_DP_REPLACE_PARAMETERS;
struct _TARGET_DEVICE_CUSTOM_NOTIFICATION;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _POLICY_DOMAIN_EFS_INFO;
struct _TRANSLATE_VIRTUAL_TO_PHYSICAL;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct ANON_OBJECT_HEADER;
struct _MONITOR_MESSAGE;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _WMI_IDE_CHANNEL_RECORD;
struct _ETW_HEAP_EVENT_ALLOC;
struct _KSPIN_LOCK_QUEUE32;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _SYSTEM_PREFETCH_OPTIONS;
struct _FILE_POSITION_INFORMATION;
union _VIA_L1_CACHE_INFO;
struct _X86_LDT_ENTRY;
struct _CPU_CONFIG_RECORD;
struct _REG_POST_OPERATION_INFORMATION;
struct _SYSTEM_DEVICE_INFORMATION;
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
struct _CM_MCA_POS_DATA;
struct _KI_LOCAL_ARRAY5;
struct _WMI_WAIT_SINGLE;
struct _DBGKM_LOAD_DLL64;
struct _THREAD_PROFILING_INFORMATION;
struct _OSVERSIONINFOEXA;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _WAKE_TIMER_INFO;
union _PCI_EXPRESS_ERROR_SOURCE_ID;
struct PPM_IDLE_STATE_ACCOUNTING_EX;
struct _PPC_DBGKD_CONTROL_REPORT;
struct _FILE_NAMES_INFORMATION;
struct _SE_TOKEN_ACCESS_INFORMATION;
struct _OB_CALLBACK_REGISTRATION;
struct _IOSPACE_EX64;
struct _ACCESS_ALLOWED_ACE;
union _RATE_QUOTA_LIMIT;
struct _SH_CONTEXT;
struct _DEFERRED_WRITE;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
struct _OB_DUPLICATE_OBJECT_STATE;
struct _LDR_DATA_TABLE_ENTRY;
struct _FILE_GET_EA_INFORMATION;
struct _LSA_FOREST_TRUST_RECORD;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
struct WMIREGGUIDW;
struct _POP_SYSTEM_IDLE_STATUS;
struct _HAL_MCA_INTERFACE;
struct _HV_INPUT_UNMAP_STATS_PAGE;
struct _PUBLIC_BCB;
union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER;
struct _TRACE_PROVIDER_INSTANCE_INFO;
struct _HAL_CALLBACKS;
struct _CALLBACK_OBJECT;
struct _ETW_HEAP_EVENT_CREATE;
struct _WMI_PROCESS_INFORMATION64;
struct _PERFINFO_HARDPAGEFAULT_INFORMATION;
struct _FP_32;
struct _WHEA_ERROR_RECORD;
struct _IO_UNLOAD_SAFE_COMPLETION_CONTEXT;
struct _TXFS_WRITE_BACKUP_INFORMATION;
struct POP_HIBER_FILE;
struct PCI_MSI_CAPABILITY;
struct _WHEA_PSHED_PLUGIN_CALLBACKS;
struct _MESSAGE_RESOURCE_ENTRY;
struct _WMI_DELAY_EXECUTION;
struct _LSA_FOREST_TRUST_INFORMATION;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct _ETW_UMS_EVENT_DIRECTED_SWITCH_END;
struct _SEMAPHORE_BASIC_INFORMATION;
struct _HAL_PROFILE_SOURCE_INTERVAL;
struct _RETRIEVAL_POINTER_BASE;
struct _SCSI_PASS_THROUGH_DIRECT32;
struct _MPIO_PASS_THROUGH_PATH_DIRECT32;
struct _JOB_SET_ARRAY;
struct _STORAGE_MINIPORT_DESCRIPTOR;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct HAL_PRIVATE_DISPATCH;
struct _ETW_KERNEL_HEADER_EXTENSION;
struct _TRACE_ENABLE_CONTEXT;
struct _NTFS_STATISTICS;
struct _REG_SAVE_KEY_INFORMATION;
struct _ETW_HEAP_EVENT_CONTRACTION;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
struct _OBJECT_HANDLE_INFORMATION;
struct _CM_COMPONENT_INFORMATION;
struct _CLS_ARCHIVE_DESCRIPTOR;
struct _WHEA_ERROR_PACKET_V2;
struct _WHEA_PSHED_PLUGIN_REGISTRATION_PACKET;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct _FILE_OBJECTID_INFORMATION;
struct _CI_LOG_SCHEDULER_SLEEP_RESPONSE;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct _CLFS_PHYSICAL_LSN_INFORMATION;
struct _ImageArchitectureEntry;
struct _X86_NT5_CONTEXT;
struct _FILE_FULL_EA_INFORMATION;
struct _HARDERROR_MSG;
struct _LSA_ADT_STRING_LIST;
struct _RESOURCE_PERFORMANCE_DATA;
struct _ETW_HEAP_EVENT_RUNDOWN;
struct _PROCESS_ACCESS_TOKEN;
struct tagWNODE_TOO_SMALL;
struct _LSA_ENUMERATION_INFORMATION;
struct _TRIAGE_POP_IRP_WORKER_ENTRY;
struct _BATTERY_SET_INFORMATION;
struct _KI_LOCAL_ARRAY6;
struct _DBGKD_COMMAND_STRING;
struct _PACKEDEVENTINFO;
struct _EISA_MEMORY_CONFIGURATION;
struct _EVENT_TRACE_VERSION_INFORMATION;
struct _VI_TRACK_IRQL;
struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS;
struct _KEY_NAME_INFORMATION;
struct _X86_FIBER;
struct _PERFINFO_INTERRUPT_INFORMATION;
struct _PNP_REPLACE_MEMORY_LIST;
struct _TRANSACTION_LIST_INFORMATION;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER;
struct _FILE_RENAME_INFORMATION;
struct _KSYSTEM_TIME;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct _PS_CPU_QUOTA_QUERY_INFORMATION;
struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION;
struct _PERFINFO_FILE_READ_WRITE;
struct _DBGKD_DEBUG_DATA_HEADER64;
struct _FILE_ALLOCATION_INFORMATION;
struct _TXFS_LIST_TRANSACTIONS;
struct _EXCEPTION_POINTERS;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
struct _PARTITION_UNIT_INTERFACE;
struct _AMD64_KSWITCH_FRAME;
struct _PERFINFO_CCSWAP_IDLE;
union _PCI_EXPRESS_SLOT_STATUS_REGISTER;
struct _WMI_PROCESS_INFORMATION;
struct tagWNODE_EVENT_ITEM;
struct _CI_LOG_SCHEDULER_SLEEP;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS;
struct _WMI_FILE_IO;
struct _KCRM_TRANSACTION_BLOB;
union _HV_X64_MSR_HYPERCALL_CONTENTS;
struct FIND_BY_SID_OUTPUT;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _RTL_USER_PROCESS_INFORMATION64;
struct _EVENT_BASIC_INFORMATION;
struct _IO_SESSION_STATE_INFORMATION;
struct _KI_LOCAL_ARRAY8;
struct _TRACE_ENABLE_FLAG_EXTENSION;
struct _IMAGE_EXPORT_DIRECTORY;
struct _PAGE_PRIORITY_INFORMATION;
struct _PCI_AGP_STATUS;
struct _PCI_AGP_COMMAND;
struct _PCI_AGP_CAPABILITY;
struct _PERFINFO_PROCESS_PERFCTR;
struct QUERY_CONTEXT;
struct _MESSAGE_TRACE_HEADER;
struct _MESSAGE_TRACE_USER;
struct _ETW_NOTIFICATION_HEADER;
struct _ETW_SESSION_NOTIFICATION_PACKET;
struct _EBC_CONTEXT;
struct IMAGE_LOAD_CONFIG_DIRECTORY32;
struct _PERFINFO_DRIVER_MAJORFUNCTION_RET;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
union _PCI_EXPRESS_ROOT_ERROR_COMMAND;
struct _PCI_EXPRESS_ROOTPORT_AER_CAPABILITY;
struct _FP_80;
struct _FP_128;
struct _TPM_BOOT_ENTROPY_NT_RESULT;
struct _CRT_DOUBLE;
struct _FP_IEEE_VALUE;
struct _SE_AUDITING_STATE;
struct _WMI_SYSDLLINFO_RECORD;
struct _WMI_THREAD_INFORMATION;
struct _REG_KEY_HANDLE_CLOSE_INFORMATION;
struct _TEB_ACTIVE_FRAME_EX32;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
struct _PERFINFO_MEMORY_INFORMATION;
struct _STORAGE_READ_CAPACITY;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
union _IMAGE_AUX_SYMBOL_EX;
struct _EX_EXTENSION;
union _MM_PAGE_ACCESS_INFO_FLAGS;
struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;
struct _MSWmi_GuidRegistrationInfo;
struct _POLICY_ACCOUNT_DOMAIN_INFO;
struct _PNP_DEPENDENT_INFO;
struct _WMI_IMAGELOAD_INFORMATION;
struct _SYSTEM_HIVE_LIMITS;
union _FILE_SEGMENT_ELEMENT;
struct _SET_PARTITION_INFORMATION;
struct _PARTITION_INFORMATION_GPT;
struct _SET_PARTITION_INFORMATION_EX;
struct _SI_COPYFILE;
struct _FILE_PIPE_INFORMATION;
struct _STORAGE_HOTPLUG_INFO;
struct _PCI_AGP_CONTROL;
struct _OB_CALLBACK_CONTEXT_BLOCK;
struct _OB_REGISTRATION;
struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE;
struct _PNP_DEVICE_COMPLETION_QUEUE;
struct _RLETYPE;
struct _SID_AND_ATTRIBUTES_HASH;
struct _TIMER_SET_COALESCABLE_TIMER_INFO;
struct _LSA_ADT_SID_LIST;
struct _DISK_CACHE_SETTING;
struct _CM_KEYBOARD_DEVICE_DATA;
struct _LSA_ADT_SID_LIST_ENTRY;
struct _PERFINFO_SESSIONCREATE_INFORMATION;
struct _ENUM_CONTEXT;
struct _PERFINFO_FILEOBJECT_INFORMATION;
struct _PNP_USER_BLOCK;
struct _MESSAGE_TRACE;
struct _ARBITER_INTERFACE;
struct _DUMP_DRIVER;
struct _ETW_DFSS_START_NEW_INTERVAL;
struct _TOKEN_AUDIT_POLICY;
struct _STORAGE_IDENTIFIER;
struct _KDPC_STACK_FRAME;
struct _PNP_VETO_DEVICE_OBJECT_INFO;
struct BATTERY_MINIPORT_INFO;
struct _ARBITER_TEST_ALLOCATION_PARAMETERS;
struct _ARBITER_RETEST_ALLOCATION_PARAMETERS;
struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS;
struct _ARBITER_QUERY_CONFLICT_PARAMETERS;
struct _ARBITER_QUERY_ARBITRATE_PARAMETERS;
struct _ARBITER_ADD_RESERVED_PARAMETERS;
struct _OBJECT_TYPES_INFORMATION;
struct _ALPC_DATA_VIEW_ATTR32;
struct _TXFS_QUERY_RM_INFORMATION;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
struct _REPARSE_GUID_DATA_BUFFER;
struct _ALPC_COMPLETION_LIST_STATE;
struct _RTL_SRWLOCK;
struct _ALPC_COMPLETION_LIST_HEADER;
struct _HEAP_RANGE_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
struct _TP_WAIT;
struct _MMWS_TRIM_CRITERIA;
struct _ETW_TP_EVENT_CALLBACK_START;
struct _FILE_STANDARD_LINK_INFORMATION;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _BCD_PRIVILEGE_STATE;
struct _MMWSLE_FLUSH_LIST;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_LIST;
struct _EX_PUSH_LOCK_WAIT_BLOCK;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
struct _KPROFILE;
struct _WMI_DISKIO_FLUSH_BUFFERS;
struct _BOOT_OPTIONS;
struct _FILE_END_OF_FILE_INFORMATION;
struct _PERFINFO_FILE_SIMPLE_OPERATION;
struct _FILE_COMPRESSION_INFORMATION;
struct _POP_SLEEPER_HANDOFF;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _MOUNTMGR_VOLUME_MOUNT_POINT;
union _HV_X64_MSR_POWER_STATE_TRIGGER;
struct _OBJECT_BASIC_INFORMATION;
struct _INITIAL_PEB;
struct _COVERAGE_SECTION_HEADER;
struct _PROCESSOR_CAP;
struct _PORT_DATA_ENTRY;
struct _SMKM_FILE_INFO;
struct _EEVENT_PAIR;
struct _PERFINFO_PO_NOTIFY_DEVICE_COMPLETE;
struct _OSVERSIONINFOEXW;
struct _IO_MINI_COMPLETION_PACKET_USER;
struct _PERFINFO_SET_POWER_ACTION;
struct _WIN32_POWERINFO_DISPLAYREQUIRED;
struct _CM_PNP_BIOS_DEVICE_NODE;
struct _VF_EXCLUDED_DRIVER_ENTRY;
union _LDR_DLL_NOTIFICATION_DATA;
struct _FT_REGISTRY;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct _ETW_BUFFER_INFORMATION;
struct _WIN32_POWERINFO_POLICYCHANGE;
struct _CM_HARDWARE_PROFILE_LIST;
struct _POLICY_AUDIT_LOG_INFO;
struct _SM_STORE_LIST_REQUEST;
struct _SM_STORE_LIST_REQUEST_EX;
struct _WDBGEXTS_CLR_DATA_INTERFACE;
struct tagStringHash;
struct _DBGKD_DEBUG_DATA_HEADER32;
struct _RTL_PROCESS_BACKTRACES;
struct _FSRTL_FILE_CONTEXT_SUPPORT;
struct RETRIEVAL_POINTERS_BUFFER;
struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS;
struct _IO_CONNECT_INTERRUPT_PARAMETERS;
struct _PERFINFO_PFMAPPED_SECTION_INFORMATION;
struct _SECURITY_DESCRIPTOR_RELATIVE;
struct _ECP_HEADER;
struct _ETW_READY_THREAD_EVENT;
struct _PCI_SUBSYSTEM_IDS_CAPABILITY;
struct _KI_LOCAL_ARRAY7;
struct _MM_PAGE_ACCESS_INFO_HEADER;
struct _BOOTDISK_INFORMATION_LITE;
struct _MM_PAGE_ACCESS_INFO;
struct _PARTITION_INFORMATION_EX;
struct _EVENT_EXTENDED_ITEM_STACK_TRACE32;
struct WMIEVENTQUEUE;
struct MBREQUESTS;
struct _WMIGUIDOBJECT;
struct _ETW_HEAP_EVENT_COMMON;
struct _PERFINFO_DRIVER_COMPLETE_REQUEST;
struct UNICODE_STRING3264;
struct WMIQSIINFO;
struct _ETW_TP_EVENT_POOL_TH_MAX_SET;
struct _TOKEN_STATISTICS;
struct _FILE_EA_INFORMATION;
struct _DYNAMIC_FUNCTION_TABLE;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _EX_DEBUG_LOG;
struct _KDPC32;
struct _TAPE_STATISTICS;
struct _EX_DEBUG_LOG_TAG;
struct _BSD_POWER_TRANSITION;
struct BSD_BOOT_STATUS_DATA;
struct _PPM_PERF_STATE;
struct _REG_RENAME_KEY_INFORMATION;
struct PROCESSOR_OBJECT_INFO;
struct _SYSTEM_PROCESSOR_POLICY_INFORMATION;
struct _EM_CLIENT_NOTIFICATION_REGISTRATION;
struct _THREAD_UMS_INFORMATION;
struct _DISK_SAN_SETTINGS;
struct WMIRECEIVENOTIFICATION;
struct _TEB_ACTIVE_FRAME_EX;
struct _HV_OUTPUT_GET_LOGICAL_PROCESSOR_RUN_TIME;
struct _PROCESS_BASIC_INFORMATION64;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
struct _BitField;
struct _FIELD_INFO;
struct ISSTATICENAMES;
struct _KLDTENTRY;
struct _ETW_UMS_EVENT_DIRECTED_SWITCH_START;
struct _KEY_VALUE_BASIC_INFORMATION;
struct _VERIFY_INFORMATION;
struct _PHYSICAL_MEMORY_RUN;
struct WMIFHTOINSTANCENAME;
struct _SYSTEM_PAGEFILE_INFORMATION;
struct _PERFINFO_SET_POWER_ACTION_RET;
struct _UNDOCK_POWER_RESTRICTIONS;
struct _NEGOTIATE_CALLER_NAME_REQUEST;
struct _ALPC_SECURITY_ATTR;
union _TURBO_THUNK_DESCRIPTION;
struct _READ_WRITE_MSR;
struct _FILE_STREAM_INFORMATION;
struct _BASE_MCB;
struct _IO_COMPLETION_RESERVE;
struct _CM_PCCARD_DEVICE_DATA;
struct _PNP_BUS_INFORMATION;
struct _PARTITION_IDENTIFIER;
struct PPM_SIMULATED_PROCESSOR_LOAD;
struct _CURDIR32;
struct _RTL_DRIVE_LETTER_CURDIR32;
struct _RTL_USER_PROCESS_PARAMETERS32;
struct _STORAGE_DESCRIPTOR_HEADER;
struct _REG_SET_INFORMATION_KEY_INFORMATION;
struct _Wx86ThreadState;
struct PPM_IDLE_STATE_ACCOUNTING;
struct PPM_IDLE_ACCOUNTING;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
struct _PERFINFO_BOOT_PHASE_START;
struct _REG_POST_CREATE_KEY_INFORMATION;
struct _HAL_INTERRUPT_TARGET_INFORMATION;
struct _PLUGPLAY_EVENT_BLOCK;
struct NTFS_EXTENDED_VOLUME_DATA;
struct _QUOTA_LIMITS_EX;
struct _X86_KPROCESSOR_STATE;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
struct _ADMINISTRATOR_POWER_POLICY;
struct _MM_MIRROR_DISPATCH;
struct _RTL_BACKOFF;
struct _FSRTL_PER_FILEOBJECT_CONTEXT;
struct _RELATION_LIST;
struct _DBGKM_ERROR_MSG;
struct _KEY_CACHED_INFORMATION;
struct _inf;
struct _HAL_HYPERVISOR_INFORMATION;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct _ALPHA_CONTEXT;
struct _AMD64_OBSOLETE_CONTEXT_1;
struct _MIPS64_CONTEXT;
struct _CROSS_PLATFORM_CONTEXT;
struct _REG_ENUMERATE_VALUE_KEY_INFORMATION;
struct _KSPIN_LOCK_QUEUE64;
struct _ARBITER_ORDERING_LIST;
struct WMIREGINFOW;
struct _ARBITER_INSTANCE;
struct _WMI_IMAGEID_INFORMATION32;
struct _LSA_REPLY_MESSAGE;
struct _RTL_MODULE_EXTENDED_INFO;
struct _SEP_AUDIT_POLICY;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct _TEST_CONTROL;
struct _WIN32_CLOSEMETHOD_PARAMETERS;
struct _PROCESSOR_IDLE_STATES_EX;
struct _TRACE_ENABLE_INFO;
struct WMIMOFENTRY;
struct _CONTEXT32_UPDATE;
struct _XSTATE_CONFIGURATION;
struct _KUSER_SHARED_DATA;
struct _MOVE_FILE_DATA32;
struct _SEP_TOKEN_PRIVILEGES;
struct _TOKEN;
struct NOTIFY_USER_POWER_SETTING;
struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES;
struct _FILE_PREFETCH;
struct ST_STORE<SM_TRAITS>::_ST_PAGE_LOCATION;
struct ST_STORE<SM_TRAITS>::_ST_DEVICE_READ_HEADER;
struct _RTL_TIME_ZONE_INFORMATION;
struct _TRACE_LOGFILE_HEADER;
struct MOVE_FILE_RECORD_DATA;
struct _PROCESS_SESSION_INFORMATION;
struct _REG_QUERY_KEY_INFORMATION;
struct PCI_HT_INTERRUPT_INDEX_1;
struct _KDDEBUGGER_DATA32;
struct _LDOUBLE;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct _POP_HIBER_LOGGING;
struct _CM_FLOPPY_DEVICE_DATA;
struct _PERFINFO_PROCESS_PERFCTR64;
struct _RTL_CHASH_ENTRY;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct _LDR_RESLOADER_RET;
struct _OBJECT_HEADER_PROCESS_INFO;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct _STACK_WALK_EVENT_DATA;
struct _PERFINFO_MARK_EVENT;
struct _PF_HARD_FAULT_INFO;
struct _DBGKM_UNLOAD_DLL;
struct _OB_SD_CACHE_LIST;
struct _REQUEST_OPLOCK_OUTPUT_BUFFER;
struct PCI_MSIX_TABLE_ENTRY;
struct _FILE_REMOTE_PROTOCOL_INFORMATION;
struct _SYSTEM_VHD_BOOT_INFORMATION;
struct _IO_STATUS_BLOCK32;
struct _FORMAT_EX_PARAMETERS;
struct _PPM_PERF_STATES;
struct _MI_TRIAGE_STORAGE;
struct tagATTRINFO;
struct _ETW_UMS_EVENT_CONTEXT_SWITCH;
struct _CLS_WRITE_ENTRY;
struct _KBUGCHECK_DUMP_IO;
struct _WMI_WAIT_OBJECT_RECORD;
struct _WMI_WAIT_MULTIPLE;
struct _STORAGE_PRIORITY_HINT_SUPPORT;
struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_INPUT;
struct _ETW_TP_EVENT_POOL_CREATE;
struct _HWPROFILE_CHANGE_NOTIFICATION;
struct _VI_TARGET_CONTIGUOUS_ALLOCATION;
struct _EMULATOR_ACCESS_ENTRY;
struct _TRUSTED_DOMAIN_INFORMATION_EX2;
struct _TRUSTED_DOMAIN_FULL_INFORMATION2;
struct _ALPHA_DBGKD_CONTROL_REPORT;
struct _IA64_DBGKD_CONTROL_REPORT;
struct _ARM_DBGKD_CONTROL_REPORT;
struct _DBGKD_ANY_CONTROL_REPORT;
struct _DBGKD_ANY_WAIT_STATE_CHANGE;
struct _DEVICE_HANDLER_OBJECT;
struct _LBLOB;
struct _PERFINFO_FILE_DIRENUM;
struct _VF_TRACKER_STAMP;
struct _RTL_PROCESS_MODULES;
struct _BOOT_LOG_RECORD;
struct _TRIAGE_POP_IRP_DATA;
struct _SYSTEM_FLAGS_INFORMATION;
struct _CALL_FRAME;
struct _FLS_DATA;
struct _DEVICE_RELATIONS;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct _REG_SET_VALUE_KEY_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct _CM_HARDWARE_PROFILE_ALIAS;
struct _CM_HARDWARE_PROFILE_ALIAS_LIST;
struct POP_SYS_CONTEXT;
struct _POP_COMPOSITE_BATTERY;
struct _NEGOTIATE_CALLER_NAME_RESPONSE_WOW;
struct _PP_LOOKASIDE_LIST32;
struct _IO_CACHE_INFO;
struct _OBJECTID;
struct _MI_RESAVAIL_TRACKER;
struct _SYSTEM_ALARM_ACE;
struct _LAZY_WRITER;
struct IMAGE_LOAD_CONFIG_DIRECTORY64;
struct _PHYSICAL_COUNTER_RESOURCE_LIST;
struct _COMPRESSION_BLOCK;
struct _MMINPAGE_FLAGS2;
struct _MMINPAGE_FLAGS;
struct _MMINPAGE_SUPPORT;
struct _READCONTROLSPACE64;
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT;
struct _TXFS_START_RM_INFORMATION;
struct _PARSE_MESSAGE_CONTEXT;
struct PCI_AGP_EXTENDED_CAPABILITY;
struct _DBGUI_CREATE_THREAD;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct _SM_STORE_BASIC_PARAMS;
struct _ST_PARAMETERS;
struct _WMI_RESOURCE;
struct _CREATE_DISK_GPT;
struct tagUSERSDBLOOKUPENTRY;
struct _KAFFINITY_ENUMERATION_CONTEXT;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
struct _CM_HARDWARE_PROFILE_ACPI_ALIAS_LIST;
union _UCHAR1;
struct _EXHANDLE;
struct _LOGTYPEDESCRIPTOR;
struct _DBGKM_UNLOAD_DLL64;
struct tagUSERSDBLOOKUP;
struct _TOKEN_ELEVATION;
struct _POP_IRP_DATA;
struct _B_TREE_SERIALIZE_INFO;
struct _BIN_RANGE;
struct _BIN_COUNT;
struct _BIN_RESULTS;
struct _PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY;
struct _FS_FILTER_COMPLETION_NODE;
struct _FT_SET_INFORMATION;
struct _SYSTEM_HOTPATCH_CODE_INFORMATION;
union _PCI_EXPRESS_CAPABILITIES_REGISTER;
struct _WINDBG_OLD_EXTENSION_APIS;
struct _BCDE_DEVICE_QUALIFIED_PARTITION;
struct _BCDE_DEVICE;
struct _IOSPACE64;
struct _EX_CALLBACK_ROUTINE_BLOCK;
struct _IOP_PRIORITY_CALLBACK_BLOCK;
struct _VF_POOL_TRACE;
struct _RTL_UNICODE_STRING_BUFFER;
union _PCI_EXPRESS_ROOT_CONTROL_REGISTER;
struct _IO_PRIORITY_INFO;
struct _ACL_SIZE_INFORMATION;
struct _PERFINFO_EXECUTIVE_RESOURCE_CONFIG;
struct _POOL_HEADER;
struct _MI_VERIFIER_POOL_HEADER;
struct _MI_FREED_SPECIAL_POOL;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
struct _SE_PROCESS_AUDIT_INFO;
struct _SYSTEM_POWER_POLICY;
struct _IMAGE_BOUND_FORWARDER_REF;
struct _GETVERSIONINPARAMS;
struct _LDR_FAILURE_DATA;
struct _TPP_THREAD_DATA_CALLBACK;
struct _ETW_TP_EVENT_POOL_CLOSE;
struct _WMI_VISUALTHEME_RECORD;
struct _HAL_AMLI_BAD_IO_ADDRESS_LIST;
struct _CI_LOG_SCHEDULER_EVENT;
struct _X86_CALL_FRAME;
struct PPM_IDLE_ACCOUNTING_EX;
struct _HARDWARE_COUNTER_DATA;
struct _VF_PENDING_DEFERRAL_CONTEXT;
struct _WINDBG_EXTENSION_APIS32;
struct _ETW_CRITSEC_EVENT_COLLISION;
struct _DBGUI_CREATE_PROCESS;
union _SLIST_HEADER32;
struct PPM_WMI_PERF_STATES;
struct _LSA_LAST_INTER_LOGON_INFO;
struct _SECURITY_LOGON_SESSION_DATA;
struct _VF_PENDING_WORKER_INFORMATION;
struct _WOW64_LDT_ENTRY;
struct _EXTSTACKTRACE32;
struct _FILE_PREFETCH_EX;
struct _EVENTSFORLOGFILE;
struct _MOUNTMGR_MOUNT_POINT;
struct _VF_BUGCHECK_LOG_ENTRY;
struct _REPARSE_INDEX_KEY;
struct _PERFINFO_DRIVER_COMPLETIONROUTINE;
struct _READ_LIST;
struct _X86_NT5_KPROCESSOR_STATE;
struct _HEAP_SUBSEGMENT_FREE;
struct _UNIQUE_PROCESS_INFORMATION;
struct _MEMORY_FRAME_INFORMATION;
struct _PAGEDIR_INFORMATION;
struct _LSA_AUDIT_POLICY_STORAGE;
struct POWER_STATE_NOTIFY_HANDLER;
struct _MMPFN_IDENTITY;
struct _VF_TRACKER;
struct _POLICY_DEFAULT_QUOTA_INFO;
struct _TOKEN_ORIGIN;
struct _DBGKM_LOAD_DLL;
struct _FSRTL_AUXILIARY_BUFFER;
struct _REG_RESTORE_KEY_INFORMATION;
struct _DBGUI_WAIT_STATE_CHANGE;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_MODE_INFORMATION;
struct _FILE_ALIGNMENT_INFORMATION;
struct _FILE_NAME_INFORMATION;
struct _FILE_ALL_INFORMATION;
struct _DEVICE_EVENT_MOUNT;
struct _SRB_IO_CONTROL;
struct _ACCESS_DENIED_OBJECT_ACE;
struct _IMAGE_DOS_HEADER;
struct _ChildProcessInfo;
struct _KI_LOCAL_ARRAY2;
struct _RH_OP_CONTEXT;
struct _FP_IEEE_RECORD;
struct _EVENT_TRACE_GROUPMASK_INFORMATION;
struct _CM_ROM_BLOCK;
struct _PERSISTENT_RESERVE_COMMAND;
struct _TP_TIMER;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _FILE_ATTRIBUTE_CACHE_VALUES;
struct _WINDOWS_OS_OPTIONS;
struct _INITIAL_PEB32;
struct _JOURNAL_ABSOLUTE_INFORMATION;
struct _KEY_FULL_INFORMATION;
struct _VF_STACK_SWITCH_TRACE;
struct _X86_DESCRIPTOR_TABLE_ENTRY;
struct _CALL_HASH_ENTRY;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct _DBGKM_CREATE_PROCESS64;
struct _WDBGEXTS_MODULE_IN_RANGE;
struct _IMAGE_SECTION_HEADER;
struct _TP_ALPC;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_LINKS_INFORMATION;
struct _SEP_WORK_ITEM;
struct _SEP_LSA_QUEUE_INFO;
union _MI_WRITE_COMPLETE_PFN_FLAGS;
struct _SYSTEM_POWER_INFORMATION;
struct _RTL_HEAP_PARAMETERS;
struct tagWNODE_EVENT_REFERENCE;
struct _SEP_GLOBAL_SACL;
struct _PERFINFO_IMAGELOAD_IN_PAGEFILE_INFO;
struct DELETE_USN_JOURNAL_DATA;
struct _POLICY_REPLICA_SOURCE_INFO;
struct _NEGOTIATE_PACKAGE_PREFIX_WOW;
struct _IMAGE_DEBUG_MISC;
union _PCI_EXPRESS_LINK_CONTROL_REGISTER;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
struct _FPO_DATA;
struct _SYSTEM_BIGPOOL_INFORMATION;
struct _WIN32_CALLOUTS_FPNS;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _RTL_CRITICAL_SECTION64;
struct _MMBANKED_SECTION;
union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS;
struct _PERFINFO_FILE_PATH_OPERATION;
struct _KI_INITIALIZE_DYNAMIC_PROCESSOR_CONTEXT;
struct _CONDITION_OPERAND_VALUE;
struct _SYSTEM_AUDIT_ACE;
struct RTL_ACE_DATA;
struct _DISK_CONTROLLER_NUMBER;
struct _MM_SESSION_SPACE_FLAGS;
struct _PO_SERVICE_NOTIFICATION;
struct tagENTRYINFO;
struct _PCI_EXPRESS_AER_CAPABILITY;
struct _MEMORY_CACHING_REQUIREMENTS;
struct _LSARM_POLICY_AUDIT_EVENTS_INFO_EX;
struct _CM_MONITOR_DEVICE_DATA;
struct _AMD64_KTRAP_FRAME;
struct _EVENT_EXTENDED_ITEM_INSTANCE;
struct tagSEARCHPATHPART;
struct tagSEARCHPATH;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct _PROFILE_ACPI_DOCKING_STATE;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _MOUNTMGR_SET_AUTO_MOUNT;
struct _WMI_IMAGELOAD_INFORMATION64;
struct _MI_CACHED_PTE;
struct _PPC_KSWAP_FRAME;
struct _WOW64_DESCRIPTOR_TABLE_ENTRY;
struct _ACPI_INTERFACE_STANDARD;
struct _CPUCONTEXT_IA6432_HARDWARE;
struct _CPUCONTEXT_IA6432_SOFTWARE;
struct _CpuContext_ia6432;
struct _WMIP_TRACE_DEVICE;
struct _WMI_TCPIP;
struct _ALPC_PORT_CALLBACK_INFORMATION;
struct _IOP_CANCEL_APC_CONTEXT;
struct _MI_SYSTEM_PTE_TYPE_EX;
struct CM_RESTART_AREA;
struct _MMIOHEADER_DATA;
union _DISK_SIGNATURE_NEW;
struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE;
struct _SESSION_GLOBAL_SUBSECTION_INFO;
struct _SHUTDOWN_PACKET;
struct _DISK_INT13_INFO;
struct _CM_SYSTEM_CONTROL_VECTOR;
struct _MI_EXTRA_IMAGE_INFORMATION;
struct _MI_SECTION_IMAGE_INFORMATION;
struct _ACCESS_METHOD_ADDRESS;
struct _SMBIOS_SYSTEM_EVENTLOG_STRUCT;
struct _DISK_EX_INT13_INFO;
struct _DISK_DETECTION_INFO;
struct _SYSTEM_POWER_STATE_DISABLE_LIST;
struct _RELATIVE_SYMLINK_INFO;
struct _FULL_DUMP64;
struct _REAL_NOTIFY_SYNC;
struct _PLEX_READ_DATA_REQUEST;
struct _SYSTEM_CALL_COUNT_INFORMATION;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
struct _GET_LENGTH_INFORMATION;
struct _PS_CREATE_INFO;
struct _PCI_TYPE2_ADDRESS_BITS;
struct _KSTART_FRAME;
struct _FILE_TRACKING_INFORMATION;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _CI_LOG_MMCSS_START;
struct _TOKEN_SECURITY_ATTRIBUTE_V1;
struct _MMCLONE_BLOCK;
struct PCI_HT_CAPABILITY;
struct _KSERVICE_TABLE_DESCRIPTOR;
struct _PREFIX_TABLE_ENTRY;
struct _PCI_TYPE2_CSE_BITS;
struct _LSARM_POLICY_AUDIT_EVENTS_INFO;
struct _KAPC_STATE32;
struct EVENT_INSTANCE_INFO;
struct _AEL_CACHE_EXE_MESSAGE;
struct _AEL_QUERY_STATE_MESSAGE;
struct _BOOT_DRIVER_LIST_ENTRY;
struct _CLFS_STREAM_ID_INFORMATION;
struct _PO_SESSION_DISPLAY_STATE;
struct _KSWITCH_FRAME;
struct _RTL_HEAP_INFORMATION;
struct _KDDEBUGGER_DATA64;
struct _LOAD_IMPORTS;
struct _PERFINFO_DPC_INFORMATION;
struct _MI_SPECIAL_POOL_PTE_LIST;
struct BULK_SECURITY_TEST_DATA;
struct _REPARSE_DATA_BUFFER;
union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS;
struct _WHEA_XPF_PROCESSOR_ERROR_SECTION;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _VM_COUNTERS_EX;
union _MM_PREFETCH_FLAGS;
struct _BITMAP_RANGE;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct _VARIABLE_NAME_AND_VALUE;
struct _POLICY_AUDIT_FULL_QUERY_INFO;
struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS;
struct _CPU_INFO;
struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX;
struct _DEBUG_OBJECT;
struct _ALPHA_NT5_KPROCESSOR_STATE;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
struct _STORAGE_DEVICE_ID_DESCRIPTOR;
struct _HV_INPUT_INVOKE_HYPERVISOR_DEBUGGER;
struct _NV_FEATURE_PARAMETER;
struct _THREAD_TEB_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
struct _SMP_LOG_BUFFER;
union _PCI_EXPRESS_PME_REQUESTOR_ID;
struct _ATA_PASS_THROUGH_EX32;
struct _FORMAT_PARAMETERS;
struct _REG_REPLACE_KEY_INFORMATION;
struct _PERFINFO_CCSWAP_BUFFER;
struct _CONTEXTSWAP_CACHE;
struct _SCSI_BUS_DATA;
struct _SCSI_ADAPTER_BUS_INFO;
struct _FILE_ID_FULL_DIR_INFORMATION;
struct _IOP_IRP_STACK_PROFILER;
struct _ETW_SYSTEMTIME;
struct _KBALANCE_CONTEXT;
struct PROCESSOR_PERFSTATE_POLICY;
struct _ETW_SPINLOCK_ENTRY;
struct _DISPATCHER_HEADER32;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
union _RTL_RUN_ONCE;
struct _WHEA_MEMORY_ERROR_SECTION;
union _WHEA_PCIXBUS_ID;
union _WHEA_PCIXBUS_COMMAND;
struct _WHEA_PCIXBUS_ERROR_SECTION;
struct _HEADLESS_CMD_SET_COLOR;
struct _POOL_TRACKER_BIG_PAGES;
struct _FILE_FS_OBJECTID_INFORMATION;
struct _HEADLESS_RSP_QUERY_INFO;
struct _WHEA_ERROR_PACKET_V1;
struct _ETW_REALTIME_LOGFILE_HEADER;
struct _SYSDBG_BUS_DATA;
struct _ETW_DFSS_RELEASE_THREAD_ON_IDLE;
struct _AMD64_UNWIND_INFO;
struct _MBCB;
struct _BCB;
struct _KBUGCHECK_SECONDARY_DUMP_DATA;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct _PERFINFO_PO_SESSION_CALLOUT;
struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY;
struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::ITERATOR;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct _ARM_FIBER;
struct _ALPC_HANDLE_ENTRY;
struct _SE_ACCESS_REQUEST;
struct _NONOPAQUE_BASE_MCB;
struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::_B_TREE_DESERIALIZE_CTX;
struct _OBJECT_TYPE_LIST;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
struct _RTL_PROCESS_LOCKS;
struct _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY;
struct _HEAP_RANGE_LOG;
struct _PERFINFO_FILE_CREATE;
struct _VOLUME_CACHE_MAP;
struct _INDEX_RECORD;
struct _INT_ROUTE_INTERFACE_STANDARD;
struct _IO_SESSION_STATE_NOTIFICATION;
struct _SYSPTES_HEADER;
struct _ST_IO_SAMPLE_RATE;
struct _NETWORK_OPEN_ECP_CONTEXT;
struct ROUTING_TOKEN;
struct _HV_INPUT_MAP_STATS_PAGE;
struct _RTL_STD_LIST_ENTRY;
struct _SYSTEM_OBJECT_INFORMATION;
struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::PATH_ENTRY;
struct _PERFINFO_FILE_OPERATION_END;
struct _EVENT_TRACE_HEAP_TRACING_INFORMATION;
struct _PERFINFO_SET_DEVICES_STATE;
union _UCHAR4;
struct _FILE_FS_SIZE_INFORMATION;
struct _PO_WAKE_SOURCE_DEVICE;
struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::_B_TREE_DESERIALIZE_CTX;
struct _LDR_DATA_TABLE_ENTRY64;
struct _NIC_RECORD;
struct _ALPC_HANDLE_TABLE;
struct _CLS_SCAN_CONTEXT;
union _UCHAR2;
union _PS_QUOTA_LIMIT;
struct _WMI_OSVERSION_RECORD;
struct _KD_PACKET;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct _WDBGEXTS_THREAD_OS_INFO;
struct _GET_MEDIA_TYPES;
struct POWER_STATE_HANDLER;
union _BCDE_UNPACKED_DATA_TYPE;
struct _DISK_PARTITION_INFO;
struct _IOP_REGISTRY_CALLBACK;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct _WMI_EXTENDED_THREAD_INFORMATION;
union _HV_X64_HYPERCALL_INPUT;
struct _ATA_PASS_THROUGH_EX;
struct _NBQUEUE_BLOCK;
struct _WORK_QUEUE_ENTRY;
struct _NOTIFICATION_PACKET;
struct _ENTRYHEADER;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _HEAP_COMMIT_DECOMMIT;
struct _PCI_TYPE1_CFG_BITS;
struct _SET_PARTITION_ATTRIBUTES;
struct _FILE_PIPE_REMOTE_INFORMATION;
struct _OPLOCK_KEY_ECP_CONTEXT;
struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_MULTIPLE_INPUT;
struct _PERFINFO_PPM_IDLE_STATE_CHANGE;
struct _IDEREGS;
struct _MAPPED_ADDRESS;
struct _ALPC_BASIC_INFORMATION;
struct KERNEL_ERROR_HANDLER_INFO;
struct _UDP_IDENTIFIER;
struct _MOUNTMGR_QUERY_AUTO_MOUNT;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
struct _DEVICE_DSM_NOTIFICATION_PARAMETERS;
struct _PO_RELATION;
struct POP_FLUSH_VOLUME;
struct _FILE_IS_REMOTE_DEVICE_INFORMATION;
struct _PROCESSOR_POWER_INFORMATION;
struct _LDR_SECTION_INFO;
struct _VF_BUGCHECK_WORKAROUND_LOG_ENTRY;
struct _OB_CALLBACK_CONTEXT_CALL_INSTANCE;
struct _KALPC_HANDLE_DATA;
struct _BI_FILE_INFORMATION;
union _KIDT_HANDLER_ADDRESS;
struct PCI_X_CAPABILITY;
struct STORAGE_BREAK_RESERVATION_REQUEST;
struct _WINDBG_EXTENSION_APIS64;
struct _PCW_INSTANCE;
struct _KINTERRUPT_ALIGNED;
struct _POOL_DESCRIPTOR;
struct _KCRMPROTOCOL;
struct _ETW_SESSION_PERF_COUNTERS;
struct _MMSESSION;
struct _MM_PAGED_POOL_INFO;
struct _MI_SPECIAL_POOL;
struct _MI_SYSTEM_PTE_TYPE;
struct _MM_SESSION_SPACE;
struct _KAPC_RECORD;
struct PPM_IDLESTATE_EVENT;
struct PPM_WMI_LEGACY_PERFSTATE;
struct _OBCB;
struct _DEVICE_TRIM_DESCRIPTOR;
struct MOVE_FILE_DATA;
struct _FILE_DIRECTORY_INFORMATION;
struct CREATE_USN_JOURNAL_DATA;
struct _TP_CALLBACK_ENVIRON_V3;
struct _SCSI_PASS_THROUGH;
struct PPM_THERMAL_POLICY_EVENT;
union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER;
union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER;
union _PCI_EXPRESS_LINK_STATUS_REGISTER;
union _PCI_EXPRESS_ROOT_STATUS_REGISTER;
struct _PCI_EXPRESS_CAPABILITY;
struct _DISK_HISTOGRAM;
struct _IOV_IRP_TRACE;
struct _DUMP_UNLOADED_DRIVERS;
struct _POP_POWER_SETTING_VALUES;
struct _GET_PARTITION_ATTRIBUTES;
struct _IMAGE_FUNCTION_ENTRY;
struct _WMI_SYSTEMRANGE_RECORD;
struct PPM_THERMALCHANGE_EVENT;
struct _IDLE_DETECTOR;
struct _MOUNTDEV_NAME;
struct _WMI_IMAGEID_INFORMATION;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
struct _STORAGE_PREDICT_FAILURE;
struct _WINDBG_OLDKD_EXTENSION_APIS;
struct _SCSI_PASS_THROUGH32;
struct _SUMMARY_DUMP64;
struct _TRIAGE_DUMP64;
struct _MEMORY_DUMP64;
struct _FILE_NOTIFY_INFORMATION;
struct _PREVENT_MEDIA_REMOVAL;
struct _FAR_TARGET_32;
struct _PROCESSOR_START_BLOCK;
struct _RM_SEND_COMMAND_TO_LSA_PARAMS;
struct _RTL_UNLOAD_EVENT_TRACE;
struct POP_POWER_SETTING_REGISTRATION;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
struct _SEP_LOGON_SESSION_TOKEN;
struct _WMIP_SYNCHRONOUS_ETW;
struct _DBGKD_WAIT_STATE_CHANGE32;
struct _ALPC_SERVER_INFORMATION;
struct CM_SET_VALUE_NEW_LOGREC;
struct _WIN32_OKAYTOCLOSEMETHOD_PARAMETERS;
struct _RTL_DEBUG_INFORMATION;
struct _wfinddata_t;
struct _PERFINFO_PPM_PERF_STATE_CHANGE;
struct _X86_KTSS;
struct _RTL_RELATIVE_NAME_U;
struct _QUERY_OPEN_SUBKEYS_CONTEXT;
struct _WDIP_SEM_DISABLED_SCENARIO_TABLE;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
struct HICON__;
struct _WMIP_SYNCHRONOUS_ETW_WAITER;
struct _SYSID_UUID;
struct _WMI_DISKIO_READWRITE;
struct HRGN__;
struct _EISA_DMA_CONFIGURATION;
struct _CM_EISA_FUNCTION_INFORMATION;
struct _DEVICE_DATA_SET_RANGE;
struct _FILE_LOCK_INFO;
struct _WMI_BUFFER_HEADER;
struct _MM_DRIVER_VERIFIER_DATA;
struct _DEVICE_SEEK_PENALTY_DESCRIPTOR;
struct _ATOM_TABLE_INFORMATION;
struct _WMI_IRQ_RECORD;
struct _TIMER_BASIC_INFORMATION;
struct _POP_CURRENT_BROADCAST;
struct TUNNEL;
struct _EM_CALLBACK_REGISTRATION;
struct _FSRTL_COMMON_FCB_HEADER;
struct _TRACE_LOGFILE_HEADER64;
struct _LDR_IMPORT_RECORD;
struct _MOUNTMGR_DRIVE_LETTER_TARGET;
struct _VF_BUGCHECK_ATTRIBUTES;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _RTL_PERTHREAD_CURDIR;
struct _MOUNTMGR_MOUNT_POINTS;
struct _FILE_SYSTEM_RECOGNITION_INFORMATION;
struct _UNICODE_PREFIX_TABLE;
struct _WHEA_ERROR_SOURCE_CONFIGURATION;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct _RTL_HEAP_TAG_INFO;
struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _DUMP_POINTERS;
struct _CLASS_MEDIA_CHANGE_CONTEXT;
struct _MM_ZERO_PAGEFILE_CONTEXT;
struct _SYSDBG_PHYSICAL;
struct _LONGDOUBLE;
struct _IOP_FOEXT_DEVOBJHINT;
struct _MI_PER_SESSION_PROTOS;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
struct _CROSS_PLATFORM_FIBER;
struct _PHYSICAL_MEMORY_DESCRIPTOR;
struct _SCSI_ADDRESS;
struct _CONTEXT_EX;
struct _ZONE_HEADER;
struct _PERFINFO_WORKER_THREAD_ITEM;
struct _CLFS_LOG_NAME_INFORMATION;
struct _KTHREAD_SWITCH_COUNTERS;
struct _MM_LDW_WORK_CONTEXT;
struct _iobuf;
struct _PERFINFO_IDLE_STATE_CHANGE;
struct _KLDR_DATA_TABLE_ENTRY32;
struct tagWNODE_ALL_DATA;
struct _PS_CREATE_NOTIFY_INFO;
struct _CC_FILE_SIZES;
struct _ETW_POOL_EVENT;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
union _WHEAP_ERROR_RECORD_WRAPPER_FLAGS;
struct _WHEAP_ERROR_RECORD_WRAPPER;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _SUPPORTED_OS_INFO;
struct _KEY_WRITE_TIME_INFORMATION;
struct _GET_TEB_ADDRESS;
struct _EX_HOST_REGISTRATION_1;
struct _RTL_RXACT_LOG;
struct tagWNODE_SINGLE_ITEM;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _MI_DLL_SHARED;
struct _STORAGE_GET_BC_PROPERTIES_OUTPUT;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
struct tagSTOREDCACHEENTRY;
struct _SYSTEM_VDM_INSTEMUL_INFO;
struct _ARBITER_PARAMETERS;
struct _KDESCRIPTOR32;
struct _EX_CALLBACK;
struct _LSARM_LOGON_ACCOUNT_INFO;
struct _SE_ADT_OBJECT_TYPE;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _KBUGCHECK_ADD_PAGES;
union _LSA_SID_NAME_MAPPING_OPERATION_INPUT;
struct _PNP_REPLACE_PROCESSOR_LIST_V1;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct _SECURITY_DESCRIPTOR;
struct _DBGKM_APIMSG64;
struct _EVENT_EXTENDED_ITEM_STACK_TRACE64;
struct KEY_PID_ARRAY;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
struct _RTL_HANDLE_TABLE_ENTRY;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
struct _EXTENDED_ENCRYPTED_DATA_INFO;
struct _RTL_HANDLE_TABLE;
struct _TP_POOL_STACK_INFORMATION;
struct _RTL_RESOURCE;
struct _WMI_EXTENDED_THREAD_INFORMATION64;
struct _HAL_PORT_RANGE_INTERFACE;
struct _WMIP_LEGACY_WORK_HEADER;
struct _WMIP_LEGACY_WORK_CALLBACK;
struct _SECURITY_SEED_AND_LENGTH;
struct _WDI_SEM_INFLIGHT_SCENARIO_INFO;
struct _HMAP_ENTRY;
struct _HMAP_TABLE;
struct _HMAP_DIRECTORY;
struct _GETSETBUSDATA;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
struct _CREATE_DISK_MBR;
struct _CREATE_DISK;
struct _TXFS_MODIFY_RM;
struct _X86_KSWITCHFRAME;
struct EVENTWORKCONTEXT;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
struct _ALPC_DATA_VIEW_ATTR;
struct MARK_HANDLE_INFO32;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
struct _SEP_RM_STATE;
struct _PERFINFO_PO_NOTIFY_DEVICE;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct _PO_WAKE_SOURCE_HISTORY;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _RTL_CONDITION_VARIABLE;
struct _PCC_INPUT_BUFFER;
struct _POINTER_SEARCH_PHYSICAL;
struct _FILE_NUMA_NODE_INFORMATION;
union _RTLP_SAFE_MACHINE_FRAME_ENTRY;
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
struct _MI_OVERLAPPED_FLUSH_ENTRY;
struct _PROCESS_DEVICEMAP_INFORMATION;
struct _PROCESS_WINDOW_INFORMATION;
struct _PERFINFO_CCSWAP_LITE;
union _MI_VA_DEPRIO_FLAGS;
struct _WMI_LOGGER_INFORMATION;
struct _PERFORMANCE_DATA;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct _POLICY_AUDIT_FULL_SET_INFO;
struct _EVENT_EXTENDED_ITEM_TS_ID;
struct _REG_CREATE_KEY_INFORMATION;
struct _WHEA_GENERIC_ERROR_DATA_ENTRY;
struct _IMAGE_OS2_HEADER;
struct _ALPC_MESSAGE_ATTRIBUTES;
struct tagSWITCH_CONTEXT_PLATFORM_DETAILS;
struct _PORT_DATA_INFORMATION;
struct _ALPC_HANDLE_ATTR;
struct _WDIP_SEM_SCENARIO_INSTANCE_INFO;
struct _IA64_KPROCESSOR_STATE;
struct _wfinddatai64_t;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
struct _WHEA_PSHED_INIT_PACKET;
struct _NPAGED_LOOKASIDE_LIST;
struct PROCESSOR_IDLESTATE_POLICY;
struct _DISK_GROW_PARTITION;
struct _CM_INDEX;
struct _MPIO_PASS_THROUGH_PATH;
struct _SYSTEM_BASIC_INFORMATION;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _CM_KEY_FAST_INDEX;
struct _VF_KE_CRITICAL_REGION_TRACE;
struct _TAPE_GET_STATISTICS;
struct _DISK_PERFORMANCE;
struct ANON_OBJECT_HEADER_V2;
struct _MUTANT_OWNER_INFORMATION;
struct _IOPNP_DEVICE_EXTENSION;
struct READ_USN_JOURNAL_DATA;
struct _MMEXTEND_INFO;
struct _FSRTL_MUP_CALLS;
struct _CM_INTENT_LOCK;
struct _PNP_RESOURCE_REQUEST;
struct _PROCESSORINFO;
struct _RTL_STACK_TRACE_ENTRY;
struct _HAL_PROFILE_SOURCE_INFORMATION;
struct HMENU__;
struct BEST_DOCK_TO_EJECT;
struct _PROCESS_IMAGE_INFO;
struct _MTRR_VARIABLE_BASE;
struct _TRACE_GUID_INFO;
struct _CM_HIVE_HANDLES;
struct _ETW_TP_EVENT_WORKER_NUMANODE_SWITCH;
struct _BCB_TRIM_NOTIFICATION_ENTRY;
struct _RANGE_LIST_ITERATOR;
struct HHOOK__;
struct _ALPC_LOG_ENTRY_SEND_MESSAGE;
struct HINSTANCE__;
struct _ALPC_COMPLETION_LIST;
struct _IO_REMOVE_LOCK;
struct _HAL_POWER_INFORMATION;
struct _PATHNAME_BUFFER;
struct _VACB_ARRAY_HEADER;
struct _RTL_GENERIC_TABLE;
struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT;
struct _CM_SYNC_POST_BLOCK;
struct _CM_ASYNC_USER_POST_BLOCK;
struct _CM_ASYNC_KERNEL_POST_BLOCK;
union _CM_POST_BLOCK_UNION;
struct _POOL_BLOCK;
struct _SYSTEM_LOOKASIDE_INFORMATION;
struct _MUTANT_BASIC_INFORMATION;
struct _stat64;
struct _SYSTEM_FILECACHE_INFORMATION;
struct _STACK_TRACE_DATABASE;
struct _FILE_FS_DEVICE_INFORMATION;
struct _KTM_RESTART_RECORD;
struct _DISK_DESCRIPTION;
struct _DISK_REGISTRY;
struct _ALPC_CONTEXT_ATTR;
struct _MEMORY_ALLOCATION_DESCRIPTOR;
struct _POLICY_LSA_SERVER_ROLE_INFO;
struct _FT_SYNC_INFORMATION;
struct _LPCP_PORT_ZONE;
struct _ALPC_LOG_ENTRY;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct _FXSAVE_FORMAT_WX86;
struct _MEMORY_REGION_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION_MBR;
struct _IOP_APC_HARD_ERROR_PACKET;
struct _FILE_LOCK;
struct _LEGACY_DEVICE_DETECTION_INTERFACE;
struct _SYSTEM_NUMA_INFORMATION;
struct tagSWITCH_CONTEXT_DATA;
struct _NFS_OPEN_ECP_CONTEXT;
struct _SE_ADT_ACCESS_REASON;
struct _KEY_NODE_INFORMATION;
struct _DISK_SNAPSHOT_INFO;
struct _DBGKM_APIMSG;
struct _DISK_CONFIG_HEADER;
struct ACPI_INTERFACE_STANDARD2;
struct tagSIZE;
struct _FS_FILTER_COMPLETION_STACK;
struct _FS_FILTER_CTRL;
struct _FREE_DISPLAY;
struct _DUAL;
struct _SET_DISK_ATTRIBUTES;
struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_2;
struct _IOP_HARD_ERROR_QUEUE;
struct _ENLISTMENT_CRM_INFORMATION;
struct _IOSPACE32;
struct _STORAGE_ALLOCATE_BC_STREAM_INPUT;
struct _KI_LOCAL_ARRAY4;
struct _CM_KEY_REFERENCE;
struct PPM_WMI_PERF_STATES_EX;
struct _DISK_CACHE_INFORMATION;
struct _LSA_TRANSLATED_SID;
struct _BATTERY_MANUFACTURE_DATE;
struct _IOP_PRIORITY_CALLBACK_PARAMETERS;
struct _IOP_BOOST_THREAD_PARAMS;
struct _PNP_DEVICE_EVENT_ENTRY;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct _MTRR_VARIABLE_MASK;
struct WMIOPENGUIDBLOCK;
struct _HAL_PLATFORM_TIMER_INFORMATION;
struct _ARBITER_ORDERING;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
struct _LOADER_HIVE_BLOCK;
struct WMILANGUAGECHANGE;
struct _EVENT_TRACE_SPINLOCK_INFORMATION;
struct _TP_DEBUG_FREE_INFO;
struct _SYM_DUMP_PARAM;
struct _REASSIGN_BLOCKS_EX;
struct _DISK_LOGGING;
struct POP_POWER_SETTING_CONFIGURATION;
struct _KI_LOCAL_ARRAY3;
struct _HIVE_ROUTINES;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _HAL_PROFILE_SOURCE_INFORMATION_EX;
struct _CMC_DRIVER_INFO;
struct _REASON_BUFFER;
struct _NVCACHE_REQUEST_BLOCK;
struct _CM_KEY_HASH;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct _MPIO_PASS_THROUGH_PATH32;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _ETW_APC_ENTRY;
struct _ETW_STACK_TRACE_BLOCK;
struct _IOSPACE_EX;
struct _ATA_PASS_THROUGH_DIRECT;
struct _EXT_MATCH_PATTERN_A;
struct _DBGKD_GET_STRING;
struct _PNP_REPLACE_DRIVER_INTERFACE;
struct _REINIT_PACKET;
struct _SEP_AUDIT_BOUNDS;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
struct _RTLP_PROCESS_REFLECTION_CONTEXT;
struct _BUS_INTERFACE_STANDARD;
struct _HARDWARE_COUNTER;
struct _MMIO_TRACKER;
struct _STORAGE_ADAPTER_DESCRIPTOR;
struct _DBGKD_DEBUG_IO;
struct _PS_STD_HANDLE_INFO;
struct _PNP_DEVICE_COMPLETION_REQUEST;
union _NP_LEAF_PTR;
struct _ETWP_EVENT_DATA;
struct _STDM_PARAMETERS;
struct _ST_PERSIST_CTX;
struct _HAL_MESSAGE_TARGET_REQUEST;
struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
struct ANON_OBJECT_HEADER_BIGOBJ;
struct _FILE_DISPOSITION_INFORMATION;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _WMI_PUSHLOCK;
struct _SE_IMPERSONATION_STATE;
struct _PERFINFO_CCSWAP;
struct _PERF_BIN;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
struct _CONTROLLER_OBJECT;
struct PCI_MSIX_CAPABILITY;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
struct _DISK_RECORD;
struct _RTL_UNLOAD_EVENT_TRACE64;
struct _SECURITY_DESCRIPTOR_HEADER;
struct _KNOWN_ACE;
struct _REQ_LIST;
struct _OBJECT_REF_STACK_INFO;
struct _PEB_LDR_DATA32;
struct _DISK_GEOMETRY;
struct NTFS_VOLUME_DATA_BUFFER;
struct _IOP_FOEXT_STREAM_ID_LIST;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
struct _ETW_REALTIME_CONNECT_CONTEXT;
struct MFT_ENUM_DATA;
struct _DISK_GEOMETRY_EX;
struct RANGE_USERDATA_HEADER;
struct PPM_WMI_IDLE_STATES;
struct _HEADLESS_CMD_POSITION_CURSOR;
struct _SRV_OPEN_ECP_CONTEXT;
struct POP_POWER_REQUEST_WORKITEM_CONTEXT;
struct POP_NOTIFY_WORK;
struct _KDPC64;
struct _TOKEN_MANDATORY_POLICY;
struct _LDR_VERIFY_IMAGE_INFO;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
struct _KNOWN_COMPOUND_ACE;
struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION;
struct _FILE_TYPE_NOTIFICATION_INPUT;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
struct _SEARCHMEMORY;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
struct _PS_CPU_QUOTA_SET_INFORMATION;
struct _MESSAGE_RESOURCE_DATA;
struct _PCW_REGISTRATION_INFORMATION;
struct _TRACE_LOGFILE_HEADER32;
struct _DEVPROPKEY;
struct _PREFETCH_OPEN_ECP_CONTEXT;
struct _Wx86ThreadState64;
struct _RM_COMMAND_MESSAGE;
struct _ETWP_HEADER_EXTENDED_DATA_ITEM;
struct _SYSTEM_REF_TRACE_INFORMATION;
struct _MOUNTMGR_CHANGE_NOTIFY_INFO;
struct _PCW_REGISTRATION;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _PCI_REGISTRY_INFO;
struct _PHYSICAL_DISK_RECORD;
struct _SYSDBG_TRIAGE_DUMP;
struct TM_RESTART_AREA;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _ImageArchitectureHeader;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _BOOTDISK_INFORMATION;
struct _OBJECT_HEADER_HANDLE_INFO;
struct _STORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_REQUEST;
struct IMAGE_COR20_HEADER;
struct _UNEXPECTED_INTERRUPT;
struct _GET_CURRENT_PROCESS_ADDRESS;
struct _PSP_STACK_ALLOCATION_STATE;
struct _TOKEN_ACCESS_INFORMATION;
struct _KD_LOG;
struct _KD_LOG_BUFFER;
struct _EFI_LOAD_OPTION;
struct _TARGET_DEVICE_NOTIFY_ENTRY;
struct _ACL_REVISION_INFORMATION;
union _HVLP_HYPERCALL_PAGE;
struct _MI_LARGEPAGE_MEMORY_INFO;
struct _RTL_STACK_CONTEXT;
struct _NOTIFY_CHANGE;
struct _ETW_HEAP_EVENT_SNAPSHOT;
struct _RTL_RXACT_CONTEXT;
struct _KEY_FLAGS_INFORMATION;
struct _RTL_HEAP_WALK_ENTRY;
struct _CM_VIDEO_DEVICE_DATA;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
struct _PERFINFO_MARK_INFORMATION;
struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
struct _SEP_OBJECT_TYPE_LABEL;
struct _SEP_RM_CONNECT_INFO;
struct _PROCESS_HEAP_INFORMATION;
struct _HEAP_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
struct _RTL_PROCESS_HEAPS;
struct _HEAP_REGION_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _HEAP_INFORMATION_ITEM;
struct _RTL_HEAP_TAG;
struct IOREGION;
struct _wfinddata64_t;
struct _RTL_HEAP_ENTRY;
struct _DUMP_MDL;
struct _IOBJECT_TYPE_LIST;
struct _EMP_LOGIC_NODE;
struct _CM_KCB_REMAP_BLOCK;
struct _AUTHZBASEP_SECURITY_ATTRIBUTE_QUERY;
struct in_addr;
struct _EMP_RULE_PARSER_STACK_ELEMENT;
struct _RM_REPLY_MESSAGE;
struct _SEP_LOGON_SESSION_TERMINATED_NOTIFICATION;
struct _SEP_MANDATORY_INFORMATION;
struct _RTL_DEBUG_INFORMATION32;
struct _HEADLESS_CMD_PUT_STRING;
struct _WDIP_SEM_EVENT_INFO;
struct _CLFS_MGMT_POLICY;
struct _SEP_LOGON_SESSION_REFERENCES;
struct _RTL_CRITICAL_SECTION32;
struct HBRUSH__;
struct _KNOWN_OBJECT_ACE;
struct _EMP_TARGET_RULE;
struct _CHILD_LIST;
struct _CM_KEY_NODE;
struct _CM_KEY_VALUE;
struct _CM_KEY_SECURITY;
struct _CM_KEY_INDEX;
struct _CM_BIG_DATA;
union _u;
struct _CELL_DATA;
struct SEP_RM_CONNECT_INFO;
struct _EMP_RULE_NOTIFY;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
struct HFONT__;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct _DB_HEADER;
struct _PSP_SYSTEM_DLL;
struct _PSP_SYSTEM_DLL_DATA;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct _UMS_APC_CONTEXT;
struct _SEP_AUDIT_DISCARDED_WORK_ITEM;
struct tagSWITCH_CONTEXT_ATTRIBUTE;
struct _FSRTL_PER_FILE_CONTEXT;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES;
struct _MMSUBSECTION_FLAGS;
struct _MMSUBSECTION_NODE;
struct _MM_SUBSECTION_AVL_TABLE;
struct _IO_SCSI_CAPABILITIES;
struct _DRIVERSTATUS;
struct _SENDCMDOUTPARAMS;
struct _DISK_COPY_DATA_PARAMETERS;
struct _IOP_COMPLETION_OBJECT;
struct _CM_TRANS;
struct _ALPC_MESSAGE_LOG;
struct _HISTOGRAM_BUCKET;
struct _WDIP_SEM_FREQUENT_SCENARIO_TABLE;
struct _WDI_SCENARIO_INFO;
struct _stat;
struct tagFILEINFOCHAINITEM;
struct _GET_DISK_ATTRIBUTES;
struct _PCW_COUNTER_DESCRIPTOR;
struct _SYSCFG;
struct _ONE_RANGE;
struct _FIND_INFO;
struct _IOP_FOEXT_IOSB_RANGE;
struct _MOUNTMGR_DRIVE_LETTER_INFORMATION;
struct _WDI_SEM_ACTION_INFO;
struct sockaddr_storage;
union _MI_CREATE_SECTION_FLAGS;
struct _MMVAD;
struct _DUMMY_FILE_OBJECT;
struct _STORAGE_PROPERTY_QUERY;
struct _MOUNTMGR_TARGET_NAME;
struct _PNPR_MAPPING_RESERVE;
struct _ATA_PASS_THROUGH_DIRECT32;
struct _HEADLESS_CMD_ENABLE_TERMINAL;
struct _div_t;
struct _SENDCMDINPARAMS;
struct _DRIVE_LAYOUT_INFORMATION_EX;
struct _OPEN_PACKET;
struct _KINTERRUPT_PAGE;
struct _MMWORKING_SET_EXPANSION_HEAD;
struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_1;
struct _EOF_WAIT_BLOCK;
struct _MOUNTMGR_CREATE_POINT_INPUT;
struct stat;
struct _DUMP_CONTROL_BLOCK;
struct _DRIVER_INFORMATION;
struct _IO_WORKITEM;
struct _LARGE_MCB;
struct _MCB;
struct _HEADLESS_CMD_SET_BLUE_SCREEN_DATA;
struct _RTL_SMART_LBLOB_WRITING_CONTEXT;
struct _IOP_FILE_OBJECT_EXTENSION;
struct _ldiv_t;
struct _IOP_HARD_ERROR_PACKET;
struct _LOAD_PACKET;
struct _CRT_FLOAT;
struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA;
struct _ERROR_LOG_ENTRY;
struct _LDBL12;
struct _IOP_RESERVE_IRPS;
struct _MOUNTMGR_VOLUME_PATHS;
struct _VACB;
struct _KALPC_REGION;
struct TM_LOGREC_ENLISTMENT_VISTA;
struct _SHARED_CACHE_MAP_LIST_CURSOR;
struct _VACB_LEVEL_REFERENCE;
struct _CC_TEST_EVENT;
struct VACB_LEVEL_ALLOCATION_LIST;
struct _FT_SPECIAL_READ;
union _HVLP_FLAGS;
struct WMIQADMULTIPLE;
struct _PENDING_SET_INTERFACE_STATE;
struct _PI_RESOURCE_TRANSLATOR_ENTRY;
struct _BLOB_TYPE;
struct _ALPC_SECURITY_ATTR32;
struct _PCW_MASK_INFORMATION;
struct _ALPC_CONTEXT_ATTR32;
struct _BLOB;
struct _BUS_EXTENSION_LIST;
struct _ALPC_COMPLETION_PACKET_LOOKASIDE;
struct _WDIP_SEM_ENABLE_DISABLE_INFO;
struct _KALPC_VIEW;
struct _WDIP_SEM_PROVIDER_TABLE;
struct _KALPC_SECTION;
struct _count_string;
struct _ALPC_PORT;
struct _DRIVER_LIST_ENTRY;
struct _ALPC_COMMUNICATION_INFO;
struct _IRPLOG_SNAPSHOT;
struct _ALPC_MESSAGE_ZONE;
struct _MI_LARGEPAGE_MEMORY_RUN;
union SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT_STORE_COUNT;
struct _KALPC_MESSAGE_ATTRIBUTES;
struct _KALPC_MESSAGE;
struct _KALPC_RESERVE;
struct _KALPC_SECURITY_DATA;
struct _value;
struct _MUP_REDIRECTOR_REGISTRATION;
struct _ALPC_LOG_ENTRY_WAIT_FOR_NEW_MESSAGE;
struct _ALPC_HANDLE_ATTR32;
struct PTRCACHE;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION32;
struct _VI_REMLOCK_SURROGATE;
struct _ALPC_LOG_ENTRY_UNWAIT;
struct _ALPC_MESSAGE_SNAPSHOT;
struct _MTRR_CAPABILITIES;
struct _REQUEST_SUMMARY;
struct _MI_DYNAMIC_RELOCATIONS;
struct _ALIGNED_AFFINITY_STRUCT;
struct _PCW_BUFFER;
struct _BREAKPOINT_ENTRY;
struct _WDIP_SEM_SCENARIO_INFO;
struct tagSDBENTRY;
struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::INDEX_ENTRY;
struct _PCW_COUNTER_INFORMATION;
union _PCW_CALLBACK_INFORMATION;
struct _RTL_NORMALIZATION;
struct _ETW_PROVIDER_TABLE_ENTRY;
struct _KD_REMOTE_FILE;
struct _KI_WAIT_STATS;
struct _LOADER_DEBUGGER_BLOCK;
struct _ALIGNED_AFFINITY_SUMMARY;
struct _KD_CONTEXT;
union _KBUGCHECK_ACTIVE_STATE;
struct _ALIGNED_SPINLOCK_STRUCT;
struct _PCW_DATA;
struct _WMIP_SYNCHRONOUS_ETW_WORK;
struct _CHUNKINFO;
struct _SM_STORE_CACHE_BACKED_PARAMS;
struct _VI_ERROR_DESCRIPTION;
struct CREATETHREADWORKITEM;
struct _INDEX_INFO;
struct _RTL_NORM_BUFFER;
struct tagSDBDATABASEINFO;
struct _PI_CRITICAL_QUERY_CONTEXT;
struct ADJUST_INTERRUPT_TIME_CONTEXT;
struct DBGKD_INTERNAL_BREAKPOINT;
struct _KCALLOUT_STACK_CONTEXT;
struct _BCD_ELEMENT_DESCRIPTION;
struct _BCDI_ELEMENT;
struct _TRACE_DATA_SYM;
struct _JOB_WORKING_SET_CHANGE_HEAD;
union _KCACHE_ERRATA_MONITOR;
struct _KCACHE_MONITOR_ENTRY;
struct _KCACHE_MONITOR_HEADER;
struct _ALIGNED_EX_SPINLOCK_STRUCT;
struct _OBP_LOOKUP_CONTEXT;
struct _STACK_TABLE;
struct _OBJECT_REF_TRACE;
union ALIGNEDNAME;
struct _SESSION_OBJECT;
struct _OBJECT_NAMESPACE_ENTRY;
struct _IMAGE_SECURITY_CONTEXT;
struct _MI_IMAGE_SECURITY_REFERENCE;
struct _OBJECT_REF_INFO;
struct _RTL_HASH_TABLE_ITERATOR;
struct _MMVAD_SHORT;
struct _OBP_SYSTEM_DOS_DEVICE_STATE;
struct _OBP_SWEEP_CONTEXT;
struct _AWEINFO;
struct WMIQSIMULTIPLE;
struct _HVLP_FAST_HYPERCALL_INPUT_PARAMETERS;
struct tagInstanceSet;
struct _VER_STRINGS;
struct _HEADLESS_RSP_POLL;
struct _ALPC_VIEW_SEARCH_CONTEXT;
struct _ETW_WMITRACE_WORK;
struct _MMPFNENTRY;
struct _MMPFN;
struct _HEADLESS_RSP_REBOOT;
struct _BCDE_INTEGER_LIST;
struct _ETWP_NOTIFICATION_HEADER;
struct _ETW_ENABLE_NOTIFICATION_PACKET;
struct _ETW_DEBUGGER_DATA;
struct _LKMD_CALLBACK;
struct _HEADLESS_RSP_GET_LINE;
struct _ETW_LOGGER_HANDLE;
struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
struct _ETW_REALTIME_CONSUMER;
struct _ETW_LOCKING_EVENT_ENTRY;
struct _ETW_LOCK_HANDLE;
struct MOFRESOURCE;
struct _ETW_BUFFER_HANDLE;
struct _HEADLESS_CMD_DISPLAY_LOG;
struct _DECODE_ENTRY;
struct _HEADLESS_CMD_ADD_LOG_ENTRY;
struct _CONTROL_AREA;
struct _ETW_POOLTAG_FILTER;
struct _DISK_EXTENT;
struct _VOLUME_DISK_EXTENTS;
struct IlFrame;
struct _ETW_ACTIVITY_ID;
struct _ETW_SPINLOCK_TRACE_BLOCK;
struct _ETW_TRACING_BLOCK;
struct _TRIPLE_LIST_ENTRY32;
struct _TRIPLE_LIST32;
struct _MI_READ_LIST_ENTRY;
struct _MI_READ_LIST;
struct _ETW_LOGFILE_HEADER;
struct _MI_SUBSECTION_REFS;
struct _KI_UPDATE_NUMBER_PROCESSORS_CONTEXT;
struct _MTRR_RANGE;
struct WMIOPENGUIDBLOCK32;
struct _WDI_SEM_SCENARIO_TABLE;
struct TUNNEL_NODE;
struct SHUTDOWN_WORK_ITEM;
struct _ETW_REG_ENTRY;
struct _MI_SECTION_SLUSH;
struct _FSRTL_FLTMGR_CALLS;
struct _ETW_GUID_ENTRY;
struct _EVENT_EXTENDED_DATA_TS_ID;
struct _ETW_ENABLE_FLAG_MAP;
struct _EVENT_EXTENDED_DATA_TRANSFER;
struct _PHARLAP_CONFIG;
struct _ETW_PROVIDER_REGISTRATION_PACKET;
struct _HEADLESS_CMD_SEND_BLUE_SCREEN_DATA;
struct _ETW_REALTIME_DISCONNECT_CONTEXT;
struct tagLANGANDCODEPAGE;
struct _ETW_QUEUE_ENTRY;
struct _HAL_VERIFIER_BUFFER;
struct _ETW_DATA_SOURCE;
struct _TAG_INFO;
struct _ETW_RECEIVE_REPLY;
struct _HHIVE;
struct _EX_WORKER_FACTORY;
struct _section;
struct _IOP_POOL;
struct SMBIOS_EVENTLOG_INFO;
struct _MI_STACK_STEAL;
struct _NOTIFY_ENTRY_HEADER;
struct CMP_OFFSET_ARRAY;
struct _RTL_RANGE;
union _MI_FLAGS;
struct _SM_STRMGR_DBG_DELAY_TIME;
struct _HBASE_BLOCK;
struct _WHEAP_STATUS;
struct _PNP_PROVIDER_INFO;
struct _SMC_PERSIST_STORE_INFO;
struct _CM_VIEW_OF_FILE;
struct _CM_WORKITEM;
struct _CMHIVE;
struct _CRASHDMP_KERNEL_DATA;
struct _SMKM_EVENT_DESCRIPTOR;
struct _CM_KEY_HASH_TABLE_ENTRY;
struct _RTL_RANGE_LIST;
struct _PORT_ARBITER_EXTENSION;
struct _CM_KEY_SECURITY_CACHE_ENTRY;
struct _BCDE_INTEGER;
struct _CM_KEY_SECURITY_CACHE;
struct _CACHED_CHILD_LIST;
struct _CM_KEY_CONTROL_BLOCK;
struct _COLORED_PAGE_INFO_HEADER;
struct _CM_NAME_HASH;
struct _CM_NAME_CONTROL_BLOCK;
struct _LEGACY_FLOAT_VALUE;
struct _PSP_CREATE_PROCESS_CONTEXT;
struct _PNP_REPLACEABLE_UNIT;
struct _PNP_REPLACE_TIMING;
struct _PNP_REPLACE_CONTEXT;
struct _CM_KEY_BODY;
struct decode_info;
struct _CM_NOTIFY_BLOCK;
struct _CM_RM;
struct DOCK_INTERFACE;
struct _TEMP_ARRAY_ELEMENT;
struct _CM_KCB_UOW;
struct _POP_SHUTDOWN_DELAYED_TRIGGER;
struct _PNP_VETO_PROCESS_INFO;
struct _CM_CELL_REMAP_BLOCK;
struct _AUTHZBASEP_SECURITY_ATTRIBUTE;
struct _REQ_ALTERNATIVE;
struct tagSWITCH_CONTEXT;
struct _CM_PARSE_CONTEXT;
struct _CM_NAME_HASH_TABLE_ENTRY;
struct _RECTL;
struct CM_LOGREC_BIG_RECORD;
struct _wfinddata64i32_t;
struct HGLRC__;
struct _POINTL;
struct HLSURF__;
struct _NONOPAQUE_OPLOCK;
struct _CLFS_MGMT_CLIENT_REGISTRATION;
struct _PNPR_RESOURCE_CONTEXT;
struct HANDLE_ENUM_CONTEXT;
struct _BCD_OBJECT;
struct _MI_STORE_INPAGE_COMPLETE_FLAGS;
struct _MMMOD_WRITER_LISTHEAD;
struct HUMPD__;
struct _CLFS_MGMT_NOTIFICATION;
struct tagPOINTS;
struct _HIVE_LIST_ENTRY;
struct _EMP_ENTRY_BLOCK;
struct _HCELL;
struct HENHMETAFILE__;
struct _CM_CACHED_VALUE_INDEX;
struct LanguageNameDataType_tag;
struct _MMCLONE_DESCRIPTOR;
struct HWINEVENTHOOK__;
struct _HOTPATCH_MODULE_DATA;
struct _ADD_CONTEXT;
struct HTASK__;
struct tagVERBLOCK;
struct HWINSTA__;
struct RENAME_UOW_CONTEXT_;
struct HMONITOR__;
struct EXP_INITIALIZE_GLOBAL_CALLBACKS;
struct CMP_CHECK_REGISTRY_STACK_ENTRY;
struct _BOOT_DRIVER_NODE;
struct CM_SET_KEY_USER_FLAGS_LOGREC;
struct HWND__;
struct TM_LOGREC;
struct _FREE_HBIN;
struct _IO_QUERY_DESC;
struct _CM_KNODE_REMAP_BLOCK;
struct TM_LOGREC_WS08;
struct _SEARCH_AND_DEREF_CONTEXT;
union _KEY_VALUE_INFORMATION;
struct _ARBITER_ALTERNATIVE;
struct _CM_CACHED_VALUE;
struct tagPOINT;
union _KEY_INFORMATION;
struct _HV_TRACK_CELL_REF;
struct HACCEL__;
struct tagSWITCH_CONTEXT_CREATE_PARAM;
struct _IMAGE_ENTRY_IN_SESSION;
struct _STORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_RESPONSE;
struct HKEY__;
struct _BCD_GUID_CACHED_VALUES;
struct CM_SET_LAST_WRITE_TIME_LOGREC;
struct _MSAcpiInfo;
struct _PNP_REMOVAL_WALK_CONTEXT;
struct _IOP_RESERVED_RESOURCES_RECORD;
struct HSPRITE__;
struct HPEN__;
struct _stati64;
struct CM_RENAME_KEY_LOGREC;
struct _wfinddata32_t;
struct _MI_FLUSH_RANGE;
struct tm;
struct _NP_CMHIVE;
struct HDESK__;
struct HMETAFILE__;
struct HBITMAP__;
struct _CM_WRITE_BLOCK;
struct _VI_FAULT_APPLICATION_NAME;
struct tagRECT;
struct CM_SET_SECURITY_DESCRIPTOR_LOGREC;
struct HCOLORSPACE__;
struct _CM_POST_BLOCK;
struct _VERIFIER_THUNKS;
struct HSTR__;
struct _HOTPATCH_MODULE_ENTRY;
struct _CM_DELAY_ALLOC;
struct _wfinddata32i64_t;
struct HDC__;
struct _stat64i32;
struct HPALETTE__;
struct _EXP_LICENSE_INFO;
struct _KTMNOTIFICATION_REQUEST_PACKET;
struct _KTMFREEZE_THAW;
struct TM_LOGREC_VISTA;
struct TM_LOGREC_ENLISTMENT;
struct TM_LOGREC_RM_DESCRIPTION;
struct _DEVICE_CLASS_NOTIFY_ENTRY;
struct _TREE_ENTRY;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT;
struct _PENDING_RELATIONS_LIST_ENTRY;
struct _EX_RUNDOWN_WAIT_BLOCK;
struct _HV_REFRESH_BIN_MAP;
struct _ARBITER_ALLOCATION_STATE;
struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::SEARCH_RESULT;
struct _SMC_STORE_ENTRY;
struct _ST_ETA_CONTEXT;
struct OBJECT_EVENT_INFO;
struct _SEP_FILE_SYSTEM_NOTIFY_CONTEXT;
struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE;
struct _GEN_ADDR;
struct _SERIAL_PORT_IDENTIFIER;
struct _LOCATE_IDENTIFIER;
struct _BOOT_ENVIRONMENT_DEVICE;
struct _PNP_DEVICE_ACTION_ENTRY;
struct _PNP_DEVICE_EVENT_LIST;
struct _PNP_DEVICE_REFERENCE;
struct _PNP_ASSIGN_RESOURCES_CONTEXT;
struct _REQ_DESC;
struct _ALT_RESOURCE_MODULE;
struct _PNP_DIAGNOSTIC_COMPLETION_CONTEXT;
struct _DEFERRED_REGISTRATION_ENTRY;
struct _SQM_STREAM_ENTRY;
struct _REGISTRATIONWORKITEM;
struct _PNPR_MEMORY_BITMAP_ENTRY;
struct _ASYNC_TDC_WORK_ITEM;
struct PLUGPLAY_CONTROL_HANDLER_DATA;
struct _START_CONTEXT;
struct _MMVIEW;
struct _PNP_REPLACE_ARGUMENTS;
struct _RTL_CHASH_TABLE;
struct DIRWALK_ENTRY;
struct _ETW_RESERVED_BUFFER_INFO;
struct _ETW_RESERVED_BUFFERS;
struct _ETW_SESSION_INFO;
struct _cm_token;
struct BcFrame;
struct _PSP_USER_APC_RESERVE;
struct _DUMP_STACK_IMAGE;
struct _CpuContext_amd6432;
struct PROCESS_DRIVER_CONTEXT;
struct _SYSID_TABLE_ENTRY;
struct _OB_TEMP_BUFFER;
struct _JOB_WORKING_SET_CHANGE_RECORD;
struct _RTL_UCSCHAR_DECODER_RETURN_VALUE;
union _PSP_GLOBAL_FLAGS;
struct CLEAR_PROBLEM_CONTEXT;
struct _LOCK_QUEUE;
struct _LOCK_INFO;
struct _MMPTE_EXPANDED_FLUSH_LIST;
struct _MI_PAGEFILE_TRACES;
struct _COLORED_PAGE_INFO;
struct _SYSID_EPS_HEADER;
union _BCD_UNPACKED_OBJECT_TYPE;
struct _SUBSECTION;
struct _SEGMENT;
struct _EMP_CALLBACK_LIST_ENTRY;
struct _MI_SECTION_CREATION_GATE;
struct _MSUBSECTION;
struct _MI_REVERSE_VIEW_MAP;
struct _MI_SYSTEM_CACHE_IMAGE;
struct _MI_COLOR_BASE;
struct _MMPAGING_FILE;
struct _DELAY_ACK_FO;
struct _MMMOD_WRITER_MDL_ENTRY;
struct _UUID_GENERATE;
struct _MI_CAPTURED_OPTIONAL_HEADER;
struct _MI_PREFETCH_VA_LIST;
struct _MI_CREATE_IMAGE_SECTION_FLAGS;
struct _BCDE_OBJECT;
union _DL_EUI48;
struct _EMP_RULE_LIST_ENTRY;
struct _EMP_NODE_LINK;
struct _EMP_CALLBACK_DB_RECORD;
struct _EMP_RULE_DB_RECORD;
struct _EMP_CLIENT_NOTIFICATION_HANDLE;
struct _WHEAP_INFO_BLOCK;
struct _MTRR_INFO;
struct _WDIP_SEM_PROVIDER_ENTRY;
struct tagVS_FIXEDFILEINFO;
struct _RESOURCE_DATAW;
struct _PROCESSOR_INFORMATION;
struct _XSAVE_TEST_FEATURE;
struct POP_MCB_CONTEXT;
struct HIBER_WRITE_PAGES_LOCALS;
struct _MI_LARGE_PAGE_DRIVER_ENTRY;
struct tagDATASOURCE;
struct _OBP_FIND_HANDLE_DATA;
struct WMITRACE_NOTIFY_HEADER;
struct _EX_HOST;
struct _ROOT_ENUMERATOR_CONTEXT;
struct _SMBIOS_SYSTEM_INFORMATION_STRUCT;
struct tagIMAGEFILEDATA;
struct _CRASHDMP_CALL_TABLE;
struct _DB;
struct _MI_FLUSH_ARRAY;
struct tagSDBCONTEXT;
struct _VI_FAULT_POOL_TAG;
struct _VERIFIER_THUNKS_ORDER_DEPENDENT;
struct _EX_LOCK;
struct _CM_CALLBACK_OBJECT_CONTEXT;
struct _SM_STORE_CONTENTS_UPDATE_RANGE;
struct _SM_READYBOOT_PLAN;
struct _HEADLESS_BLUE_SCREEN_DATA;
struct _MI_STORE_WRITE_SUPPORT;
struct _EMP_PROVIDER_HANDLE;
struct _VOLUME_DEVICE_OBJECT;
struct tagSEARCHDBCONTEXT;
struct tagEXE_ENTRY_INFO;
struct _WPP_TRACE_CONTROL_BLOCK;
union WPP_PROJECT_CONTROL_BLOCK;
struct _MI_DRIVER_VA;
struct _KEYED_EVENT_BUCKET;
struct _KEYED_EVENT_OBJECT;
struct _RTL_PATCH_HEADER;
struct _HOTPATCH_HEADER;
struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>;
struct _WHEAP_WORK_QUEUE;
struct _SMC_CACHE;
struct _WHEAP_ERROR_SOURCE;
struct _SMKM_REGION_EXTENT;
struct _MI_FORK_MAPS;
struct _ST_IO_TIMER;
struct _SM_STORE_PARAMETERS;
struct _CRASHDMP_DUMPBLOCK;
struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::ITERATOR;
struct _BCDE_OBJECT_LIST;
struct COVCONTEXTINFO;
struct _MI_NODE_INFORMATION;
struct _DUMP_STRING;
struct _DUMP_DRIVER_ENTRY64;
struct _KFLUSH_RANGE_CONTEXT;
struct tagSTOREDCACHE;
struct _MMPTE_SINGLE_FLUSH_LIST;
struct _FILE_SYSTEM_RECOGNITION_STRUCTURE;
struct _FILE_IMAGE;
struct _BCD_OBJECT_DESCRIPTION;
struct _BCDE_BOOLEAN;
struct ACPI_E820_ENTRY;
struct _VI_DEVOBJ;
struct SM_TRAITS::SMST_MEMORY_STORE_SUPPORT;
struct _DMIBIOS_TABLE_HEADER;
struct _DECODE_CONTEXT;
struct DEVICE_SERVICE_ITERATOR_CONTEXT;
struct _PF_LOG_ENTRY;
struct _PFSN_LOG_ENTRIES;
struct tagGUIDENTRY;
struct _MI_VIEW_INFO;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_FE_SEARCH_RESULT;
struct tagFILEINFORMATION;
struct _FS_FILTER_RESERVE;
struct _BCD_ELEMENT;
struct _RTLP_VERSION_INFO;
struct POP_LOCAL_CONTEXT;
struct _SM_STATS_REQUEST;
struct _line;
struct _RTL_HASH_TABLE;
struct _AUTHZBASEP_SECURITY_ATTRIBUTE_VALUE;
struct _RTL_HASH_ENTRY;
struct _UUID_CACHED_VALUES_STRUCT;
struct IRP_MAJOR_VERIFIER_ROUTINES;
struct CMP_COPY_STACK_ENTRY;
struct _IOP_ERROR_LOG_CONTEXT;
struct _XMM_SAVE_AREA32;
struct _TP_CALLBACK_ENVIRON;
struct _WHEA_ERROR_PACKET;
struct WMIMOFLIST;
struct _POP_DYNAMIC_IRP_WORKER;
struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::INDEX_ENTRY;
struct ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY;
struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE;
struct _MAPPING_TABLE;
struct _SYSID_1394;
struct WMIGUIDLISTINFO;
struct WMIQUERYGUIDINFO;
struct _POP_PPM_PERF_DISTRIBUTION_DATA;
struct WHEAWMIGUIDREGINFO;
struct _SEVALIDATEIMAGE_CALLBACKS;
struct _RTLP_RANGE_LIST_ENTRY;
struct _NORM_TABLES_HEADER;
struct _DRIVER_SPECIFIED_VERIFIER_THUNKS;
struct _WMILIB_INFO;
struct _SH_LOCK;
struct _CM_THAW_SIGNAL_BLOCK;
struct _DPC_ENTRY;
struct context;
struct IRPCOMPCTX;
struct _PSP_ACL_INFO;
struct _AEL_REQUEST_MESSAGE;
struct _RESCDHEADER;
struct _WAITING_LOCK;
struct _HEAP_ENTRY_EXTRA;
struct _VI_TARGET_COUNTERS_PARAMETERS;
struct _POP_IRP_WORKER_ENTRY;
struct _GLYPH_DATA;
struct _RTL_ATOM_TABLE_ENTRY;
struct _HARDDRIVE_DEVICE_PATH;
struct _PTE_TRACKER;
struct _OBJECT_TYPE_ARRAY;
union _PFP_ENTRY_INFO_KEY;
struct _PF_ENTRY_INFO_FILE;
struct _PF_ENTRY_INFO_PROCESS;
struct _PF_ENTRY_INFO_VOLUME;
union _PF_ENTRY_INFO;
struct _PFP_ENTRY_INFO_HASH_ITEM;
struct _PFNL_DELETE_ENTRY_INFO;
struct _EX_WFC;
struct _ETW_UMGL_CONTEXT;
struct _FONT_DATA;
struct _EBLC_LINE_METRICS;
struct _SM_CACHE_STATS;
struct _SMC_STORE_DELETE_REQUEST;
struct _ST_STATS_SPACE_BITMAP;
struct _POOL_BLOCK_HEAD;
struct TMP_OBJ_SECURITY_INFO;
struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::SEARCH_RESULT;
struct NP_CONTEXT::NP_CALLBACKS;
struct NP_CONTEXT::_NP_PARAMETERS;
struct NP_CONTEXT;
struct _HEADLESS_LOG_ENTRY;
struct _LZNT1_FRAGMENT_WORKSPACE;
struct NP_CONTEXT::NP_CTX;
struct sockaddr;
struct _PFP_PREFETCH_REQUEST_RANGE;
struct NLS_MAIN_TABLE_OFFSET;
struct _DRIVE_MAPPING;
struct _ACPI_BIOS_MULTI_NODE;
struct CcFrame;
struct _VI_DEADLOCK_STATE;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct _SMCR_ENCRYPT_CONTEXT;
struct _SM_STORE_EMPTY_REQUEST;
struct DcFrame;
struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>;
struct _SM_DELETE_REQUEST;
struct _SMKM_IO_STREAM;
struct _SMKM_IO_STREAM_CTX;
struct _SMKM_STORE_ADD_PARAMS;
struct _HEAP_USERDATA_HEADER;
struct _ST_IO_STATS_PERIOD;
struct _ST_IO_COUNTS;
struct _SM_LOG_REQUEST;
struct _SM_PAGE_KEY_DESCRIPTOR;
union _SM_LOG_ENTRY_FLAGS;
struct _SM_LOG_ENTRY;
struct _CRYPT_PROPERTY_REF;
struct _STORE_INFORMATION;
struct _B_TREE_NODE_STATS;
struct _SMC_CACHE_PERSIST_REQUEST;
struct _ST_PROPERTIES;
struct _SMC_STORE_CREATE_REQUEST;
struct _KNODE::_flags;
struct _SM_REGISTRATION_INFO;
struct _SM_REGISTRATION_REQUEST;
struct _PF_ROBUST_FILE_ENTRY;
struct _ST_IO_STATS;
struct _SMKM_KEY_ENTRY;
struct DUMMY_LOCK;
struct _SM_CACHE_STATS_REQUEST;
struct _HEAP_FREE_ENTRY_EXTRA;
struct _MI_QUEUED_DEADSTACK;
struct _SM_STORE_FILE_TOC_ENTRY;
struct _SM_STORE_PERSIST_ENTRY;
struct _SM_PERSISTENCE_ID;
struct _SM_STORE_UNPERSIST_PARAMS;
union _PSP_IFEO_NODE_OPTIONS;
struct _MI_ALLOCATION_DESCRIPTOR;
struct _MM_ALLOCATION_DESCRIPTOR;
struct _ACPI_BIOS_INFORMATION;
struct _ST_STATS_REGION_SPACE;
struct _RTL_ACQUIRE_STATE;
struct _ST_ETA_ESTIMATE;
struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>;
struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::INDEX_ENTRY;
struct ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY;
struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE;
struct _PNP_PARENT_KEY;
struct _RTL_NORMALIZATION_LOCK;
union _PSP_NOTIFY_ROUTINES;
struct _SMC_CACHE_LIST_REQUEST;
struct _SM_STORE_PERSIST_REQUEST;
struct _BITMAPINFOHEADER;
struct _SM_FP_CONFIG_ENTRY;
struct B_TREE_DUMMY_NODE_POOL;
struct B_TREE_DUMMY_NODE_POOL::NP_CTX;
struct B_TREE_NODE_HDR;
union _SM_PAGE_ADD_PARAM;
struct _SM_PAGE_REQUEST;
struct _SMC_CACHE_CREATE_PARAMETERS;
struct _ST_LATENCY_ENTRY;
struct _SMC_CACHE_STATS;
struct _SMC_CACHE_STATS_REQUEST;
struct _ST_DATA_MGR_STATS;
struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>;
union _SMKM_IO_STREAM_RESULT;
struct _HEAP_LOOKUP_ENTRY;
struct _IOPERF_COMPLETION_CONTEXT;
struct _XIP_BOOT_PARAMETERS;
struct tagSHIMCACHEWORKITEM;
struct _ST_STATS;
struct _SM_REGION;
struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>;
struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY;
struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::SEARCH_RESULT;
struct ST_STORE<SM_TRAITS>::_ST_STAGING_REGION;
struct ST_STORE<SM_TRAITS>::_ST_META_KEY;
struct ST_STORE<SM_TRAITS>::_STNP_CONTEXT;
struct _STFP_BUFFER;
struct ST_STORE<SM_TRAITS>::_ST_DATA_MGR;
struct ST_STORE<SM_TRAITS>::_ST_DEVICE_HEALTH_STATS;
struct _ST_LATENCY_CTX;
struct ST_STORE<SM_TRAITS>::_ST_STATS_CTX;
struct ST_STORE<SM_TRAITS>::_ST_PERSIST_STATE;
struct ST_STORE<SM_TRAITS>;
struct SMKM_STORE<SM_TRAITS>;
struct tagAHCACHESERVICEDATACACHE;
struct _PFSN_TRACING_STATE_TIMER;
union ST_STORE<SM_TRAITS>::_ST_REGION_STATE;
struct VERIFIER_EXTENSION;
struct positional_param;
struct _PF_EVENT_PROCESS_EXIT;
struct CultureIndexByName;
struct _POP_WAKE_SOURCE;
struct _VI_CTX_ISR_CONTEXT;
struct _GLYPH_POINT;
struct _MAP_REGISTER;
struct _MAP_REGISTER_FILE;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct _LONG_HORIZONTAL_METRIC;
struct _HAL_VERIFIER_LOCKED_LIST;
struct _VF_WAIT_CONTEXT_BLOCK;
struct _ADAPTER_INFORMATION;
struct _HEAP_ENTRY;
struct _KERNSNAP_APC_CONTROL;
struct _KERNSNAP_APC;
struct _HEAP_PSEUDO_TAG_ENTRY;
struct _SMC_CACHE_DELETE_REQUEST;
struct _PFS_LOG_ENTRY_EVENT;
struct _SMKM_WORK_ITEM;
struct _SM_CREATE_REQUEST;
struct _SMC_VOLUME_ARRIVAL_CONTEXT;
struct _MI_STORE_EVICT_THREAD_PARAMS;
struct B_TREE_DBG_NODE_POOL;
struct SaFrame;
struct B_TREE_DBG_NODE_POOL::NP_CTX;
struct _VF_ADDRESS_RANGE;
struct _VI_DEADLOCK_GLOBALS;
struct _ST_ETW_CORRUPTION_FLAGS;
struct LscFrame;
struct _VI_DEADLOCK_NODE;
struct _VI_DEADLOCK_THREAD;
struct EhFrame;
struct _EXP_SL_KMEM_LIST_ELEM;
struct _INTERLOCK_SEQ;
struct _PFBL_GLOBALS;
struct _HEAP_STOP_ON_TAG;
struct PF_EVENT_HARD_FAULT_TIMESTAMP;
struct _LZNT1_STANDARD_WORKSPACE;
struct _GS_HANDLER_DATA;
struct _LZNT1_MAXIMUM_WORKSPACE;
struct _B_TREE_STATS;
struct CbFrame;
struct SM_TRAITS;
union SMKM_STORE_MGR<SM_TRAITS>::_SM_FE_CHECK_PRESENT_BITMAP;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_QUEUE_CONTEXT;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_EVICT_CALLBACK_CONTEXT;
struct KoFrame;
struct SMKM_STORE_MGR<SM_TRAITS>::_SM_PREREAD_CALLBACK_CONTEXT;
struct _EXLOCK;
struct BeFrame;
struct _SMST_PARAMETERS;
struct _PF_LIST_ENTRY;
struct ST_STORE<SM_TRAITS>::_ST_DEBUG_LOG;
struct ST_STORE<SM_TRAITS>::_ST_DBG_TRACE;
struct SyFrame;
struct _RTL_ATOM_TABLE;
struct ST_STORE<SM_TRAITS>::_ST_IV_BUFFER;
struct _PERFDIAG_WORK_QUEUE_ITEM;
struct _SMKM_STORE_TERMINATE_WORK_ITEM;
struct _RTLP_ATOM_QUOTA;
struct _SMC_CACHE_CREATE_REQUEST;
struct _CALLBACK_REGISTRATION;
struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::_B_TREE_DESERIALIZE_CTX;
struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::ITERATOR;
struct _EXTRA_COVER_DATA_500;
struct _PF_SCENARIO_ID;
struct _PFSN_TRACE_HEADER;
struct _EXTRA_COVER_DATA;
struct _CM_PARSE_CACHE_TABLE;
struct _STACK_OVERFLOW_ITEM;
struct _RTL_CALLBACK_REGISTER;
struct _PF_SCENARIO_HEADER;
struct __OBP_SET_HANDLE_ATTRIBUTES;
struct _SMKM_STORE_REG_PARAMS;
struct _SM_STORE_FILE_HEADER;
struct _PFP_LOGGING_WORKER_CONTEXT;
struct _IOV_COMPLETION_CONTEXT;
struct _IOV_DRIVER_LIST_ENTRY;
struct _MMPAGE_FILE_EXPANSION;
struct _MI_PAGEFILE_CLUSTER_INFO;
struct _MMDEREFERENCE_SEGMENT_HEADER;
struct _ALPC_COMPLETION_LIST_DATABASE_LOG_ENTRY;
struct _ALPC_COMPLETION_LIST_DATABASE;
struct _KI_START_PROFILE_CONTEXT;
struct _KACTIVE_PROFILE_SOURCE;
struct _KI_STOP_PROFILE_CONTEXT;
union _PPM_OVERRIDE;
struct _BCDE_STRING;
struct _IDENTIFIER_OBJECT;
struct _PFP_PRIVSOURCE_QUERY_CONTEXT;
struct _VERSION_DATA_KEY;
struct _CMP_BOOT_LOAD_CONTROL;
struct _PFP_TRANSPARENT_OPEN_HANDLE;
struct _PFP_READLIST_SUPPORT;
struct _SMKM_ISSUE_IO_PARAMS;
struct _BAPD_ITEM_DESCRIPTOR;
struct _SM_CACHE_FILE_IO_CONTEXT;
struct _SM_CACHE_VOLUME_IO_CONTEXT;
struct _PF_TRIM_WHILE_AGING_CONTROL;
union SMKM_STORE_MGR<SM_TRAITS>::_SM_FE_IO_COMPLETION_FLAGS;
struct _PPM_PARK_NODE;
struct _PFS_PRIVATE_PAGE_SOURCE;
struct _PF_PRIVSOURCE_INFO;
struct _PF_PRIVSOURCE_QUERY_REQUEST;
struct _BOOT_DISPLAY_CONTEXT;
struct _BG_INTERNAL_CONTEXT;
struct _BL_LOG_ENTRY_HEADER;
struct _BL_LOG_HEADER;
struct _OFFSET;
struct _BG_RESOURCE_PACK;
struct _PFP_TRACE_DUMP_CONTEXT;
struct _RECTANGLE;
struct _BG_ANIMATION;
struct _KERNSNAP_SWITCH_FRAME;
union _NBQUEUE_POINTER;
struct _NBQUEUE_HEADER;
struct _BITMAP_IMAGE;
struct _GRAPHICS_RECTANGLE;
struct _BGR_PIXEL;
struct _TEXT_ATTRIBUTES;
struct _BG_EXTERNAL_CONTEXT;
struct _PFNL_FILE_INFO;
struct _EPROFILE;
struct _PERFINFO_INTERRUPT_EVENT_DATA;
struct _TEXT_REGION;
struct _TEXT_METRICS;
struct _PUSH_STACK_INFO_CONTEXT;
struct _BOOT_DISK_CONTEXT;
struct _EBLC_TABLE_INFORMATION;
struct _OBTRACE_WORK_ITEM_BLOCK;
struct _PFP_BUFFER;
struct _PFP_ENTRY_INFO_TABLE;
struct _SMKM_GLOBALS;
struct _SMKM_FILE_EXTENT;
struct _PFP_VA_ARRAY;
struct _PF_TRACE_WORKER_INFO;
struct _MOUNTDEV_UNIQUE_ID;
struct _PF_PFN_PRIO_REQUEST;
struct _SM_FP_ENTRY;
struct _PF_TIME_CONTROL;
struct _PFFI_FILEINFO_STREAM_INFO;
struct _TRIAGE_DUMP_OBJECT;
struct _DUMP_WRITER_CALL_TABLE;
struct _DUMP_FILE_DESCRIPTOR;
struct _PFFI_FILE_TRUNCATION;
struct _MI_ALLOC_FLAGS;
struct _PNP_DEVICE_OVERRIDE_ENTRY;
struct _PFFI_FILE_DEFRAG;
struct _PNP_DEVICE_OVERRIDE_CONTEXT;
struct _MMSECURE_ENTRY;
struct _PTE;
struct _PARTITION_TABLE;
struct _PFP_FILE_ACCESS;
struct _BOOT_SECTOR_INFO;
struct _DISK_LAYOUT;
struct _PATCH_BUFFER;
struct _HOTPATCH_HOOK;
struct _HOTPATCH_DEBUG_SIGNATURE;
struct _HOTPATCH_VALIDATION;
struct _HOTPATCH_FIXUP_ENTRY;
struct _HOTPATCH_FIXUP_REGION;
struct _HOTPATCH_DEBUG_DATA;
struct _ETIMER;
struct _MBR_PARTITION_RECORD;
struct _INTERNAL_DISK_GEOMETRY;
struct _DISK_INFORMATION;
struct _EFI_PARTITION_ENTRY;
struct _PFP_BUFFER_MANAGER;
struct _PFP_LOG_BUFFER_MANAGER;
struct _EFI_PARTITION_HEADER;
struct _MASTER_BOOT_RECORD;
struct _PFSN_PREFETCH_SECTION_INFO;
struct _LDR_RES_LANGUAGE;
struct _LDR_FALLBACK_LANGUAGES;
struct _PFP_PREFETCH_CONTEXT;
struct _MEMORY_HEADER;
struct _OBJECT_BOUNDARY_DESCRIPTOR;
struct _OBNS_ENTRY_COMPARE_CONTEXT;
struct _PF_SYSTEM_SUPERFETCH_PARAMETERS;
struct _PF_TRACE_LIMITS;
struct _PF_SYSTEM_PREFETCH_PARAMETERS;
struct _PFP_SUPERFETCH_PARAMETERS;
struct _OBJECT_BOUNDARY_ENTRY;
struct IO_GET_LEGACY_VETO_LIST_CONTEXT;
struct _RECT;
struct _PNP_DEVICE_EJECT;
struct _PFP_LOG_BUFFER;
struct _STORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_RESPONSE;
struct _PF_TRACE_COMMON_HEADER;
struct _DEVICE_WORK_ITEM;
struct _IO_INTERRUPT_STRUCTURE;
struct _PoShutdownThreadListEntry;
struct _PFFI_FILEINFO_INFO;
struct _DLL_EXPORT_ENTRY;
struct _EXP_PRODUCTINFO_SUITE_TYPE_MAP;
struct _DLL_EXPORT_INFORMATION;
struct _CM_CALLBACK_CONTEXT_BLOCK;
struct _CM_CALLBACK_CONTEXT_CALL_INSTANCE;
struct _LOCK_TRACKER;
struct _LOCK_HEADER;
struct _NAME_RECORD;
struct xpress_info;
struct prs;
struct _PFFI_CLOSE_PARAMETERS;
struct _PFFB_BUFFER_LIST_PARAMS;
struct _PFFB_BUFFER_LIST;
struct _ALPC_LOG_CALLBACK;
struct _REG_BINARY_CONTEXT;
struct _BOOT_VHD_SQM;
struct _PSP_FAIR_SHARE_CPU_DATA;
struct _PF_PHYSICAL_MEMORY_RANGE;
struct _PF_PHYSICAL_MEMORY_RANGE_INFO;
struct _PSP_CPU_QUOTA_WAIT_BLOCK;
struct _PSP_RATE_CONTROL_CPU_DATA;
struct _BAPD_ITEM_V1;
struct _PSP_QUOTA_EXPANSION_DESCRIPTOR;
struct _PFP_VAPREFETCH_SUPPORT;
struct _DDBCACHE_ENTRY;
struct _VdmQueryDirInfo;
struct _NT_PREFETCH_VOLUME;
struct _PSP_RESOURCE_DATA;
struct _PSP_QUOTA_BUCKET;
struct _PSP_CPU_QUOTA_SET_SESSION_CAPTURE;
struct _CM_LOCK_ELEMENT;
struct _CM_LOCK_TABLE;
struct _NT_PREFETCH_RANGE_ARRAY;
struct _NT_PREFETCH_PRIVATE;
struct _PFFI_CONFLICT_NOTIFY_CONTEXT;
struct _WPP_TRACE_BUFFER;
struct _WPP_TRACE_ENABLE_CONTEXT;
struct _MI_BAD_MEMORY_EVENT_ENTRY;
union _RESCACHEMAGIC;
struct _CMFThreadParams;
struct _MUIRegistryThreadParams;
struct _RESCSHEADER;
struct _POOL_HACKER;
struct _OFFSET_TABLE;
struct _FONT_FILE_DATA;
struct _NAMING_TABLE;
struct _ENCODING_RECORD;
struct sockaddr_in;
struct _CMAP_TABLE;
struct _SEGMENT_MAP_HEADER;
struct _EBLC_STRIKE_TABLE;
struct PiFrame;
struct _TABLE_DIRECTORY_ENTRY;
struct _STRIKE_DATA;
struct LocalFrame;
struct _WDIP_SEM_MEMORY_POOL;
struct _EBLC_SUBTABLE_INFORMATION;
struct _PFP_SCENARIO_CONTEXT;
struct _PFP_FILE_KEY_ENTRY;
struct _PFPRP_CONTEXT;
struct _PFP_SUPERFETCH_GLOBALS;
struct _PI_BUS_EXTENSION;
struct _PFFI_FILEINFO_INTERFACE;
struct _PFFI_OPEN_PARAMETERS;
struct _PFFI_DEBUG_TIME;
struct _PFFI_CONFLICT_INFO;
struct _IOP_SESSION_NOTIFICATION_ENTRY;
union _PFFB_BUFFER_FLAGS;
struct _HEAP_LOOKASIDE;
struct _PFFB_BUFFER;
struct _PFSN_PREFETCH_VOLUME_INFO;
struct _PF_COUNTED_STRING;
struct _PFP_TRACING_STATS;
struct _PFP_ENTRY_INFO_HASH;
struct _PFP_COMPLETED_TRACES;
struct _PFP_PREFETCH_CONTEXT_SHARED;
struct _NT_PREFETCH_STATS;
struct _PREFETCH_STATS_ALL;
struct _NT_PREFETCH_REQUEST;
struct _PFS_COUNTED_STRING;
struct _NT_PREFETCH_FILE;
struct _PREFETCH_REQUEST_RANGE;
struct _PFP_PREFETCH_VOLUME_CONTEXT;
struct _PFSN_PREFETCH_HEADER;
struct tagAHCACHEFORWARDQUEUE;
struct tagAHCACHESERVICEDATAQUERY;
struct tagAHCACHESERVICEDATAFORWARD;
struct tagAHCACHESERVICEDATA;
struct _PF_SECTION_INFO;
struct _PF_LOG_EVENT_DATA;
struct _PF_EVENT_AGCX_CONTEXT;
struct _SUPERFETCH_INFORMATION;
struct _PF_MEMORY_LIST_NODE;
struct _PF_TRACING_HEALTH;
struct _PFP_POWER_ACTION_DPC_CONTEXT;
struct _PF_PAGES_REPURPOSED_PREFETCH;
struct _PF_MEMORY_LIST_INFO;
struct _PF_TRACE_DATA;
struct _PF_EVENT_POWER_ACTION;
struct _PFP_TRACING_GLOBALS;
struct _PFP_BOOST_SUPPORT;
struct _PF_ACCESS_TRACING_CONTROL;
struct _PF_SCENARIO_PREFETCH_INFO;
struct _PF_SCENARIO_PHASE_INFO;
struct _KERNEL_SNAP_STACK_SEGMENT_CALLBACK_INFO;
struct _BITMAP_ENTRY;
struct _PF_TRACE_HEADER;
struct _PFSN_TRACE_DUMP;
struct _PFSN_PREFETCHER_GLOBALS;
struct _PFSC_ENTRY;
struct SsFrame;
struct _PFS_VOLUME_INFO;
struct _PFP_EVENT_BUFFER;
struct _PFS_LOG_ENTRY_PRIVATE;
struct CmFrame;
struct _PFP_ENTRY_INFO_DATA;
struct _HEAP_SUBSEGMENT;
struct _PF_TIME_RANGE;
struct _PFNL_ENTRY_HEADER;
struct _PFP_TRACE_DUMP;
struct _PF_SECTION_INFO_TRACE_HEADER;
union _PFP_NAME_LOGGING_BUFFER;
struct _HEAP_STOP_ON_VALUES;
struct _PF_EVENT_FILE_DEFRAG;
struct _PFS_LOG_ENTRY_EXTPAGE;
struct _PFFI_FILEINFO_VOLUME_INFO;
struct _PFFI_FILE_ACCESS;
struct _PFFI_FILE_CREATE;
struct _PFS_LOG_ENTRY_EXTENDED;
struct _PFS_LOG_ENTRY_FILE;
struct _PFS_LOG_ENTRY;
struct _PF_EVENT_FILE_TRUNCATE;
struct _PFNL_PFBACKED_INFO;
struct _PFS_TRACE_HEADER;
struct _PFNL_VOLUME_INFO;
struct _PFNL_LOG_ENTRY;
struct _PF_TRACE_INFO;
struct SiFrame;
struct _NBQUEUE_NODE;
struct _HEAP_VIRTUAL_ALLOC_ENTRY;
struct _HEAP_TUNING_PARAMETERS;
struct _DEBUG_EVENT;
struct _HEAP_LOCK;
struct _HEAP_SEGMENT;
struct _HEAP_COUNTERS;
struct _HEAP;
struct _HEAP_TAG_ENTRY;
struct _HEAP_FREE_ENTRY;
struct _HEAP_UCR_DESCRIPTOR;
struct _HEAP_LIST_LOOKUP;
struct _ETW_RUNDOWN_CONTEXT;
struct IRPLOG_HEAD;
struct IRPLOG_DATA;
struct _PF_ROBUST_PROCESS_ENTRY;
struct _PF_ROBUSTNESS_CONTROL;
struct _PF_EVENT_ROBUST_INFO;
struct _MI_QUEUED_DEADSTACK_WORKITEM;
struct _SECTION_OBJECT;
struct _HEAP_FAILURE_INFORMATION;
struct _HEAP_STACK_TRACE_INLINE_HEADER;
struct _MI_LARGE_VA_RANGES;
struct CultureDataType;
struct _VF_CTX_XSAVE_DATA;
struct _CACHED_BITMAP;
struct _GLYPH_SEGMENT;
struct _OS2_TABLE;
struct _SI_WBCL_PACKAGE;
struct _HEAD_TABLE;
struct _GLYF_TABLE;
struct _HHEA_TABLE;
struct _COMPOSITE_GLYPH_DATA;
struct _PFSN_BOOT_TRACE_TIMER;
struct _DESCRIPTION_HEADER;
struct _RSDT_32;
struct _MI_PAGE_ACCESS_ENTRY;
struct _FADT;
struct _LOCAL_VHD_BOOT_INFORMATION;
struct _VI_DEADLOCK_RESOURCE;
struct _PREFETCHER_INFORMATION;
struct _PF_METADATA_RECORD;
struct _PF_SECTION_RECORD;
struct _PF_PAGE_RECORD;
struct _REGISTRY_MEMORY_RUN;
struct _PF_SESSION_INFO;
struct _PF_EVENT_VIRTUAL_FREE;
struct _PF_APPLAUNCH_DATA;
struct _PF_FOREGROUND_PROCESS_INFO;
struct _PF_EVENT_HARDFAULT_TS;
struct _LZNT1_FORMAT;
struct _LZNT1_HIBER_WORKSPACE;
union _COMPRESSED_CHUNK_HEADER;
struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS32;
struct _MI_MEMORY_NODE;
struct _MI_NODE_COST;
struct _DPC_LOG_INFO;
struct _PFP_PREFETCH_REQUEST_VERIFY;
struct ct_values_s;
struct _MICROCODE_UPDATE_LOCK;
struct _MCUPDATE_CONTEXT;
struct _CM_ALLOC_PAGE;
struct _RTL_NORMALIZATION_LIST;
struct _RTL_NORMALIZATION_LIST_ENTRY;
struct _InbvProgressState;
struct _BT_PROGRESS_INDICATOR;
struct _CM_VIRTUAL_REPLICATION_STACK;
struct _CM_SID_TO_HIVE_MAPPING;
struct _PFFB_ALLOCATION;
struct _RGBQUAD;
struct _SYSTEMTIME;
struct _REG_TZI_FORMAT;
struct _STORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_REQUEST;
struct _EXP_SL_KMEM_CACHE_PROVIDER;
struct _PFBL_TRACE_INFO;
struct _POOL_DPC_CONTEXT;
struct _HEADLESS_GLOBALS;
struct _KTMOBJECT_NAMESPACE_CONTEXT;
struct _PSP_IFEO_PERF_OPTIONS;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER_NODE;
struct _WDIP_SEM_MEMORY_BLOCK;
struct _BAPD_LIST_ITEM;
struct _KNMI_HANDLER_CALLBACK;
struct _BCryptBufferDesc;
struct _BCryptBuffer;
struct _BCRYPT_PROVIDER_NAME;
struct _MT_RESULT_HEADER;
struct _KSEC_BCRYPT_EX_FUNCTIONS;
struct _CRYPT_PROVIDER_REFS;
struct _CRYPT_PROVIDER_REF;
struct _CRYPT_IMAGE_REF;
struct _TRACKING_BUFFER;
struct _REMOTE_LINK_BUFFER;
struct _LINK_TRACKING_RESPONSE;
struct _LINK_TRACKING_MESSAGE;
struct _BL_LOG_ETW_EVENT;
struct _QueryDirPoolData;
struct _PERFDIAG_GLOBALS;
struct _PERFDIAG_ENABLE_FLAGS_QUERYBUFFER;
struct _CPPORT;
struct _CM_PARSE_CACHE_ENTRY;
struct _POP_SLEEP_DISABLE_ENTRY;
struct _MM_PAGE_ACCESS_ENTRY;
struct _DBGKP_ERROR_PORT;
struct _VOLUME_NUMBER;
struct _STORAGE_SURFACE_VIRTUAL_DISK_LEV1_REQUEST;
struct _VIRTUAL_DISK_EA_BUFFER;
struct _KI_INTINIT_REC;
struct _VERIFIER_STRING_INFO;
struct _WDIP_SEM_INFLIGHT_SCENARIO_TABLE;
struct _RAMDISK_CREATE_OPTIONS;
struct _RAMDISK_CREATE_INPUT;
struct VFWMI_DEVICE_EXTENSION;
struct _KERNSNAP_THREAD_DATA;
struct _LIVE_DUMP_DIAGNOSTIC;
struct _PACKED_BIOS_PARAMETER_BLOCK;
struct BIOS_PARAMETER_BLOCK;
struct _PACKED_BOOT_SECTOR;
struct _XIP_CONFIGURATION;
struct _VI_IO_CALLBACK_STATE;
struct tagSHIMCACHEHEADER;
struct _IOP_SESSION_WORKITEM;
struct _POP_WAKE_INFO;
struct _POP_WAKE_SOURCE_WORK;
struct tagFILEDIRECTORYATTRIBUTES;
struct CgFrame;
struct SkFrame;
struct KbFrame;
struct KhFrame;
struct DiFrame;
struct IhFrame;
struct KfFrame;
struct ShFrame;
struct RcFrame;
class <CrtImplementationDetails>::NativeDll;
class _LocaleUpdate;
struct _is_ctype_compatible;
struct setloc_struct;
struct LjFrame;
struct CaFrame;
struct sockaddr_dl;
struct _LSAP_ADT_OBJECT;
struct _LSAP_ADT_SOURCE;
struct _HEAP_LOCAL_SEGMENT_INFO;
struct _SEGMENT_OBJECT;
struct _HEAP_DEBUGGING_INFORMATION;

#include <pshpack1.h>
typedef struct _IMAGE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Properties;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ImageAddressingMode : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long SystemModeImage : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long ImageMappedToAllPids : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long ExtendedInfoPresent : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long Reserved : 21; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_0;
  /* 0x0008 */ void* ImageBase;
  /* 0x0010 */ unsigned long ImageSelector;
  /* 0x0014 */ long Padding_1;
  /* 0x0018 */ unsigned __int64 ImageSize;
  /* 0x0020 */ unsigned long ImageSectionNumber;
  /* 0x0024 */ long __PADDING__[1];
} IMAGE_INFO, *PIMAGE_INFO; /* size: 0x0028 */

typedef enum _ADJUST_REASON
{
  AdjustNone = 0,
  AdjustUnwait = 1,
  AdjustBoost = 2,
} ADJUST_REASON, *PADJUST_REASON;

enum MCA_EXCEPTION_TYPE
{
  HAL_MCE_RECORD = 0,
  HAL_MCA_RECORD = 1,
};

typedef enum _PPM_PERF_ACTION
{
  PpmPerfActionRecordUtility = 0,
  PpmPerfActionReportUnparkedCore = 1,
  PpmPerfActionApplyDomainState = 2,
  PpmPerfActionForceApplyDomainState = 3,
  PpmPerfActionApplyProcessorState = 4,
  PpmPerfActionReportParkedCore = 5,
  PpmPerfActionMax = 6,
} PPM_PERF_ACTION, *PPPM_PERF_ACTION;

enum POWER_MESSAGE_TYPE
{
  PowerRegisterForPolicyChange = 0,
  PowerUnregisterForPolicyChange = 1,
  PowerRegisterForStateChange = 2,
  PowerUnregisterForStateChange = 3,
  PowerNotifyPolicyChanged = 4,
  PowerNotifyStateInitial = 5,
  PowerNotifyStateChanged = 6,
  PowerNotifyLegacyEvent = 7,
  PowerNotifyBrightnessChanges = 8,
  PowerRequestOverrideQuery = 9,
  PowerRequestOverrideCleanup = 10,
  PowerNotifyServiceInitialization = 11,
};

typedef enum _IOP_RESERVE_IRP_TYPE
{
  IopPagefileReadIrp = 0,
  IopPagefileWriteIrp = 1,
  IopNonPagefileWriteIrp = 2,
  IopMustSucceedIrp = 3,
} IOP_RESERVE_IRP_TYPE, *PIOP_RESERVE_IRP_TYPE;

typedef enum _CONFIGURATION_TYPE
{
  ArcSystem = 0,
  CentralProcessor = 1,
  FloatingPointProcessor = 2,
  PrimaryIcache = 3,
  PrimaryDcache = 4,
  SecondaryIcache = 5,
  SecondaryDcache = 6,
  SecondaryCache = 7,
  EisaAdapter = 8,
  TcAdapter = 9,
  ScsiAdapter = 10,
  DtiAdapter = 11,
  MultiFunctionAdapter = 12,
  DiskController = 13,
  TapeController = 14,
  CdromController = 15,
  WormController = 16,
  SerialController = 17,
  NetworkController = 18,
  DisplayController = 19,
  ParallelController = 20,
  PointerController = 21,
  KeyboardController = 22,
  AudioController = 23,
  OtherController = 24,
  DiskPeripheral = 25,
  FloppyDiskPeripheral = 26,
  TapePeripheral = 27,
  ModemPeripheral = 28,
  MonitorPeripheral = 29,
  PrinterPeripheral = 30,
  PointerPeripheral = 31,
  KeyboardPeripheral = 32,
  TerminalPeripheral = 33,
  OtherPeripheral = 34,
  LinePeripheral = 35,
  NetworkPeripheral = 36,
  SystemMemory = 37,
  DockingInformation = 38,
  RealModeIrqRoutingTable = 39,
  RealModePCIEnumeration = 40,
  MaximumType = 41,
} CONFIGURATION_TYPE, *PCONFIGURATION_TYPE;

enum TEST_HOOK_CALLBACK_ENUM
{
  POP_TH_CALLBACK_SIDLE = 0,
  POP_TH_CALLBACK_REGISTER_IDLE_DETECTION = 1,
  POP_TH_CALLBACK_IDLEDEVICE_NOTIFICATION = 2,
  POP_TH_CALLBACK_IDLEDEVICE_RESET_NOTIFICATION = 3,
  POP_TH_CALLBACK_MAX = 4,
};

enum POWER_SETTING_REGISTRANT_TYPE
{
  PowerRegisterFromWindow = 0,
  PowerRegisterFromService = 1,
  PowerRegisterFromKernelPo = 2,
  PowerRegisterFromUmpo = 3,
};

typedef enum _PARTITION_STYLE
{
  PARTITION_STYLE_MBR = 0,
  PARTITION_STYLE_GPT = 1,
  PARTITION_STYLE_RAW = 2,
} PARTITION_STYLE, *PPARTITION_STYLE;

enum POWER_POLICY_DEVICE_TYPE
{
  PolicyDeviceSystemButton = 0,
  PolicyDeviceThermalZone = 1,
  PolicyDeviceBattery = 2,
  PolicyDeviceMemory = 3,
  PolicyInitiatePowerActionAPI = 4,
  PolicySetPowerStateAPI = 5,
  PolicyImmediateDozeS4 = 6,
  PolicySystemIdle = 7,
  PolicyDeviceMax = 8,
};

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_2;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_LOADED_NOTIFICATION_DATA, *PLDR_DLL_LOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef enum _THERMAL_CHANNEL
{
  Diagnostic = 0,
  Operational = 1,
  System = 2,
} THERMAL_CHANNEL, *PTHERMAL_CHANNEL;

typedef enum _FT_PARTITION_STATE
{
  Healthy = 0,
  Orphaned = 1,
  Regenerating = 2,
  Initializing = 3,
  SyncRedundantCopy = 4,
} FT_PARTITION_STATE, *PFT_PARTITION_STATE;

typedef struct _UNICODE_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_3;
  /* 0x0008 */ unsigned short* Buffer;
} UNICODE_STRING, *PUNICODE_STRING; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA, *PPLUGPLAY_CONTROL_DEVICE_CONTROL_DATA; /* size: 0x0018 */

enum MONITOR_MESSAGE_TYPE
{
  PowerMonitorBrightnessOverride = 0,
  PowerMonitorAlsOffset = 1,
};

typedef enum _CC_TEST_EVENT_TYPE
{
  FailHighPriorityMappings = 0,
  LimitTotalVACBEntries = 1,
  QueryVACBStatistics = 2,
} CC_TEST_EVENT_TYPE, *PCC_TEST_EVENT_TYPE;

typedef struct _MMWSL
{
  /* 0x0000 */ unsigned long FirstFree;
  /* 0x0004 */ unsigned long FirstDynamic;
  /* 0x0008 */ unsigned long LastEntry;
  /* 0x000c */ unsigned long NextSlot;
  /* 0x0010 */ struct _MMWSLE* Wsle;
  /* 0x0018 */ void* LowestPagableAddress;
  /* 0x0020 */ unsigned long LastInitializedWsle;
  /* 0x0024 */ unsigned long NextAgingSlot;
  /* 0x0028 */ unsigned long NumberOfCommittedPageTables;
  /* 0x002c */ unsigned long VadBitMapHint;
  /* 0x0030 */ unsigned long NonDirectCount;
  /* 0x0034 */ unsigned long LastVadBit;
  /* 0x0038 */ unsigned long MaximumLastVadBit;
  /* 0x003c */ unsigned long LastAllocationSizeHint;
  /* 0x0040 */ unsigned long LastAllocationSize;
  /* 0x0044 */ long Padding_4;
  /* 0x0048 */ struct _MMWSLE_NONDIRECT_HASH* NonDirectHash;
  /* 0x0050 */ struct _MMWSLE_HASH* HashTableStart;
  /* 0x0058 */ struct _MMWSLE_HASH* HighestPermittedHashAddress;
  /* 0x0060 */ unsigned long MaximumUserPageTablePages;
  /* 0x0064 */ unsigned long MaximumUserPageDirectoryPages;
  /* 0x0068 */ unsigned long* CommittedPageTables;
  /* 0x0070 */ unsigned long NumberOfCommittedPageDirectories;
  /* 0x0074 */ long Padding_5;
  /* 0x0078 */ unsigned __int64 CommittedPageDirectories[128];
  /* 0x0478 */ unsigned long NumberOfCommittedPageDirectoryParents;
  /* 0x047c */ long Padding_6;
  /* 0x0480 */ unsigned __int64 CommittedPageDirectoryParents[1];
} MMWSL, *PMMWSL; /* size: 0x0488 */

typedef enum _OB_PREOP_CALLBACK_STATUS
{
  OB_PREOP_SUCCESS = 0,
} OB_PREOP_CALLBACK_STATUS, *POB_PREOP_CALLBACK_STATUS;

typedef enum _PFK_POWER_ACTION_PHASE_ID
{
  PfKPowerActionNotifyForSleepPhase = 0,
  PfKPowerActionSleepSystemPhase = 1,
  PfKPowerActionWakeSystemPhase = 2,
  PfKPowerActionDriversResumePhase = 3,
  PfKPowerActionWLRemoveUIPhase = 4,
  PfKPowerActionServicesResumePhase = 5,
  PfKPowerActionAppsResumePhase = 6,
  PfKPowerActionTransitionComplete = 7,
  PfKPowerActionMaxPhase = 8,
} PFK_POWER_ACTION_PHASE_ID, *PPFK_POWER_ACTION_PHASE_ID;

enum NETWORK_OPEN_LOCATION_QUALIFIER
{
  NetworkOpenLocationAny = 0,
  NetworkOpenLocationRemote = 1,
  NetworkOpenLocationLoopback = 2,
};

typedef enum _TYPE_OF_MEMORY
{
  LoaderExceptionBlock = 0,
  LoaderSystemBlock = 1,
  LoaderFree = 2,
  LoaderBad = 3,
  LoaderLoadedProgram = 4,
  LoaderFirmwareTemporary = 5,
  LoaderFirmwarePermanent = 6,
  LoaderOsloaderHeap = 7,
  LoaderOsloaderStack = 8,
  LoaderSystemCode = 9,
  LoaderHalCode = 10,
  LoaderBootDriver = 11,
  LoaderConsoleInDriver = 12,
  LoaderConsoleOutDriver = 13,
  LoaderStartupDpcStack = 14,
  LoaderStartupKernelStack = 15,
  LoaderStartupPanicStack = 16,
  LoaderStartupPcrPage = 17,
  LoaderStartupPdrPage = 18,
  LoaderRegistryData = 19,
  LoaderMemoryData = 20,
  LoaderNlsData = 21,
  LoaderSpecialMemory = 22,
  LoaderBBTMemory = 23,
  LoaderReserve = 24,
  LoaderXIPRom = 25,
  LoaderHALCachedMemory = 26,
  LoaderLargePageFiller = 27,
  LoaderErrorLogMemory = 28,
  LoaderMaximum = 29,
} TYPE_OF_MEMORY, *PTYPE_OF_MEMORY;

typedef struct _LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY* Flink;
  /* 0x0008 */ struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; /* size: 0x0010 */

typedef struct _KDEVICE_QUEUE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY DeviceListEntry;
  /* 0x0010 */ unsigned long SortKey;
  /* 0x0014 */ unsigned char Inserted;
  /* 0x0015 */ char __PADDING__[3];
} KDEVICE_QUEUE_ENTRY, *PKDEVICE_QUEUE_ENTRY; /* size: 0x0018 */

typedef struct _WAIT_CONTEXT_BLOCK
{
  /* 0x0000 */ struct _KDEVICE_QUEUE_ENTRY WaitQueueEntry;
  /* 0x0018 */ void* DeviceRoutine /* function */;
  /* 0x0020 */ void* DeviceContext;
  /* 0x0028 */ unsigned long NumberOfMapRegisters;
  /* 0x002c */ long Padding_7;
  /* 0x0030 */ void* DeviceObject;
  /* 0x0038 */ void* CurrentIrp;
  /* 0x0040 */ struct _KDPC* BufferChainingDpc;
} WAIT_CONTEXT_BLOCK, *PWAIT_CONTEXT_BLOCK; /* size: 0x0048 */

typedef struct _KDEVICE_QUEUE
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_8;
  /* 0x0008 */ struct _LIST_ENTRY DeviceListHead;
  /* 0x0018 */ unsigned __int64 Lock;
  union
  {
    /* 0x0020 */ unsigned char Busy;
    struct /* bitfield */
    {
      /* 0x0020 */ __int64 Reserved : 8; /* bit position: 0 */
      /* 0x0020 */ __int64 Hint : 56; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} KDEVICE_QUEUE, *PKDEVICE_QUEUE; /* size: 0x0028 */

typedef struct _KDPC
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Importance;
  /* 0x0002 */ volatile unsigned short Number;
  /* 0x0004 */ long Padding_9;
  /* 0x0008 */ struct _LIST_ENTRY DpcListEntry;
  /* 0x0018 */ void* DeferredRoutine /* function */;
  /* 0x0020 */ void* DeferredContext;
  /* 0x0028 */ void* SystemArgument1;
  /* 0x0030 */ void* SystemArgument2;
  /* 0x0038 */ void* DpcData;
} KDPC, *PKDPC; /* size: 0x0040 */

typedef struct _DISPATCHER_HEADER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char Type;
      union
      {
        /* 0x0001 */ unsigned char TimerControlFlags;
        struct /* bitfield */
        {
          /* 0x0001 */ unsigned char Absolute : 1; /* bit position: 0 */
          /* 0x0001 */ unsigned char Coalescable : 1; /* bit position: 1 */
          /* 0x0001 */ unsigned char KeepShifting : 1; /* bit position: 2 */
          /* 0x0001 */ unsigned char EncodedTolerableDelay : 5; /* bit position: 3 */
        }; /* bitfield */
        /* 0x0001 */ unsigned char Abandoned;
        struct
        {
          /* 0x0001 */ unsigned char Signalling;
          union
          {
            /* 0x0002 */ unsigned char ThreadControlFlags;
            struct /* bitfield */
            {
              /* 0x0002 */ unsigned char CpuThrottled : 1; /* bit position: 0 */
              /* 0x0002 */ unsigned char CycleProfiling : 1; /* bit position: 1 */
              /* 0x0002 */ unsigned char CounterProfiling : 1; /* bit position: 2 */
              /* 0x0002 */ unsigned char Reserved : 5; /* bit position: 3 */
            }; /* bitfield */
            /* 0x0002 */ unsigned char Hand;
            struct
            {
              /* 0x0002 */ unsigned char Size;
              union
              {
                /* 0x0003 */ unsigned char TimerMiscFlags;
                struct /* bitfield */
                {
                  /* 0x0003 */ unsigned char Index : 6; /* bit position: 0 */
                  /* 0x0003 */ unsigned char Inserted : 1; /* bit position: 6 */
                  /* 0x0003 */ volatile unsigned char Expired : 1; /* bit position: 7 */
                }; /* bitfield */
                /* 0x0003 */ unsigned char DebugActive;
                struct /* bitfield */
                {
                  /* 0x0003 */ unsigned char ActiveDR7 : 1; /* bit position: 0 */
                  /* 0x0003 */ unsigned char Instrumented : 1; /* bit position: 1 */
                  /* 0x0003 */ unsigned char Reserved2 : 4; /* bit position: 2 */
                  /* 0x0003 */ unsigned char UmsScheduled : 1; /* bit position: 6 */
                  /* 0x0003 */ unsigned char UmsPrimary : 1; /* bit position: 7 */
                }; /* bitfield */
                /* 0x0003 */ unsigned char DpcActive;
              }; /* size: 0x0001 */
            }; /* size: 0x0002 */
          }; /* size: 0x0002 */
        }; /* size: 0x0003 */
      }; /* size: 0x0003 */
    }; /* size: 0x0004 */
    /* 0x0000 */ volatile long Lock;
  }; /* size: 0x0004 */
  /* 0x0004 */ long SignalState;
  /* 0x0008 */ struct _LIST_ENTRY WaitListHead;
} DISPATCHER_HEADER, *PDISPATCHER_HEADER; /* size: 0x0018 */

typedef struct _KEVENT
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
} KEVENT, *PKEVENT; /* size: 0x0018 */

typedef struct _DEVICE_OBJECT
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ long ReferenceCount;
  /* 0x0008 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0010 */ struct _DEVICE_OBJECT* NextDevice;
  /* 0x0018 */ struct _DEVICE_OBJECT* AttachedDevice;
  /* 0x0020 */ struct _IRP* CurrentIrp;
  /* 0x0028 */ struct _IO_TIMER* Timer;
  /* 0x0030 */ unsigned long Flags;
  /* 0x0034 */ unsigned long Characteristics;
  /* 0x0038 */ struct _VPB* Vpb;
  /* 0x0040 */ void* DeviceExtension;
  /* 0x0048 */ unsigned long DeviceType;
  /* 0x004c */ char StackSize;
  /* 0x004d */ char Padding_10[3];
  union
  {
    union
    {
      /* 0x0050 */ struct _LIST_ENTRY ListEntry;
      /* 0x0050 */ struct _WAIT_CONTEXT_BLOCK Wcb;
    }; /* size: 0x0048 */
  } /* size: 0x0048 */ Queue;
  /* 0x0098 */ unsigned long AlignmentRequirement;
  /* 0x009c */ long Padding_11;
  /* 0x00a0 */ struct _KDEVICE_QUEUE DeviceQueue;
  /* 0x00c8 */ struct _KDPC Dpc;
  /* 0x0108 */ unsigned long ActiveThreadCount;
  /* 0x010c */ long Padding_12;
  /* 0x0110 */ void* SecurityDescriptor;
  /* 0x0118 */ struct _KEVENT DeviceLock;
  /* 0x0130 */ unsigned short SectorSize;
  /* 0x0132 */ unsigned short Spare1;
  /* 0x0134 */ long Padding_13;
  /* 0x0138 */ struct _DEVOBJ_EXTENSION* DeviceObjectExtension;
  /* 0x0140 */ void* Reserved;
  /* 0x0148 */ long __PADDING__[2];
} DEVICE_OBJECT, *PDEVICE_OBJECT; /* size: 0x0150 */

typedef enum _BUS_DATA_TYPE
{
  ConfigurationSpaceUndefined = -1,
  Cmos = 0,
  EisaConfiguration = 1,
  Pos = 2,
  CbusConfiguration = 3,
  PCIConfiguration = 4,
  VMEConfiguration = 5,
  NuBusConfiguration = 6,
  PCMCIAConfiguration = 7,
  MPIConfiguration = 8,
  MPSAConfiguration = 9,
  PNPISAConfiguration = 10,
  SgiInternalConfiguration = 11,
  MaximumBusDataType = 12,
} BUS_DATA_TYPE, *PBUS_DATA_TYPE;

enum FT_TYPE
{
  Mirror = 0,
  Stripe = 1,
  StripeWithParity = 2,
  VolumeSet = 3,
  NotAnFtMember = 4,
  WholeDisk = 5,
};

typedef struct _EMP_LAZY_CALLBACK_BLOCK
{
  /* 0x0000 */ void* LazyCallback /* function */;
  /* 0x0008 */ void* LazyCallbackContext;
  /* 0x0010 */ struct _LIST_ENTRY EntryLazyCallbackList;
} EMP_LAZY_CALLBACK_BLOCK, *PEMP_LAZY_CALLBACK_BLOCK; /* size: 0x0020 */

typedef enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0,
  ExceptionContinueSearch = 1,
  ExceptionNestedException = 2,
  ExceptionCollidedUnwind = 3,
} EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

typedef enum _SYSTEM_POWER_STATE
{
  PowerSystemUnspecified = 0,
  PowerSystemWorking = 1,
  PowerSystemSleeping1 = 2,
  PowerSystemSleeping2 = 3,
  PowerSystemSleeping3 = 4,
  PowerSystemHibernate = 5,
  PowerSystemShutdown = 6,
  PowerSystemMaximum = 7,
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

typedef enum _HEADLESS_TERM_SERIAL_PORT
{
  SerialPortUndefined = 0,
  ComPort1 = 1,
  ComPort2 = 2,
  ComPort3 = 3,
  ComPort4 = 4,
} HEADLESS_TERM_SERIAL_PORT, *PHEADLESS_TERM_SERIAL_PORT;

typedef enum _TIMER_SET_INFORMATION_CLASS
{
  TimerSetCoalescableTimer = 0,
  MaxTimerInfoClass = 1,
} TIMER_SET_INFORMATION_CLASS, *PTIMER_SET_INFORMATION_CLASS;

typedef enum _SECTION_INHERIT
{
  ViewShare = 1,
  ViewUnmap = 2,
} SECTION_INHERIT, *PSECTION_INHERIT;

typedef enum _PCW_CALLBACK_TYPE
{
  PcwCallbackAddCounter = 0,
  PcwCallbackRemoveCounter = 1,
  PcwCallbackEnumerateInstances = 2,
  PcwCallbackCollectData = 3,
} PCW_CALLBACK_TYPE, *PPCW_CALLBACK_TYPE;

typedef enum _ETW_SESSION_NOTIFICATION_TYPE
{
  EtwSessionNotificationMediaChanged = 1,
  EtwSessionNotificationSessionTerminated = 2,
  EtwSessionNotificationLogfileError = 3,
  EtwSessionNotificationRealtimeError = 4,
  EtwSessionNotificationSessionStarted = 5,
  EtwSessionNotificationMax = 6,
} ETW_SESSION_NOTIFICATION_TYPE, *PETW_SESSION_NOTIFICATION_TYPE;

typedef enum _MMFLUSH_TYPE
{
  MmFlushForDelete = 0,
  MmFlushForWrite = 1,
} MMFLUSH_TYPE, *PMMFLUSH_TYPE;

typedef struct _PERFINFO_VIRTUAL_ALLOC
{
  /* 0x0000 */ void* CapturedBase;
  /* 0x0008 */ unsigned __int64 CapturedRegionSize;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long Flags;
} PERFINFO_VIRTUAL_ALLOC, *PPERFINFO_VIRTUAL_ALLOC; /* size: 0x0018 */

typedef enum _WORKER_FUNCTION
{
  Noop = 0,
  ReadAhead = 1,
  WriteBehind = 2,
  LazyWriteScan = 3,
  EventSet = 4,
} WORKER_FUNCTION, *PWORKER_FUNCTION;

typedef enum _TPM_BOOT_ENTROPY_RESULT_CODE
{
  TpmBootEntropyStructureUninitialized = 0,
  TpmBootEntropyDisabledByPolicy = 1,
  TpmBootEntropyNoTpmFound = 2,
  TpmBootEntropyTpmError = 3,
  TpmBootEntropySuccess = 4,
} TPM_BOOT_ENTROPY_RESULT_CODE, *PTPM_BOOT_ENTROPY_RESULT_CODE;

typedef struct _GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} GUID, *PGUID; /* size: 0x0010 */

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS
{
  TransactionManagerBasicInformation = 0,
  TransactionManagerLogInformation = 1,
  TransactionManagerLogPathInformation = 2,
  TransactionManagerRecoveryInformation = 4,
  TransactionManagerOnlineProbeInformation = 3,
  TransactionManagerOldestTransactionInformation = 5,
} TRANSACTIONMANAGER_INFORMATION_CLASS, *PTRANSACTIONMANAGER_INFORMATION_CLASS;

typedef struct _GENERIC_MAPPING
{
  /* 0x0000 */ unsigned long GenericRead;
  /* 0x0004 */ unsigned long GenericWrite;
  /* 0x0008 */ unsigned long GenericExecute;
  /* 0x000c */ unsigned long GenericAll;
} GENERIC_MAPPING, *PGENERIC_MAPPING; /* size: 0x0010 */

typedef enum _POOL_TYPE
{
  NonPagedPool = 0,
  PagedPool = 1,
  NonPagedPoolMustSucceed = 2,
  DontUseThisType = 3,
  NonPagedPoolCacheAligned = 4,
  PagedPoolCacheAligned = 5,
  NonPagedPoolCacheAlignedMustS = 6,
  MaxPoolType = 7,
  NonPagedPoolSession = 32,
  PagedPoolSession = 33,
  NonPagedPoolMustSucceedSession = 34,
  DontUseThisTypeSession = 35,
  NonPagedPoolCacheAlignedSession = 36,
  PagedPoolCacheAlignedSession = 37,
  NonPagedPoolCacheAlignedMustSSession = 38,
} POOL_TYPE, *PPOOL_TYPE;

typedef struct _OBJECT_TYPE_INITIALIZER
{
  /* 0x0000 */ unsigned short Length;
  union
  {
    /* 0x0002 */ unsigned char ObjectTypeFlags;
    struct /* bitfield */
    {
      /* 0x0002 */ unsigned char CaseInsensitive : 1; /* bit position: 0 */
      /* 0x0002 */ unsigned char UnnamedObjectsOnly : 1; /* bit position: 1 */
      /* 0x0002 */ unsigned char UseDefaultObject : 1; /* bit position: 2 */
      /* 0x0002 */ unsigned char SecurityRequired : 1; /* bit position: 3 */
      /* 0x0002 */ unsigned char MaintainHandleCount : 1; /* bit position: 4 */
      /* 0x0002 */ unsigned char MaintainTypeList : 1; /* bit position: 5 */
      /* 0x0002 */ unsigned char SupportsObjectCallbacks : 1; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0003 */ char Padding_14;
  /* 0x0004 */ unsigned long ObjectTypeCode;
  /* 0x0008 */ unsigned long InvalidAttributes;
  /* 0x000c */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x001c */ unsigned long ValidAccessMask;
  /* 0x0020 */ unsigned long RetainAccess;
  /* 0x0024 */ enum _POOL_TYPE PoolType;
  /* 0x0028 */ unsigned long DefaultPagedPoolCharge;
  /* 0x002c */ unsigned long DefaultNonPagedPoolCharge;
  /* 0x0030 */ void* DumpProcedure /* function */;
  /* 0x0038 */ void* OpenProcedure /* function */;
  /* 0x0040 */ void* CloseProcedure /* function */;
  /* 0x0048 */ void* DeleteProcedure /* function */;
  /* 0x0050 */ void* ParseProcedure /* function */;
  /* 0x0058 */ void* SecurityProcedure /* function */;
  /* 0x0060 */ void* QueryNameProcedure /* function */;
  /* 0x0068 */ void* OkayToCloseProcedure /* function */;
} OBJECT_TYPE_INITIALIZER, *POBJECT_TYPE_INITIALIZER; /* size: 0x0070 */

typedef enum _ETW_PROVIDER_STATE
{
  EtwProviderStateFree = 0,
  EtwProviderStateTransition = 1,
  EtwProviderStateActive = 2,
  EtwProviderStateMax = 3,
} ETW_PROVIDER_STATE, *PETW_PROVIDER_STATE;

typedef enum _WORKER_FACTORY_CALLBACK_CLASS
{
  WorkerFactoryCallbackNormal = 0,
  WorkerFactoryCallbackLongRunning = 1,
  WorkerFactoryCallbackIndependent = 2,
} WORKER_FACTORY_CALLBACK_CLASS, *PWORKER_FACTORY_CALLBACK_CLASS;

typedef struct _PS_CPU_QUOTA_QUERY_ENTRY
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long Weight;
} PS_CPU_QUOTA_QUERY_ENTRY, *PPS_CPU_QUOTA_QUERY_ENTRY; /* size: 0x0008 */

typedef enum _WHEA_ERROR_SEVERITY
{
  WheaErrSevRecoverable = 0,
  WheaErrSevFatal = 1,
  WheaErrSevCorrected = 2,
  WheaErrSevInformational = 3,
} WHEA_ERROR_SEVERITY, *PWHEA_ERROR_SEVERITY;

enum WMISERVICECODES
{
  WmiReadNotifications = 64,
  WmiGetNextRegistrant = 65,
  WmiOpenGuid = 66,
  WmiNotifyUser = 67,
  WmiGetAllRegistrant = 68,
  WmiGenerateEvent = 69,
  WmiTranslateFileHandle = 71,
  WmiGetVersion = 73,
  WmiCheckAccess = 74,
  WmiQueryAllMultiple = 75,
  WmiQuerySingleMultiple = 76,
  WmiEnumerateGuidList = 77,
  WmiQueryDataBlockInformation = 78,
  WmiOpenGuidForQuerySet = 79,
  WmiOpenGuidForEvents = 80,
  WmiReceiveNotif = 81,
  WmiEnableDisableTracelogProvider = 82,
  WmiRegisterGuids = 83,
  WmiSendDB = 84,
  WmiReplyDB = 85,
  WmiEnumerateMofResouces = 86,
  WmiUnregisterDP = 87,
  WmiEnumerateGuidListAndProperties = 88,
  WmiNotifyLanguageChange = 89,
  WmiMarkHandleAsClosed = 90,
  WmiRealtimeConnect = 91,
};

typedef enum _RTL_GENERIC_COMPARE_RESULTS
{
  GenericLessThan = 0,
  GenericGreaterThan = 1,
  GenericEqual = 2,
} RTL_GENERIC_COMPARE_RESULTS, *PRTL_GENERIC_COMPARE_RESULTS;

typedef enum _KINTERRUPT_POLARITY
{
  InterruptPolarityUnknown = 0,
  InterruptActiveHigh = 1,
  InterruptActiveLow = 2,
} KINTERRUPT_POLARITY, *PKINTERRUPT_POLARITY;

enum MARK_TYPE
{
  MARKTYPE_DELETED = 0,
  MARKTYPE_BOTTOM_OF_FDO_STACK = 1,
  MARKTYPE_DESIGNATED_FDO = 2,
  MARKTYPE_RAW_PDO = 3,
  MARKTYPE_DEVICE_CHECKED = 4,
  MARKTYPE_RELATION_PDO_EXAMINED = 5,
};

typedef enum _IO_QUERY_DEVICE_DATA_FORMAT
{
  IoQueryDeviceIdentifier = 0,
  IoQueryDeviceConfigurationData = 1,
  IoQueryDeviceComponentInformation = 2,
  IoQueryDeviceMaxData = 3,
} IO_QUERY_DEVICE_DATA_FORMAT, *PIO_QUERY_DEVICE_DATA_FORMAT;

typedef enum _IO_ALLOCATION_ACTION
{
  KeepObject = 1,
  DeallocateObject = 2,
  DeallocateObjectKeepRegisters = 3,
} IO_ALLOCATION_ACTION, *PIO_ALLOCATION_ACTION;

typedef enum _ACPI_REG_TYPE
{
  PM1a_ENABLE = 0,
  PM1b_ENABLE = 1,
  PM1a_STATUS = 2,
  PM1b_STATUS = 3,
  PM1a_CONTROL = 4,
  PM1b_CONTROL = 5,
  GP_STATUS = 6,
  GP_ENABLE = 7,
  SMI_CMD = 8,
  MaxRegType = 9,
} ACPI_REG_TYPE, *PACPI_REG_TYPE;

typedef struct _OBJECT_DUMP_CONTROL
{
  /* 0x0000 */ void* Stream;
  /* 0x0008 */ unsigned long Detail;
  /* 0x000c */ long __PADDING__[1];
} OBJECT_DUMP_CONTROL, *POBJECT_DUMP_CONTROL; /* size: 0x0010 */

typedef enum _KWAIT_SIGNAL_TYPE
{
  SignalTypeSynch = 0,
  SignalTypeNotify = 1,
  MaximumSignalType = 2,
} KWAIT_SIGNAL_TYPE, *PKWAIT_SIGNAL_TYPE;

typedef enum _PNP_VETO_TYPE
{
  PNP_VetoTypeUnknown = 0,
  PNP_VetoLegacyDevice = 1,
  PNP_VetoPendingClose = 2,
  PNP_VetoWindowsApp = 3,
  PNP_VetoWindowsService = 4,
  PNP_VetoOutstandingOpen = 5,
  PNP_VetoDevice = 6,
  PNP_VetoDriver = 7,
  PNP_VetoIllegalDeviceRequest = 8,
  PNP_VetoInsufficientPower = 9,
  PNP_VetoNonDisableable = 10,
  PNP_VetoLegacyDriver = 11,
  PNP_VetoInsufficientRights = 12,
} PNP_VETO_TYPE, *PPNP_VETO_TYPE;

enum tagWMIACTIONCODE
{
  WmiGetAllData = 0,
  WmiGetSingleInstance = 1,
  WmiChangeSingleInstance = 2,
  WmiChangeSingleItem = 3,
  WmiEnableEvents = 4,
  WmiDisableEvents = 5,
  WmiEnableCollection = 6,
  WmiDisableCollection = 7,
  WmiRegisterInfo = 8,
  WmiExecuteMethodCall = 9,
};

enum VF_PENDING_DEFER_OPTION
{
  VfPendingDeferPassiveTimer = 1,
  VfPendingDeferDispatchTimer = 2,
};

typedef enum _MM_PAGE_ACCESS_TYPE
{
  MmPteAccessType = 0,
  MmCcReadAheadType = 1,
  MmPfnRepurposeType = 2,
  MmMaximumPageAccessType = 3,
} MM_PAGE_ACCESS_TYPE, *PMM_PAGE_ACCESS_TYPE;

typedef struct _IO_STATUS_BLOCK
{
  union
  {
    /* 0x0000 */ long Status;
    /* 0x0000 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 Information;
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK; /* size: 0x0010 */

typedef struct _FILE_IO_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* KeyContext;
  /* 0x0008 */ void* ApcContext;
  /* 0x0010 */ struct _IO_STATUS_BLOCK IoStatusBlock;
} FILE_IO_COMPLETION_INFORMATION, *PFILE_IO_COMPLETION_INFORMATION; /* size: 0x0020 */

typedef enum _KSTACK_TYPE
{
  ReserveStackNormal = 0,
  ReserveStackLarge = 1,
  MaximumReserveStacks = 2,
} KSTACK_TYPE, *PKSTACK_TYPE;

typedef struct _SM_STORE_MANAGER_CONTEXT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Initialized : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_15;
  /* 0x0008 */ void* ControlDeviceHandle;
  /* 0x0010 */ struct _DEVICE_OBJECT* ControlDeviceObject;
} SM_STORE_MANAGER_CONTEXT, *PSM_STORE_MANAGER_CONTEXT; /* size: 0x0018 */

typedef enum _CLFS_MGMT_NOTIFICATION_TYPE
{
  ClfsMgmtAdvanceTailNotification = 0,
  ClfsMgmtLogFullHandlerNotification = 1,
  ClfsMgmtLogUnpinnedNotification = 2,
  ClfsMgmtLogWriteNotification = 3,
} CLFS_MGMT_NOTIFICATION_TYPE, *PCLFS_MGMT_NOTIFICATION_TYPE;

typedef enum _IO_ACCESS_MODE
{
  SequentialAccess = 0,
  RandomAccess = 1,
} IO_ACCESS_MODE, *PIO_ACCESS_MODE;

typedef union _ULARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ULARGE_INTEGER, *PULARGE_INTEGER; /* size: 0x0008 */

typedef struct _KTIMER_TABLE_ENTRY
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ struct _LIST_ENTRY Entry;
  /* 0x0018 */ union _ULARGE_INTEGER Time;
} KTIMER_TABLE_ENTRY, *PKTIMER_TABLE_ENTRY; /* size: 0x0020 */

typedef enum _PS_IFEO_KEY_STATE
{
  PsReadIFEOAllValues = 0,
  PsSkipIFEODebugger = 1,
  PsSkipAllIFEO = 2,
  PsMaxIFEOKeyStates = 3,
} PS_IFEO_KEY_STATE, *PPS_IFEO_KEY_STATE;

typedef enum _VALUE_SEARCH_RETURN_TYPE
{
  SearchSuccess = 0,
  SearchNeedExclusiveLock = 1,
  SearchFail = 2,
} VALUE_SEARCH_RETURN_TYPE, *PVALUE_SEARCH_RETURN_TYPE;

typedef struct _SYSTEM_VA_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 VirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualPeak;
  /* 0x0010 */ unsigned __int64 VirtualLimit;
  /* 0x0018 */ unsigned __int64 AllocationFailures;
} SYSTEM_VA_LIST_INFORMATION, *PSYSTEM_VA_LIST_INFORMATION; /* size: 0x0020 */

typedef enum _PF_HARD_FAULT_TYPE
{
  PfHardFaultTypeDisk = 0,
  PfHardFaultTypeFileStore = 1,
  PfHardFaultTypeInMemoryStore = 2,
  PfHardFaultTypeMax = 3,
} PF_HARD_FAULT_TYPE, *PPF_HARD_FAULT_TYPE;

typedef struct _PSEUDO_DESCRIPTOR_32
{
  /* 0x0000 */ unsigned short Limit;
  /* 0x0002 */ unsigned long Base;
} PSEUDO_DESCRIPTOR_32, *PPSEUDO_DESCRIPTOR_32; /* size: 0x0006 */

typedef enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 1,
  FileFullDirectoryInformation = 2,
  FileBothDirectoryInformation = 3,
  FileBasicInformation = 4,
  FileStandardInformation = 5,
  FileInternalInformation = 6,
  FileEaInformation = 7,
  FileAccessInformation = 8,
  FileNameInformation = 9,
  FileRenameInformation = 10,
  FileLinkInformation = 11,
  FileNamesInformation = 12,
  FileDispositionInformation = 13,
  FilePositionInformation = 14,
  FileFullEaInformation = 15,
  FileModeInformation = 16,
  FileAlignmentInformation = 17,
  FileAllInformation = 18,
  FileAllocationInformation = 19,
  FileEndOfFileInformation = 20,
  FileAlternateNameInformation = 21,
  FileStreamInformation = 22,
  FilePipeInformation = 23,
  FilePipeLocalInformation = 24,
  FilePipeRemoteInformation = 25,
  FileMailslotQueryInformation = 26,
  FileMailslotSetInformation = 27,
  FileCompressionInformation = 28,
  FileObjectIdInformation = 29,
  FileCompletionInformation = 30,
  FileMoveClusterInformation = 31,
  FileQuotaInformation = 32,
  FileReparsePointInformation = 33,
  FileNetworkOpenInformation = 34,
  FileAttributeTagInformation = 35,
  FileTrackingInformation = 36,
  FileIdBothDirectoryInformation = 37,
  FileIdFullDirectoryInformation = 38,
  FileValidDataLengthInformation = 39,
  FileShortNameInformation = 40,
  FileIoCompletionNotificationInformation = 41,
  FileIoStatusBlockRangeInformation = 42,
  FileIoPriorityHintInformation = 43,
  FileSfioReserveInformation = 44,
  FileSfioVolumeInformation = 45,
  FileHardLinkInformation = 46,
  FileProcessIdsUsingFileInformation = 47,
  FileNormalizedNameInformation = 48,
  FileNetworkPhysicalNameInformation = 49,
  FileIdGlobalTxDirectoryInformation = 50,
  FileIsRemoteDeviceInformation = 51,
  FileAttributeCacheInformation = 52,
  FileNumaNodeInformation = 53,
  FileStandardLinkInformation = 54,
  FileRemoteProtocolInformation = 55,
  FileMaximumInformation = 56,
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

enum SWITCH_CONTEXT_PLATFORM_ID
{
  VISTA_ID = 0,
  WIN7_ID = 1,
  MAX_SUPPORTED_PLATFORM_COUNT = 2,
};

typedef struct _AMD64_M128
{
  /* 0x0000 */ unsigned __int64 Low;
  /* 0x0008 */ __int64 High;
} AMD64_M128, *PAMD64_M128; /* size: 0x0010 */

typedef struct _AMD64_LEGACY_SAVE_AREA
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _AMD64_M128 FloatRegisters[8];
} AMD64_LEGACY_SAVE_AREA, *PAMD64_LEGACY_SAVE_AREA; /* size: 0x00a0 */

typedef struct _PS_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 Attribute;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ unsigned __int64 Value;
    /* 0x0010 */ void* ValuePtr;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned __int64* ReturnLength;
} PS_ATTRIBUTE, *PPS_ATTRIBUTE; /* size: 0x0020 */

enum SeCmAuditType
{
  AuditSetRegValueNew = 0,
  AuditSetRegValueExisting = 1,
  AuditDeleteRegValue = 2,
};

typedef union _SLIST_HEADER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 Alignment;
      /* 0x0008 */ unsigned __int64 Region;
    }; /* size: 0x0010 */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 9; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 NextEntry : 39; /* bit position: 25 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Init : 1; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 Reserved : 59; /* bit position: 2 */
        /* 0x0008 */ unsigned __int64 Region : 3; /* bit position: 61 */
      }; /* bitfield */
    } /* size: 0x0010 */ Header8;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 48; /* bit position: 16 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Init : 1; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 Reserved : 2; /* bit position: 2 */
        /* 0x0008 */ unsigned __int64 NextEntry : 60; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0010 */ Header16;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 48; /* bit position: 16 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Reserved : 3; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 NextEntry : 60; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0010 */ HeaderX64;
  }; /* size: 0x0010 */
} SLIST_HEADER, *PSLIST_HEADER; /* size: 0x0010 */

typedef struct _GROUP_AFFINITY
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned short Group;
  /* 0x000a */ unsigned short Reserved[3];
} GROUP_AFFINITY, *PGROUP_AFFINITY; /* size: 0x0010 */

typedef struct _flags
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Removable : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char GroupAssigned : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char GroupCommitted : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char GroupAssignmentFixed : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Fill : 4; /* bit position: 4 */
  }; /* bitfield */
} flags, *Pflags; /* size: 0x0001 */

typedef struct _CACHED_KSTACK_LIST
{
  /* 0x0000 */ union _SLIST_HEADER SListHead;
  /* 0x0010 */ long MinimumFree;
  /* 0x0014 */ unsigned long Misses;
  /* 0x0018 */ unsigned long MissesLast;
  /* 0x001c */ unsigned long Pad0;
} CACHED_KSTACK_LIST, *PCACHED_KSTACK_LIST; /* size: 0x0020 */

typedef struct _KNODE
{
  /* 0x0000 */ union _SLIST_HEADER PagedPoolSListHead;
  /* 0x0010 */ union _SLIST_HEADER NonPagedPoolSListHead[3];
  /* 0x0040 */ struct _GROUP_AFFINITY Affinity;
  /* 0x0050 */ unsigned long ProximityId;
  /* 0x0054 */ unsigned short NodeNumber;
  /* 0x0056 */ unsigned short PrimaryNodeNumber;
  /* 0x0058 */ unsigned char MaximumProcessors;
  /* 0x0059 */ unsigned char Color;
  /* 0x005a */ struct _flags Flags;
  /* 0x005b */ unsigned char NodePad0;
  /* 0x005c */ unsigned long Seed;
  /* 0x0060 */ unsigned long MmShiftedColor;
  /* 0x0064 */ long Padding_16;
  /* 0x0068 */ volatile unsigned __int64 FreeCount[2];
  /* 0x0078 */ unsigned long Right;
  /* 0x007c */ unsigned long Left;
  /* 0x0080 */ struct _CACHED_KSTACK_LIST CachedKernelStacks;
  /* 0x00a0 */ long ParkLock;
  /* 0x00a4 */ unsigned long NodePad1;
  /* 0x00a8 */ long __PADDING__[6];
} KNODE, *PKNODE; /* size: 0x00c0 */

typedef enum _DEBUG_CONTROL_SPACE_ITEM
{
  DEBUG_CONTROL_SPACE_PCR = 0,
  DEBUG_CONTROL_SPACE_PRCB = 1,
  DEBUG_CONTROL_SPACE_KSPECIAL = 2,
  DEBUG_CONTROL_SPACE_THREAD = 3,
  DEBUG_CONTROL_SPACE_MAXIMUM = 4,
} DEBUG_CONTROL_SPACE_ITEM, *PDEBUG_CONTROL_SPACE_ITEM;

typedef struct _DBGKM_CREATE_THREAD
{
  /* 0x0000 */ unsigned long SubSystemKey;
  /* 0x0004 */ long Padding_17;
  /* 0x0008 */ void* StartAddress;
} DBGKM_CREATE_THREAD, *PDBGKM_CREATE_THREAD; /* size: 0x0010 */

typedef struct _DBGKM_CREATE_PROCESS
{
  /* 0x0000 */ unsigned long SubSystemKey;
  /* 0x0004 */ long Padding_18;
  /* 0x0008 */ void* FileHandle;
  /* 0x0010 */ void* BaseOfImage;
  /* 0x0018 */ unsigned long DebugInfoFileOffset;
  /* 0x001c */ unsigned long DebugInfoSize;
  /* 0x0020 */ struct _DBGKM_CREATE_THREAD InitialThread;
} DBGKM_CREATE_PROCESS, *PDBGKM_CREATE_PROCESS; /* size: 0x0030 */

typedef enum _INTENT_LOCK_TYPE
{
  KCBLock = 0,
  KeyLock = 1,
} INTENT_LOCK_TYPE, *PINTENT_LOCK_TYPE;

typedef enum _TOKEN_INFORMATION_CLASS
{
  TokenUser = 1,
  TokenGroups = 2,
  TokenPrivileges = 3,
  TokenOwner = 4,
  TokenPrimaryGroup = 5,
  TokenDefaultDacl = 6,
  TokenSource = 7,
  TokenType = 8,
  TokenImpersonationLevel = 9,
  TokenStatistics = 10,
  TokenRestrictedSids = 11,
  TokenSessionId = 12,
  TokenGroupsAndPrivileges = 13,
  TokenSessionReference = 14,
  TokenSandBoxInert = 15,
  TokenAuditPolicy = 16,
  TokenOrigin = 17,
  TokenElevationType = 18,
  TokenLinkedToken = 19,
  TokenElevation = 20,
  TokenHasRestrictions = 21,
  TokenAccessInformation = 22,
  TokenVirtualizationAllowed = 23,
  TokenVirtualizationEnabled = 24,
  TokenIntegrityLevel = 25,
  TokenUIAccess = 26,
  TokenMandatoryPolicy = 27,
  TokenLogonSid = 28,
  MaxTokenInfoClass = 29,
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS;

typedef struct _PCI_PMCSR_BSE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Rsvd1 : 6; /* bit position: 0 */
    /* 0x0000 */ unsigned char D3HotSupportsStopClock : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char BusPowerClockControlEnabled : 1; /* bit position: 7 */
  }; /* bitfield */
} PCI_PMCSR_BSE, *PPCI_PMCSR_BSE; /* size: 0x0001 */

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long Reserved[22];
} _PUBLIC_OBJECT_TYPE_INFORMATION, *P_PUBLIC_OBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef enum _MM_PAGE_PRIORITY
{
  LowPagePriority = 0,
  NormalPagePriority = 16,
  HighPagePriority = 32,
} MM_PAGE_PRIORITY, *PMM_PAGE_PRIORITY;

enum PROFILE_DEPARTURE_STYLE
{
  PDS_UPDATE_DEFAULT = 1,
  PDS_UPDATE_ON_REMOVE = 2,
  PDS_UPDATE_ON_INTERFACE = 3,
  PDS_UPDATE_ON_EJECT = 4,
};

typedef struct _PHYSICAL_TO_VIRTUAL
{
  /* 0x0000 */ unsigned long Status;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned __int64 PdeAddress;
} PHYSICAL_TO_VIRTUAL, *PPHYSICAL_TO_VIRTUAL; /* size: 0x0010 */

typedef struct _PCI_PMCSR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short PowerState : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned short Rsvd1 : 6; /* bit position: 2 */
    /* 0x0000 */ unsigned short PMEEnable : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short DataSelect : 4; /* bit position: 9 */
    /* 0x0000 */ unsigned short DataScale : 2; /* bit position: 13 */
    /* 0x0000 */ unsigned short PMEStatus : 1; /* bit position: 15 */
  }; /* bitfield */
} PCI_PMCSR, *PPCI_PMCSR; /* size: 0x0002 */

typedef enum _OB_OPEN_REASON
{
  ObCreateHandle = 0,
  ObOpenHandle = 1,
  ObDuplicateHandle = 2,
  ObInheritHandle = 3,
  ObMaxOpenReason = 4,
} OB_OPEN_REASON, *POB_OPEN_REASON;

typedef enum _EX_POOL_PRIORITY
{
  LowPoolPriority = 0,
  LowPoolPrioritySpecialPoolOverrun = 8,
  LowPoolPrioritySpecialPoolUnderrun = 9,
  NormalPoolPriority = 16,
  NormalPoolPrioritySpecialPoolOverrun = 24,
  NormalPoolPrioritySpecialPoolUnderrun = 25,
  HighPoolPriority = 32,
  HighPoolPrioritySpecialPoolOverrun = 40,
  HighPoolPrioritySpecialPoolUnderrun = 41,
} EX_POOL_PRIORITY, *PEX_POOL_PRIORITY;

typedef enum _SUBKEY_SEARCH_TYPE
{
  SearchIfExist = 0,
  SearchAndDeref = 1,
  SearchAndCount = 2,
  SearchAndRehash = 3,
  SearchAndTagNoDelayClose = 4,
} SUBKEY_SEARCH_TYPE, *PSUBKEY_SEARCH_TYPE;

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP
{
  RelationProcessorCore = 0,
  RelationNumaNode = 1,
  RelationCache = 2,
  RelationProcessorPackage = 3,
  RelationGroup = 4,
  RelationAll = 0xffffffff,
} LOGICAL_PROCESSOR_RELATIONSHIP, *PLOGICAL_PROCESSOR_RELATIONSHIP;

typedef enum _COVERAGE_REQUEST_CODES
{
  CoverageAllModules = 0,
  CoverageSearchByHash = 1,
  CoverageSearchByName = 2,
} COVERAGE_REQUEST_CODES, *PCOVERAGE_REQUEST_CODES;

typedef enum _CMP_COPY_TYPE
{
  Copy = 0,
  Sync = 1,
  Merge = 2,
} CMP_COPY_TYPE, *PCMP_COPY_TYPE;

typedef union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 PortType : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Version : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 CommandStatus : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 DeviceId : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 DeviceSerialNumber : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 BridgeControlStatus : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 ExpressCapability : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 AerInfo : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 Reserved : 56; /* bit position: 8 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS, *PWHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS; /* size: 0x0008 */

typedef enum _HAL_PLATFORM_TIMER_SOURCE
{
  HalPlatformTimerNotSpecified = 0,
  HalPlatformTimer8254 = 1,
  HalPlatformTimerRtc = 2,
  HalPlatformTimerAcpi = 3,
  HalPlatformTimerAcpiBroken = 4,
  HalPlatformTimerHpet = 5,
  HalPlatformTimerProcessorCounter = 6,
  HalPlatformTimerHvReferenceTime = 7,
} HAL_PLATFORM_TIMER_SOURCE, *PHAL_PLATFORM_TIMER_SOURCE;

typedef struct _ENUM_HANDLES_CONTEXT
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0008 */ struct _UNICODE_STRING* TargetDeviceInstance;
  /* 0x0010 */ unsigned long DumpHandles;
  /* 0x0014 */ unsigned long EnableLogging;
  /* 0x0018 */ unsigned long HandleCount;
  /* 0x001c */ long Padding_19;
  /* 0x0020 */ struct _LIST_ENTRY VetoProcessList;
} ENUM_HANDLES_CONTEXT, *PENUM_HANDLES_CONTEXT; /* size: 0x0030 */

typedef enum _WHEA_CPU_VENDOR
{
  WheaCpuVendorOther = 0,
  WheaCpuVendorIntel = 1,
  WheaCpuVendorAmd = 2,
} WHEA_CPU_VENDOR, *PWHEA_CPU_VENDOR;

enum KTM_FINALIZE_TYPE
{
  TmpFinalizeEnlistmentNever = 0,
  TmpFinalizeEnlistmentAlways = 1,
  TmpFinalizeEnlistmentIfNoCommit = 2,
};

typedef struct _SINGLE_LIST_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; /* size: 0x0008 */

typedef struct _GENERAL_LOOKASIDE
{
  union
  {
    /* 0x0000 */ union _SLIST_HEADER ListHead;
    /* 0x0000 */ struct _SINGLE_LIST_ENTRY SingleListHead;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned short Depth;
  /* 0x0012 */ unsigned short MaximumDepth;
  /* 0x0014 */ unsigned long TotalAllocates;
  union
  {
    /* 0x0018 */ unsigned long AllocateMisses;
    /* 0x0018 */ unsigned long AllocateHits;
  }; /* size: 0x0004 */
  /* 0x001c */ unsigned long TotalFrees;
  union
  {
    /* 0x0020 */ unsigned long FreeMisses;
    /* 0x0020 */ unsigned long FreeHits;
  }; /* size: 0x0004 */
  /* 0x0024 */ enum _POOL_TYPE Type;
  /* 0x0028 */ unsigned long Tag;
  /* 0x002c */ unsigned long Size;
  union
  {
    /* 0x0030 */ void* AllocateEx /* function */;
    /* 0x0030 */ void* Allocate /* function */;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ void* FreeEx /* function */;
    /* 0x0038 */ void* Free /* function */;
  }; /* size: 0x0008 */
  /* 0x0040 */ struct _LIST_ENTRY ListEntry;
  /* 0x0050 */ unsigned long LastTotalAllocates;
  union
  {
    /* 0x0054 */ unsigned long LastAllocateMisses;
    /* 0x0054 */ unsigned long LastAllocateHits;
  }; /* size: 0x0004 */
  /* 0x0058 */ unsigned long Future[2];
  /* 0x0060 */ long __PADDING__[8];
} GENERAL_LOOKASIDE, *PGENERAL_LOOKASIDE; /* size: 0x0080 */

typedef enum _KBUGCHECK_BUFFER_DUMP_STATE
{
  BufferEmpty = 0,
  BufferInserted = 1,
  BufferStarted = 2,
  BufferFinished = 3,
  BufferIncomplete = 4,
} KBUGCHECK_BUFFER_DUMP_STATE, *PKBUGCHECK_BUFFER_DUMP_STATE;

typedef enum _FP_IEEE_COMPARE_RESULT
{
  FpCompareEqual = 0,
  FpCompareGreater = 1,
  FpCompareLess = 2,
  FpCompareUnordered = 3,
} FP_IEEE_COMPARE_RESULT, *PFP_IEEE_COMPARE_RESULT;

typedef enum _ENUM_TYPE
{
  EnumTypeNone = 0,
  EnumTypeShallow = 1,
  EnumTypeDeep = 2,
  EnumTypeIgnoreUninstalledDevices = 3,
} ENUM_TYPE, *PENUM_TYPE;

typedef enum _KBUGCHECK_CALLBACK_REASON
{
  KbCallbackInvalid = 0,
  KbCallbackReserved1 = 1,
  KbCallbackSecondaryDumpData = 2,
  KbCallbackDumpIo = 3,
  KbCallbackAddPages = 4,
} KBUGCHECK_CALLBACK_REASON, *PKBUGCHECK_CALLBACK_REASON;

typedef enum _PLUGPLAY_CONTROL_CLASS
{
  PlugPlayControlEnumerateDevice = 0,
  PlugPlayControlRegisterNewDevice = 1,
  PlugPlayControlDeregisterDevice = 2,
  PlugPlayControlInitializeDevice = 3,
  PlugPlayControlStartDevice = 4,
  PlugPlayControlUnlockDevice = 5,
  PlugPlayControlQueryAndRemoveDevice = 6,
  PlugPlayControlUserResponse = 7,
  PlugPlayControlGenerateLegacyDevice = 8,
  PlugPlayControlGetInterfaceDeviceList = 9,
  PlugPlayControlProperty = 10,
  PlugPlayControlDeviceClassAssociation = 11,
  PlugPlayControlGetRelatedDevice = 12,
  PlugPlayControlGetInterfaceDeviceAlias = 13,
  PlugPlayControlDeviceStatus = 14,
  PlugPlayControlGetDeviceDepth = 15,
  PlugPlayControlQueryDeviceRelations = 16,
  PlugPlayControlTargetDeviceRelation = 17,
  PlugPlayControlQueryConflictList = 18,
  PlugPlayControlRetrieveDock = 19,
  PlugPlayControlResetDevice = 20,
  PlugPlayControlHaltDevice = 21,
  PlugPlayControlGetBlockedDriverList = 22,
  MaxPlugPlayControl = 23,
} PLUGPLAY_CONTROL_CLASS, *PPLUGPLAY_CONTROL_CLASS;

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
} LARGE_INTEGER, *PLARGE_INTEGER; /* size: 0x0008 */

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char ShareDisposition;
  /* 0x0002 */ unsigned short Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Generic;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Port;
      struct
      {
        /* 0x0004 */ unsigned short Level;
        /* 0x0006 */ unsigned short Group;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned __int64 Affinity;
      } /* size: 0x0010 */ Interrupt;
      struct
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Group;
            /* 0x0006 */ unsigned short MessageCount;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Raw;
          struct
          {
            /* 0x0004 */ unsigned short Level;
            /* 0x0006 */ unsigned short Group;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Translated;
        }; /* size: 0x0010 */
      } /* size: 0x0010 */ MessageInterrupt;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Memory;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long Port;
        /* 0x000c */ unsigned long Reserved1;
      } /* size: 0x000c */ Dma;
      struct
      {
        /* 0x0004 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0004 */ unsigned long Start;
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Reserved;
      } /* size: 0x000c */ BusNumber;
      struct
      {
        /* 0x0004 */ unsigned long DataSize;
        /* 0x0008 */ unsigned long Reserved1;
        /* 0x000c */ unsigned long Reserved2;
      } /* size: 0x000c */ DeviceSpecificData;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length40;
      } /* size: 0x000c */ Memory40;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length48;
      } /* size: 0x000c */ Memory48;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length64;
      } /* size: 0x000c */ Memory64;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _CM_PARTIAL_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST; /* size: 0x001c */

typedef enum _CLFS_IOSTATS_CLASS
{
  ClfsIoStatsDefault = 0,
  ClfsIoStatsMax = 0xffffffff,
} CLFS_IOSTATS_CLASS, *PCLFS_IOSTATS_CLASS;

enum PNPR_EXTENDED_STATUS
{
  NoFailure = 0,
  GeneralFailure = 1,
  UnsupportedBySku = 2,
  PartitionUnitDoesNotExist = 3,
  PartitionUnitsNotCompatible = 4,
  PartitionUnitNotReady = 5,
  PartitionUnitResourceNotSupported = 6,
  QuiesceFailure = 7,
  ChipsetDriverFailure = 8,
  ChipsetDriverNotSupported = 9,
  AllocationFailure = 10,
};

typedef struct _INTERRUPT_HT_INTR_INFO
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long Mask : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned long Polarity : 1; /* bit position: 1 */
          /* 0x0000 */ unsigned long MessageType : 3; /* bit position: 2 */
          /* 0x0000 */ unsigned long RequestEOI : 1; /* bit position: 5 */
          /* 0x0000 */ unsigned long DestinationMode : 1; /* bit position: 6 */
          /* 0x0000 */ unsigned long MessageType3 : 1; /* bit position: 7 */
          /* 0x0000 */ unsigned long Destination : 8; /* bit position: 8 */
          /* 0x0000 */ unsigned long Vector : 8; /* bit position: 16 */
          /* 0x0000 */ unsigned long ExtendedAddress : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ LowPart;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long ExtendedDestination : 24; /* bit position: 0 */
          /* 0x0004 */ unsigned long Reserved : 6; /* bit position: 24 */
          /* 0x0004 */ unsigned long PassPW : 1; /* bit position: 30 */
          /* 0x0004 */ unsigned long WaitingForEOI : 1; /* bit position: 31 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0004 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighPart;
} INTERRUPT_HT_INTR_INFO, *PINTERRUPT_HT_INTR_INFO; /* size: 0x0008 */

typedef enum _KEY_SET_INFORMATION_CLASS
{
  KeyWriteTimeInformation = 0,
  KeyWow64FlagsInformation = 1,
  KeyControlFlagsInformation = 2,
  KeySetVirtualizationInformation = 3,
  KeySetDebugInformation = 4,
  KeySetHandleTagsInformation = 5,
  MaxKeySetInfoClass = 6,
} KEY_SET_INFORMATION_CLASS, *PKEY_SET_INFORMATION_CLASS;

typedef struct _WHEA_IPF_MCA_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char Reserved;
} WHEA_IPF_MCA_DESCRIPTOR, *PWHEA_IPF_MCA_DESCRIPTOR; /* size: 0x0004 */

typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE
{
  DeviceUsageTypeUndefined = 0,
  DeviceUsageTypePaging = 1,
  DeviceUsageTypeHibernation = 2,
  DeviceUsageTypeDumpFile = 3,
} DEVICE_USAGE_NOTIFICATION_TYPE, *PDEVICE_USAGE_NOTIFICATION_TYPE;

typedef struct _WMI_TRACE_PACKET
{
  /* 0x0000 */ unsigned short Size;
  union
  {
    /* 0x0002 */ unsigned short HookId;
    struct
    {
      /* 0x0002 */ unsigned char Type;
      /* 0x0003 */ unsigned char Group;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
} WMI_TRACE_PACKET, *PWMI_TRACE_PACKET; /* size: 0x0004 */

typedef struct _SYSTEM_TRACE_HEADER
{
  union
  {
    /* 0x0000 */ unsigned long Marker;
    struct
    {
      /* 0x0000 */ unsigned short Version;
      /* 0x0002 */ unsigned char HeaderType;
      /* 0x0003 */ unsigned char Flags;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long Header;
    /* 0x0004 */ struct _WMI_TRACE_PACKET Packet;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ union _LARGE_INTEGER SystemTime;
  /* 0x0018 */ unsigned long KernelTime;
  /* 0x001c */ unsigned long UserTime;
} SYSTEM_TRACE_HEADER, *PSYSTEM_TRACE_HEADER; /* size: 0x0020 */

typedef struct _ETW_TP_EVENT_POOL_TH_MIN_SET
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
  /* 0x0028 */ unsigned long ThreadNum;
  /* 0x002c */ long __PADDING__[1];
} ETW_TP_EVENT_POOL_TH_MIN_SET, *PETW_TP_EVENT_POOL_TH_MIN_SET; /* size: 0x0030 */

typedef enum _POST_BLOCK_TYPE
{
  PostSynchronous = 1,
  PostAsyncUser = 2,
  PostAsyncKernel = 3,
} POST_BLOCK_TYPE, *PPOST_BLOCK_TYPE;

typedef struct _M128A
{
  /* 0x0000 */ unsigned __int64 Low;
  /* 0x0008 */ __int64 High;
} M128A, *PM128A; /* size: 0x0010 */

typedef struct _XSAVE_FORMAT
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _M128A FloatRegisters[8];
  /* 0x00a0 */ struct _M128A XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[96];
} XSAVE_FORMAT, *PXSAVE_FORMAT; /* size: 0x0200 */

typedef struct _CONTEXT
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  union
  {
    /* 0x0100 */ struct _XSAVE_FORMAT FltSave;
    struct
    {
      /* 0x0100 */ struct _M128A Header[2];
      /* 0x0120 */ struct _M128A Legacy[8];
      /* 0x01a0 */ struct _M128A Xmm0;
      /* 0x01b0 */ struct _M128A Xmm1;
      /* 0x01c0 */ struct _M128A Xmm2;
      /* 0x01d0 */ struct _M128A Xmm3;
      /* 0x01e0 */ struct _M128A Xmm4;
      /* 0x01f0 */ struct _M128A Xmm5;
      /* 0x0200 */ struct _M128A Xmm6;
      /* 0x0210 */ struct _M128A Xmm7;
      /* 0x0220 */ struct _M128A Xmm8;
      /* 0x0230 */ struct _M128A Xmm9;
      /* 0x0240 */ struct _M128A Xmm10;
      /* 0x0250 */ struct _M128A Xmm11;
      /* 0x0260 */ struct _M128A Xmm12;
      /* 0x0270 */ struct _M128A Xmm13;
      /* 0x0280 */ struct _M128A Xmm14;
      /* 0x0290 */ struct _M128A Xmm15;
    }; /* size: 0x01a0 */
  }; /* size: 0x0200 */
  /* 0x0300 */ struct _M128A VectorRegister[26];
  /* 0x04a0 */ unsigned __int64 VectorControl;
  /* 0x04a8 */ unsigned __int64 DebugControl;
  /* 0x04b0 */ unsigned __int64 LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 LastExceptionFromRip;
} CONTEXT, *PCONTEXT; /* size: 0x04d0 */

typedef struct _FIBER
{
  /* 0x0000 */ void* FiberData;
  /* 0x0008 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* DeallocationStack;
  /* 0x0028 */ long Padding_20[2];
  /* 0x0030 */ struct _CONTEXT FiberContext;
  /* 0x0500 */ struct _Wx86TIB* Wx86Tib;
  /* 0x0508 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x0510 */ void* FlsData;
  /* 0x0518 */ unsigned long GuaranteedStackBytes;
  /* 0x051c */ unsigned short TebFlags;
  /* 0x051e */ unsigned short ReservedPad;
} FIBER, *PFIBER; /* size: 0x0520 */

enum NEGOTIATE_MESSAGES
{
  NegEnumPackagePrefixes = 0,
  NegGetCallerName = 1,
  NegCallPackageMax = 2,
};

typedef struct _PROCESSOR_POWER_POLICY_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned long DemoteLimit;
  /* 0x0008 */ unsigned long PromoteLimit;
  /* 0x000c */ unsigned char DemotePercent;
  /* 0x000d */ unsigned char PromotePercent;
  /* 0x000e */ unsigned char Spare[2];
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned long AllowDemotion : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned long AllowPromotion : 1; /* bit position: 1 */
    /* 0x0010 */ unsigned long Reserved : 30; /* bit position: 2 */
  }; /* bitfield */
} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO; /* size: 0x0014 */

typedef enum _MUTANT_INFORMATION_CLASS
{
  MutantBasicInformation = 0,
  MutantOwnerInformation = 1,
} MUTANT_INFORMATION_CLASS, *PMUTANT_INFORMATION_CLASS;

typedef struct _EX_RUNDOWN_REF_CACHE_AWARE
{
  /* 0x0000 */ struct _EX_RUNDOWN_REF* RunRefs;
  /* 0x0008 */ void* PoolToFree;
  /* 0x0010 */ unsigned long RunRefSize;
  /* 0x0014 */ unsigned long Number;
} EX_RUNDOWN_REF_CACHE_AWARE, *PEX_RUNDOWN_REF_CACHE_AWARE; /* size: 0x0018 */

typedef struct _LOADER_PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned __int64 StartTime;
  /* 0x0008 */ unsigned __int64 EndTime;
} LOADER_PERFORMANCE_DATA, *PLOADER_PERFORMANCE_DATA; /* size: 0x0010 */

enum SQM_EVENT
{
  SQM_EVENT_SETDWORD = 5,
  SQM_EVENT_SETSTRING = 10,
  SQM_EVENT_ADDTOSTREAM = 11,
};

typedef enum _CMOS_DEVICE_TYPE
{
  CmosTypeStdPCAT = 0,
  CmosTypeIntelPIIX4 = 1,
  CmosTypeDal1501 = 2,
} CMOS_DEVICE_TYPE, *PCMOS_DEVICE_TYPE;

typedef struct _ACCESS_REASONS
{
  /* 0x0000 */ unsigned long Data[32];
} ACCESS_REASONS, *PACCESS_REASONS; /* size: 0x0080 */

typedef struct _CONTEXT_CHUNK
{
  /* 0x0000 */ long Offset;
  /* 0x0004 */ unsigned long Length;
} CONTEXT_CHUNK, *PCONTEXT_CHUNK; /* size: 0x0008 */

typedef struct _HAL_PLATFORM_INFORMATION
{
  /* 0x0000 */ unsigned long PlatformFlags;
} HAL_PLATFORM_INFORMATION, *PHAL_PLATFORM_INFORMATION; /* size: 0x0004 */

enum CPU_VENDORS
{
  CPU_UNKNOWN = 0,
  CPU_AMD = 1,
  CPU_INTEL = 2,
  CPU_VIA = 3,
};

enum DISK_CACHE_RETENTION_PRIORITY
{
  EqualPriority = 0,
  KeepPrefetchedData = 1,
  KeepReadData = 2,
};

typedef struct _EX_RUNDOWN_REF
{
  union
  {
    /* 0x0000 */ unsigned __int64 Count;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} EX_RUNDOWN_REF, *PEX_RUNDOWN_REF; /* size: 0x0008 */

typedef struct _FILE_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* Port;
  /* 0x0008 */ void* Key;
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef enum _POP_DEVICE_IDLE_TYPE
{
  DeviceIdleNormal = 0,
  DeviceIdleDisk = 1,
} POP_DEVICE_IDLE_TYPE, *PPOP_DEVICE_IDLE_TYPE;

enum PCI_HT_CapabilitiesType
{
  HTSlavePrimary0 = 0,
  HTSlavePrimary1 = 1,
  HTSlavePrimary2 = 2,
  HTSlavePrimary3 = 3,
  HTHostSecondary0 = 4,
  HTHostSecondary1 = 5,
  HTHostSecondary2 = 6,
  HTHostSecondary3 = 7,
  HTInterruptDiscoveryConfig = 16,
  HTAddressMapping = 20,
  HTInterruptMsiMapping = 21,
};

typedef enum _STORAGE_PROPERTY_ID
{
  StorageDeviceProperty = 0,
  StorageAdapterProperty = 1,
  StorageDeviceIdProperty = 2,
  StorageDeviceUniqueIdProperty = 3,
  StorageDeviceWriteCacheProperty = 4,
  StorageMiniportProperty = 5,
  StorageAccessAlignmentProperty = 6,
  StorageDeviceSeekPenaltyProperty = 7,
  StorageDeviceTrimProperty = 8,
  StorageDeviceWriteAggregationProperty = 9,
} STORAGE_PROPERTY_ID, *PSTORAGE_PROPERTY_ID;

typedef struct _PSP_QUOTA_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned char CacheAlign[64];
    struct
    {
      /* 0x0000 */ unsigned __int64 Usage;
      /* 0x0008 */ unsigned __int64 Peak;
    }; /* size: 0x0010 */
  }; /* size: 0x0040 */
  /* 0x0040 */ unsigned __int64 Limit;
  /* 0x0048 */ unsigned __int64 Return;
  /* 0x0050 */ struct _LIST_ENTRY ExpansionLink;
  /* 0x0060 */ long __PADDING__[8];
} PSP_QUOTA_ENTRY, *PPSP_QUOTA_ENTRY; /* size: 0x0080 */

typedef struct _EPROCESS_QUOTA_BLOCK
{
  /* 0x0000 */ struct _PSP_QUOTA_ENTRY QuotaEntry[4];
  /* 0x0200 */ struct _PS_CPU_QUOTA_BLOCK* CpuQuotaBlock;
  /* 0x0208 */ unsigned long ReferenceCount;
  /* 0x020c */ unsigned long ProcessCount;
  /* 0x0210 */ struct _LIST_ENTRY QuotaList;
  /* 0x0220 */ long __PADDING__[8];
} EPROCESS_QUOTA_BLOCK, *PEPROCESS_QUOTA_BLOCK; /* size: 0x0240 */

typedef enum _PO_SLEEP_DISABLE_REASON
{
  PoSleepDisableReasonVideo = 0,
  PoSleepDisableReasonHypervisor = 1,
  PoSleepDisableReasonVhdBoot = 2,
  PoSleepDisableReasonMax = 3,
} PO_SLEEP_DISABLE_REASON, *PPO_SLEEP_DISABLE_REASON;

typedef enum _MEMORY_CACHING_TYPE
{
  MmNonCached = 0,
  MmCached = 1,
  MmWriteCombined = 2,
  MmHardwareCoherentCached = 3,
  MmNonCachedUnordered = 4,
  MmUSWCCached = 5,
  MmMaximumCacheType = 6,
} MEMORY_CACHING_TYPE, *PMEMORY_CACHING_TYPE;

enum PROFILE_STATUS
{
  DOCK_NOTDOCKDEVICE = 0,
  DOCK_QUIESCENT = 1,
  DOCK_ARRIVING = 2,
  DOCK_DEPARTING = 3,
  DOCK_EJECTIRP_COMPLETED = 4,
};

typedef enum _SECURITY_LOGON_TYPE
{
  UndefinedLogonType = 0,
  Interactive = 2,
  Network = 3,
  Batch = 4,
  Service = 5,
  Proxy = 6,
  Unlock = 7,
  NetworkCleartext = 8,
  NewCredentials = 9,
  RemoteInteractive = 10,
  CachedInteractive = 11,
  CachedRemoteInteractive = 12,
  CachedUnlock = 13,
} SECURITY_LOGON_TYPE, *PSECURITY_LOGON_TYPE;

typedef struct _RTL_BALANCED_LINKS
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS* Parent;
  /* 0x0008 */ struct _RTL_BALANCED_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_BALANCED_LINKS* RightChild;
  /* 0x0018 */ char Balance;
  /* 0x0019 */ unsigned char Reserved[3];
  /* 0x001c */ long __PADDING__[1];
} RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS; /* size: 0x0020 */

typedef struct _KTMOBJECT_NAMESPACE_LINK
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS Links;
  /* 0x0020 */ unsigned char Expired;
  /* 0x0021 */ char __PADDING__[7];
} KTMOBJECT_NAMESPACE_LINK, *PKTMOBJECT_NAMESPACE_LINK; /* size: 0x0028 */

enum WMIDPREQUESTCODE
{
};

typedef struct _SYSTEM_POOLTAG
{
  union
  {
    /* 0x0000 */ unsigned char Tag[4];
    /* 0x0000 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long PagedAllocs;
  /* 0x0008 */ unsigned long PagedFrees;
  /* 0x000c */ long Padding_21;
  /* 0x0010 */ unsigned __int64 PagedUsed;
  /* 0x0018 */ unsigned long NonPagedAllocs;
  /* 0x001c */ unsigned long NonPagedFrees;
  /* 0x0020 */ unsigned __int64 NonPagedUsed;
} SYSTEM_POOLTAG, *PSYSTEM_POOLTAG; /* size: 0x0028 */

typedef enum _DISK_SNAPSHOT_STATE
{
  DiskSnapshotNormalDisk = 0,
  DiskSnapshotSnapshotCheckRequired = 1,
  DiskSnapshotPreSnapshot = 2,
  DiskSnapshotSnapshotDisk = 3,
} DISK_SNAPSHOT_STATE, *PDISK_SNAPSHOT_STATE;

typedef enum _ERROR_SEVERITY_VALUE
{
  ErrorRecoverable = 0,
  ErrorFatal = 1,
  ErrorCorrected = 2,
  ErrorOthers = 3,
} ERROR_SEVERITY_VALUE, *PERROR_SEVERITY_VALUE;

typedef struct _PAGED_LOOKASIDE_LIST
{
  /* 0x0000 */ struct _GENERAL_LOOKASIDE L;
} PAGED_LOOKASIDE_LIST, *PPAGED_LOOKASIDE_LIST; /* size: 0x0080 */

typedef enum _HV_X64_POWER_CHANGE_METHOD
{
  HvX64PowerChangeIssueHlt = 0,
  HvX64PowerChangeReadIoThenIssueHlt = 1,
  HvX64PowerChangeReadIo = 2,
  HvX64PowerChangeIssueMwait = 3,
} HV_X64_POWER_CHANGE_METHOD, *PHV_X64_POWER_CHANGE_METHOD;

typedef struct _PNP_LOCK_MOUNTABLE_DEVICE_CONTEXT
{
  /* 0x0000 */ struct _DEVICE_OBJECT* MountedDevice;
  /* 0x0008 */ struct _DEVICE_OBJECT* FsDevice;
} PNP_LOCK_MOUNTABLE_DEVICE_CONTEXT, *PPNP_LOCK_MOUNTABLE_DEVICE_CONTEXT; /* size: 0x0010 */

typedef enum _MM_POOL_PRIORITIES
{
  MmHighPriority = 0,
  MmNormalPriority = 1,
  MmLowPriority = 2,
  MmMaximumPoolPriority = 3,
} MM_POOL_PRIORITIES, *PMM_POOL_PRIORITIES;

struct _ASSEMBLY_STORAGE_MAP;

typedef enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0,
  SecurityIdentification = 1,
  SecurityImpersonation = 2,
  SecurityDelegation = 3,
} SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

typedef enum _PSP_RATE_APC_STATE
{
  PsRateApcNone = 0,
  PsRateApcContained = 1,
  PsRateApcAllocated = 2,
  PsRateApcMaxStates = 3,
} PSP_RATE_APC_STATE, *PPSP_RATE_APC_STATE;

struct _FLS_CALLBACK_INFO;

typedef enum _WHEA_ERROR_SOURCE_TYPE
{
  WheaErrSrcTypeMCE = 0,
  WheaErrSrcTypeCMC = 1,
  WheaErrSrcTypeCPE = 2,
  WheaErrSrcTypeNMI = 3,
  WheaErrSrcTypePCIe = 4,
  WheaErrSrcTypeGeneric = 5,
  WheaErrSrcTypeINIT = 6,
  WheaErrSrcTypeBOOT = 7,
  WheaErrSrcTypeSCIGeneric = 8,
  WheaErrSrcTypeIPFMCA = 9,
  WheaErrSrcTypeIPFCMC = 10,
  WheaErrSrcTypeIPFCPE = 11,
  WheaErrSrcTypeMax = 12,
} WHEA_ERROR_SOURCE_TYPE, *PWHEA_ERROR_SOURCE_TYPE;

typedef enum _WHEA_ERROR_SOURCE_STATE
{
  WheaErrSrcStateStopped = 1,
  WheaErrSrcStateStarted = 2,
} WHEA_ERROR_SOURCE_STATE, *PWHEA_ERROR_SOURCE_STATE;

typedef union _XPF_MCE_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long MCG_CapabilityRW : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long MCG_GlobalControlRW : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} XPF_MCE_FLAGS, *PXPF_MCE_FLAGS; /* size: 0x0004 */

typedef union _XPF_MC_BANK_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char ClearOnInitializationRW : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned char ControlDataRW : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0000 */ unsigned char AsUCHAR;
  }; /* size: 0x0001 */
} XPF_MC_BANK_FLAGS, *PXPF_MC_BANK_FLAGS; /* size: 0x0001 */

typedef struct _WHEA_XPF_MC_BANK_DESCRIPTOR
{
  /* 0x0000 */ unsigned char BankNumber;
  /* 0x0001 */ unsigned char ClearOnInitialization;
  /* 0x0002 */ unsigned char StatusDataFormat;
  /* 0x0003 */ union _XPF_MC_BANK_FLAGS Flags;
  /* 0x0004 */ unsigned long ControlMsr;
  /* 0x0008 */ unsigned long StatusMsr;
  /* 0x000c */ unsigned long AddressMsr;
  /* 0x0010 */ unsigned long MiscMsr;
  /* 0x0014 */ unsigned __int64 ControlData;
} WHEA_XPF_MC_BANK_DESCRIPTOR, *PWHEA_XPF_MC_BANK_DESCRIPTOR; /* size: 0x001c */

typedef struct _WHEA_XPF_MCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char NumberOfBanks;
  /* 0x0004 */ union _XPF_MCE_FLAGS Flags;
  /* 0x0008 */ unsigned __int64 MCG_Capability;
  /* 0x0010 */ unsigned __int64 MCG_GlobalControl;
  /* 0x0018 */ struct _WHEA_XPF_MC_BANK_DESCRIPTOR Banks[32];
} WHEA_XPF_MCE_DESCRIPTOR, *PWHEA_XPF_MCE_DESCRIPTOR; /* size: 0x0398 */

typedef union _WHEA_NOTIFICATION_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short PollIntervalRW : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short SwitchToPollingThresholdRW : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short SwitchToPollingWindowRW : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short ErrorThresholdRW : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short ErrorThresholdWindowRW : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short Reserved : 11; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} WHEA_NOTIFICATION_FLAGS, *PWHEA_NOTIFICATION_FLAGS; /* size: 0x0002 */

typedef struct _WHEA_NOTIFICATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Length;
  /* 0x0002 */ union _WHEA_NOTIFICATION_FLAGS Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned long PollInterval;
      } /* size: 0x0004 */ Polled;
      struct
      {
        /* 0x0004 */ unsigned long PollInterval;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned long SwitchToPollingThreshold;
        /* 0x0010 */ unsigned long SwitchToPollingWindow;
        /* 0x0014 */ unsigned long ErrorThreshold;
        /* 0x0018 */ unsigned long ErrorThresholdWindow;
      } /* size: 0x0018 */ Interrupt;
      struct
      {
        /* 0x0004 */ unsigned long PollInterval;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned long SwitchToPollingThreshold;
        /* 0x0010 */ unsigned long SwitchToPollingWindow;
        /* 0x0014 */ unsigned long ErrorThreshold;
        /* 0x0018 */ unsigned long ErrorThresholdWindow;
      } /* size: 0x0018 */ LocalInterrupt;
      struct
      {
        /* 0x0004 */ unsigned long PollInterval;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned long SwitchToPollingThreshold;
        /* 0x0010 */ unsigned long SwitchToPollingWindow;
        /* 0x0014 */ unsigned long ErrorThreshold;
        /* 0x0018 */ unsigned long ErrorThresholdWindow;
      } /* size: 0x0018 */ Sci;
      struct
      {
        /* 0x0004 */ unsigned long PollInterval;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned long SwitchToPollingThreshold;
        /* 0x0010 */ unsigned long SwitchToPollingWindow;
        /* 0x0014 */ unsigned long ErrorThreshold;
        /* 0x0018 */ unsigned long ErrorThresholdWindow;
      } /* size: 0x0018 */ Nmi;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} WHEA_NOTIFICATION_DESCRIPTOR, *PWHEA_NOTIFICATION_DESCRIPTOR; /* size: 0x001c */

typedef struct _WHEA_XPF_CMC_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char NumberOfBanks;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ struct _WHEA_NOTIFICATION_DESCRIPTOR Notify;
  /* 0x0024 */ struct _WHEA_XPF_MC_BANK_DESCRIPTOR Banks[32];
} WHEA_XPF_CMC_DESCRIPTOR, *PWHEA_XPF_CMC_DESCRIPTOR; /* size: 0x03a4 */

typedef struct _WHEA_XPF_NMI_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
} WHEA_XPF_NMI_DESCRIPTOR, *PWHEA_XPF_NMI_DESCRIPTOR; /* size: 0x0003 */

typedef struct _WHEA_IPF_CMC_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char Reserved;
} WHEA_IPF_CMC_DESCRIPTOR, *PWHEA_IPF_CMC_DESCRIPTOR; /* size: 0x0004 */

typedef struct _WHEA_IPF_CPE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char Reserved;
} WHEA_IPF_CPE_DESCRIPTOR, *PWHEA_IPF_CPE_DESCRIPTOR; /* size: 0x0004 */

typedef struct _WHEA_PCI_SLOT_NUMBER
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long DeviceNumber : 5; /* bit position: 0 */
          /* 0x0000 */ unsigned long FunctionNumber : 3; /* bit position: 5 */
          /* 0x0000 */ unsigned long Reserved : 24; /* bit position: 8 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} WHEA_PCI_SLOT_NUMBER, *PWHEA_PCI_SLOT_NUMBER; /* size: 0x0004 */

typedef union _AER_ROOTPORT_DESCRIPTOR_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short UncorrectableErrorMaskRW : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short UncorrectableErrorSeverityRW : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short CorrectableErrorMaskRW : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short AdvancedCapsAndControlRW : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short RootErrorCommandRW : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short Reserved : 11; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} AER_ROOTPORT_DESCRIPTOR_FLAGS, *PAER_ROOTPORT_DESCRIPTOR_FLAGS; /* size: 0x0002 */

typedef struct _WHEA_AER_ROOTPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _WHEA_PCI_SLOT_NUMBER Slot;
  /* 0x000c */ unsigned short DeviceControl;
  /* 0x000e */ union _AER_ROOTPORT_DESCRIPTOR_FLAGS Flags;
  /* 0x0010 */ unsigned long UncorrectableErrorMask;
  /* 0x0014 */ unsigned long UncorrectableErrorSeverity;
  /* 0x0018 */ unsigned long CorrectableErrorMask;
  /* 0x001c */ unsigned long AdvancedCapsAndControl;
  /* 0x0020 */ unsigned long RootErrorCommand;
} WHEA_AER_ROOTPORT_DESCRIPTOR, *PWHEA_AER_ROOTPORT_DESCRIPTOR; /* size: 0x0024 */

typedef union _AER_ENDPOINT_DESCRIPTOR_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short UncorrectableErrorMaskRW : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short UncorrectableErrorSeverityRW : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short CorrectableErrorMaskRW : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short AdvancedCapsAndControlRW : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short Reserved : 12; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} AER_ENDPOINT_DESCRIPTOR_FLAGS, *PAER_ENDPOINT_DESCRIPTOR_FLAGS; /* size: 0x0002 */

typedef struct _WHEA_AER_ENDPOINT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _WHEA_PCI_SLOT_NUMBER Slot;
  /* 0x000c */ unsigned short DeviceControl;
  /* 0x000e */ union _AER_ENDPOINT_DESCRIPTOR_FLAGS Flags;
  /* 0x0010 */ unsigned long UncorrectableErrorMask;
  /* 0x0014 */ unsigned long UncorrectableErrorSeverity;
  /* 0x0018 */ unsigned long CorrectableErrorMask;
  /* 0x001c */ unsigned long AdvancedCapsAndControl;
} WHEA_AER_ENDPOINT_DESCRIPTOR, *PWHEA_AER_ENDPOINT_DESCRIPTOR; /* size: 0x0020 */

typedef union _AER_BRIDGE_DESCRIPTOR_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short UncorrectableErrorMaskRW : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short UncorrectableErrorSeverityRW : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short CorrectableErrorMaskRW : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short AdvancedCapsAndControlRW : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short SecondaryUncorrectableErrorMaskRW : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short SecondaryUncorrectableErrorSevRW : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned short SecondaryCapsAndControlRW : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned short Reserved : 9; /* bit position: 7 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} AER_BRIDGE_DESCRIPTOR_FLAGS, *PAER_BRIDGE_DESCRIPTOR_FLAGS; /* size: 0x0002 */

typedef struct _WHEA_AER_BRIDGE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Enabled;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _WHEA_PCI_SLOT_NUMBER Slot;
  /* 0x000c */ unsigned short DeviceControl;
  /* 0x000e */ union _AER_BRIDGE_DESCRIPTOR_FLAGS Flags;
  /* 0x0010 */ unsigned long UncorrectableErrorMask;
  /* 0x0014 */ unsigned long UncorrectableErrorSeverity;
  /* 0x0018 */ unsigned long CorrectableErrorMask;
  /* 0x001c */ unsigned long AdvancedCapsAndControl;
  /* 0x0020 */ unsigned long SecondaryUncorrectableErrorMask;
  /* 0x0024 */ unsigned long SecondaryUncorrectableErrorSev;
  /* 0x0028 */ unsigned long SecondaryCapsAndControl;
} WHEA_AER_BRIDGE_DESCRIPTOR, *PWHEA_AER_BRIDGE_DESCRIPTOR; /* size: 0x002c */

typedef struct _WHEA_GENERIC_ERROR_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned char Reserved;
  /* 0x0003 */ unsigned char Enabled;
  /* 0x0004 */ unsigned long ErrStatusBlockLength;
  /* 0x0008 */ unsigned long RelatedErrorSourceId;
  /* 0x000c */ unsigned char ErrStatusAddressSpaceID;
  /* 0x000d */ unsigned char ErrStatusAddressBitWidth;
  /* 0x000e */ unsigned char ErrStatusAddressBitOffset;
  /* 0x000f */ unsigned char ErrStatusAddressAccessSize;
  /* 0x0010 */ union _LARGE_INTEGER ErrStatusAddress;
  /* 0x0018 */ struct _WHEA_NOTIFICATION_DESCRIPTOR Notify;
} WHEA_GENERIC_ERROR_DESCRIPTOR, *PWHEA_GENERIC_ERROR_DESCRIPTOR; /* size: 0x0034 */

typedef struct _WHEA_ERROR_SOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ enum _WHEA_ERROR_SOURCE_TYPE Type;
  /* 0x000c */ enum _WHEA_ERROR_SOURCE_STATE State;
  /* 0x0010 */ unsigned long MaxRawDataLength;
  /* 0x0014 */ unsigned long NumRecordsToPreallocate;
  /* 0x0018 */ unsigned long MaxSectionsPerRecord;
  /* 0x001c */ unsigned long ErrorSourceId;
  /* 0x0020 */ unsigned long PlatformErrorSourceId;
  /* 0x0024 */ unsigned long Flags;
  union
  {
    union
    {
      /* 0x0028 */ struct _WHEA_XPF_MCE_DESCRIPTOR XpfMceDescriptor;
      /* 0x0028 */ struct _WHEA_XPF_CMC_DESCRIPTOR XpfCmcDescriptor;
      /* 0x0028 */ struct _WHEA_XPF_NMI_DESCRIPTOR XpfNmiDescriptor;
      /* 0x0028 */ struct _WHEA_IPF_MCA_DESCRIPTOR IpfMcaDescriptor;
      /* 0x0028 */ struct _WHEA_IPF_CMC_DESCRIPTOR IpfCmcDescriptor;
      /* 0x0028 */ struct _WHEA_IPF_CPE_DESCRIPTOR IpfCpeDescriptor;
      /* 0x0028 */ struct _WHEA_AER_ROOTPORT_DESCRIPTOR AerRootportDescriptor;
      /* 0x0028 */ struct _WHEA_AER_ENDPOINT_DESCRIPTOR AerEndpointDescriptor;
      /* 0x0028 */ struct _WHEA_AER_BRIDGE_DESCRIPTOR AerBridgeDescriptor;
      /* 0x0028 */ struct _WHEA_GENERIC_ERROR_DESCRIPTOR GenErrDescriptor;
    }; /* size: 0x03a4 */
  } /* size: 0x03a4 */ Info;
} WHEA_ERROR_SOURCE_DESCRIPTOR, *PWHEA_ERROR_SOURCE_DESCRIPTOR; /* size: 0x03cc */

typedef enum _FIRMWARE_TYPE
{
  FirmwareTypeUnknown = 0,
  FirmwareTypeBios = 1,
  FirmwareTypeEfi = 2,
  FirmwareTypeMax = 3,
} FIRMWARE_TYPE, *PFIRMWARE_TYPE;

typedef enum _WHEA_ERROR_TYPE
{
  WheaErrTypeProcessor = 0,
  WheaErrTypeMemory = 1,
  WheaErrTypePCIExpress = 2,
  WheaErrTypeNMI = 3,
  WheaErrTypePCIXBus = 4,
  WheaErrTypePCIXDevice = 5,
  WheaErrTypeGeneric = 6,
} WHEA_ERROR_TYPE, *PWHEA_ERROR_TYPE;

typedef enum _RESOURCE_HANDLER_TYPE
{
  ResourceHandlerNull = 0,
  ResourceTranslator = 1,
  ResourceArbiter = 2,
  ResourceLegacyDeviceDetection = 3,
} RESOURCE_HANDLER_TYPE, *PRESOURCE_HANDLER_TYPE;

typedef struct _EFI_DEVICE_PATH
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char SubType;
  /* 0x0002 */ unsigned char Length[2];
} EFI_DEVICE_PATH, *PEFI_DEVICE_PATH; /* size: 0x0004 */

typedef struct _FILEPATH_DEVICE_PATH
{
  /* 0x0000 */ struct _EFI_DEVICE_PATH Header;
  /* 0x0004 */ unsigned short PathName[1];
} FILEPATH_DEVICE_PATH, *PFILEPATH_DEVICE_PATH; /* size: 0x0006 */

typedef enum _AUDIT_EVENT_TYPE
{
  AuditEventObjectAccess = 0,
  AuditEventDirectoryServiceAccess = 1,
} AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;

typedef union _UNWIND_CODE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char CodeOffset;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OpInfo : 4; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0002 */
    /* 0x0000 */ unsigned short FrameOffset;
  }; /* size: 0x0002 */
} UNWIND_CODE, *PUNWIND_CODE; /* size: 0x0002 */

typedef struct _ETW_KERNEL_TRACE_TIMESTAMP
{
  /* 0x0000 */ union _LARGE_INTEGER KernelTraceTimeStamp[2];
} ETW_KERNEL_TRACE_TIMESTAMP, *PETW_KERNEL_TRACE_TIMESTAMP; /* size: 0x0010 */

typedef struct _ACE_HEADER
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char AceFlags;
  /* 0x0002 */ unsigned short AceSize;
} ACE_HEADER, *PACE_HEADER; /* size: 0x0004 */

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef enum _MM_POOL_FAILURE_REASONS
{
  MmNonPagedNoPtes = 0,
  MmPriorityTooLow = 1,
  MmNonPagedNoPagesAvailable = 2,
  MmPagedNoPtes = 3,
  MmSessionPagedNoPtes = 4,
  MmPagedNoPagesAvailable = 5,
  MmSessionPagedNoPagesAvailable = 6,
  MmPagedNoCommit = 7,
  MmSessionPagedNoCommit = 8,
  MmNonPagedNoResidentAvailable = 9,
  MmNonPagedNoCommit = 10,
  MmMaximumFailureReason = 11,
} MM_POOL_FAILURE_REASONS, *PMM_POOL_FAILURE_REASONS;

typedef enum _DEVICE_POWER_STATE
{
  PowerDeviceUnspecified = 0,
  PowerDeviceD0 = 1,
  PowerDeviceD1 = 2,
  PowerDeviceD2 = 3,
  PowerDeviceD3 = 4,
  PowerDeviceMaximum = 5,
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef struct _RTL_MODULE_BASIC_INFO
{
  /* 0x0000 */ void* ImageBase;
} RTL_MODULE_BASIC_INFO, *PRTL_MODULE_BASIC_INFO; /* size: 0x0008 */

typedef enum _PSPOWEREVENTTYPE
{
  PsW32FullWake = 0,
  PsW32EventCode = 1,
  PsW32SystemPowerState = 2,
  PsW32SystemTime = 3,
  PsW32MonitorOn = 4,
  PsW32MonitorOff = 5,
  PsW32ScreenSaver = 6,
  PsW32MonitorDim = 7,
} PSPOWEREVENTTYPE, *PPSPOWEREVENTTYPE;

typedef enum _IOV_REFERENCE_TYPE
{
  IOVREFTYPE_PACKET = 0,
  IOVREFTYPE_POINTER = 1,
} IOV_REFERENCE_TYPE, *PIOV_REFERENCE_TYPE;

typedef struct _ACTIVATION_CONTEXT_STACK
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* ActiveFrame;
  /* 0x0008 */ struct _LIST_ENTRY FrameListCache;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long NextCookieSequenceNumber;
  /* 0x0020 */ unsigned long StackId;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_STACK, *PACTIVATION_CONTEXT_STACK; /* size: 0x0028 */

typedef enum _IO_PAGING_PRIORITY
{
  IoPagingPriorityInvalid = 0,
  IoPagingPriorityNormal = 1,
  IoPagingPriorityHigh = 2,
  IoPagingPriorityReserved1 = 3,
  IoPagingPriorityReserved2 = 4,
} IO_PAGING_PRIORITY, *PIO_PAGING_PRIORITY;

typedef enum _REG_NOTIFY_CLASS
{
  RegNtDeleteKey = 0,
  RegNtPreDeleteKey = 0,
  RegNtSetValueKey = 1,
  RegNtPreSetValueKey = 1,
  RegNtDeleteValueKey = 2,
  RegNtPreDeleteValueKey = 2,
  RegNtSetInformationKey = 3,
  RegNtPreSetInformationKey = 3,
  RegNtRenameKey = 4,
  RegNtPreRenameKey = 4,
  RegNtEnumerateKey = 5,
  RegNtPreEnumerateKey = 5,
  RegNtEnumerateValueKey = 6,
  RegNtPreEnumerateValueKey = 6,
  RegNtQueryKey = 7,
  RegNtPreQueryKey = 7,
  RegNtQueryValueKey = 8,
  RegNtPreQueryValueKey = 8,
  RegNtQueryMultipleValueKey = 9,
  RegNtPreQueryMultipleValueKey = 9,
  RegNtPreCreateKey = 10,
  RegNtPostCreateKey = 11,
  RegNtPreOpenKey = 12,
  RegNtPostOpenKey = 13,
  RegNtKeyHandleClose = 14,
  RegNtPreKeyHandleClose = 14,
  RegNtPostDeleteKey = 15,
  RegNtPostSetValueKey = 16,
  RegNtPostDeleteValueKey = 17,
  RegNtPostSetInformationKey = 18,
  RegNtPostRenameKey = 19,
  RegNtPostEnumerateKey = 20,
  RegNtPostEnumerateValueKey = 21,
  RegNtPostQueryKey = 22,
  RegNtPostQueryValueKey = 23,
  RegNtPostQueryMultipleValueKey = 24,
  RegNtPostKeyHandleClose = 25,
  RegNtPreCreateKeyEx = 26,
  RegNtPostCreateKeyEx = 27,
  RegNtPreOpenKeyEx = 28,
  RegNtPostOpenKeyEx = 29,
  RegNtPreFlushKey = 30,
  RegNtPostFlushKey = 31,
  RegNtPreLoadKey = 32,
  RegNtPostLoadKey = 33,
  RegNtPreUnLoadKey = 34,
  RegNtPostUnLoadKey = 35,
  RegNtPreQueryKeySecurity = 36,
  RegNtPostQueryKeySecurity = 37,
  RegNtPreSetKeySecurity = 38,
  RegNtPostSetKeySecurity = 39,
  RegNtCallbackObjectContextCleanup = 40,
  RegNtPreRestoreKey = 41,
  RegNtPostRestoreKey = 42,
  RegNtPreSaveKey = 43,
  RegNtPostSaveKey = 44,
  RegNtPreReplaceKey = 45,
  RegNtPostReplaceKey = 46,
  MaxRegNtNotifyClass = 47,
} REG_NOTIFY_CLASS, *PREG_NOTIFY_CLASS;

typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Undefined : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned long DataLinkProtocolError : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long SurpriseDownError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Reserved2 : 6; /* bit position: 6 */
      /* 0x0000 */ unsigned long PoisonedTLP : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long FlowControlProtocolError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long CompletionTimeout : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned long CompleterAbort : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long UnexpectedCompletion : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long ReceiverOverflow : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long MalformedTLP : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long ECRCError : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long UnsupportedRequestError : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long Reserved3 : 11; /* bit position: 21 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK, *PPCI_EXPRESS_UNCORRECTABLE_ERROR_MASK; /* size: 0x0004 */

typedef enum _MI_SYSTEM_VA_TYPE
{
  MiVaUnused = 0,
  MiVaSessionSpace = 1,
  MiVaProcessSpace = 2,
  MiVaBootLoaded = 3,
  MiVaPfnDatabase = 4,
  MiVaNonPagedPool = 5,
  MiVaPagedPool = 6,
  MiVaSpecialPoolPaged = 7,
  MiVaSystemCache = 8,
  MiVaSystemPtes = 9,
  MiVaHal = 10,
  MiVaSessionGlobalSpace = 11,
  MiVaDriverImages = 12,
  MiVaSpecialPoolNonPaged = 13,
  MiVaMaximumType = 14,
} MI_SYSTEM_VA_TYPE, *PMI_SYSTEM_VA_TYPE;

typedef enum _EVENT_INFORMATION_CLASS
{
  EventBasicInformation = 0,
} EVENT_INFORMATION_CLASS, *PEVENT_INFORMATION_CLASS;

typedef enum _IO_COMPLETION_INFORMATION_CLASS
{
  IoCompletionBasicInformation = 0,
} IO_COMPLETION_INFORMATION_CLASS, *PIO_COMPLETION_INFORMATION_CLASS;

typedef struct _QUAD
{
  union
  {
    /* 0x0000 */ __int64 UseThisFieldToCopy;
    /* 0x0000 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
} QUAD, *PQUAD; /* size: 0x0008 */

typedef enum _MI_DYNAMIC_MEMORY_LOCKTYPE
{
  AlreadyHeld = 0,
  AcquiredShared = 1,
  UseSpinLock = 2,
  UseSpinLockRaiseIrql = 3,
} MI_DYNAMIC_MEMORY_LOCKTYPE, *PMI_DYNAMIC_MEMORY_LOCKTYPE;

typedef enum _ARBITER_REQUEST_SOURCE
{
  ArbiterRequestUndefined = -1,
  ArbiterRequestLegacyReported = 0,
  ArbiterRequestHalReported = 1,
  ArbiterRequestLegacyAssigned = 2,
  ArbiterRequestPnpDetected = 3,
  ArbiterRequestPnpEnumerated = 4,
} ARBITER_REQUEST_SOURCE, *PARBITER_REQUEST_SOURCE;

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ unsigned short UniqueProcessId;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned char ObjectTypeIndex;
  /* 0x0005 */ unsigned char HandleAttributes;
  /* 0x0006 */ unsigned short HandleValue;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long GrantedAccess;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_HANDLE_TABLE_ENTRY_INFO, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0018 */

typedef enum _CLFS_LOG_ARCHIVE_MODE
{
  ClfsLogArchiveEnabled = 1,
  ClfsLogArchiveDisabled = 2,
} CLFS_LOG_ARCHIVE_MODE, *PCLFS_LOG_ARCHIVE_MODE;

enum WDIP_SEM_ALLOC_TYPE
{
  WDI_SEM_ALLOC_EVENT = 0,
  WDI_SEM_ALLOC_SCENARIO = 1,
  WDI_SEM_ALLOC_PROVIDER = 2,
  WDI_SEM_ALLOC_INSTANCE = 3,
  WDI_SEM_ALLOC_ACTION = 4,
  WDI_SEM_ALLOC_INFLIGHT_INFO = 5,
  WDI_SEM_ALLOC_TOTAL = 6,
};

typedef struct _MMPTE_HARDWARE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Dirty1 : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Owner : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 WriteThrough : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned __int64 CacheDisable : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Accessed : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Dirty : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Global : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 CopyOnWrite : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Unused : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Write : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned __int64 PageFrameNumber : 36; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 reserved1 : 4; /* bit position: 48 */
    /* 0x0000 */ unsigned __int64 SoftwareWsIndex : 11; /* bit position: 52 */
    /* 0x0000 */ unsigned __int64 NoExecute : 1; /* bit position: 63 */
  }; /* bitfield */
} MMPTE_HARDWARE, *PMMPTE_HARDWARE; /* size: 0x0008 */

typedef struct _HARDWARE_PTE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Write : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Owner : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 WriteThrough : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned __int64 CacheDisable : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Accessed : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Dirty : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Global : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 CopyOnWrite : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 reserved0 : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned __int64 PageFrameNumber : 28; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 reserved1 : 12; /* bit position: 40 */
    /* 0x0000 */ unsigned __int64 SoftwareWsIndex : 11; /* bit position: 52 */
    /* 0x0000 */ unsigned __int64 NoExecute : 1; /* bit position: 63 */
  }; /* bitfield */
} HARDWARE_PTE, *PHARDWARE_PTE; /* size: 0x0008 */

typedef struct _MMPTE_PROTOTYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Unused0 : 7; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 ReadOnly : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 Unused1 : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 11 */
    /* 0x0000 */ __int64 ProtoAddress : 48; /* bit position: 16 */
  }; /* bitfield */
} MMPTE_PROTOTYPE, *PMMPTE_PROTOTYPE; /* size: 0x0008 */

typedef struct _MMPTE_SOFTWARE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageFileLow : 4; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Transition : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned __int64 UsedPageTableEntries : 10; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 InStore : 1; /* bit position: 22 */
    /* 0x0000 */ unsigned __int64 Reserved : 9; /* bit position: 23 */
    /* 0x0000 */ unsigned __int64 PageFileHigh : 32; /* bit position: 32 */
  }; /* bitfield */
} MMPTE_SOFTWARE, *PMMPTE_SOFTWARE; /* size: 0x0008 */

typedef struct _MMPTE_TIMESTAMP
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 MustBeZero : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageFileLow : 4; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Transition : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned __int64 Reserved : 20; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 GlobalTimeStamp : 32; /* bit position: 32 */
  }; /* bitfield */
} MMPTE_TIMESTAMP, *PMMPTE_TIMESTAMP; /* size: 0x0008 */

typedef struct _MMPTE_TRANSITION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Write : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Owner : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 WriteThrough : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned __int64 CacheDisable : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Transition : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned __int64 PageFrameNumber : 36; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 Unused : 16; /* bit position: 48 */
  }; /* bitfield */
} MMPTE_TRANSITION, *PMMPTE_TRANSITION; /* size: 0x0008 */

typedef struct _MMPTE_SUBSECTION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Unused0 : 4; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Unused1 : 5; /* bit position: 11 */
    /* 0x0000 */ __int64 SubsectionAddress : 48; /* bit position: 16 */
  }; /* bitfield */
} MMPTE_SUBSECTION, *PMMPTE_SUBSECTION; /* size: 0x0008 */

typedef struct _MMPTE_LIST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 OneEntry : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 filler0 : 3; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned __int64 Transition : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned __int64 filler1 : 20; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 NextEntry : 32; /* bit position: 32 */
  }; /* bitfield */
} MMPTE_LIST, *PMMPTE_LIST; /* size: 0x0008 */

typedef struct _EX_PUSH_LOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Waiting : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Waking : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 MultipleShared : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Shared : 60; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} EX_PUSH_LOCK, *PEX_PUSH_LOCK; /* size: 0x0008 */

typedef struct _WHEAP_ERROR_SOURCE_TYPE_CONFIG
{
  /* 0x0000 */ struct _EX_PUSH_LOCK ConfigLock;
  /* 0x0008 */ volatile unsigned char Configured;
  /* 0x0009 */ char Padding_22[3];
  /* 0x000c */ volatile unsigned long Flags;
  /* 0x0010 */ void* volatile Correct /* function */;
  /* 0x0018 */ void* volatile Initialize /* function */;
  /* 0x0020 */ void* volatile CreateRecord /* function */;
  /* 0x0028 */ void* volatile Recover /* function */;
} WHEAP_ERROR_SOURCE_TYPE_CONFIG, *PWHEAP_ERROR_SOURCE_TYPE_CONFIG; /* size: 0x0030 */

typedef enum _POLICY_AUDIT_EVENT_TYPE_EX
{
  iSystem_SecurityStateChange = 100,
  iSystem_SecuritySubsystemExtension = 101,
  iSystem_Integrity = 102,
  iSystem_IPSecDriverEvents = 103,
  iSystem_Others = 104,
  iLogon_Logon = 105,
  iLogon_Logoff = 106,
  iLogon_AccountLockout = 107,
  iLogon_IPSecMainMode = 108,
  iLogon_SpecialLogon = 109,
  iLogon_IPSecQuickMode = 110,
  iLogon_IPSecUsermode = 111,
  iLogon_Others = 112,
  iLogon_NPS = 113,
  iObjectAccess_FileSystem = 114,
  iObjectAccess_Registry = 115,
  iObjectAccess_Kernel = 116,
  iObjectAccess_Sam = 117,
  iObjectAccess_Other = 118,
  iObjectAccess_CertificationAuthority = 119,
  iObjectAccess_ApplicationGenerated = 120,
  iObjectAccess_HandleBasedAudits = 121,
  iObjectAccess_Share = 122,
  iObjectAccess_FirewallPacketDrops = 123,
  iObjectAccess_FirewallConnection = 124,
  iObjectAccess_DetailedFileShare = 125,
  iPrivilegeUse_Sensitive = 126,
  iPrivilegeUse_NonSensitive = 127,
  iPrivilegeUse_Others = 128,
  iDetailedTracking_ProcessCreation = 129,
  iDetailedTracking_ProcessTermination = 130,
  iDetailedTracking_DpapiActivity = 131,
  iDetailedTracking_RpcCall = 132,
  iPolicyChange_AuditPolicy = 133,
  iPolicyChange_AuthenticationPolicy = 134,
  iPolicyChange_AuthorizationPolicy = 135,
  iPolicyChange_MpsscvRulePolicy = 136,
  iPolicyChange_WfpIPSecPolicy = 137,
  iPolicyChange_Others = 138,
  iAccountManagement_UserAccount = 139,
  iAccountManagement_ComputerAccount = 140,
  iAccountManagement_SecurityGroup = 141,
  iAccountManagement_DistributionGroup = 142,
  iAccountManagement_ApplicationGroup = 143,
  iAccountManagement_Others = 144,
  iDSAccess_DSAccess = 145,
  iDSAccess_AdAuditChanges = 146,
  iDS_Replication = 147,
  iDS_DetailedReplication = 148,
  iAccountLogon_CredentialValidation = 149,
  iAccountLogon_Kerberos = 150,
  iAccountLogon_Others = 151,
  iAccountLogon_KerbCredentialValidation = 152,
  iUnknownSubCategory = 999,
} POLICY_AUDIT_EVENT_TYPE_EX, *PPOLICY_AUDIT_EVENT_TYPE_EX;

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION
{
  /* 0x0000 */ unsigned long PrefetchPatchCount;
} SYSTEM_PREFETCH_PATCH_INFORMATION, *PSYSTEM_PREFETCH_PATCH_INFORMATION; /* size: 0x0004 */

typedef enum _PF_FILE_ACCESS_TYPE
{
  PfFileAccessTypeRead = 0,
  PfFileAccessTypeWrite = 1,
  PfFileAccessTypeMax = 2,
} PF_FILE_ACCESS_TYPE, *PPF_FILE_ACCESS_TYPE;

typedef enum _ADDITIVE_MODE
{
  AM_NORMAL = 0,
  AM_ADDITIVE_ONLY = 1,
  AM_NO_ADDITIVE = 2,
} ADDITIVE_MODE, *PADDITIVE_MODE;

typedef struct _XSAVE_AREA_HEADER
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned __int64 Reserved[7];
} XSAVE_AREA_HEADER, *PXSAVE_AREA_HEADER; /* size: 0x0040 */

typedef struct _XSAVE_AREA
{
  /* 0x0000 */ struct _XSAVE_FORMAT LegacyState;
  /* 0x0200 */ struct _XSAVE_AREA_HEADER Header;
} XSAVE_AREA, *PXSAVE_AREA; /* size: 0x0240 */

typedef enum _EVENT_TYPE
{
  NotificationEvent = 0,
  SynchronizationEvent = 1,
} EVENT_TYPE, *PEVENT_TYPE;

typedef struct _VI_POOL_PAGE_HEADER
{
  /* 0x0000 */ struct _SLIST_ENTRY* NextPage;
  /* 0x0008 */ void* VerifierEntry;
  /* 0x0010 */ unsigned __int64 Signature;
} VI_POOL_PAGE_HEADER, *PVI_POOL_PAGE_HEADER; /* size: 0x0018 */

typedef struct _VI_POOL_ENTRY_INUSE
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ void* CallingAddress;
  /* 0x0010 */ unsigned __int64 NumberOfBytes;
  /* 0x0018 */ unsigned __int64 Tag;
} VI_POOL_ENTRY_INUSE, *PVI_POOL_ENTRY_INUSE; /* size: 0x0020 */

typedef struct _VI_POOL_ENTRY
{
  union
  {
    /* 0x0000 */ struct _VI_POOL_PAGE_HEADER PageHeader;
    /* 0x0000 */ struct _VI_POOL_ENTRY_INUSE InUse;
    struct
    {
      /* 0x0000 */ struct _SLIST_ENTRY* NextFree;
      /* 0x0008 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} VI_POOL_ENTRY, *PVI_POOL_ENTRY; /* size: 0x0020 */

typedef struct _DRIVER_EXTENSION
{
  /* 0x0000 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0008 */ void* AddDevice /* function */;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long Padding_23;
  /* 0x0018 */ struct _UNICODE_STRING ServiceKeyName;
  /* 0x0028 */ struct _IO_CLIENT_EXTENSION* ClientDriverExtension;
  /* 0x0030 */ struct _FS_FILTER_CALLBACKS* FsFilterCallbacks;
} DRIVER_EXTENSION, *PDRIVER_EXTENSION; /* size: 0x0038 */

typedef enum _IO_CONTAINER_NOTIFICATION_CLASS
{
  IoSessionStateNotification = 0,
  IoMaxContainerNotificationClass = 1,
} IO_CONTAINER_NOTIFICATION_CLASS, *PIO_CONTAINER_NOTIFICATION_CLASS;

typedef enum _MI_VAD_TYPE
{
  VadNone = 0,
  VadDevicePhysicalMemory = 1,
  VadImageMap = 2,
  VadAwe = 3,
  VadWriteWatch = 4,
  VadLargePages = 5,
  VadRotatePhysical = 6,
  VadLargePageSection = 7,
} MI_VAD_TYPE, *PMI_VAD_TYPE;

typedef enum _SUITE_TYPE
{
  SmallBusiness = 0,
  Enterprise = 1,
  BackOffice = 2,
  CommunicationServer = 3,
  TerminalServer = 4,
  SmallBusinessRestricted = 5,
  EmbeddedNT = 6,
  DataCenter = 7,
  SingleUserTS = 8,
  Personal = 9,
  Blade = 10,
  EmbeddedRestricted = 11,
  SecurityAppliance = 12,
  StorageServer = 13,
  ComputeServer = 14,
  WHServer = 15,
  MaxSuiteType = 16,
} SUITE_TYPE, *PSUITE_TYPE;

typedef struct _TRANSACTION_ENLISTMENT_PAIR
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID ResourceManagerId;
} TRANSACTION_ENLISTMENT_PAIR, *PTRANSACTION_ENLISTMENT_PAIR; /* size: 0x0020 */

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEnlistments;
  /* 0x0004 */ struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
} TRANSACTION_ENLISTMENTS_INFORMATION, *PTRANSACTION_ENLISTMENTS_INFORMATION; /* size: 0x0024 */

typedef enum _WOW64_SHARED_INFORMATION
{
  SharedNtdll32LdrInitializeThunk = 0,
  SharedNtdll32KiUserExceptionDispatcher = 1,
  SharedNtdll32KiUserApcDispatcher = 2,
  SharedNtdll32KiUserCallbackDispatcher = 3,
  SharedNtdll32LdrHotPatchRoutine = 4,
  SharedNtdll32ExpInterlockedPopEntrySListFault = 5,
  SharedNtdll32ExpInterlockedPopEntrySListResume = 6,
  SharedNtdll32ExpInterlockedPopEntrySListEnd = 7,
  SharedNtdll32RtlUserThreadStart = 8,
  SharedNtdll32pQueryProcessDebugInformationRemote = 9,
  SharedNtdll32EtwpNotificationThread = 10,
  SharedNtdll32BaseAddress = 11,
  Wow64SharedPageEntriesCount = 12,
} WOW64_SHARED_INFORMATION, *PWOW64_SHARED_INFORMATION;

enum EMP_NODE_TYPE
{
  EMP_CALLBACK_TYPE = 0,
  EMP_RULE_TYPE = 1,
  EMP_LOGIC_TYPE = 2,
};

typedef struct _KDESCRIPTOR
{
  /* 0x0000 */ unsigned short Pad[3];
  /* 0x0006 */ unsigned short Limit;
  /* 0x0008 */ void* Base;
} KDESCRIPTOR, *PKDESCRIPTOR; /* size: 0x0010 */

typedef struct _KSPECIAL_REGISTERS
{
  /* 0x0000 */ unsigned __int64 Cr0;
  /* 0x0008 */ unsigned __int64 Cr2;
  /* 0x0010 */ unsigned __int64 Cr3;
  /* 0x0018 */ unsigned __int64 Cr4;
  /* 0x0020 */ unsigned __int64 KernelDr0;
  /* 0x0028 */ unsigned __int64 KernelDr1;
  /* 0x0030 */ unsigned __int64 KernelDr2;
  /* 0x0038 */ unsigned __int64 KernelDr3;
  /* 0x0040 */ unsigned __int64 KernelDr6;
  /* 0x0048 */ unsigned __int64 KernelDr7;
  /* 0x0050 */ struct _KDESCRIPTOR Gdtr;
  /* 0x0060 */ struct _KDESCRIPTOR Idtr;
  /* 0x0070 */ unsigned short Tr;
  /* 0x0072 */ unsigned short Ldtr;
  /* 0x0074 */ unsigned long MxCsr;
  /* 0x0078 */ unsigned __int64 DebugControl;
  /* 0x0080 */ unsigned __int64 LastBranchToRip;
  /* 0x0088 */ unsigned __int64 LastBranchFromRip;
  /* 0x0090 */ unsigned __int64 LastExceptionToRip;
  /* 0x0098 */ unsigned __int64 LastExceptionFromRip;
  /* 0x00a0 */ unsigned __int64 Cr8;
  /* 0x00a8 */ unsigned __int64 MsrGsBase;
  /* 0x00b0 */ unsigned __int64 MsrGsSwap;
  /* 0x00b8 */ unsigned __int64 MsrStar;
  /* 0x00c0 */ unsigned __int64 MsrLStar;
  /* 0x00c8 */ unsigned __int64 MsrCStar;
  /* 0x00d0 */ unsigned __int64 MsrSyscallMask;
} KSPECIAL_REGISTERS, *PKSPECIAL_REGISTERS; /* size: 0x00d8 */

typedef enum _REQUESTER_TYPE
{
  KernelRequester = 0,
  UserProcessRequester = 1,
  UserSharedServiceRequester = 2,
} REQUESTER_TYPE, *PREQUESTER_TYPE;

typedef enum _TRUSTED_INFORMATION_CLASS
{
  TrustedDomainNameInformation = 1,
  TrustedControllersInformation = 2,
  TrustedPosixOffsetInformation = 3,
  TrustedPasswordInformation = 4,
  TrustedDomainInformationBasic = 5,
  TrustedDomainInformationEx = 6,
  TrustedDomainAuthInformation = 7,
  TrustedDomainFullInformation = 8,
  TrustedDomainAuthInformationInternal = 9,
  TrustedDomainFullInformationInternal = 10,
  TrustedDomainInformationEx2Internal = 11,
  TrustedDomainFullInformation2Internal = 12,
  TrustedDomainSupportedEncryptionTypes = 13,
} TRUSTED_INFORMATION_CLASS, *PTRUSTED_INFORMATION_CLASS;

typedef struct _OB_PRE_OPERATION_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
  union
  {
    /* 0x0004 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long KernelHandle : 1; /* bit position: 0 */
      /* 0x0004 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0008 */ void* Object;
  /* 0x0010 */ struct _OBJECT_TYPE* ObjectType;
  /* 0x0018 */ void* CallContext;
  /* 0x0020 */ union _OB_PRE_OPERATION_PARAMETERS* Parameters;
} OB_PRE_OPERATION_INFORMATION, *POB_PRE_OPERATION_INFORMATION; /* size: 0x0028 */

typedef struct _SID_AND_ATTRIBUTES
{
  /* 0x0000 */ void* Sid;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ long __PADDING__[1];
} SID_AND_ATTRIBUTES, *PSID_AND_ATTRIBUTES; /* size: 0x0010 */

typedef struct _TOKEN_GROUPS
{
  /* 0x0000 */ unsigned long GroupCount;
  /* 0x0004 */ long Padding_24;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES Groups[1];
} TOKEN_GROUPS, *PTOKEN_GROUPS; /* size: 0x0018 */

enum HV_ERROR_TYPES
{
  HV_MISCELLANEOUS_ERROR = 0,
  HV_PERFORMANCE_COUNTER_DECREASED = 1,
  HV_PERFORMANCE_COUNTER_SKIPPED = 2,
  HV_FREED_TOO_MANY_COMMON_BUFFERS = 3,
  HV_FREED_TOO_MANY_ADAPTER_CHANNELS = 4,
  HV_FREED_TOO_MANY_MAP_REGISTERS = 5,
  HV_FREED_TOO_MANY_SCATTER_GATHER_LISTS = 6,
  HV_LEFTOVER_COMMON_BUFFERS = 7,
  HV_LEFTOVER_ADAPTER_CHANNELS = 8,
  HV_LEFTOVER_MAP_REGISTERS = 9,
  HV_LEFTOVER_SCATTER_GATHER_LISTS = 10,
  HV_TOO_MANY_ADAPTER_CHANNELS = 11,
  HV_TOO_MANY_MAP_REGISTERS = 12,
  HV_DID_NOT_FLUSH_ADAPTER_BUFFERS = 13,
  HV_DMA_BUFFER_NOT_LOCKED = 14,
  HV_BOUNDARY_OVERRUN = 15,
  HV_CANNOT_FREE_MAP_REGISTERS = 16,
  HV_DID_NOT_PUT_ADAPTER = 17,
  HV_MDL_FLAGS_NOT_SET = 18,
  HV_BAD_IRQL = 19,
  HV_BAD_IRQL_JUST_WARN = 20,
  HV_OUT_OF_MAP_REGISTERS = 21,
  HV_FLUSH_EMPTY_BUFFERS = 22,
  HV_MISMATCHED_MAP_FLUSH = 23,
  HV_ADAPTER_ALREADY_RELEASED = 24,
  HV_NULL_DMA_ADAPTER = 25,
  HV_MAP_FLUSH_NO_TRANSFER = 26,
  HV_ADDRESS_NOT_IN_MDL = 27,
  HV_DATA_LOSS = 28,
  HV_DOUBLE_MAP_REGISTER = 29,
  HV_OBSOLETE_API = 30,
  HV_BAD_MDL = 31,
  HV_FLUSH_NOT_MAPPED = 32,
  HV_MAP_ZERO_LENGTH_BUFFER = 33,
  HV_BUFFER_NOT_MAPPED_IN_SYSTEM_VA = 34,
  HV_MAX_ERROR_TYPES = 35,
  HV_ERROR_HAS_SUBCODE = 0x10000000,
};

typedef enum _LSA_SID_NAME_MAPPING_OPERATION_TYPE
{
  LsaSidNameMappingOperation_Add = 0,
  LsaSidNameMappingOperation_Remove = 1,
  LsaSidNameMappingOperation_AddMultiple = 2,
} LSA_SID_NAME_MAPPING_OPERATION_TYPE, *PLSA_SID_NAME_MAPPING_OPERATION_TYPE;

typedef enum _CLS_IOSTATS_CLASS
{
  ClsIoStatsDefault = 0,
  ClsIoStatsMax = 0xffffffff,
} CLS_IOSTATS_CLASS, *PCLS_IOSTATS_CLASS;

typedef struct _KSPIN_LOCK_QUEUE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE* volatile Next;
  /* 0x0008 */ unsigned __int64* volatile Lock;
} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE; /* size: 0x0010 */

typedef enum _CLFS_CONTEXT_MODE
{
  ClfsContextNone = 0,
  ClfsContextUndoNext = 1,
  ClfsContextPrevious = 2,
  ClfsContextForward = 3,
} CLFS_CONTEXT_MODE, *PCLFS_CONTEXT_MODE;

typedef struct _FS_FILTER_CALLBACKS
{
  /* 0x0000 */ unsigned long SizeOfFsFilterCallbacks;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ void* PreAcquireForSectionSynchronization /* function */;
  /* 0x0010 */ void* PostAcquireForSectionSynchronization /* function */;
  /* 0x0018 */ void* PreReleaseForSectionSynchronization /* function */;
  /* 0x0020 */ void* PostReleaseForSectionSynchronization /* function */;
  /* 0x0028 */ void* PreAcquireForCcFlush /* function */;
  /* 0x0030 */ void* PostAcquireForCcFlush /* function */;
  /* 0x0038 */ void* PreReleaseForCcFlush /* function */;
  /* 0x0040 */ void* PostReleaseForCcFlush /* function */;
  /* 0x0048 */ void* PreAcquireForModifiedPageWriter /* function */;
  /* 0x0050 */ void* PostAcquireForModifiedPageWriter /* function */;
  /* 0x0058 */ void* PreReleaseForModifiedPageWriter /* function */;
  /* 0x0060 */ void* PostReleaseForModifiedPageWriter /* function */;
} FS_FILTER_CALLBACKS, *PFS_FILTER_CALLBACKS; /* size: 0x0068 */

typedef enum _CM_SHARE_DISPOSITION
{
  CmResourceShareUndetermined = 0,
  CmResourceShareDeviceExclusive = 1,
  CmResourceShareDriverExclusive = 2,
  CmResourceShareShared = 3,
} CM_SHARE_DISPOSITION, *PCM_SHARE_DISPOSITION;

typedef enum _IRQ_PRIORITY
{
  IrqPriorityUndefined = 0,
  IrqPriorityLow = 1,
  IrqPriorityNormal = 2,
  IrqPriorityHigh = 3,
} IRQ_PRIORITY, *PIRQ_PRIORITY;

typedef struct _IO_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Option;
  /* 0x0001 */ unsigned char Type;
  /* 0x0002 */ unsigned char ShareDisposition;
  /* 0x0003 */ unsigned char Spare1;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short Spare2;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Port;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory;
      struct
      {
        /* 0x0008 */ unsigned long MinimumVector;
        /* 0x000c */ unsigned long MaximumVector;
        /* 0x0010 */ unsigned short AffinityPolicy;
        /* 0x0012 */ unsigned short Group;
        /* 0x0014 */ enum _IRQ_PRIORITY PriorityPolicy;
        /* 0x0018 */ unsigned __int64 TargetedProcessors;
      } /* size: 0x0018 */ Interrupt;
      struct
      {
        /* 0x0008 */ unsigned long MinimumChannel;
        /* 0x000c */ unsigned long MaximumChannel;
      } /* size: 0x0008 */ Dma;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Generic;
      struct
      {
        /* 0x0008 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long MinBusNumber;
        /* 0x0010 */ unsigned long MaxBusNumber;
        /* 0x0014 */ unsigned long Reserved;
      } /* size: 0x0010 */ BusNumber;
      struct
      {
        /* 0x0008 */ unsigned long Priority;
        /* 0x000c */ unsigned long Reserved1;
        /* 0x0010 */ unsigned long Reserved2;
      } /* size: 0x000c */ ConfigData;
      struct
      {
        /* 0x0008 */ unsigned long Length40;
        /* 0x000c */ unsigned long Alignment40;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory40;
      struct
      {
        /* 0x0008 */ unsigned long Length48;
        /* 0x000c */ unsigned long Alignment48;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory48;
      struct
      {
        /* 0x0008 */ unsigned long Length64;
        /* 0x000c */ unsigned long Alignment64;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory64;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _IO_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST; /* size: 0x0028 */

typedef enum _TRANSACTION_STATE
{
  TransactionStateNormal = 1,
  TransactionStateIndoubt = 2,
  TransactionStateCommittedNotify = 3,
} TRANSACTION_STATE, *PTRANSACTION_STATE;

typedef enum _SYSTEM_DLL_TYPE
{
  PsNativeSystemDll = 0,
  PsWow64SystemDll = 1,
  PsSystemDllTotalTypes = 2,
} SYSTEM_DLL_TYPE, *PSYSTEM_DLL_TYPE;

typedef union _MCI_STATS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short McaErrorCode;
      /* 0x0002 */ unsigned short ModelErrorCode;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OtherInformation : 25; /* bit position: 0 */
        /* 0x0004 */ unsigned long ContextCorrupt : 1; /* bit position: 25 */
        /* 0x0004 */ unsigned long AddressValid : 1; /* bit position: 26 */
        /* 0x0004 */ unsigned long MiscValid : 1; /* bit position: 27 */
        /* 0x0004 */ unsigned long ErrorEnabled : 1; /* bit position: 28 */
        /* 0x0004 */ unsigned long UncorrectedError : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long StatusOverFlow : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Valid : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0008 */ MciStatus;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_STATS, *PMCI_STATS; /* size: 0x0008 */

typedef union _MCI_ADDR
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Address;
      /* 0x0004 */ unsigned long Reserved;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_ADDR, *PMCI_ADDR; /* size: 0x0008 */

typedef struct _MCA_EXCEPTION
{
  /* 0x0000 */ unsigned long VersionNumber;
  /* 0x0004 */ enum MCA_EXCEPTION_TYPE ExceptionType;
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long ProcessorNumber;
  /* 0x0014 */ unsigned long Reserved1;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned char BankNumber;
        /* 0x0019 */ unsigned char Reserved2[7];
        /* 0x0020 */ union _MCI_STATS Status;
        /* 0x0028 */ union _MCI_ADDR Address;
        /* 0x0030 */ unsigned __int64 Misc;
      } /* size: 0x0020 */ Mca;
      struct
      {
        /* 0x0018 */ unsigned __int64 Address;
        /* 0x0020 */ unsigned __int64 Type;
      } /* size: 0x0010 */ Mce;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
  /* 0x0038 */ unsigned long ExtCnt;
  /* 0x003c */ unsigned long Reserved3;
  /* 0x0040 */ unsigned __int64 ExtReg[24];
} MCA_EXCEPTION, *PMCA_EXCEPTION; /* size: 0x0100 */

typedef enum _TAG_UNNAMED_1
{
  Start = 0,
  InNumber = 1,
  AfterDoubleColon = 2,
} TAG_UNNAMED_1, *PTAG_UNNAMED_1;

typedef struct _PP_LOOKASIDE_LIST
{
  /* 0x0000 */ struct _GENERAL_LOOKASIDE* P;
  /* 0x0008 */ struct _GENERAL_LOOKASIDE* L;
} PP_LOOKASIDE_LIST, *PPP_LOOKASIDE_LIST; /* size: 0x0010 */

typedef enum _THREAD_UMS_INFORMATION_COMMAND
{
  UmsInformationCommandInvalid = 0,
  UmsInformationCommandAttach = 1,
  UmsInformationCommandDetach = 2,
} THREAD_UMS_INFORMATION_COMMAND, *PTHREAD_UMS_INFORMATION_COMMAND;

typedef enum _WHEA_ERROR_PACKET_DATA_FORMAT
{
  WheaDataFormatIPFSalRecord = 0,
  WheaDataFormatXPFMCA = 1,
  WheaDataFormatMemory = 2,
  WheaDataFormatPCIExpress = 3,
  WheaDataFormatNMIPort = 4,
  WheaDataFormatPCIXBus = 5,
  WheaDataFormatPCIXDevice = 6,
  WheaDataFormatGeneric = 7,
  WheaDataFormatMax = 8,
} WHEA_ERROR_PACKET_DATA_FORMAT, *PWHEA_ERROR_PACKET_DATA_FORMAT;

typedef enum _VI_DEADLOCK_RESOURCE_TYPE
{
  VfDeadlockUnknown = 0,
  VfDeadlockMutex = 1,
  VfDeadlockMutexAbandoned = 2,
  VfDeadlockFastMutex = 3,
  VfDeadlockFastMutexUnsafe = 4,
  VfDeadlockSpinLock = 5,
  VfDeadlockInStackQueuedSpinLock = 6,
  VfDeadlockUnusedSpinLock = 7,
  VfDeadlockEresource = 8,
  VfDeadlockTypeMaximum = 9,
} VI_DEADLOCK_RESOURCE_TYPE, *PVI_DEADLOCK_RESOURCE_TYPE;

typedef enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = -1,
  Internal = 0,
  Isa = 1,
  Eisa = 2,
  MicroChannel = 3,
  TurboChannel = 4,
  PCIBus = 5,
  VMEBus = 6,
  NuBus = 7,
  PCMCIABus = 8,
  CBus = 9,
  MPIBus = 10,
  MPSABus = 11,
  ProcessorInternal = 12,
  InternalPowerBus = 13,
  PNPISABus = 14,
  PNPBus = 15,
  Vmcs = 16,
  MaximumInterfaceType = 17,
} INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  /* 0x0000 */ unsigned long ListSize;
  /* 0x0004 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long SlotNumber;
  /* 0x0010 */ unsigned long Reserved[3];
  /* 0x001c */ unsigned long AlternativeLists;
  /* 0x0020 */ struct _IO_RESOURCE_LIST List[1];
} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST; /* size: 0x0048 */

typedef struct _SMKM_CRYPTO_REG_PARAMS
{
  /* 0x0000 */ unsigned long EncryptionKeySize;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long EncryptionScope : 2; /* bit position: 0 */
    /* 0x0004 */ unsigned long Spare : 30; /* bit position: 2 */
  }; /* bitfield */
} SMKM_CRYPTO_REG_PARAMS, *PSMKM_CRYPTO_REG_PARAMS; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_2
{
  SameNode = 0,
  SiblingNode = 1,
  ChildNode = 2,
} TAG_UNNAMED_2, *PTAG_UNNAMED_2;

typedef enum _IO_NOTIFICATION_EVENT_CATEGORY
{
  EventCategoryReserved = 0,
  EventCategoryHardwareProfileChange = 1,
  EventCategoryDeviceInterfaceChange = 2,
  EventCategoryTargetDeviceChange = 3,
} IO_NOTIFICATION_EVENT_CATEGORY, *PIO_NOTIFICATION_EVENT_CATEGORY;

typedef enum _KDPC_IMPORTANCE
{
  LowImportance = 0,
  MediumImportance = 1,
  HighImportance = 2,
  MediumHighImportance = 3,
} KDPC_IMPORTANCE, *PKDPC_IMPORTANCE;

typedef enum _stringsSectionType
{
  StringsSectionNone = 0,
  StringsSectionPlain = 1,
  StringsSectionLoosePrimaryMatch = 2,
  StringsSectionExactPrimaryMatch = 3,
  StringsSectionExactMatch = 4,
} stringsSectionType, *PstringsSectionType;

enum PCI_EXPRESS_L1_EXIT_LATENCY
{
  L1_Below1us = 0,
  L1_1us_2us = 1,
  L1_2us_4us = 2,
  L1_4us_8us = 3,
  L1_8us_16us = 4,
  L1_16us_32us = 5,
  L1_32us_64us = 6,
  L1_Above64us = 7,
};

typedef enum _WORKING_SET_TYPE
{
  WorkingSetTypeUser = 0,
  WorkingSetTypeSession = 1,
  WorkingSetTypeSystemTypes = 2,
  WorkingSetTypeSystemCache = 2,
  WorkingSetTypePagedPool = 3,
  WorkingSetTypeSystemPtes = 4,
  WorkingSetTypeMaximum = 5,
} WORKING_SET_TYPE, *PWORKING_SET_TYPE;

typedef struct _RTL_TRACE_BLOCK
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long Padding_25;
  /* 0x0010 */ unsigned __int64 UserCount;
  /* 0x0018 */ unsigned __int64 UserSize;
  /* 0x0020 */ void* UserContext;
  /* 0x0028 */ struct _RTL_TRACE_BLOCK* Next;
  /* 0x0030 */ void** Trace;
} RTL_TRACE_BLOCK, *PRTL_TRACE_BLOCK; /* size: 0x0038 */

typedef enum _DUMP_TYPES
{
  DUMP_TYPE_INVALID = -1,
  DUMP_TYPE_UNKNOWN = 0,
  DUMP_TYPE_FULL = 1,
  DUMP_TYPE_SUMMARY = 2,
  DUMP_TYPE_HEADER = 3,
  DUMP_TYPE_TRIAGE = 4,
} DUMP_TYPES, *PDUMP_TYPES;

typedef struct _MMCLONE_HEADER
{
  /* 0x0000 */ unsigned long NumberOfPtes;
  /* 0x0004 */ volatile long NumberOfProcessReferences;
  /* 0x0008 */ struct _MMCLONE_BLOCK* ClonePtes;
} MMCLONE_HEADER, *PMMCLONE_HEADER; /* size: 0x0010 */

typedef enum _EMULATOR_PORT_ACCESS_TYPE
{
  Uchar = 0,
  Ushort = 1,
  Ulong = 2,
} EMULATOR_PORT_ACCESS_TYPE, *PEMULATOR_PORT_ACCESS_TYPE;

typedef struct _AMD64_XMM_SAVE_AREA32
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _AMD64_M128 FloatRegisters[8];
  /* 0x00a0 */ struct _AMD64_M128 XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[96];
} AMD64_XMM_SAVE_AREA32, *PAMD64_XMM_SAVE_AREA32; /* size: 0x0200 */

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS
{
  JournalCreateKey = 0,
  JournalDeleteKey = 1,
  JournalRenameKey = 2,
  JournalSetValue = 3,
  JournalDeleteValue = 4,
  JournalSetKeySecurity = 5,
  JournalSetKeyUserFlags = 6,
  JournalSetLastWriteTime = 7,
  JournalBeginTransaction = 8,
  JournalCommitTransaction = 9,
  JournalAbortTransaction = 10,
  MaxJournalChangeAction = 11,
} JOURNAL_CHANGE_INFORMATION_CLASS, *PJOURNAL_CHANGE_INFORMATION_CLASS;

typedef enum _BALANCE_OBJECT
{
  PeriodicEvent = 0,
  WorkingSetManagerEvent = 1,
  MaximumObject = 2,
} BALANCE_OBJECT, *PBALANCE_OBJECT;

typedef enum _WATCHDOG_INFORMATION_CLASS
{
  WdInfoTimeoutValue = 0,
  WdInfoResetTimer = 1,
  WdInfoStopTimer = 2,
  WdInfoStartTimer = 3,
  WdInfoTriggerAction = 4,
  WdInfoState = 5,
} WATCHDOG_INFORMATION_CLASS, *PWATCHDOG_INFORMATION_CLASS;

typedef struct _CLIENT_ID
{
  /* 0x0000 */ void* UniqueProcess;
  /* 0x0008 */ void* UniqueThread;
} CLIENT_ID, *PCLIENT_ID; /* size: 0x0010 */

typedef struct _SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER KernelTime;
  /* 0x0008 */ union _LARGE_INTEGER UserTime;
  /* 0x0010 */ union _LARGE_INTEGER CreateTime;
  /* 0x0018 */ unsigned long WaitTime;
  /* 0x001c */ long Padding_26;
  /* 0x0020 */ void* StartAddress;
  /* 0x0028 */ struct _CLIENT_ID ClientId;
  /* 0x0038 */ long Priority;
  /* 0x003c */ long BasePriority;
  /* 0x0040 */ unsigned long ContextSwitches;
  /* 0x0044 */ unsigned long ThreadState;
  /* 0x0048 */ unsigned long WaitReason;
  /* 0x004c */ long __PADDING__[1];
} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION; /* size: 0x0050 */

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
  /* 0x0050 */ void* StackBase;
  /* 0x0058 */ void* StackLimit;
  /* 0x0060 */ void* Win32StartAddress;
  /* 0x0068 */ void* TebBase;
  /* 0x0070 */ unsigned __int64 Reserved2;
  /* 0x0078 */ unsigned __int64 Reserved3;
  /* 0x0080 */ unsigned __int64 Reserved4;
} SYSTEM_EXTENDED_THREAD_INFORMATION, *PSYSTEM_EXTENDED_THREAD_INFORMATION; /* size: 0x0088 */

typedef enum _SYSDBG_COMMAND
{
  SysDbgQueryModuleInformation = 0,
  SysDbgQueryTraceInformation = 1,
  SysDbgSetTracepoint = 2,
  SysDbgSetSpecialCall = 3,
  SysDbgClearSpecialCalls = 4,
  SysDbgQuerySpecialCalls = 5,
  SysDbgBreakPoint = 6,
  SysDbgQueryVersion = 7,
  SysDbgReadVirtual = 8,
  SysDbgWriteVirtual = 9,
  SysDbgReadPhysical = 10,
  SysDbgWritePhysical = 11,
  SysDbgReadControlSpace = 12,
  SysDbgWriteControlSpace = 13,
  SysDbgReadIoSpace = 14,
  SysDbgWriteIoSpace = 15,
  SysDbgReadMsr = 16,
  SysDbgWriteMsr = 17,
  SysDbgReadBusData = 18,
  SysDbgWriteBusData = 19,
  SysDbgCheckLowMemory = 20,
  SysDbgEnableKernelDebugger = 21,
  SysDbgDisableKernelDebugger = 22,
  SysDbgGetAutoKdEnable = 23,
  SysDbgSetAutoKdEnable = 24,
  SysDbgGetPrintBufferSize = 25,
  SysDbgSetPrintBufferSize = 26,
  SysDbgGetKdUmExceptionEnable = 27,
  SysDbgSetKdUmExceptionEnable = 28,
  SysDbgGetTriageDump = 29,
  SysDbgGetKdBlockEnable = 30,
  SysDbgSetKdBlockEnable = 31,
  SysDbgRegisterForUmBreakInfo = 32,
  SysDbgGetUmBreakPid = 33,
  SysDbgClearUmBreakPid = 34,
  SysDbgGetUmAttachPid = 35,
  SysDbgClearUmAttachPid = 36,
} SYSDBG_COMMAND, *PSYSDBG_COMMAND;

enum BUS_QUERY_ID_TYPE
{
  BusQueryDeviceID = 0,
  BusQueryHardwareIDs = 1,
  BusQueryCompatibleIDs = 2,
  BusQueryInstanceID = 3,
  BusQueryDeviceSerialNumber = 4,
  BusQueryDeviceUniqueID = 5,
};

enum PCI_EXPRESS_L0s_EXIT_LATENCY
{
  L0s_Below64ns = 0,
  L0s_64ns_128ns = 1,
  L0s_128ns_256ns = 2,
  L0s_256ns_512ns = 3,
  L0s_512ns_1us = 4,
  L0s_1us_2us = 5,
  L0s_2us_4us = 6,
  L0s_Above4us = 7,
};

typedef enum _PFSN_BOOT_PHASE_ID
{
  PfSnSystemDriverInitPhase = 120,
  PfSnBootAcceptedRegistryInitPhase = 270,
  PfSnUserShellReadyPhase = 300,
  PfSnMaxBootPhaseId = 900,
} PFSN_BOOT_PHASE_ID, *PPFSN_BOOT_PHASE_ID;

enum WMIENABLEDISABLEFUNCTION
{
  WmiEventGeneration = 0,
  WmiDataBlockCollection = 1,
};

typedef enum _KPROCESS_STATE
{
  ProcessInMemory = 0,
  ProcessOutOfMemory = 1,
  ProcessInTransition = 2,
  ProcessOutTransition = 3,
  ProcessInSwap = 4,
  ProcessOutSwap = 5,
  ProcessAllSwapStates = 6,
} KPROCESS_STATE, *PKPROCESS_STATE;

typedef enum _HV_CALL_CODE
{
  HvCallReserved0000 = 0,
  HvCallSwitchVirtualAddressSpace = 1,
  HvCallFlushVirtualAddressSpace = 2,
  HvCallFlushVirtualAddressList = 3,
  HvCallGetLogicalProcessorRunTime = 4,
  HvCallDeprecated0005 = 5,
  HvCallDeprecated0006 = 6,
  HvCallDeprecated0007 = 7,
  HvCallNotifyLongSpinWait = 8,
  HvCallParkLogicalProcessors = 9,
  HvCallInvokeHypervisorDebugger = 10,
  HvCallReserved000b = 11,
  HvCallReserved000c = 12,
  HvCallReserved000d = 13,
  HvCallReserved000e = 14,
  HvCallReserved000f = 15,
  HvCallReserved0010 = 16,
  HvCallReserved0011 = 17,
  HvCallReserved0012 = 18,
  HvCallReserved0013 = 19,
  HvCallReserved0014 = 20,
  HvCallReserved0015 = 21,
  HvCallReserved0016 = 22,
  HvCallReserved0017 = 23,
  HvCallReserved0018 = 24,
  HvCallReserved0019 = 25,
  HvCallReserved001a = 26,
  HvCallReserved001b = 27,
  HvCallReserved001c = 28,
  HvCallReserved001d = 29,
  HvCallReserved001e = 30,
  HvCallReserved001f = 31,
  HvCallReserved0020 = 32,
  HvCallReserved0021 = 33,
  HvCallReserved0022 = 34,
  HvCallReserved0023 = 35,
  HvCallReserved0024 = 36,
  HvCallReserved0025 = 37,
  HvCallReserved0026 = 38,
  HvCallReserved0027 = 39,
  HvCallReserved0028 = 40,
  HvCallReserved0029 = 41,
  HvCallReserved002a = 42,
  HvCallReserved002b = 43,
  HvCallReserved002c = 44,
  HvCallReserved002d = 45,
  HvCallReserved002e = 46,
  HvCallReserved002f = 47,
  HvCallReserved0030 = 48,
  HvCallReserved0031 = 49,
  HvCallReserved0032 = 50,
  HvCallReserved0033 = 51,
  HvCallReserved0034 = 52,
  HvCallReserved0035 = 53,
  HvCallReserved0036 = 54,
  HvCallReserved0037 = 55,
  HvCallReserved0038 = 56,
  HvCallReserved0039 = 57,
  HvCallReserved003a = 58,
  HvCallReserved003b = 59,
  HvCallReserved003c = 60,
  HvCallReserved003d = 61,
  HvCallReserved003e = 62,
  HvCallReserved003f = 63,
  HvCallMapStatsPage = 108,
  HvCallUnmapStatsPage = 109,
} HV_CALL_CODE, *PHV_CALL_CODE;

typedef enum _REGOPERATION
{
  RegisterAllDrivers = 0,
  RegisterSingleDriver = 1,
  RegisterUpdateSingleDriver = 2,
  RegisterDeleteSingleDriver = 3,
} REGOPERATION, *PREGOPERATION;

typedef enum _KEY_INFORMATION_CLASS
{
  KeyBasicInformation = 0,
  KeyNodeInformation = 1,
  KeyFullInformation = 2,
  KeyNameInformation = 3,
  KeyCachedInformation = 4,
  KeyFlagsInformation = 5,
  KeyVirtualizationInformation = 6,
  KeyHandleTagsInformation = 7,
  MaxKeyInfoClass = 8,
} KEY_INFORMATION_CLASS, *PKEY_INFORMATION_CLASS;

typedef enum _HAL_SET_INFORMATION_CLASS
{
  HalProfileSourceInterval = 0,
  HalProfileSourceInterruptHandler = 1,
  HalMcaRegisterDriver = 2,
  HalKernelErrorHandler = 3,
  HalCmcRegisterDriver = 4,
  HalCpeRegisterDriver = 5,
  HalMcaLog = 6,
  HalCmcLog = 7,
  HalCpeLog = 8,
  HalGenerateCmcInterrupt = 9,
  HalProfileSourceTimerHandler = 10,
  HalEnlightenment = 11,
  HalProfileDpgoSourceInterruptHandler = 12,
} HAL_SET_INFORMATION_CLASS, *PHAL_SET_INFORMATION_CLASS;

enum WMIP_LEGACY_WORK_TYPE
{
  LegacyEtwRegister = 0,
  LegacyEtwUnregister = 1,
  LegacyEtwCallback = 2,
};

typedef enum _DEVICE_INSTALL_STATE
{
  InstallStateInstalled = 0,
  InstallStateNeedsReinstall = 1,
  InstallStateFailedInstall = 2,
  InstallStateFinishInstall = 3,
} DEVICE_INSTALL_STATE, *PDEVICE_INSTALL_STATE;

typedef enum _PROCESS_TLS_INFORMATION_TYPE
{
  ProcessTlsReplaceIndex = 0,
  ProcessTlsReplaceVector = 1,
  MaxProcessTlsOperation = 2,
} PROCESS_TLS_INFORMATION_TYPE, *PPROCESS_TLS_INFORMATION_TYPE;

typedef enum _BCD_OBJECT_ALIAS
{
  BcdAliasInvalid = 0,
  BcdAliasCurrentBootEntry = 1,
  BcdAliasDefaultBootEntry = 2,
} BCD_OBJECT_ALIAS, *PBCD_OBJECT_ALIAS;

typedef struct _CURDIR
{
  /* 0x0000 */ struct _UNICODE_STRING DosPath;
  /* 0x0010 */ void* Handle;
} CURDIR, *PCURDIR; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_3
{
  KTMOH_CommitTransaction_Result = 1,
  KTMOH_RollbackTransaction_Result = 2,
} TAG_UNNAMED_3, *PTAG_UNNAMED_3;

typedef struct _WNODE_HEADER
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ unsigned long ProviderId;
  union
  {
    /* 0x0008 */ unsigned __int64 HistoricalContext;
    struct
    {
      /* 0x0008 */ unsigned long Version;
      /* 0x000c */ unsigned long Linkage;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ unsigned long CountLost;
    /* 0x0010 */ void* KernelHandle;
    /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  }; /* size: 0x0008 */
  /* 0x0018 */ struct _GUID Guid;
  /* 0x0028 */ unsigned long ClientContext;
  /* 0x002c */ unsigned long Flags;
} WNODE_HEADER, *PWNODE_HEADER; /* size: 0x0030 */

struct tagWNODE_SINGLE_INSTANCE
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
  /* 0x0030 */ unsigned long OffsetInstanceName;
  /* 0x0034 */ unsigned long InstanceIndex;
  /* 0x0038 */ unsigned long DataBlockOffset;
  /* 0x003c */ unsigned long SizeDataBlock;
  /* 0x0040 */ unsigned char* VariableData /* zero-length array */;
}; /* size: 0x0040 */

typedef enum _WOW64_TURBO_SERVICE_TYPE
{
  ServiceNoTurbo = 0,
  Service0Arg = 1,
  Service0ArgReloadState = 2,
  Service1ArgSp = 3,
  Service1ArgNSp = 4,
  Service2ArgNSpNSp = 5,
  Service2ArgNSpNSpReloadState = 6,
  Service2ArgSpNSp = 7,
  Service2ArgSpSp = 8,
  Service2ArgNSpSp = 9,
  Service3ArgNSpNSpNSp = 10,
  Service3ArgSpSpSp = 11,
  Service3ArgSpNSpNSp = 12,
  Service3ArgSpNSpNSpReloadState = 13,
  Service3ArgSpSpNSp = 14,
  Service3ArgNSpSpNSp = 15,
  Service3ArgSpNSpSp = 16,
  Service4ArgNSpNSpNSpNSp = 17,
  Service4ArgSpSpNSpNSp = 18,
  Service4ArgSpSpNSpNSpReloadState = 19,
  Service4ArgSpNSpNSpNSp = 20,
  Service4ArgSpNSpNSpNSpReloadState = 21,
  Service4ArgNSpSpNSpNSp = 22,
  Service4ArgSpSpSpNSp = 23,
  ServiceCpupTdQuerySystemTime = 24,
  ServiceCpupTdGetCurrentProcessorNumber = 25,
  ServiceCpupTdReadWriteFile = 26,
  ServiceCpupTdDeviceIoControlFile = 27,
  ServiceCpupTdRemoveIoCompletion = 28,
  ServiceCpupTdWaitForMultipleObjects = 29,
  ServiceCpupTdWaitForMultipleObjects32 = 30,
  Wow64ServiceTypesCount = 31,
} WOW64_TURBO_SERVICE_TYPE, *PWOW64_TURBO_SERVICE_TYPE;

enum VI_FAULTS_DECISION_INDEX
{
  ViFaultsDecisionNotInitializedResourceAlloc = 0,
  ViFaultsDecisionNotInitializedPoolAlloc = 1,
  ViFaultsDecisionInjectInPage = 2,
  ViFaultsDecisionNotSufficientlyBooted = 3,
  ViFaultsDecisionAppNotTarget = 4,
  ViFaultsDecisionAppIsTarget = 5,
  ViFaultsDecisionProbabilityFits = 6,
  ViFaultsDecisionProbabilityDoesntFit = 7,
  ViFaultsDecisionBurstInject = 8,
  ViFaultsDecisionTagNotTarget = 9,
  ViFaultsDecisionTagIsTarget = 10,
  ViFaultsDecisionDisabled = 11,
  ViFaultsDecisionMax = 12,
};

typedef struct _STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_27;
  /* 0x0008 */ char* Buffer;
} STRING, *PSTRING; /* size: 0x0010 */

typedef struct _RTL_DRIVE_LETTER_CURDIR
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING DosPath;
} RTL_DRIVE_LETTER_CURDIR, *PRTL_DRIVE_LETTER_CURDIR; /* size: 0x0018 */

enum KE_PROCESSOR_CHANGE_NOTIFY_STATE
{
  KeProcessorAddStartNotify = 0,
  KeProcessorAddCompleteNotify = 1,
  KeProcessorAddFailureNotify = 2,
};

typedef enum _TABLE_SEARCH_RESULT
{
  TableEmptyTree = 0,
  TableFoundNode = 1,
  TableInsertAsLeft = 2,
  TableInsertAsRight = 3,
} TABLE_SEARCH_RESULT, *PTABLE_SEARCH_RESULT;

enum DEVICE_TEXT_TYPE
{
  DeviceTextDescription = 0,
  DeviceTextLocationInformation = 1,
};

typedef enum _EXTENDED_AGP_REGISTER
{
  IsochStatus = 0,
  AgpControl = 1,
  ApertureSize = 2,
  AperturePageSize = 3,
  GartLow = 4,
  GartHigh = 5,
  IsochCommand = 6,
} EXTENDED_AGP_REGISTER, *PEXTENDED_AGP_REGISTER;

typedef enum _CC_READ_PATTERN
{
  NoPattern = 0,
  Sequential = 1,
  DetectedSequential = 2,
  Strided = 3,
} CC_READ_PATTERN, *PCC_READ_PATTERN;

typedef enum _DEBUGOBJECTINFOCLASS
{
  DebugObjectFlags = 1,
  MaxDebugObjectInfoClass = 2,
} DEBUGOBJECTINFOCLASS, *PDEBUGOBJECTINFOCLASS;

typedef struct _IOV_STACK_LOCATION
{
  /* 0x0000 */ unsigned char InUse;
  /* 0x0001 */ char Padding_28[3];
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _IOV_STACK_LOCATION* RequestsFirstStackLocation;
  /* 0x0010 */ struct _LIST_ENTRY CallStackData;
  /* 0x0020 */ struct _IO_STACK_LOCATION* IrpSp;
  /* 0x0028 */ void* LastDispatch;
  /* 0x0030 */ union _LARGE_INTEGER PerfDispatchStart;
  /* 0x0038 */ union _LARGE_INTEGER PerfStackLocationStart;
  /* 0x0040 */ struct _DEVICE_OBJECT* ReferencingObject;
  /* 0x0048 */ long ReferencingCount;
  /* 0x004c */ long Padding_29;
  /* 0x0050 */ struct _IO_STATUS_BLOCK InitialStatusBlock;
  /* 0x0060 */ struct _IO_STATUS_BLOCK LastStatusBlock;
  /* 0x0070 */ struct _ETHREAD* ThreadDispatchedTo;
} IOV_STACK_LOCATION, *PIOV_STACK_LOCATION; /* size: 0x0078 */

typedef struct _IOV_SESSION_DATA
{
  /* 0x0000 */ struct _IOV_REQUEST_PACKET* IovRequestPacket;
  /* 0x0008 */ long SessionRefCount;
  /* 0x000c */ long Padding_30;
  /* 0x0010 */ struct _LIST_ENTRY SessionLink;
  /* 0x0020 */ unsigned long SessionFlags;
  /* 0x0024 */ long Padding_31;
  /* 0x0028 */ struct _ETHREAD* OriginatorThread;
  /* 0x0030 */ struct _DEVICE_OBJECT* DeviceLastCalled;
  /* 0x0038 */ unsigned long ForwardMethod;
  /* 0x003c */ long Padding_32;
  /* 0x0040 */ struct _IRP* BestVisibleIrp;
  /* 0x0048 */ unsigned long Settings;
  /* 0x004c */ long Padding_33;
  /* 0x0050 */ struct _IOV_STACK_LOCATION StackData[1];
} IOV_SESSION_DATA, *PIOV_SESSION_DATA; /* size: 0x00c8 */

typedef enum _FUNCTION_TABLE_TYPE
{
  RF_SORTED = 0,
  RF_UNSORTED = 1,
  RF_CALLBACK = 2,
} FUNCTION_TABLE_TYPE, *PFUNCTION_TABLE_TYPE;

typedef enum _PNP_UNLOCK_UNLINK_ACTION
{
  UnlinkRemovedDeviceNodes = 0,
  UnlinkAllDeviceNodesPendingClose = 1,
  UnlinkOnlyChildDeviceNodesPendingClose = 2,
} PNP_UNLOCK_UNLINK_ACTION, *PPNP_UNLOCK_UNLINK_ACTION;

typedef struct _RTL_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_34;
  /* 0x0008 */ struct _RTL_CRITICAL_SECTION* CriticalSection;
  /* 0x0010 */ struct _LIST_ENTRY ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x002e */ unsigned short SpareUSHORT;
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG; /* size: 0x0030 */

typedef enum _FP__IEEE_ROUNDING_MODE
{
  FpRoundNearest = 0,
  FpRoundMinusInfinity = 1,
  FpRoundPlusInfinity = 2,
  FpRoundChopped = 3,
} FP__IEEE_ROUNDING_MODE, *PFP__IEEE_ROUNDING_MODE;

typedef struct _KAFFINITY_EX
{
  /* 0x0000 */ unsigned short Count;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Bitmap[4];
} KAFFINITY_EX, *PKAFFINITY_EX; /* size: 0x0028 */

typedef struct _PROCESSOR_PERF_STATES
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ char Padding_35[2];
  /* 0x0004 */ unsigned long ProcessorCount;
  /* 0x0008 */ unsigned long MaxFrequency;
  /* 0x000c */ unsigned long MinPerfPercent;
  /* 0x0010 */ unsigned long MinThrottlePercent;
  /* 0x0014 */ long Padding_36;
  /* 0x0018 */ struct _KAFFINITY_EX TargetProcessors;
  /* 0x0040 */ void* FeedbackHandler /* function */;
  /* 0x0048 */ void* GetFFHThrottleState /* function */;
  /* 0x0050 */ void* BoostPolicyHandler /* function */;
  /* 0x0058 */ void* PerfSelectionHandler /* function */;
  /* 0x0060 */ void* PerfHandler /* function */;
  /* 0x0068 */ void* PerfControlInitiate /* function */;
  /* 0x0070 */ void* PerfControlCommit /* function */;
  /* 0x0078 */ struct _PROCESSOR_PERF_INFO* Processors;
} PROCESSOR_PERF_STATES, *PPROCESSOR_PERF_STATES; /* size: 0x0080 */

typedef enum _PNP_DEVNODE_STATE
{
  DeviceNodeUnspecified = 768,
  DeviceNodeUninitialized = 769,
  DeviceNodeInitialized = 770,
  DeviceNodeDriversAdded = 771,
  DeviceNodeResourcesAssigned = 772,
  DeviceNodeStartPending = 773,
  DeviceNodeStartCompletion = 774,
  DeviceNodeStartPostWork = 775,
  DeviceNodeStarted = 776,
  DeviceNodeQueryStopped = 777,
  DeviceNodeStopped = 778,
  DeviceNodeRestartCompletion = 779,
  DeviceNodeEnumeratePending = 780,
  DeviceNodeEnumerateCompletion = 781,
  DeviceNodeAwaitingQueuedDeletion = 782,
  DeviceNodeAwaitingQueuedRemoval = 783,
  DeviceNodeQueryRemoved = 784,
  DeviceNodeRemovePendingCloses = 785,
  DeviceNodeRemoved = 786,
  DeviceNodeDeletePendingCloses = 787,
  DeviceNodeDeleted = 788,
  MaxDeviceNodeState = 789,
} PNP_DEVNODE_STATE, *PPNP_DEVNODE_STATE;

typedef enum _SEMAPHORE_INFORMATION_CLASS
{
  SemaphoreBasicInformation = 0,
} SEMAPHORE_INFORMATION_CLASS, *PSEMAPHORE_INFORMATION_CLASS;

typedef struct _MAPPING
{
  /* 0x0000 */ unsigned long NextVbn;
  /* 0x0004 */ unsigned long Lbn;
} MAPPING, *PMAPPING; /* size: 0x0008 */

typedef enum _INTEL_CACHE_TYPE
{
  IntelCacheNull = 0,
  IntelCacheData = 1,
  IntelCacheInstruction = 2,
  IntelCacheUnified = 3,
  IntelCacheRam = 4,
  IntelCacheTrace = 5,
} INTEL_CACHE_TYPE, *PINTEL_CACHE_TYPE;

enum SYSID_ENTRY_TYPE
{
  SYSID_UNKNOWN_TYPE = 0,
  SYSID_UUID_TYPE = 1,
  SYSID_1394_TYPE = 2,
};

typedef enum _THREADINFOCLASS
{
  ThreadBasicInformation = 0,
  ThreadTimes = 1,
  ThreadPriority = 2,
  ThreadBasePriority = 3,
  ThreadAffinityMask = 4,
  ThreadImpersonationToken = 5,
  ThreadDescriptorTableEntry = 6,
  ThreadEnableAlignmentFaultFixup = 7,
  ThreadEventPair_Reusable = 8,
  ThreadQuerySetWin32StartAddress = 9,
  ThreadZeroTlsCell = 10,
  ThreadPerformanceCount = 11,
  ThreadAmILastThread = 12,
  ThreadIdealProcessor = 13,
  ThreadPriorityBoost = 14,
  ThreadSetTlsArrayAddress = 15,
  ThreadIsIoPending = 16,
  ThreadHideFromDebugger = 17,
  ThreadBreakOnTermination = 18,
  ThreadSwitchLegacyState = 19,
  ThreadIsTerminated = 20,
  ThreadLastSystemCall = 21,
  ThreadIoPriority = 22,
  ThreadCycleTime = 23,
  ThreadPagePriority = 24,
  ThreadActualBasePriority = 25,
  ThreadTebInformation = 26,
  ThreadCSwitchMon = 27,
  ThreadCSwitchPmu = 28,
  ThreadWow64Context = 29,
  ThreadGroupInformation = 30,
  ThreadUmsInformation = 31,
  ThreadCounterProfiling = 32,
  ThreadIdealProcessorEx = 33,
  MaxThreadInfoClass = 34,
} THREADINFOCLASS, *PTHREADINFOCLASS;

enum POWER_STATE_HANDLER_TYPE
{
  PowerStateSleeping1 = 0,
  PowerStateSleeping2 = 1,
  PowerStateSleeping3 = 2,
  PowerStateSleeping4 = 3,
  PowerStateShutdownOff = 4,
  PowerStateShutdownReset = 5,
  PowerStateSleeping4Firmware = 6,
  PowerStateMaximum = 7,
};

typedef enum _HARDWARE_PROFILE_BUS_TYPE
{
  HardwareProfileBusTypeACPI = 0,
} HARDWARE_PROFILE_BUS_TYPE, *PHARDWARE_PROFILE_BUS_TYPE;

enum KERNEL_MCE_DELIVERY_OPERATION
{
  MceNotification = 0,
  McaAvailable = 1,
  CmcAvailable = 2,
  CpeAvailable = 3,
  CmcSwitchToPolledMode = 4,
  CpeSwitchToPolledMode = 5,
};

typedef enum _MEMORY_INFORMATION_CLASS
{
  MemoryBasicInformation = 0,
  MemoryWorkingSetInformation = 1,
  MemoryMappedFilenameInformation = 2,
  MemoryRegionInformation = 3,
  MemoryWorkingSetExInformation = 4,
} MEMORY_INFORMATION_CLASS, *PMEMORY_INFORMATION_CLASS;

enum PCI_EXPRESS_CARD_PRESENCE
{
  SlotEmpty = 0,
  CardPresent = 1,
};

typedef struct _TRIAGE_DATA_BLOCK
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Offset;
  /* 0x000c */ unsigned long Size;
} TRIAGE_DATA_BLOCK, *PTRIAGE_DATA_BLOCK; /* size: 0x0010 */

typedef enum _KWAIT_BLOCK_STATE
{
  WaitBlockBypassStart = 0,
  WaitBlockBypassComplete = 1,
  WaitBlockActive = 2,
  WaitBlockInactive = 3,
  WaitBlockAllStates = 4,
} KWAIT_BLOCK_STATE, *PKWAIT_BLOCK_STATE;

enum KTM_STATE
{
  KKtmUninitialized = 0,
  KKtmInitialized = 1,
  KKtmRecovering = 2,
  KKtmOnline = 3,
  KKtmRecoveryFailed = 4,
  KKtmOffline = 5,
};

typedef enum _MODE
{
  KernelMode = 0,
  UserMode = 1,
  MaximumMode = 2,
} MODE, *PMODE;

typedef enum _CREATE_FILE_TYPE
{
  CreateFileTypeNone = 0,
  CreateFileTypeNamedPipe = 1,
  CreateFileTypeMailslot = 2,
} CREATE_FILE_TYPE, *PCREATE_FILE_TYPE;

struct CHUNKHEADER
{
  /* 0x0000 */ struct _LIST_ENTRY ChunkList;
  /* 0x0010 */ struct _LIST_ENTRY FreeEntryHead;
  /* 0x0020 */ unsigned long EntriesInUse;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef enum _OBJECT_INFORMATION_CLASS
{
  ObjectBasicInformation = 0,
  ObjectNameInformation = 1,
  ObjectTypeInformation = 2,
  ObjectTypesInformation = 3,
  ObjectHandleFlagInformation = 4,
  ObjectSessionInformation = 5,
  MaxObjectInfoClass = 6,
} OBJECT_INFORMATION_CLASS, *POBJECT_INFORMATION_CLASS;

typedef enum _WAIT_TYPE
{
  WaitAll = 0,
  WaitAny = 1,
} WAIT_TYPE, *PWAIT_TYPE;

typedef enum _HARDWARE_COUNTER_TYPE
{
  PMCCounter = 0,
  MaxHardwareCounterType = 1,
} HARDWARE_COUNTER_TYPE, *PHARDWARE_COUNTER_TYPE;

typedef enum _IO_PRIORITY_HINT
{
  IoPriorityVeryLow = 0,
  IoPriorityLow = 1,
  IoPriorityNormal = 2,
  IoPriorityHigh = 3,
  IoPriorityCritical = 4,
  MaxIoPriorityTypes = 5,
} IO_PRIORITY_HINT, *PIO_PRIORITY_HINT;

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION
{
  /* 0x0000 */ enum _IO_PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFORMATION, *PFILE_IO_PRIORITY_HINT_INFORMATION; /* size: 0x0004 */

typedef enum _KTHREAD_STATE
{
  Initialized = 0,
  Ready = 1,
  Running = 2,
  Standby = 3,
  Terminated = 4,
  Waiting = 5,
  Transition = 6,
  DeferredReady = 7,
  GateWaitObsolete = 8,
} KTHREAD_STATE, *PKTHREAD_STATE;

typedef struct _EM_ENTRY_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* EntryGuid;
  /* 0x0008 */ void* LazyEntryCallback /* function */;
  /* 0x0010 */ void* LazyCallbackContext;
} EM_ENTRY_REGISTRATION, *PEM_ENTRY_REGISTRATION; /* size: 0x0018 */

typedef enum _POWERSTATETASK
{
  PowerState_BlockSessionSwitch = 0,
  PowerState_Init = 1,
  PowerState_SuspendApps = 2,
  PowerState_SuspendServices = 3,
  PowerState_NotifyWL = 4,
  PowerState_ResumeApps = 5,
  PowerState_ResumeServices = 6,
  PowerState_UnBlockSessionSwitch = 7,
  PowerState_End = 8,
  PowerState_Flush = 9,
  PowerState_StartPartitionReplace = 10,
  PowerState_EndPartitionReplace = 11,
} POWERSTATETASK, *PPOWERSTATETASK;

typedef enum _HAL_QUERY_INFORMATION_CLASS
{
  HalInstalledBusInformation = 0,
  HalProfileSourceInformation = 1,
  HalInformationClassUnused1 = 2,
  HalPowerInformation = 3,
  HalProcessorSpeedInformation = 4,
  HalCallbackInformation = 5,
  HalMapRegisterInformation = 6,
  HalMcaLogInformation = 7,
  HalFrameBufferCachingInformation = 8,
  HalDisplayBiosInformation = 9,
  HalProcessorFeatureInformation = 10,
  HalNumaTopologyInterface = 11,
  HalErrorInformation = 12,
  HalCmcLogInformation = 13,
  HalCpeLogInformation = 14,
  HalQueryMcaInterface = 15,
  HalQueryAMLIIllegalIOPortAddresses = 16,
  HalQueryMaxHotPlugMemoryAddress = 17,
  HalPartitionIpiInterface = 18,
  HalPlatformInformation = 19,
  HalQueryProfileSourceList = 20,
  HalInitLogInformation = 21,
  HalFrequencyInformation = 22,
  HalProcessorBrandString = 23,
  HalHypervisorInformation = 24,
  HalPlatformTimerInformation = 25,
  HalAcpiAuditInformation = 26,
} HAL_QUERY_INFORMATION_CLASS, *PHAL_QUERY_INFORMATION_CLASS;

typedef struct _PROCESSOR_NUMBER
{
  /* 0x0000 */ unsigned short Group;
  /* 0x0002 */ unsigned char Number;
  /* 0x0003 */ unsigned char Reserved;
} PROCESSOR_NUMBER, *PPROCESSOR_NUMBER; /* size: 0x0004 */

typedef struct _COUNTER_READING
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Index;
  /* 0x0008 */ unsigned __int64 Start;
  /* 0x0010 */ unsigned __int64 Total;
} COUNTER_READING, *PCOUNTER_READING; /* size: 0x0018 */

typedef struct _THREAD_PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ struct _PROCESSOR_NUMBER ProcessorNumber;
  /* 0x0008 */ unsigned long ContextSwitches;
  /* 0x000c */ unsigned long HwCountersCount;
  /* 0x0010 */ volatile unsigned __int64 UpdateCount;
  /* 0x0018 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0020 */ unsigned __int64 HardwareCounters;
  /* 0x0028 */ struct _COUNTER_READING CycleTime;
  /* 0x0040 */ struct _COUNTER_READING HwCounters[16];
} THREAD_PERFORMANCE_DATA, *PTHREAD_PERFORMANCE_DATA; /* size: 0x01c0 */

typedef enum _LINK_TRACKING_INFORMATION_TYPE
{
  NtfsLinkTrackingInformation = 0,
  DfsLinkTrackingInformation = 1,
} LINK_TRACKING_INFORMATION_TYPE, *PLINK_TRACKING_INFORMATION_TYPE;

typedef struct _RESOURCE_HASH_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ void* Address;
  /* 0x0018 */ unsigned long ContentionCount;
  /* 0x001c */ unsigned long Number;
} RESOURCE_HASH_ENTRY, *PRESOURCE_HASH_ENTRY; /* size: 0x0020 */

typedef enum _PLUGPLAY_EVENT_CATEGORY
{
  HardwareProfileChangeEvent = 0,
  TargetDeviceChangeEvent = 1,
  DeviceClassChangeEvent = 2,
  CustomDeviceEvent = 3,
  DeviceInstallEvent = 4,
  DeviceArrivalEvent = 5,
  VetoEvent = 6,
  BlockedDriverEvent = 7,
  InvalidIDEvent = 8,
  DevicePropertyChangeEvent = 9,
  DeviceInstanceRemovalEvent = 10,
  MaxPlugEventCategory = 11,
} PLUGPLAY_EVENT_CATEGORY, *PPLUGPLAY_EVENT_CATEGORY;

typedef enum _HV_GUEST_OS_MICROSOFT_IDS
{
  HvGuestOsMicrosoftUndefined = 0,
  HvGuestOsMicrosoftMSDOS = 1,
  HvGuestOsMicrosoftWindows3x = 2,
  HvGuestOsMicrosoftWindows9x = 3,
  HvGuestOsMicrosoftWindowsNT = 4,
  HvGuestOsMicrosoftWindowsCE = 5,
} HV_GUEST_OS_MICROSOFT_IDS, *PHV_GUEST_OS_MICROSOFT_IDS;

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS
{
  ResourceManagerBasicInformation = 0,
  ResourceManagerCompletionInformation = 1,
} RESOURCEMANAGER_INFORMATION_CLASS, *PRESOURCEMANAGER_INFORMATION_CLASS;

typedef enum _KINTERRUPT_MODE
{
  LevelSensitive = 0,
  Latched = 1,
} KINTERRUPT_MODE, *PKINTERRUPT_MODE;

typedef struct _TOKEN_PRIMARY_GROUP
{
  /* 0x0000 */ void* PrimaryGroup;
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP; /* size: 0x0008 */

typedef enum _KTMOBJECT_TYPE
{
  KTMOBJECT_TRANSACTION = 0,
  KTMOBJECT_TRANSACTION_MANAGER = 1,
  KTMOBJECT_RESOURCE_MANAGER = 2,
  KTMOBJECT_ENLISTMENT = 3,
  KTMOBJECT_INVALID = 4,
} KTMOBJECT_TYPE, *PKTMOBJECT_TYPE;

typedef enum _ETW_RT_EVENT_LOSS
{
  EtwRtEventNoLoss = 0,
  EtwRtEventLost = 1,
  EtwRtBufferLost = 2,
  EtwRtBackupLost = 3,
  EtwRtEventLossMax = 4,
} ETW_RT_EVENT_LOSS, *PETW_RT_EVENT_LOSS;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef enum _WIN32_POWERINFO_TYPE
{
  PowerInfo_PolicyChange = 0,
  PowerInfo_UserPresent = 1,
  PowerInfo_DisplayRequired = 2,
  PowerInfo_Max = 3,
} WIN32_POWERINFO_TYPE, *PWIN32_POWERINFO_TYPE;

enum tagWMI_CLOCK_TYPE
{
  WMICT_DEFAULT = 0,
  WMICT_SYSTEMTIME = 1,
  WMICT_PERFCOUNTER = 2,
  WMICT_PROCESS = 3,
  WMICT_THREAD = 4,
  WMICT_CPUCYCLE = 5,
};

struct EFI_GUID
{
  /* 0x0000 */ unsigned int Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
}; /* size: 0x0010 */

typedef struct _VENDOR_DEVICE_PATH
{
  /* 0x0000 */ struct _EFI_DEVICE_PATH Header;
  /* 0x0004 */ struct EFI_GUID Guid;
} VENDOR_DEVICE_PATH, *PVENDOR_DEVICE_PATH; /* size: 0x0014 */

typedef enum _PCI_HARDWARE_INTERFACE
{
  PciConventional = 0,
  PciXMode1 = 1,
  PciXMode2 = 2,
  PciExpress = 3,
} PCI_HARDWARE_INTERFACE, *PPCI_HARDWARE_INTERFACE;

enum EVENTSECURITYOPERATION
{
  EventSecuritySetDACL = 0,
  EventSecuritySetSACL = 1,
  EventSecurityAddDACL = 2,
  EventSecurityAddSACL = 3,
  EventSecurityMax = 4,
};

typedef struct _SID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY; /* size: 0x0006 */

typedef struct _SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
} SID, *PSID; /* size: 0x000c */

typedef struct _PROC_HISTORY_ENTRY
{
  /* 0x0000 */ unsigned short Utility;
  /* 0x0002 */ unsigned char Frequency;
  /* 0x0003 */ unsigned char Reserved;
} PROC_HISTORY_ENTRY, *PPROC_HISTORY_ENTRY; /* size: 0x0004 */

typedef enum _EX_HOST_INFORMATION_CLASS
{
  ExHostInformationSeal = 0,
  MaxHostInformationClass = 1,
} EX_HOST_INFORMATION_CLASS, *PEX_HOST_INFORMATION_CLASS;

typedef enum _FP__IEEE_FORMAT
{
  FpFormatFp32 = 0,
  FpFormatFp64 = 1,
  FpFormatFp80 = 2,
  FpFormatFp128 = 3,
  FpFormatI16 = 4,
  FpFormatI32 = 5,
  FpFormatI64 = 6,
  FpFormatU16 = 7,
  FpFormatU32 = 8,
  FpFormatU64 = 9,
  FpFormatCompare = 10,
  FpFormatString = 11,
} FP__IEEE_FORMAT, *PFP__IEEE_FORMAT;

typedef enum _DMA_SPEED
{
  Compatible = 0,
  TypeA = 1,
  TypeB = 2,
  TypeC = 3,
  TypeF = 4,
  MaximumDmaSpeed = 5,
} DMA_SPEED, *PDMA_SPEED;

typedef enum _LICENSING_TAMPER_STATE
{
  LicensingTamperNone = 0,
  LicensingTamperTrustedStore = 1,
  LicensingTamperServiceStopped = 2,
  LicensingTamperModuleAuthentication = 3,
  LicensingTamperCacheData = 4,
  LicensingTamperConsumptionFailure = 5,
  LicensingTamperOther = 6,
} LICENSING_TAMPER_STATE, *PLICENSING_TAMPER_STATE;

struct LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Flink;
  /* 0x0004 */ unsigned long Blink;
}; /* size: 0x0008 */

typedef enum _ARM_FUNCTION_TABLE_TYPE
{
  ARM_RF_SORTED = 0,
  ARM_RF_UNSORTED = 1,
  ARM_RF_CALLBACK = 2,
} ARM_FUNCTION_TABLE_TYPE, *PARM_FUNCTION_TABLE_TYPE;

typedef struct _ARM_DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct LIST_ENTRY32 ListEntry;
  /* 0x0008 */ unsigned long FunctionTable;
  /* 0x000c */ long Padding_37;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ unsigned long MinimumAddress;
  /* 0x001c */ unsigned long MaximumAddress;
  /* 0x0020 */ unsigned long BaseAddress;
  /* 0x0024 */ unsigned long Callback;
  /* 0x0028 */ unsigned long Context;
  /* 0x002c */ unsigned long OutOfProcessCallbackDll;
  /* 0x0030 */ enum _ARM_FUNCTION_TABLE_TYPE Type;
  /* 0x0034 */ unsigned long EntryCount;
} ARM_DYNAMIC_FUNCTION_TABLE, *PARM_DYNAMIC_FUNCTION_TABLE; /* size: 0x0038 */

typedef enum _PORT_INFORMATION_CLASS
{
  PortBasicInformation = 0,
  PortDumpInformation = 1,
} PORT_INFORMATION_CLASS, *PPORT_INFORMATION_CLASS;

typedef enum _IPI_TYPE
{
  IpiAffinity = 0,
  IpiAllButSelf = 1,
  IpiAll = 2,
} IPI_TYPE, *PIPI_TYPE;

typedef enum _PS_STD_HANDLE_STATE
{
  PsNeverDuplicate = 0,
  PsRequestDuplicate = 1,
  PsAlwaysDuplicate = 2,
  PsMaxStdHandleStates = 3,
} PS_STD_HANDLE_STATE, *PPS_STD_HANDLE_STATE;

typedef enum _DEVICE_RELATION_TYPE
{
  BusRelations = 0,
  EjectionRelations = 1,
  PowerRelations = 2,
  RemovalRelations = 3,
  TargetDeviceRelation = 4,
  SingleBusRelations = 5,
  TransportRelations = 6,
} DEVICE_RELATION_TYPE, *PDEVICE_RELATION_TYPE;

typedef struct _REGENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InUseEntryList;
  union
  {
    /* 0x0010 */ struct _DEVICE_OBJECT* DeviceObject;
    /* 0x0010 */ void** WmiEntry /* function */;
  }; /* size: 0x0008 */
  /* 0x0018 */ long RefCount;
  /* 0x001c */ long Flags;
  /* 0x0020 */ struct _DEVICE_OBJECT* PDO;
  /* 0x0028 */ unsigned long MaxInstanceNames;
  /* 0x002c */ long IrpCount;
  /* 0x0030 */ unsigned long ProviderId;
  /* 0x0034 */ long Padding_38;
  /* 0x0038 */ struct tagDATASOURCE* DataSource;
  /* 0x0040 */ struct _KEVENT Event;
} REGENTRY, *PREGENTRY; /* size: 0x0058 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_39;
  /* 0x0008 */ const char* FrameName;
} TEB_ACTIVE_FRAME_CONTEXT, *PTEB_ACTIVE_FRAME_CONTEXT; /* size: 0x0010 */

typedef enum _KEY_VALUE_INFORMATION_CLASS
{
  KeyValueBasicInformation = 0,
  KeyValueFullInformation = 1,
  KeyValuePartialInformation = 2,
  KeyValueFullInformationAlign64 = 3,
  KeyValuePartialInformationAlign64 = 4,
  MaxKeyValueInfoClass = 5,
} KEY_VALUE_INFORMATION_CLASS, *PKEY_VALUE_INFORMATION_CLASS;

typedef struct _LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} LUID, *PLUID; /* size: 0x0008 */

typedef struct _LUID_AND_ATTRIBUTES
{
  /* 0x0000 */ struct _LUID Luid;
  /* 0x0008 */ unsigned long Attributes;
} LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES; /* size: 0x000c */

typedef struct _TOKEN_PRIVILEGES
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ struct _LUID_AND_ATTRIBUTES Privileges[1];
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES; /* size: 0x0010 */

typedef enum _DMA_WIDTH
{
  Width8Bits = 0,
  Width16Bits = 1,
  Width32Bits = 2,
  MaximumDmaWidth = 3,
} DMA_WIDTH, *PDMA_WIDTH;

typedef enum _SHRINK_VOLUME_REQUEST_TYPES
{
  ShrinkPrepare = 1,
  ShrinkCommit = 2,
  ShrinkAbort = 3,
} SHRINK_VOLUME_REQUEST_TYPES, *PSHRINK_VOLUME_REQUEST_TYPES;

typedef struct _IO_TIMER
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short TimerFlag;
  /* 0x0004 */ long Padding_40;
  /* 0x0008 */ struct _LIST_ENTRY TimerList;
  /* 0x0018 */ void* TimerRoutine /* function */;
  /* 0x0020 */ void* Context;
  /* 0x0028 */ struct _DEVICE_OBJECT* DeviceObject;
} IO_TIMER, *PIO_TIMER; /* size: 0x0030 */

typedef enum _PROCESSOR_CACHE_TYPE
{
  CacheUnified = 0,
  CacheInstruction = 1,
  CacheData = 2,
  CacheTrace = 3,
} PROCESSOR_CACHE_TYPE, *PPROCESSOR_CACHE_TYPE;

enum POWER_INFORMATION_LEVEL
{
  SystemPowerPolicyAc = 0,
  SystemPowerPolicyDc = 1,
  VerifySystemPolicyAc = 2,
  VerifySystemPolicyDc = 3,
  SystemPowerCapabilities = 4,
  SystemBatteryState = 5,
  SystemPowerStateHandler = 6,
  ProcessorStateHandler = 7,
  SystemPowerPolicyCurrent = 8,
  AdministratorPowerPolicy = 9,
  SystemReserveHiberFile = 10,
  ProcessorInformation = 11,
  SystemPowerInformation = 12,
  ProcessorStateHandler2 = 13,
  LastWakeTime = 14,
  LastSleepTime = 15,
  SystemExecutionState = 16,
  SystemPowerStateNotifyHandler = 17,
  ProcessorPowerPolicyAc = 18,
  ProcessorPowerPolicyDc = 19,
  VerifyProcessorPowerPolicyAc = 20,
  VerifyProcessorPowerPolicyDc = 21,
  ProcessorPowerPolicyCurrent = 22,
  SystemPowerStateLogging = 23,
  SystemPowerLoggingEntry = 24,
  SetPowerSettingValue = 25,
  NotifyUserPowerSetting = 26,
  PowerInformationLevelUnused0 = 27,
  PowerInformationLevelUnused1 = 28,
  SystemVideoState = 29,
  TraceApplicationPowerMessage = 30,
  TraceApplicationPowerMessageEnd = 31,
  ProcessorPerfStates = 32,
  ProcessorIdleStates = 33,
  ProcessorCap = 34,
  SystemWakeSource = 35,
  SystemHiberFileInformation = 36,
  TraceServicePowerMessage = 37,
  ProcessorLoad = 38,
  PowerShutdownNotification = 39,
  MonitorCapabilities = 40,
  SessionPowerInit = 41,
  SessionDisplayState = 42,
  PowerRequestCreate = 43,
  PowerRequestAction = 44,
  GetPowerRequestList = 45,
  ProcessorInformationEx = 46,
  NotifyUserModeLegacyPowerEvent = 47,
  GroupPark = 48,
  ProcessorIdleDomains = 49,
  WakeTimerList = 50,
  SystemHiberFileSize = 51,
  PowerInformationLevelMaximum = 52,
};

typedef enum _SE_ADT_PARAMETER_TYPE
{
  SeAdtParmTypeNone = 0,
  SeAdtParmTypeString = 1,
  SeAdtParmTypeFileSpec = 2,
  SeAdtParmTypeUlong = 3,
  SeAdtParmTypeSid = 4,
  SeAdtParmTypeLogonId = 5,
  SeAdtParmTypeNoLogonId = 6,
  SeAdtParmTypeAccessMask = 7,
  SeAdtParmTypePrivs = 8,
  SeAdtParmTypeObjectTypes = 9,
  SeAdtParmTypeHexUlong = 10,
  SeAdtParmTypePtr = 11,
  SeAdtParmTypeTime = 12,
  SeAdtParmTypeGuid = 13,
  SeAdtParmTypeLuid = 14,
  SeAdtParmTypeHexInt64 = 15,
  SeAdtParmTypeStringList = 16,
  SeAdtParmTypeSidList = 17,
  SeAdtParmTypeDuration = 18,
  SeAdtParmTypeUserAccountControl = 19,
  SeAdtParmTypeNoUac = 20,
  SeAdtParmTypeMessage = 21,
  SeAdtParmTypeDateTime = 22,
  SeAdtParmTypeSockAddr = 23,
  SeAdtParmTypeSD = 24,
  SeAdtParmTypeLogonHours = 25,
  SeAdtParmTypeLogonIdNoSid = 26,
  SeAdtParmTypeUlongNoConv = 27,
  SeAdtParmTypeSockAddrNoPort = 28,
  SeAdtParmTypeAccessReason = 29,
} SE_ADT_PARAMETER_TYPE, *PSE_ADT_PARAMETER_TYPE;

typedef enum _PROC_HYPERVISOR_STATE
{
  ProcHypervisorNone = 0,
  ProcHypervisorPresent = 1,
  ProcHypervisorPower = 2,
} PROC_HYPERVISOR_STATE, *PPROC_HYPERVISOR_STATE;

typedef union _WHEA_PERSISTENCE_INFO
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Signature : 16; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Length : 24; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Identifier : 16; /* bit position: 40 */
      /* 0x0000 */ unsigned __int64 Attributes : 2; /* bit position: 56 */
      /* 0x0000 */ unsigned __int64 DoNotLog : 1; /* bit position: 58 */
      /* 0x0000 */ unsigned __int64 Reserved : 5; /* bit position: 59 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 AsULONGLONG;
  }; /* size: 0x0008 */
} WHEA_PERSISTENCE_INFO, *PWHEA_PERSISTENCE_INFO; /* size: 0x0008 */

enum COMPARTMENT_ID
{
  UNSPECIFIED_COMPARTMENT_ID = 0,
  DEFAULT_COMPARTMENT_ID = 1,
};

typedef struct _PORT_MESSAGE
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ short DataLength;
        /* 0x0002 */ short TotalLength;
      } /* size: 0x0004 */ s1;
      /* 0x0000 */ unsigned long Length;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ short Type;
        /* 0x0006 */ short DataInfoOffset;
      } /* size: 0x0004 */ s2;
      /* 0x0004 */ unsigned long ZeroInit;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  union
  {
    /* 0x0008 */ struct _CLIENT_ID ClientId;
    /* 0x0008 */ double DoNotUseThisField;
  }; /* size: 0x0010 */
  /* 0x0018 */ unsigned long MessageId;
  /* 0x001c */ long Padding_41;
  union
  {
    /* 0x0020 */ unsigned __int64 ClientViewSize;
    struct
    {
      /* 0x0020 */ unsigned long CallbackId;
      /* 0x0024 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PORT_MESSAGE, *PPORT_MESSAGE; /* size: 0x0028 */

typedef struct _LPC_CLIENT_DIED_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ union _LARGE_INTEGER CreateTime;
} LPC_CLIENT_DIED_MSG, *PLPC_CLIENT_DIED_MSG; /* size: 0x0030 */

typedef enum _ETW_BUFFER_STATE
{
  EtwBufferStateFree = 0,
  EtwBufferStateGeneralLogging = 1,
  EtwBufferStateCSwitch = 2,
  EtwBufferStateFlush = 3,
  EtwBufferStateMaximum = 4,
} ETW_BUFFER_STATE, *PETW_BUFFER_STATE;

typedef enum _RESOURCE_TRANSLATION_DIRECTION
{
  TranslateChildToParent = 0,
  TranslateParentToChild = 1,
} RESOURCE_TRANSLATION_DIRECTION, *PRESOURCE_TRANSLATION_DIRECTION;

typedef enum _ALPC_PORT_INFORMATION_CLASS
{
  AlpcBasicInformation = 0,
  AlpcPortInformation = 1,
  AlpcAssociateCompletionPortInformation = 2,
  AlpcConnectedSIDInformation = 3,
  AlpcServerInformation = 4,
  AlpcMessageZoneInformation = 5,
  AlpcRegisterCompletionListInformation = 6,
  AlpcUnregisterCompletionListInformation = 7,
  AlpcAdjustCompletionListConcurrencyCountInformation = 8,
  AlpcRegisterCallbackInformation = 9,
  AlpcCompletionListRundownInformation = 10,
} ALPC_PORT_INFORMATION_CLASS, *PALPC_PORT_INFORMATION_CLASS;

struct PPM_WMI_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ unsigned char IncreaseLevel;
  /* 0x000a */ unsigned char DecreaseLevel;
  /* 0x000b */ unsigned char Type;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ long Padding_42;
  /* 0x0018 */ unsigned __int64 Control;
  /* 0x0020 */ unsigned __int64 Status;
  /* 0x0028 */ unsigned long HitCount;
  /* 0x002c */ unsigned long Reserved1;
  /* 0x0030 */ unsigned __int64 Reserved2;
  /* 0x0038 */ unsigned __int64 Reserved3;
}; /* size: 0x0040 */

typedef enum _KTRANSACTION_OUTCOME
{
  KTxOutcomeUninitialized = 0,
  KTxOutcomeUndetermined = 1,
  KTxOutcomeCommitted = 2,
  KTxOutcomeAborted = 3,
  KTxOutcomeUnavailable = 4,
} KTRANSACTION_OUTCOME, *PKTRANSACTION_OUTCOME;

enum VF_DEVOBJ_TYPE
{
  VF_DEVOBJ_PDO = 0,
  VF_DEVOBJ_BUS_FILTER = 1,
  VF_DEVOBJ_LOWER_DEVICE_FILTER = 2,
  VF_DEVOBJ_LOWER_CLASS_FILTER = 3,
  VF_DEVOBJ_FDO = 4,
  VF_DEVOBJ_UPPER_DEVICE_FILTER = 5,
  VF_DEVOBJ_UPPER_CLASS_FILTER = 6,
};

typedef enum _SYSTEM_INFORMATION_CLASS
{
  SystemBasicInformation = 0,
  SystemProcessorInformation = 1,
  SystemPerformanceInformation = 2,
  SystemTimeOfDayInformation = 3,
  SystemPathInformation = 4,
  SystemProcessInformation = 5,
  SystemCallCountInformation = 6,
  SystemDeviceInformation = 7,
  SystemProcessorPerformanceInformation = 8,
  SystemFlagsInformation = 9,
  SystemCallTimeInformation = 10,
  SystemModuleInformation = 11,
  SystemLocksInformation = 12,
  SystemStackTraceInformation = 13,
  SystemPagedPoolInformation = 14,
  SystemNonPagedPoolInformation = 15,
  SystemHandleInformation = 16,
  SystemObjectInformation = 17,
  SystemPageFileInformation = 18,
  SystemVdmInstemulInformation = 19,
  SystemVdmBopInformation = 20,
  SystemFileCacheInformation = 21,
  SystemPoolTagInformation = 22,
  SystemInterruptInformation = 23,
  SystemDpcBehaviorInformation = 24,
  SystemFullMemoryInformation = 25,
  SystemLoadGdiDriverInformation = 26,
  SystemUnloadGdiDriverInformation = 27,
  SystemTimeAdjustmentInformation = 28,
  SystemSummaryMemoryInformation = 29,
  SystemMirrorMemoryInformation = 30,
  SystemPerformanceTraceInformation = 31,
  SystemObsolete0 = 32,
  SystemExceptionInformation = 33,
  SystemCrashDumpStateInformation = 34,
  SystemKernelDebuggerInformation = 35,
  SystemContextSwitchInformation = 36,
  SystemRegistryQuotaInformation = 37,
  SystemExtendServiceTableInformation = 38,
  SystemPrioritySeperation = 39,
  SystemVerifierAddDriverInformation = 40,
  SystemVerifierRemoveDriverInformation = 41,
  SystemProcessorIdleInformation = 42,
  SystemLegacyDriverInformation = 43,
  SystemCurrentTimeZoneInformation = 44,
  SystemLookasideInformation = 45,
  SystemTimeSlipNotification = 46,
  SystemSessionCreate = 47,
  SystemSessionDetach = 48,
  SystemSessionInformation = 49,
  SystemRangeStartInformation = 50,
  SystemVerifierInformation = 51,
  SystemVerifierThunkExtend = 52,
  SystemSessionProcessInformation = 53,
  SystemLoadGdiDriverInSystemSpace = 54,
  SystemNumaProcessorMap = 55,
  SystemPrefetcherInformation = 56,
  SystemExtendedProcessInformation = 57,
  SystemRecommendedSharedDataAlignment = 58,
  SystemComPlusPackage = 59,
  SystemNumaAvailableMemory = 60,
  SystemProcessorPowerInformation = 61,
  SystemEmulationBasicInformation = 62,
  SystemEmulationProcessorInformation = 63,
  SystemExtendedHandleInformation = 64,
  SystemLostDelayedWriteInformation = 65,
  SystemBigPoolInformation = 66,
  SystemSessionPoolTagInformation = 67,
  SystemSessionMappedViewInformation = 68,
  SystemHotpatchInformation = 69,
  SystemObjectSecurityMode = 70,
  SystemWatchdogTimerHandler = 71,
  SystemWatchdogTimerInformation = 72,
  SystemLogicalProcessorInformation = 73,
  SystemWow64SharedInformationObsolete = 74,
  SystemRegisterFirmwareTableInformationHandler = 75,
  SystemFirmwareTableInformation = 76,
  SystemModuleInformationEx = 77,
  SystemVerifierTriageInformation = 78,
  SystemSuperfetchInformation = 79,
  SystemMemoryListInformation = 80,
  SystemFileCacheInformationEx = 81,
  SystemThreadPriorityClientIdInformation = 82,
  SystemProcessorIdleCycleTimeInformation = 83,
  SystemVerifierCancellationInformation = 84,
  SystemProcessorPowerInformationEx = 85,
  SystemRefTraceInformation = 86,
  SystemSpecialPoolInformation = 87,
  SystemProcessIdInformation = 88,
  SystemErrorPortInformation = 89,
  SystemBootEnvironmentInformation = 90,
  SystemHypervisorInformation = 91,
  SystemVerifierInformationEx = 92,
  SystemTimeZoneInformation = 93,
  SystemImageFileExecutionOptionsInformation = 94,
  SystemCoverageInformation = 95,
  SystemPrefetchPatchInformation = 96,
  SystemVerifierFaultsInformation = 97,
  SystemSystemPartitionInformation = 98,
  SystemSystemDiskInformation = 99,
  SystemProcessorPerformanceDistribution = 100,
  SystemNumaProximityNodeInformation = 101,
  SystemDynamicTimeZoneInformation = 102,
  SystemCodeIntegrityInformation = 103,
  SystemProcessorMicrocodeUpdateInformation = 104,
  SystemProcessorBrandString = 105,
  SystemVirtualAddressInformation = 106,
  SystemLogicalProcessorAndGroupInformation = 107,
  SystemProcessorCycleTimeInformation = 108,
  SystemStoreInformation = 109,
  SystemRegistryAppendString = 110,
  SystemAitSamplingValue = 111,
  SystemVhdBootInformation = 112,
  SystemCpuQuotaInformation = 113,
  SystemSpare0 = 114,
  SystemSpare1 = 115,
  SystemLowPriorityIoInformation = 116,
  SystemTpmBootEntropyInformation = 117,
  SystemVerifierCountersInformation = 118,
  SystemPagedPoolInformationEx = 119,
  SystemSystemPtesInformationEx = 120,
  SystemNodeDistanceInformation = 121,
  SystemAcpiAuditInformation = 122,
  SystemBasicPerformanceInformation = 123,
  MaxSystemInfoClass = 124,
} SYSTEM_INFORMATION_CLASS, *PSYSTEM_INFORMATION_CLASS;

enum KCONTINUE_STATUS
{
  ContinueError = 0,
  ContinueSuccess = 1,
  ContinueProcessorReselected = 2,
  ContinueNextProcessor = 3,
};

typedef enum _KWAIT_STATE
{
  WaitInProgress = 0,
  WaitCommitted = 1,
  WaitAborted = 2,
  MaximumWaitState = 3,
} KWAIT_STATE, *PKWAIT_STATE;

typedef struct _BOOTDISK_INFORMATION_EX
{
  /* 0x0000 */ __int64 BootPartitionOffset;
  /* 0x0008 */ __int64 SystemPartitionOffset;
  /* 0x0010 */ unsigned long BootDeviceSignature;
  /* 0x0014 */ unsigned long SystemDeviceSignature;
  /* 0x0018 */ struct _GUID BootDeviceGuid;
  /* 0x0028 */ struct _GUID SystemDeviceGuid;
  /* 0x0038 */ unsigned char BootDeviceIsGpt;
  /* 0x0039 */ unsigned char SystemDeviceIsGpt;
  /* 0x003a */ char __PADDING__[6];
} BOOTDISK_INFORMATION_EX, *PBOOTDISK_INFORMATION_EX; /* size: 0x0040 */

typedef enum _MM_ROTATE_DIRECTION
{
  MmToFrameBuffer = 0,
  MmToFrameBufferNoCopy = 1,
  MmToRegularMemory = 2,
  MmToRegularMemoryNoCopy = 3,
  MmMaximumRotateDirection = 4,
} MM_ROTATE_DIRECTION, *PMM_ROTATE_DIRECTION;

typedef union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 ErrorStatus : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 PhysicalAddress : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 PhysicalAddressMask : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 Node : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Card : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Module : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 Bank : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 Device : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 Row : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 Column : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned __int64 BitPosition : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned __int64 RequesterId : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned __int64 ResponderId : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned __int64 TargetId : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned __int64 ErrorType : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned __int64 Reserved : 49; /* bit position: 15 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_MEMORY_ERROR_SECTION_VALIDBITS, *PWHEA_MEMORY_ERROR_SECTION_VALIDBITS; /* size: 0x0008 */

typedef enum _SECURITY_OPERATION_CODE
{
  SetSecurityDescriptor = 0,
  QuerySecurityDescriptor = 1,
  DeleteSecurityDescriptor = 2,
  AssignSecurityDescriptor = 3,
} SECURITY_OPERATION_CODE, *PSECURITY_OPERATION_CODE;

typedef enum _CLS_CONTEXT_MODE
{
  ClsContextNone = 0,
  ClsContextUndoNext = 1,
  ClsContextPrevious = 2,
  ClsContextForward = 3,
} CLS_CONTEXT_MODE, *PCLS_CONTEXT_MODE;

struct INSTID
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long BaseId;
}; /* size: 0x0014 */

struct tagINSTIDCHUNK
{
  /* 0x0000 */ struct tagINSTIDCHUNK* Next;
  /* 0x0008 */ struct INSTID InstId[8];
}; /* size: 0x00a8 */

enum PCI_EXPRESS_ASPM_SUPPORT
{
  L0sEntrySupport = 1,
  L0sAndL1EntrySupport = 3,
};

typedef enum _KENLISTMENT_STATE
{
  KEnlistmentUninitialized = 0,
  KEnlistmentActive = 256,
  KEnlistmentPreparing = 257,
  KEnlistmentPrepared = 258,
  KEnlistmentInDoubt = 259,
  KEnlistmentCommitted = 260,
  KEnlistmentCommittedNotify = 261,
  KEnlistmentCommitRequested = 262,
  KEnlistmentAborted = 263,
  KEnlistmentDelegated = 264,
  KEnlistmentDelegatedDisconnected = 265,
  KEnlistmentPrePreparing = 266,
  KEnlistmentForgotten = 267,
  KEnlistmentRecovering = 268,
  KEnlistmentAborting = 269,
  KEnlistmentReadOnly = 270,
  KEnlistmentOutcomeUnavailable = 271,
  KEnlistmentOffline = 272,
  KEnlistmentPrePrepared = 273,
  KEnlistmentInitialized = 274,
} KENLISTMENT_STATE, *PKENLISTMENT_STATE;

typedef struct _KENLISTMENT_HISTORY
{
  /* 0x0000 */ unsigned long Notification;
  /* 0x0004 */ enum _KENLISTMENT_STATE NewState;
} KENLISTMENT_HISTORY, *PKENLISTMENT_HISTORY; /* size: 0x0008 */

typedef enum _ETW_NOTIFICATION_TYPE
{
  EtwNotificationTypeNoReply = 1,
  EtwNotificationTypeLegacyEnable = 2,
  EtwNotificationTypeEnable = 3,
  EtwNotificationTypePrivateLogger = 4,
  EtwNotificationTypePerflib = 5,
  EtwNotificationTypeAudio = 6,
  EtwNotificationTypeSession = 7,
  EtwNotificationTypeReserved = 8,
  EtwNotificationTypeCredentialUI = 9,
  EtwNotificationTypeMax = 10,
} ETW_NOTIFICATION_TYPE, *PETW_NOTIFICATION_TYPE;

typedef enum _KERNEL_STACK_LIMITS
{
  BugcheckStackLimits = 0,
  DPCStackLimits = 1,
  ExpandedStackLimits = 2,
  NormalStackLimits = 3,
  Win32kStackLimits = 4,
  SwapBusyStackLimits = 5,
  MaximumStackLimits = 6,
} KERNEL_STACK_LIMITS, *PKERNEL_STACK_LIMITS;

typedef struct _KTRANSACTION_HISTORY
{
  /* 0x0000 */ enum _TAG_UNNAMED_3 RecordType;
  /* 0x0004 */ unsigned long Payload;
} KTRANSACTION_HISTORY, *PKTRANSACTION_HISTORY; /* size: 0x0008 */

typedef struct _OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long TotalNumberOfObjects;
  /* 0x0014 */ unsigned long TotalNumberOfHandles;
  /* 0x0018 */ unsigned long TotalPagedPoolUsage;
  /* 0x001c */ unsigned long TotalNonPagedPoolUsage;
  /* 0x0020 */ unsigned long TotalNamePoolUsage;
  /* 0x0024 */ unsigned long TotalHandleTableUsage;
  /* 0x0028 */ unsigned long HighWaterNumberOfObjects;
  /* 0x002c */ unsigned long HighWaterNumberOfHandles;
  /* 0x0030 */ unsigned long HighWaterPagedPoolUsage;
  /* 0x0034 */ unsigned long HighWaterNonPagedPoolUsage;
  /* 0x0038 */ unsigned long HighWaterNamePoolUsage;
  /* 0x003c */ unsigned long HighWaterHandleTableUsage;
  /* 0x0040 */ unsigned long InvalidAttributes;
  /* 0x0044 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0054 */ unsigned long ValidAccessMask;
  /* 0x0058 */ unsigned char SecurityRequired;
  /* 0x0059 */ unsigned char MaintainHandleCount;
  /* 0x005a */ char Padding_43[2];
  /* 0x005c */ unsigned long PoolType;
  /* 0x0060 */ unsigned long DefaultPagedPoolCharge;
  /* 0x0064 */ unsigned long DefaultNonPagedPoolCharge;
} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef struct _HEAP_EVENT_SUBSEGMENT_ALLOC_FREE
{
  /* 0x0000 */ void* HeapHandle;
  /* 0x0008 */ void* SubSegment;
  /* 0x0010 */ unsigned __int64 SubSegmentSize;
  /* 0x0018 */ unsigned __int64 BlockSize;
} HEAP_EVENT_SUBSEGMENT_ALLOC_FREE, *PHEAP_EVENT_SUBSEGMENT_ALLOC_FREE; /* size: 0x0020 */

typedef struct _HEAP_SUBSEGMENT_ALLOC
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ struct _HEAP_EVENT_SUBSEGMENT_ALLOC_FREE Event;
} HEAP_SUBSEGMENT_ALLOC, *PHEAP_SUBSEGMENT_ALLOC; /* size: 0x0040 */

typedef enum _TOKEN_TYPE
{
  TokenPrimary = 1,
  TokenImpersonation = 2,
} TOKEN_TYPE, *PTOKEN_TYPE;

typedef struct _HAL_ACPI_AUDIT_INFORMATION
{
  /* 0x0000 */ unsigned long RsdpCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long SameRsdt : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long SlicPresent : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long SlicDifferent : 1; /* bit position: 2 */
  }; /* bitfield */
} HAL_ACPI_AUDIT_INFORMATION, *PHAL_ACPI_AUDIT_INFORMATION; /* size: 0x0008 */

enum VF_FAILURE_CLASS
{
  VFFAILURE_FAIL_IN_FIELD = 0,
  VFFAILURE_FAIL_LOGO = 1,
  VFFAILURE_FAIL_UNDER_DEBUGGER = 2,
};

typedef enum _FS_FILTER_SECTION_SYNC_TYPE
{
  SyncTypeOther = 0,
  SyncTypeCreateSection = 1,
} FS_FILTER_SECTION_SYNC_TYPE, *PFS_FILTER_SECTION_SYNC_TYPE;

typedef enum _RTL_UMS_THREAD_INFO_CLASS
{
  UmsThreadInvalidInfoClass = 0,
  UmsThreadUserContext = 1,
  UmsThreadPriority = 2,
  UmsThreadAffinity = 3,
  UmsThreadTeb = 4,
  UmsThreadIsSuspended = 5,
  UmsThreadIsTerminated = 6,
  UmsThreadMaxInfoClass = 7,
} RTL_UMS_THREAD_INFO_CLASS, *PRTL_UMS_THREAD_INFO_CLASS;

typedef enum _MEMORY_CACHING_TYPE_ORIG
{
  MmFrameBufferCached = 2,
} MEMORY_CACHING_TYPE_ORIG, *PMEMORY_CACHING_TYPE_ORIG;

typedef struct _GDI_TEB_BATCH
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ long Padding_44;
  /* 0x0008 */ unsigned __int64 HDC;
  /* 0x0010 */ unsigned long Buffer[310];
} GDI_TEB_BATCH, *PGDI_TEB_BATCH; /* size: 0x04e8 */

typedef enum _FIRMWARE_REENTRY
{
  HalHaltRoutine = 0,
  HalPowerDownRoutine = 1,
  HalRestartRoutine = 2,
  HalRebootRoutine = 3,
  HalInteractiveModeRoutine = 4,
  HalMaximumRoutine = 5,
} FIRMWARE_REENTRY, *PFIRMWARE_REENTRY;

typedef struct _SE_AUDIT_PROCESS_CREATION_INFO
{
  /* 0x0000 */ struct _OBJECT_NAME_INFORMATION* ImageFileName;
} SE_AUDIT_PROCESS_CREATION_INFO, *PSE_AUDIT_PROCESS_CREATION_INFO; /* size: 0x0008 */

typedef struct _MMPTE_FLUSH_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaximumCount;
  /* 0x0008 */ void* FlushVa[20];
} MMPTE_FLUSH_LIST, *PMMPTE_FLUSH_LIST; /* size: 0x00a8 */

typedef struct _KLOCK_QUEUE_HANDLE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE LockQueue;
  /* 0x0010 */ unsigned char OldIrql;
  /* 0x0011 */ char __PADDING__[7];
} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE; /* size: 0x0018 */

typedef enum _POLICY_LSA_SERVER_ROLE
{
  PolicyServerRoleBackup = 2,
  PolicyServerRolePrimary = 3,
} POLICY_LSA_SERVER_ROLE, *PPOLICY_LSA_SERVER_ROLE;

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
{
  SystemCrashDumpDisable = 0,
  SystemCrashDumpReconfigure = 1,
  SystemCrashDumpInitializationComplete = 2,
} SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS, *PSYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;

typedef enum _FSINFOCLASS
{
  FileFsVolumeInformation = 1,
  FileFsLabelInformation = 2,
  FileFsSizeInformation = 3,
  FileFsDeviceInformation = 4,
  FileFsAttributeInformation = 5,
  FileFsControlInformation = 6,
  FileFsFullSizeInformation = 7,
  FileFsObjectIdInformation = 8,
  FileFsDriverPathInformation = 9,
  FileFsVolumeFlagsInformation = 10,
  FileFsMaximumInformation = 11,
} FSINFOCLASS, *PFSINFOCLASS;

typedef struct _SYSTEM_POWER_STATE_CONTEXT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long TargetSystemState : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned long EffectiveSystemState : 4; /* bit position: 12 */
      /* 0x0000 */ unsigned long CurrentSystemState : 4; /* bit position: 16 */
      /* 0x0000 */ unsigned long IgnoreHibernationPath : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long PseudoTransition : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long Reserved2 : 10; /* bit position: 22 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ContextAsUlong;
  }; /* size: 0x0004 */
} SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT; /* size: 0x0004 */

typedef enum _POWER_STATE_TYPE
{
  SystemPowerState = 0,
  DevicePowerState = 1,
} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

typedef union _POWER_STATE
{
  union
  {
    /* 0x0000 */ enum _SYSTEM_POWER_STATE SystemState;
    /* 0x0000 */ enum _DEVICE_POWER_STATE DeviceState;
  }; /* size: 0x0004 */
} POWER_STATE, *PPOWER_STATE; /* size: 0x0004 */

enum POWER_ACTION
{
  PowerActionNone = 0,
  PowerActionReserved = 1,
  PowerActionSleep = 2,
  PowerActionHibernate = 3,
  PowerActionShutdown = 4,
  PowerActionShutdownReset = 5,
  PowerActionShutdownOff = 6,
  PowerActionWarmEject = 7,
};

typedef struct _IO_STACK_LOCATION
{
  /* 0x0000 */ unsigned char MajorFunction;
  /* 0x0001 */ unsigned char MinorFunction;
  /* 0x0002 */ unsigned char Flags;
  /* 0x0003 */ unsigned char Control;
  /* 0x0004 */ long Padding_45;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ struct _IO_SECURITY_CONTEXT* SecurityContext;
        /* 0x0010 */ unsigned long Options;
        /* 0x000c */ long Padding_46;
        /* 0x0018 */ unsigned short FileAttributes;
        /* 0x001a */ unsigned short ShareAccess;
        /* 0x0014 */ long Padding_47;
        /* 0x0020 */ unsigned long EaLength;
        /* 0x0024 */ long __PADDING__[1];
      } /* size: 0x0020 */ Create;
      struct
      {
        /* 0x0008 */ struct _IO_SECURITY_CONTEXT* SecurityContext;
        /* 0x0010 */ unsigned long Options;
        /* 0x000c */ long Padding_48;
        /* 0x0018 */ unsigned short Reserved;
        /* 0x001a */ unsigned short ShareAccess;
        /* 0x0014 */ long Padding_49;
        /* 0x0020 */ struct _NAMED_PIPE_CREATE_PARAMETERS* Parameters;
      } /* size: 0x0020 */ CreatePipe;
      struct
      {
        /* 0x0008 */ struct _IO_SECURITY_CONTEXT* SecurityContext;
        /* 0x0010 */ unsigned long Options;
        /* 0x000c */ long Padding_50;
        /* 0x0018 */ unsigned short Reserved;
        /* 0x001a */ unsigned short ShareAccess;
        /* 0x0014 */ long Padding_51;
        /* 0x0020 */ struct _MAILSLOT_CREATE_PARAMETERS* Parameters;
      } /* size: 0x0020 */ CreateMailslot;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_52;
        /* 0x0010 */ unsigned long Key;
        /* 0x000c */ long Padding_53;
        /* 0x0018 */ union _LARGE_INTEGER ByteOffset;
      } /* size: 0x0018 */ Read;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_54;
        /* 0x0010 */ unsigned long Key;
        /* 0x000c */ long Padding_55;
        /* 0x0018 */ union _LARGE_INTEGER ByteOffset;
      } /* size: 0x0018 */ Write;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_56;
        /* 0x0010 */ struct _UNICODE_STRING* FileName;
        /* 0x0018 */ enum _FILE_INFORMATION_CLASS FileInformationClass;
        /* 0x0014 */ long Padding_57;
        /* 0x0020 */ unsigned long FileIndex;
        /* 0x0024 */ long __PADDING__[1];
      } /* size: 0x0020 */ QueryDirectory;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_58;
        /* 0x0010 */ unsigned long CompletionFilter;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ NotifyDirectory;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_59;
        /* 0x0010 */ enum _FILE_INFORMATION_CLASS FileInformationClass;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ QueryFile;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_60;
        /* 0x0010 */ enum _FILE_INFORMATION_CLASS FileInformationClass;
        /* 0x000c */ long Padding_61;
        /* 0x0018 */ struct _FILE_OBJECT* FileObject;
        union
        {
          struct
          {
            /* 0x0020 */ unsigned char ReplaceIfExists;
            /* 0x0021 */ unsigned char AdvanceOnly;
          }; /* size: 0x0002 */
          /* 0x0020 */ unsigned long ClusterCount;
          /* 0x0020 */ void* DeleteHandle;
        }; /* size: 0x0008 */
      } /* size: 0x0020 */ SetFile;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_62;
        /* 0x0010 */ void* EaList;
        /* 0x0018 */ unsigned long EaListLength;
        /* 0x0014 */ long Padding_63;
        /* 0x0020 */ unsigned long EaIndex;
        /* 0x0024 */ long __PADDING__[1];
      } /* size: 0x0020 */ QueryEa;
      struct
      {
        /* 0x0008 */ unsigned long Length;
      } /* size: 0x0004 */ SetEa;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_64;
        /* 0x0010 */ enum _FSINFOCLASS FsInformationClass;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ QueryVolume;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_65;
        /* 0x0010 */ enum _FSINFOCLASS FsInformationClass;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ SetVolume;
      struct
      {
        /* 0x0008 */ unsigned long OutputBufferLength;
        /* 0x0004 */ long Padding_66;
        /* 0x0010 */ unsigned long InputBufferLength;
        /* 0x000c */ long Padding_67;
        /* 0x0018 */ unsigned long FsControlCode;
        /* 0x0014 */ long Padding_68;
        /* 0x0020 */ void* Type3InputBuffer;
      } /* size: 0x0020 */ FileSystemControl;
      struct
      {
        /* 0x0008 */ union _LARGE_INTEGER* Length;
        /* 0x0010 */ unsigned long Key;
        /* 0x000c */ long Padding_69;
        /* 0x0018 */ union _LARGE_INTEGER ByteOffset;
      } /* size: 0x0018 */ LockControl;
      struct
      {
        /* 0x0008 */ unsigned long OutputBufferLength;
        /* 0x0004 */ long Padding_70;
        /* 0x0010 */ unsigned long InputBufferLength;
        /* 0x000c */ long Padding_71;
        /* 0x0018 */ unsigned long IoControlCode;
        /* 0x0014 */ long Padding_72;
        /* 0x0020 */ void* Type3InputBuffer;
      } /* size: 0x0020 */ DeviceIoControl;
      struct
      {
        /* 0x0008 */ unsigned long SecurityInformation;
        /* 0x0004 */ long Padding_73;
        /* 0x0010 */ unsigned long Length;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ QuerySecurity;
      struct
      {
        /* 0x0008 */ unsigned long SecurityInformation;
        /* 0x0004 */ long Padding_74;
        /* 0x0010 */ void* SecurityDescriptor;
      } /* size: 0x0010 */ SetSecurity;
      struct
      {
        /* 0x0008 */ struct _VPB* Vpb;
        /* 0x0010 */ struct _DEVICE_OBJECT* DeviceObject;
      } /* size: 0x0010 */ MountVolume;
      struct
      {
        /* 0x0008 */ struct _VPB* Vpb;
        /* 0x0010 */ struct _DEVICE_OBJECT* DeviceObject;
      } /* size: 0x0010 */ VerifyVolume;
      struct
      {
        /* 0x0008 */ struct _SCSI_REQUEST_BLOCK* Srb;
      } /* size: 0x0008 */ Scsi;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x0004 */ long Padding_75;
        /* 0x0010 */ void* StartSid;
        /* 0x0018 */ struct _FILE_GET_QUOTA_INFORMATION* SidList;
        /* 0x0020 */ unsigned long SidListLength;
        /* 0x0024 */ long __PADDING__[1];
      } /* size: 0x0020 */ QueryQuota;
      struct
      {
        /* 0x0008 */ unsigned long Length;
      } /* size: 0x0004 */ SetQuota;
      struct
      {
        /* 0x0008 */ enum _DEVICE_RELATION_TYPE Type;
      } /* size: 0x0004 */ QueryDeviceRelations;
      struct
      {
        /* 0x0008 */ const struct _GUID* InterfaceType;
        /* 0x0010 */ unsigned short Size;
        /* 0x0012 */ unsigned short Version;
        /* 0x000c */ long Padding_76;
        /* 0x0018 */ struct _INTERFACE* Interface;
        /* 0x0020 */ void* InterfaceSpecificData;
      } /* size: 0x0020 */ QueryInterface;
      struct
      {
        /* 0x0008 */ struct _DEVICE_CAPABILITIES* Capabilities;
      } /* size: 0x0008 */ DeviceCapabilities;
      struct
      {
        /* 0x0008 */ struct _IO_RESOURCE_REQUIREMENTS_LIST* IoResourceRequirementList;
      } /* size: 0x0008 */ FilterResourceRequirements;
      struct
      {
        /* 0x0008 */ unsigned long WhichSpace;
        /* 0x0004 */ long Padding_77;
        /* 0x0010 */ void* Buffer;
        /* 0x0018 */ unsigned long Offset;
        /* 0x0014 */ long Padding_78;
        /* 0x0020 */ unsigned long Length;
        /* 0x0024 */ long __PADDING__[1];
      } /* size: 0x0020 */ ReadWriteConfig;
      struct
      {
        /* 0x0008 */ unsigned char Lock;
      } /* size: 0x0001 */ SetLock;
      struct
      {
        /* 0x0008 */ enum BUS_QUERY_ID_TYPE IdType;
      } /* size: 0x0004 */ QueryId;
      struct
      {
        /* 0x0008 */ enum DEVICE_TEXT_TYPE DeviceTextType;
        /* 0x0004 */ long Padding_79;
        /* 0x0010 */ unsigned long LocaleId;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ QueryDeviceText;
      struct
      {
        /* 0x0008 */ unsigned char InPath;
        /* 0x0009 */ unsigned char Reserved[3];
        /* 0x0004 */ long Padding_80;
        /* 0x0010 */ enum _DEVICE_USAGE_NOTIFICATION_TYPE Type;
        /* 0x0014 */ long __PADDING__[1];
      } /* size: 0x0010 */ UsageNotification;
      struct
      {
        /* 0x0008 */ enum _SYSTEM_POWER_STATE PowerState;
      } /* size: 0x0004 */ WaitWake;
      struct
      {
        /* 0x0008 */ struct _POWER_SEQUENCE* PowerSequence;
      } /* size: 0x0008 */ PowerSequence;
      struct
      {
        union
        {
          /* 0x0008 */ unsigned long SystemContext;
          /* 0x0008 */ struct _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;
        }; /* size: 0x0004 */
        /* 0x0004 */ long Padding_81;
        /* 0x0010 */ enum _POWER_STATE_TYPE Type;
        /* 0x000c */ long Padding_82;
        /* 0x0018 */ union _POWER_STATE State;
        /* 0x0014 */ long Padding_83;
        /* 0x0020 */ enum POWER_ACTION ShutdownType;
        /* 0x0024 */ long __PADDING__[1];
      } /* size: 0x0020 */ Power;
      struct
      {
        /* 0x0008 */ struct _CM_RESOURCE_LIST* AllocatedResources;
        /* 0x0010 */ struct _CM_RESOURCE_LIST* AllocatedResourcesTranslated;
      } /* size: 0x0010 */ StartDevice;
      struct
      {
        /* 0x0008 */ unsigned __int64 ProviderId;
        /* 0x0010 */ void* DataPath;
        /* 0x0018 */ unsigned long BufferSize;
        /* 0x0014 */ long Padding_84;
        /* 0x0020 */ void* Buffer;
      } /* size: 0x0020 */ WMI;
      struct
      {
        /* 0x0008 */ void* Argument1;
        /* 0x0010 */ void* Argument2;
        /* 0x0018 */ void* Argument3;
        /* 0x0020 */ void* Argument4;
      } /* size: 0x0020 */ Others;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ Parameters;
  /* 0x0028 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0030 */ struct _FILE_OBJECT* FileObject;
  /* 0x0038 */ void* CompletionRoutine /* function */;
  /* 0x0040 */ void* Context;
} IO_STACK_LOCATION, *PIO_STACK_LOCATION; /* size: 0x0048 */

typedef struct _IRP_MINI_SNAPSHOT
{
  /* 0x0000 */ struct _IRP* Irp;
  /* 0x0008 */ struct _IO_STACK_LOCATION IoStackLocation;
} IRP_MINI_SNAPSHOT, *PIRP_MINI_SNAPSHOT; /* size: 0x0050 */

typedef struct _IOFCALLDRIVER_STACKDATA
{
  /* 0x0000 */ struct _IOV_SESSION_DATA* IovSessionData;
  /* 0x0008 */ struct _IOV_STACK_LOCATION* IovStackLocation;
  /* 0x0010 */ struct _IOV_REQUEST_PACKET* IovPacket;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_85;
  /* 0x0020 */ struct _LIST_ENTRY SharedLocationList;
  /* 0x0030 */ void* DispatchRoutine /* function */;
  /* 0x0038 */ long ExpectedStatus;
  /* 0x003c */ long NewStatus;
  /* 0x0040 */ struct _DEVICE_OBJECT* RemovePdo;
  /* 0x0048 */ struct _IRP_MINI_SNAPSHOT IrpSnapshot;
  /* 0x0098 */ unsigned long Flags2;
  /* 0x009c */ unsigned char OriginalIrql;
  /* 0x009d */ unsigned char BugcheckIrql;
  /* 0x009e */ char Padding_86[2];
  /* 0x00a0 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x00a8 */ struct _IRP* Irp;
  /* 0x00b0 */ void* ReturnAddress;
  /* 0x00b8 */ long CallDriverStatus;
  union
  {
    struct
    {
      /* 0x00bc */ short KernelApcDisable;
      /* 0x00be */ short SpecialApcDisable;
    }; /* size: 0x0004 */
    /* 0x00bc */ unsigned long CombinedApcDisable;
  }; /* size: 0x0004 */
} IOFCALLDRIVER_STACKDATA, *PIOFCALLDRIVER_STACKDATA; /* size: 0x00c0 */

enum PCI_BUS_WIDTH
{
  BusWidth32Bits = 0,
  BusWidth64Bits = 1,
};

typedef struct _PO_HIBER_PERF
{
  /* 0x0000 */ unsigned __int64 IoTicks;
  /* 0x0008 */ unsigned __int64 InitTicks;
  /* 0x0010 */ unsigned __int64 CopyTicks;
  /* 0x0018 */ unsigned __int64 ElapsedTicks;
  /* 0x0020 */ unsigned __int64 CompressTicks;
  /* 0x0028 */ unsigned __int64 ResumeAppTime;
  /* 0x0030 */ unsigned __int64 HiberFileResumeTime;
  /* 0x0038 */ unsigned __int64 BytesCopied;
  /* 0x0040 */ unsigned __int64 PagesProcessed;
  /* 0x0048 */ unsigned long PagesWritten;
  /* 0x004c */ unsigned long DumpCount;
  /* 0x0050 */ unsigned long FileRuns;
  /* 0x0054 */ long __PADDING__[1];
} PO_HIBER_PERF, *PPO_HIBER_PERF; /* size: 0x0058 */

struct PO_MEMORY_IMAGE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long ImageType;
  /* 0x0008 */ unsigned long CheckSum;
  /* 0x000c */ unsigned long LengthSelf;
  /* 0x0010 */ unsigned __int64 PageSelf;
  /* 0x0018 */ unsigned long PageSize;
  /* 0x001c */ long Padding_87;
  /* 0x0020 */ union _LARGE_INTEGER SystemTime;
  /* 0x0028 */ unsigned __int64 InterruptTime;
  /* 0x0030 */ unsigned long FeatureFlags;
  /* 0x0034 */ unsigned char HiberFlags;
  /* 0x0035 */ unsigned char spare[3];
  /* 0x0038 */ unsigned long NoHiberPtes;
  /* 0x003c */ long Padding_88;
  /* 0x0040 */ unsigned __int64 HiberVa;
  /* 0x0048 */ union _LARGE_INTEGER HiberPte;
  /* 0x0050 */ unsigned long NoFreePages;
  /* 0x0054 */ unsigned long FreeMapCheck;
  /* 0x0058 */ unsigned long WakeCheck;
  /* 0x005c */ long Padding_89;
  /* 0x0060 */ unsigned __int64 FirstTablePage;
  /* 0x0068 */ struct _PO_HIBER_PERF PerfInfo;
  /* 0x00c0 */ unsigned long FirmwareRuntimeInformationPages;
  /* 0x00c4 */ long Padding_90;
  /* 0x00c8 */ unsigned __int64 FirmwareRuntimeInformation[1];
  /* 0x00d0 */ unsigned long NoBootLoaderLogPages;
  /* 0x00d4 */ long Padding_91;
  /* 0x00d8 */ unsigned __int64 BootLoaderLogPages[8];
  /* 0x0118 */ unsigned long NotUsed;
  /* 0x011c */ unsigned long ResumeContextCheck;
  /* 0x0120 */ unsigned long ResumeContextPages;
  /* 0x0124 */ long __PADDING__[1];
}; /* size: 0x0128 */

typedef enum _WATCHDOG_HANDLER_ACTION
{
  WdActionSetTimeoutValue = 0,
  WdActionQueryTimeoutValue = 1,
  WdActionResetTimer = 2,
  WdActionStopTimer = 3,
  WdActionStartTimer = 4,
  WdActionSetTriggerAction = 5,
  WdActionQueryTriggerAction = 6,
  WdActionQueryState = 7,
  WdActionSleep = 8,
  WdActionWake = 9,
} WATCHDOG_HANDLER_ACTION, *PWATCHDOG_HANDLER_ACTION;

typedef enum _SHUTDOWN_ACTION
{
  ShutdownNoReboot = 0,
  ShutdownReboot = 1,
  ShutdownPowerOff = 2,
} SHUTDOWN_ACTION, *PSHUTDOWN_ACTION;

typedef struct _IMAGE_RESOURCE_DATA_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToData;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long CodePage;
  /* 0x000c */ unsigned long Reserved;
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY; /* size: 0x0010 */

typedef enum _DPFLTR_TYPE
{
  DPFLTR_SYSTEM_ID = 0,
  DPFLTR_SMSS_ID = 1,
  DPFLTR_SETUP_ID = 2,
  DPFLTR_NTFS_ID = 3,
  DPFLTR_FSTUB_ID = 4,
  DPFLTR_CRASHDUMP_ID = 5,
  DPFLTR_CDAUDIO_ID = 6,
  DPFLTR_CDROM_ID = 7,
  DPFLTR_CLASSPNP_ID = 8,
  DPFLTR_DISK_ID = 9,
  DPFLTR_REDBOOK_ID = 10,
  DPFLTR_STORPROP_ID = 11,
  DPFLTR_SCSIPORT_ID = 12,
  DPFLTR_SCSIMINIPORT_ID = 13,
  DPFLTR_CONFIG_ID = 14,
  DPFLTR_I8042PRT_ID = 15,
  DPFLTR_SERMOUSE_ID = 16,
  DPFLTR_LSERMOUS_ID = 17,
  DPFLTR_KBDHID_ID = 18,
  DPFLTR_MOUHID_ID = 19,
  DPFLTR_KBDCLASS_ID = 20,
  DPFLTR_MOUCLASS_ID = 21,
  DPFLTR_TWOTRACK_ID = 22,
  DPFLTR_WMILIB_ID = 23,
  DPFLTR_ACPI_ID = 24,
  DPFLTR_AMLI_ID = 25,
  DPFLTR_HALIA64_ID = 26,
  DPFLTR_VIDEO_ID = 27,
  DPFLTR_SVCHOST_ID = 28,
  DPFLTR_VIDEOPRT_ID = 29,
  DPFLTR_TCPIP_ID = 30,
  DPFLTR_DMSYNTH_ID = 31,
  DPFLTR_NTOSPNP_ID = 32,
  DPFLTR_FASTFAT_ID = 33,
  DPFLTR_SAMSS_ID = 34,
  DPFLTR_PNPMGR_ID = 35,
  DPFLTR_NETAPI_ID = 36,
  DPFLTR_SCSERVER_ID = 37,
  DPFLTR_SCCLIENT_ID = 38,
  DPFLTR_SERIAL_ID = 39,
  DPFLTR_SERENUM_ID = 40,
  DPFLTR_UHCD_ID = 41,
  DPFLTR_RPCPROXY_ID = 42,
  DPFLTR_AUTOCHK_ID = 43,
  DPFLTR_DCOMSS_ID = 44,
  DPFLTR_UNIMODEM_ID = 45,
  DPFLTR_SIS_ID = 46,
  DPFLTR_FLTMGR_ID = 47,
  DPFLTR_WMICORE_ID = 48,
  DPFLTR_BURNENG_ID = 49,
  DPFLTR_IMAPI_ID = 50,
  DPFLTR_SXS_ID = 51,
  DPFLTR_FUSION_ID = 52,
  DPFLTR_IDLETASK_ID = 53,
  DPFLTR_SOFTPCI_ID = 54,
  DPFLTR_TAPE_ID = 55,
  DPFLTR_MCHGR_ID = 56,
  DPFLTR_IDEP_ID = 57,
  DPFLTR_PCIIDE_ID = 58,
  DPFLTR_FLOPPY_ID = 59,
  DPFLTR_FDC_ID = 60,
  DPFLTR_TERMSRV_ID = 61,
  DPFLTR_W32TIME_ID = 62,
  DPFLTR_PREFETCHER_ID = 63,
  DPFLTR_RSFILTER_ID = 64,
  DPFLTR_FCPORT_ID = 65,
  DPFLTR_PCI_ID = 66,
  DPFLTR_DMIO_ID = 67,
  DPFLTR_DMCONFIG_ID = 68,
  DPFLTR_DMADMIN_ID = 69,
  DPFLTR_WSOCKTRANSPORT_ID = 70,
  DPFLTR_VSS_ID = 71,
  DPFLTR_PNPMEM_ID = 72,
  DPFLTR_PROCESSOR_ID = 73,
  DPFLTR_DMSERVER_ID = 74,
  DPFLTR_SR_ID = 75,
  DPFLTR_INFINIBAND_ID = 76,
  DPFLTR_IHVDRIVER_ID = 77,
  DPFLTR_IHVVIDEO_ID = 78,
  DPFLTR_IHVAUDIO_ID = 79,
  DPFLTR_IHVNETWORK_ID = 80,
  DPFLTR_IHVSTREAMING_ID = 81,
  DPFLTR_IHVBUS_ID = 82,
  DPFLTR_HPS_ID = 83,
  DPFLTR_RTLTHREADPOOL_ID = 84,
  DPFLTR_LDR_ID = 85,
  DPFLTR_TCPIP6_ID = 86,
  DPFLTR_ISAPNP_ID = 87,
  DPFLTR_SHPC_ID = 88,
  DPFLTR_STORPORT_ID = 89,
  DPFLTR_STORMINIPORT_ID = 90,
  DPFLTR_PRINTSPOOLER_ID = 91,
  DPFLTR_VSSDYNDISK_ID = 92,
  DPFLTR_VERIFIER_ID = 93,
  DPFLTR_VDS_ID = 94,
  DPFLTR_VDSBAS_ID = 95,
  DPFLTR_VDSDYN_ID = 96,
  DPFLTR_VDSDYNDR_ID = 97,
  DPFLTR_VDSLDR_ID = 98,
  DPFLTR_VDSUTIL_ID = 99,
  DPFLTR_DFRGIFC_ID = 100,
  DPFLTR_DEFAULT_ID = 101,
  DPFLTR_MM_ID = 102,
  DPFLTR_DFSC_ID = 103,
  DPFLTR_WOW64_ID = 104,
  DPFLTR_ALPC_ID = 105,
  DPFLTR_WDI_ID = 106,
  DPFLTR_PERFLIB_ID = 107,
  DPFLTR_KTM_ID = 108,
  DPFLTR_IOSTRESS_ID = 109,
  DPFLTR_HEAP_ID = 110,
  DPFLTR_WHEA_ID = 111,
  DPFLTR_USERGDI_ID = 112,
  DPFLTR_MMCSS_ID = 113,
  DPFLTR_TPM_ID = 114,
  DPFLTR_THREADORDER_ID = 115,
  DPFLTR_ENVIRON_ID = 116,
  DPFLTR_EMS_ID = 117,
  DPFLTR_WDT_ID = 118,
  DPFLTR_FVEVOL_ID = 119,
  DPFLTR_NDIS_ID = 120,
  DPFLTR_NVCTRACE_ID = 121,
  DPFLTR_LUAFV_ID = 122,
  DPFLTR_APPCOMPAT_ID = 123,
  DPFLTR_USBSTOR_ID = 124,
  DPFLTR_SBP2PORT_ID = 125,
  DPFLTR_COVERAGE_ID = 126,
  DPFLTR_CACHEMGR_ID = 127,
  DPFLTR_MOUNTMGR_ID = 128,
  DPFLTR_CFR_ID = 129,
  DPFLTR_TXF_ID = 130,
  DPFLTR_KSECDD_ID = 131,
  DPFLTR_FLTREGRESS_ID = 132,
  DPFLTR_MPIO_ID = 133,
  DPFLTR_MSDSM_ID = 134,
  DPFLTR_UDFS_ID = 135,
  DPFLTR_PSHED_ID = 136,
  DPFLTR_STORVSP_ID = 137,
  DPFLTR_LSASS_ID = 138,
  DPFLTR_SSPICLI_ID = 139,
  DPFLTR_CNG_ID = 140,
  DPFLTR_EXFAT_ID = 141,
  DPFLTR_FILETRACE_ID = 142,
  DPFLTR_XSAVE_ID = 143,
  DPFLTR_SE_ID = 144,
  DPFLTR_DRIVEEXTENDER_ID = 145,
  DPFLTR_ENDOFTABLE_ID = 146,
} DPFLTR_TYPE, *PDPFLTR_TYPE;

typedef enum _HV_STATS_OBJECT_TYPE
{
  HvStatsObjectLogicalProcessor = 2,
} HV_STATS_OBJECT_TYPE, *PHV_STATS_OBJECT_TYPE;

typedef enum _SE_AUDIT_OPERATION
{
  AuditPrivilegeObject = 0,
  AuditPrivilegeService = 1,
  AuditAccessCheck = 2,
  AuditOpenObject = 3,
  AuditOpenObjectWithTransaction = 4,
  AuditCloseObject = 5,
  AuditDeleteObject = 6,
  AuditOpenObjectForDelete = 7,
  AuditOpenObjectForDeleteWithTransaction = 8,
  AuditCloseNonObject = 9,
  AuditOpenNonObject = 10,
  AuditObjectReference = 11,
  AuditHandleCreation = 12,
} SE_AUDIT_OPERATION, *PSE_AUDIT_OPERATION;

typedef enum _PSW32JOBCALLOUTTYPE
{
  PsW32JobCalloutSetInformation = 0,
  PsW32JobCalloutAddProcess = 1,
  PsW32JobCalloutTerminate = 2,
} PSW32JOBCALLOUTTYPE, *PPSW32JOBCALLOUTTYPE;

enum SYSTEM_POWER_CONDITION
{
  PoAc = 0,
  PoDc = 1,
  PoHot = 2,
  PoConditionMaximum = 3,
};

typedef struct _VERIFIER_SHARED_EXPORT_THUNK
{
  /* 0x0000 */ void** IATEntry;
  /* 0x0008 */ void* VerifierRoutine /* function */;
} VERIFIER_SHARED_EXPORT_THUNK, *PVERIFIER_SHARED_EXPORT_THUNK; /* size: 0x0010 */

typedef enum _AMD64_UNWIND_OP_CODES
{
  AMD64_UWOP_PUSH_NONVOL = 0,
  AMD64_UWOP_ALLOC_LARGE = 1,
  AMD64_UWOP_ALLOC_SMALL = 2,
  AMD64_UWOP_SET_FPREG = 3,
  AMD64_UWOP_SAVE_NONVOL = 4,
  AMD64_UWOP_SAVE_NONVOL_FAR = 5,
  AMD64_UWOP_SAVE_XMM = 6,
  AMD64_UWOP_SAVE_XMM_FAR = 7,
  AMD64_UWOP_SAVE_XMM128 = 8,
  AMD64_UWOP_SAVE_XMM128_FAR = 9,
  AMD64_UWOP_PUSH_MACHFRAME = 10,
} AMD64_UNWIND_OP_CODES, *PAMD64_UNWIND_OP_CODES;

typedef enum _WHEA_PCIEXPRESS_DEVICE_TYPE
{
  WheaPciExpressEndpoint = 0,
  WheaPciExpressLegacyEndpoint = 1,
  WheaPciExpressRootPort = 4,
  WheaPciExpressUpstreamSwitchPort = 5,
  WheaPciExpressDownstreamSwitchPort = 6,
  WheaPciExpressToPciXBridge = 7,
  WheaPciXToExpressBridge = 8,
  WheaPciExpressRootComplexIntegratedEndpoint = 9,
  WheaPciExpressRootComplexEventCollector = 10,
} WHEA_PCIEXPRESS_DEVICE_TYPE, *PWHEA_PCIEXPRESS_DEVICE_TYPE;

typedef enum _IO_COMPLETION_ROUTINE_RESULT
{
  ContinueCompletion = 0,
  StopCompletion = -1073741802,
} IO_COMPLETION_ROUTINE_RESULT, *PIO_COMPLETION_ROUTINE_RESULT;

typedef enum _KD_OPTION
{
  KD_OPTION_SET_BLOCK_ENABLE = 0,
} KD_OPTION, *PKD_OPTION;

typedef enum _CLS_LOG_INFORMATION_CLASS
{
  ClfsLogBasicInformation = 0,
  ClfsLogBasicInformationPhysical = 1,
  ClfsLogPhysicalNameInformation = 2,
  ClfsLogStreamIdentifierInformation = 3,
  ClfsLogSystemMarkingInformation = 4,
  ClfsLogPhysicalLsnInformation = 5,
} CLS_LOG_INFORMATION_CLASS, *PCLS_LOG_INFORMATION_CLASS;

typedef struct _CM_HASH_ENTRY
{
  /* 0x0000 */ unsigned long ConvKey;
  /* 0x0004 */ long Padding_92;
  /* 0x0008 */ struct _UNICODE_STRING KeyName;
} CM_HASH_ENTRY, *PCM_HASH_ENTRY; /* size: 0x0018 */

typedef struct _MM_KERNEL_DUMP_CONTEXT
{
  /* 0x0000 */ void* Context;
  /* 0x0008 */ void* SetDumpRange /* function */;
  /* 0x0010 */ void* FreeDumpRange /* function */;
} MM_KERNEL_DUMP_CONTEXT, *PMM_KERNEL_DUMP_CONTEXT; /* size: 0x0018 */

typedef enum _PP_NPAGED_LOOKASIDE_NUMBER
{
  LookasideSmallIrpList = 0,
  LookasideMediumIrpList = 1,
  LookasideLargeIrpList = 2,
  LookasideMdlList = 3,
  LookasideCreateInfoList = 4,
  LookasideNameBufferList = 5,
  LookasideTwilightList = 6,
  LookasideCompletionList = 7,
  LookasideScratchBufferList = 8,
  LookasideMaximumList = 9,
} PP_NPAGED_LOOKASIDE_NUMBER, *PPP_NPAGED_LOOKASIDE_NUMBER;

typedef enum _JOURNAL_INFORMATION_CLASS
{
  JournalAbsoluteInformation = 0,
  JournalClientInformation = 1,
  MaxJournalInformation = 2,
} JOURNAL_INFORMATION_CLASS, *PJOURNAL_INFORMATION_CLASS;

typedef enum _EXT_TDOP
{
  EXT_TDOP_COPY = 0,
  EXT_TDOP_RELEASE = 1,
  EXT_TDOP_SET_FROM_EXPR = 2,
  EXT_TDOP_SET_FROM_U64_EXPR = 3,
  EXT_TDOP_GET_FIELD = 4,
  EXT_TDOP_EVALUATE = 5,
  EXT_TDOP_GET_TYPE_NAME = 6,
  EXT_TDOP_OUTPUT_TYPE_NAME = 7,
  EXT_TDOP_OUTPUT_SIMPLE_VALUE = 8,
  EXT_TDOP_OUTPUT_FULL_VALUE = 9,
  EXT_TDOP_HAS_FIELD = 10,
  EXT_TDOP_GET_FIELD_OFFSET = 11,
  EXT_TDOP_GET_ARRAY_ELEMENT = 12,
  EXT_TDOP_GET_DEREFERENCE = 13,
  EXT_TDOP_GET_TYPE_SIZE = 14,
  EXT_TDOP_OUTPUT_TYPE_DEFINITION = 15,
  EXT_TDOP_GET_POINTER_TO = 16,
  EXT_TDOP_SET_FROM_TYPE_ID_AND_U64 = 17,
  EXT_TDOP_SET_PTR_FROM_TYPE_ID_AND_U64 = 18,
  EXT_TDOP_COUNT = 19,
} EXT_TDOP, *PEXT_TDOP;

typedef struct _CM_INT13_DRIVE_PARAMETER
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ unsigned long MaxCylinders;
  /* 0x0006 */ unsigned short SectorsPerTrack;
  /* 0x0008 */ unsigned short MaxHeads;
  /* 0x000a */ unsigned short NumberDrives;
} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER; /* size: 0x000c */

enum PS_CREATE_STATE
{
  PsCreateInitialState = 0,
  PsCreateFailOnFileOpen = 1,
  PsCreateFailOnSectionCreate = 2,
  PsCreateFailExeFormat = 3,
  PsCreateFailMachineMismatch = 4,
  PsCreateFailExeName = 5,
  PsCreateSuccess = 6,
  PsCreateMaximumStates = 7,
};

typedef enum _SYSTEM_MEMORY_LIST_COMMAND
{
  MemoryCaptureAccessedBits = 0,
  MemoryCaptureAndResetAccessedBits = 1,
  MemoryEmptyWorkingSets = 2,
  MemoryFlushModifiedList = 3,
  MemoryPurgeStandbyList = 4,
  MemoryPurgeLowPriorityStandbyList = 5,
  MemoryCommandMax = 6,
} SYSTEM_MEMORY_LIST_COMMAND, *PSYSTEM_MEMORY_LIST_COMMAND;

typedef enum _ACCESS_REASON_TYPE
{
  AccessReasonNone = 0,
  AccessReasonAllowedAce = 0x10000,
  AccessReasonDeniedAce = 0x20000,
  AccessReasonAllowedParentAce = 0x30000,
  AccessReasonDeniedParentAce = 0x40000,
  AccessReasonMissingPrivilege = 0x100000,
  AccessReasonFromPrivilege = 0x200000,
  AccessReasonIntegrityLevel = 0x300000,
  AccessReasonOwnership = 0x400000,
  AccessReasonNullDacl = 0x500000,
  AccessReasonEmptyDacl = 0x600000,
  AccessReasonNoSD = 0x700000,
  AccessReasonNoGrant = 0x800000,
} ACCESS_REASON_TYPE, *PACCESS_REASON_TYPE;

typedef struct _VF_SUSPECT_DRIVER_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ unsigned long Loads;
  /* 0x0014 */ unsigned long Unloads;
  /* 0x0018 */ struct _UNICODE_STRING BaseName;
} VF_SUSPECT_DRIVER_ENTRY, *PVF_SUSPECT_DRIVER_ENTRY; /* size: 0x0028 */

enum PO_WAKE_SOURCE_TYPE
{
  DeviceWakeSourceType = 0,
  FixedWakeSourceType = 1,
  TimerWakeSourceType = 2,
};

typedef struct _PS_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned __int64 TotalLength;
  /* 0x0008 */ struct _PS_ATTRIBUTE Attributes[1];
} PS_ATTRIBUTE_LIST, *PPS_ATTRIBUTE_LIST; /* size: 0x0028 */

typedef enum _IO_CONTAINER_INFORMATION_CLASS
{
  IoSessionStateInformation = 0,
  IoMaxContainerInformationClass = 1,
} IO_CONTAINER_INFORMATION_CLASS, *PIO_CONTAINER_INFORMATION_CLASS;

typedef enum _DBGKD_MAJOR_TYPES
{
  DBGKD_MAJOR_NT = 0,
  DBGKD_MAJOR_XBOX = 1,
  DBGKD_MAJOR_BIG = 2,
  DBGKD_MAJOR_EXDI = 3,
  DBGKD_MAJOR_NTBD = 4,
  DBGKD_MAJOR_EFI = 5,
  DBGKD_MAJOR_TNT = 6,
  DBGKD_MAJOR_SINGULARITY = 7,
  DBGKD_MAJOR_HYPERVISOR = 8,
  DBGKD_MAJOR_MIDORI = 9,
  DBGKD_MAJOR_COUNT = 10,
} DBGKD_MAJOR_TYPES, *PDBGKD_MAJOR_TYPES;

typedef enum _TRANSACTION_OUTCOME
{
  TransactionOutcomeUndetermined = 1,
  TransactionOutcomeCommitted = 2,
  TransactionOutcomeAborted = 3,
} TRANSACTION_OUTCOME, *PTRANSACTION_OUTCOME;

typedef struct _GET_PEB_ADDRESS
{
  /* 0x0000 */ unsigned __int64 CurrentThread;
  /* 0x0008 */ unsigned __int64 Address;
} GET_PEB_ADDRESS, *PGET_PEB_ADDRESS; /* size: 0x0010 */

typedef enum _HV_CPUID_FUNCTION
{
  HvCpuIdFunctionVersionAndFeatures = 1,
  HvCpuIdFunctionHvVendorAndMaxFunction = 0x40000000,
  HvCpuIdFunctionHvInterface = 0x40000001,
  HvCpuIdFunctionMsHvVersion = 0x40000002,
  HvCpuIdFunctionMsHvFeatures = 0x40000003,
  HvCpuIdFunctionMsHvEnlightenmentInformation = 0x40000004,
  HvCpuIdFunctionMsHvImplementationLimits = 0x40000005,
} HV_CPUID_FUNCTION, *PHV_CPUID_FUNCTION;

typedef enum _SYSTEM_VA_TYPE
{
  SystemVaTypeAll = 0,
  SystemVaTypeNonPagedPool = 1,
  SystemVaTypePagedPool = 2,
  SystemVaTypeSystemCache = 3,
  SystemVaTypeSystemPtes = 4,
  SystemVaTypeSessionSpace = 5,
  SystemVaTypeMax = 6,
} SYSTEM_VA_TYPE, *PSYSTEM_VA_TYPE;

typedef enum _WORKING_SET_TRIMMER_STATE
{
  TrimmerStateNone = 0,
  TrimmerStateAttached = 1,
  TrimmerStateDetaching = 2,
  TrimmerStateInUse = 3,
} WORKING_SET_TRIMMER_STATE, *PWORKING_SET_TRIMMER_STATE;

typedef struct _PHYSICAL_MEMORY_RUN64
{
  /* 0x0000 */ unsigned __int64 BasePage;
  /* 0x0008 */ unsigned __int64 PageCount;
} PHYSICAL_MEMORY_RUN64, *PPHYSICAL_MEMORY_RUN64; /* size: 0x0010 */

typedef struct _PHYSICAL_MEMORY_DESCRIPTOR64
{
  /* 0x0000 */ unsigned long NumberOfRuns;
  /* 0x0004 */ long Padding_93;
  /* 0x0008 */ unsigned __int64 NumberOfPages;
  /* 0x0010 */ struct _PHYSICAL_MEMORY_RUN64 Run[1];
} PHYSICAL_MEMORY_DESCRIPTOR64, *PPHYSICAL_MEMORY_DESCRIPTOR64; /* size: 0x0020 */

typedef struct _EXCEPTION_RECORD64
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ unsigned long __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64; /* size: 0x0098 */

typedef struct _DUMP_HEADER64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long ValidDump;
  /* 0x0008 */ unsigned long MajorVersion;
  /* 0x000c */ unsigned long MinorVersion;
  /* 0x0010 */ unsigned __int64 DirectoryTableBase;
  /* 0x0018 */ unsigned __int64 PfnDataBase;
  /* 0x0020 */ unsigned __int64 PsLoadedModuleList;
  /* 0x0028 */ unsigned __int64 PsActiveProcessHead;
  /* 0x0030 */ unsigned long MachineImageType;
  /* 0x0034 */ unsigned long NumberProcessors;
  /* 0x0038 */ unsigned long BugCheckCode;
  /* 0x003c */ long Padding_94;
  /* 0x0040 */ unsigned __int64 BugCheckParameter1;
  /* 0x0048 */ unsigned __int64 BugCheckParameter2;
  /* 0x0050 */ unsigned __int64 BugCheckParameter3;
  /* 0x0058 */ unsigned __int64 BugCheckParameter4;
  /* 0x0060 */ char VersionUser[32];
  /* 0x0080 */ unsigned __int64 KdDebuggerDataBlock;
  union
  {
    /* 0x0088 */ struct _PHYSICAL_MEMORY_DESCRIPTOR64 PhysicalMemoryBlock;
    /* 0x0088 */ unsigned char PhysicalMemoryBlockBuffer[700];
  }; /* size: 0x02bc */
  /* 0x0344 */ long Padding_95;
  /* 0x0348 */ unsigned char ContextRecord[3000];
  /* 0x0f00 */ struct _EXCEPTION_RECORD64 Exception;
  /* 0x0f98 */ unsigned long DumpType;
  /* 0x0f9c */ long Padding_96;
  /* 0x0fa0 */ union _LARGE_INTEGER RequiredDumpSpace;
  /* 0x0fa8 */ union _LARGE_INTEGER SystemTime;
  /* 0x0fb0 */ char Comment[128];
  /* 0x1030 */ union _LARGE_INTEGER SystemUpTime;
  /* 0x1038 */ unsigned long MiniDumpFields;
  /* 0x103c */ unsigned long SecondaryDataState;
  /* 0x1040 */ unsigned long ProductType;
  /* 0x1044 */ unsigned long SuiteMask;
  /* 0x1048 */ unsigned long WriterStatus;
  /* 0x104c */ unsigned char Unused1;
  /* 0x104d */ unsigned char KdSecondaryVersion;
  /* 0x104e */ unsigned char Unused[2];
  /* 0x1050 */ unsigned char _reserved0[4016];
} DUMP_HEADER64, *PDUMP_HEADER64; /* size: 0x2000 */

typedef enum _HAL_DISPLAY_BIOS_INFORMATION
{
  HalDisplayInt10Bios = 0,
  HalDisplayEmulatedBios = 1,
  HalDisplayNoBios = 2,
} HAL_DISPLAY_BIOS_INFORMATION, *PHAL_DISPLAY_BIOS_INFORMATION;

enum PO_FIXED_WAKE_SOURCE_TYPE
{
  FixedWakeSourcePowerButton = 0,
  FixedWakeSourceSleepButton = 1,
  FixedWakeSourceRtc = 2,
  FixedWakeSourceDozeToHibernate = 3,
};

typedef enum _STORAGE_BUS_TYPE
{
  BusTypeUnknown = 0,
  BusTypeScsi = 1,
  BusTypeAtapi = 2,
  BusTypeAta = 3,
  BusType1394 = 4,
  BusTypeSsa = 5,
  BusTypeFibre = 6,
  BusTypeUsb = 7,
  BusTypeRAID = 8,
  BusTypeiScsi = 9,
  BusTypeSas = 10,
  BusTypeSata = 11,
  BusTypeSd = 12,
  BusTypeMmc = 13,
  BusTypeVirtual = 14,
  BusTypeFileBackedVirtual = 15,
  BusTypeMax = 16,
  BusTypeMaxReserved = 127,
} STORAGE_BUS_TYPE, *PSTORAGE_BUS_TYPE;

typedef struct _PERFINFO_WORKINGSETMANAGER_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Available;
  /* 0x0008 */ unsigned __int64 DesiredFreeGoal;
  /* 0x0010 */ unsigned __int64 TotalClaim;
  /* 0x0018 */ unsigned __int64 TotalEstimatedAvailable;
  /* 0x0020 */ unsigned __int64 TotalDirtyPages;
  /* 0x0028 */ unsigned __int64 TotalDirtyPagesForPagefile;
  /* 0x0030 */ unsigned __int64 PlentyFreePages;
  /* 0x0038 */ unsigned long PageFaultCount;
  /* 0x003c */ unsigned long ZFODFaultCount;
  /* 0x0040 */ unsigned long StandbyRemoved;
  /* 0x0044 */ unsigned long AgeEstimationShift;
  /* 0x0048 */ unsigned char Replacing;
  /* 0x0049 */ char __PADDING__[7];
} PERFINFO_WORKINGSETMANAGER_INFORMATION, *PPERFINFO_WORKINGSETMANAGER_INFORMATION; /* size: 0x0050 */

typedef enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE
{
  NotifyTypeCreate = 0,
  NotifyTypeRetired = 1,
} FS_FILTER_STREAM_FO_NOTIFICATION_TYPE, *PFS_FILTER_STREAM_FO_NOTIFICATION_TYPE;

enum INTERRUPT_CONNECTION_TYPE
{
  InterruptTypeControllerInput = 0,
  InterruptTypeXapicMessage = 1,
  InterruptTypeHypertransport = 2,
  InterruptTypeMessageRequest = 3,
};

typedef enum _RTL_UMS_SCHEDULER_REASON
{
  UmsSchedulerStartup = 0,
  UmsSchedulerThreadBlocked = 1,
  UmsSchedulerThreadYield = 2,
} RTL_UMS_SCHEDULER_REASON, *PRTL_UMS_SCHEDULER_REASON;

typedef enum _LSA_LOOKUP_DOMAIN_INFO_CLASS
{
  AccountDomainInformation = 5,
  DnsDomainInformation = 12,
} LSA_LOOKUP_DOMAIN_INFO_CLASS, *PLSA_LOOKUP_DOMAIN_INFO_CLASS;

typedef enum _FP_IEEE_OPERATION_CODE
{
  FpCodeUnspecified = 0,
  FpCodeAdd = 1,
  FpCodeSubtract = 2,
  FpCodeMultiply = 3,
  FpCodeDivide = 4,
  FpCodeSquareRoot = 5,
  FpCodeRemainder = 6,
  FpCodeCompare = 7,
  FpCodeConvert = 8,
  FpCodeRound = 9,
  FpCodeTruncate = 10,
  FpCodeFloor = 11,
  FpCodeCeil = 12,
  FpCodeAcos = 13,
  FpCodeAsin = 14,
  FpCodeAtan = 15,
  FpCodeAtan2 = 16,
  FpCodeCabs = 17,
  FpCodeCos = 18,
  FpCodeCosh = 19,
  FpCodeExp = 20,
  FpCodeFabs = 21,
  FpCodeFmod = 22,
  FpCodeFrexp = 23,
  FpCodeHypot = 24,
  FpCodeLdexp = 25,
  FpCodeLog = 26,
  FpCodeLog10 = 27,
  FpCodeModf = 28,
  FpCodePow = 29,
  FpCodeSin = 30,
  FpCodeSinh = 31,
  FpCodeTan = 32,
  FpCodeTanh = 33,
  FpCodeY0 = 34,
  FpCodeY1 = 35,
  FpCodeYn = 36,
} FP_IEEE_OPERATION_CODE, *PFP_IEEE_OPERATION_CODE;

typedef enum _FILE_OBJECT_EXTENSION_TYPE
{
  FoExtTypeTransactionParams = 0,
  FoExtTypeDeviceObjectHint = 1,
  FoExtTypeIosbRange = 2,
  FoExtTypeGeneric = 3,
  FoExtTypeSfio = 4,
  FoExtTypeSymlink = 5,
  FoExtTypeOplockKey = 6,
  MaxFoExtTypes = 7,
} FILE_OBJECT_EXTENSION_TYPE, *PFILE_OBJECT_EXTENSION_TYPE;

typedef struct _KAPC
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char SpareByte0;
  /* 0x0002 */ unsigned char Size;
  /* 0x0003 */ unsigned char SpareByte1;
  /* 0x0004 */ unsigned long SpareLong0;
  /* 0x0008 */ struct _KTHREAD* Thread;
  /* 0x0010 */ struct _LIST_ENTRY ApcListEntry;
  /* 0x0020 */ void* KernelRoutine /* function */;
  /* 0x0028 */ void* RundownRoutine /* function */;
  /* 0x0030 */ void* NormalRoutine /* function */;
  /* 0x0038 */ void* NormalContext;
  /* 0x0040 */ void* SystemArgument1;
  /* 0x0048 */ void* SystemArgument2;
  /* 0x0050 */ char ApcStateIndex;
  /* 0x0051 */ char ApcMode;
  /* 0x0052 */ unsigned char Inserted;
  /* 0x0053 */ char __PADDING__[5];
} KAPC, *PKAPC; /* size: 0x0058 */

typedef enum _MEMORY_WORKING_SET_EX_LOCATION
{
  MemoryLocationInvalid = 0,
  MemoryLocationResident = 1,
  MemoryLocationPagefile = 2,
  MemoryLocationReserved = 3,
} MEMORY_WORKING_SET_EX_LOCATION, *PMEMORY_WORKING_SET_EX_LOCATION;

typedef struct _ACCESS_ALLOWED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE; /* size: 0x0030 */

typedef enum _VF_ISSUE_TYPE
{
  VF_ISSUE_NO_CANCEL_ROUTINE = 1,
  VF_ISSUE_IRP_TAKES_TOO_LONG = 2,
  VF_ISSUE_CANCEL_TAKES_TOO_LONG = 3,
} VF_ISSUE_TYPE, *PVF_ISSUE_TYPE;

typedef struct _CACHE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
} CACHE_DESCRIPTOR, *PCACHE_DESCRIPTOR; /* size: 0x000c */

typedef enum _WRITE_CACHE_TYPE
{
  WriteCacheTypeUnknown = 0,
  WriteCacheTypeNone = 1,
  WriteCacheTypeWriteBack = 2,
  WriteCacheTypeWriteThrough = 3,
} WRITE_CACHE_TYPE, *PWRITE_CACHE_TYPE;

typedef enum _TIMER_TYPE
{
  NotificationTimer = 0,
  SynchronizationTimer = 1,
} TIMER_TYPE, *PTIMER_TYPE;

typedef struct _LSA_DISPATCH_TABLE
{
  /* 0x0000 */ void* CreateLogonSession /* function */;
  /* 0x0008 */ void* DeleteLogonSession /* function */;
  /* 0x0010 */ void* AddCredential /* function */;
  /* 0x0018 */ void* GetCredentials /* function */;
  /* 0x0020 */ void* DeleteCredential /* function */;
  /* 0x0028 */ void* AllocateLsaHeap /* function */;
  /* 0x0030 */ void* FreeLsaHeap /* function */;
  /* 0x0038 */ void* AllocateClientBuffer /* function */;
  /* 0x0040 */ void* FreeClientBuffer /* function */;
  /* 0x0048 */ void* CopyToClientBuffer /* function */;
  /* 0x0050 */ void* CopyFromClientBuffer /* function */;
} LSA_DISPATCH_TABLE, *PLSA_DISPATCH_TABLE; /* size: 0x0058 */

typedef enum _ARBITER_ACTION
{
  ArbiterActionTestAllocation = 0,
  ArbiterActionRetestAllocation = 1,
  ArbiterActionCommitAllocation = 2,
  ArbiterActionRollbackAllocation = 3,
  ArbiterActionQueryAllocatedResources = 4,
  ArbiterActionWriteReservedResources = 5,
  ArbiterActionQueryConflict = 6,
  ArbiterActionQueryArbitrate = 7,
  ArbiterActionAddReserved = 8,
  ArbiterActionBootAllocation = 9,
} ARBITER_ACTION, *PARBITER_ACTION;

typedef struct _WIN32_PARSEMETHOD_PARAMETERS
{
  /* 0x0000 */ void* ParseObject;
  /* 0x0008 */ void* ObjectType;
  /* 0x0010 */ struct _ACCESS_STATE* AccessState;
  /* 0x0018 */ char AccessMode;
  /* 0x0019 */ char Padding_97[3];
  /* 0x001c */ unsigned long Attributes;
  /* 0x0020 */ struct _UNICODE_STRING* CompleteName;
  /* 0x0028 */ struct _UNICODE_STRING* RemainingName;
  /* 0x0030 */ void* Context;
  /* 0x0038 */ struct _SECURITY_QUALITY_OF_SERVICE* SecurityQos;
  /* 0x0040 */ void** Object;
} WIN32_PARSEMETHOD_PARAMETERS, *PWIN32_PARSEMETHOD_PARAMETERS; /* size: 0x0048 */

typedef enum _LSA_TOKEN_INFORMATION_TYPE
{
  LsaTokenInformationNull = 0,
  LsaTokenInformationV1 = 1,
  LsaTokenInformationV2 = 2,
} LSA_TOKEN_INFORMATION_TYPE, *PLSA_TOKEN_INFORMATION_TYPE;

typedef enum _TRANSACTION_INFORMATION_CLASS
{
  TransactionBasicInformation = 0,
  TransactionPropertiesInformation = 1,
  TransactionEnlistmentInformation = 2,
  TransactionSuperiorEnlistmentInformation = 3,
  TransactionBindInformation = 4,
  TransactionDTCPrivateInformation = 5,
} TRANSACTION_INFORMATION_CLASS, *PTRANSACTION_INFORMATION_CLASS;

typedef struct _REENUMERATE_SELF_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_98;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* SurpriseRemoveAndReenumerateSelf /* function */;
} REENUMERATE_SELF_INTERFACE_STANDARD, *PREENUMERATE_SELF_INTERFACE_STANDARD; /* size: 0x0028 */

typedef enum _POLICY_NOTIFICATION_INFORMATION_CLASS
{
  PolicyNotifyAuditEventsInformation = 1,
  PolicyNotifyAccountDomainInformation = 2,
  PolicyNotifyServerRoleInformation = 3,
  PolicyNotifyDnsDomainInformation = 4,
  PolicyNotifyDomainEfsInformation = 5,
  PolicyNotifyDomainKerberosTicketInformation = 6,
  PolicyNotifyMachineAccountPasswordInformation = 7,
  PolicyNotifyGlobalSaclInformation = 8,
  PolicyNotifyMax = 9,
} POLICY_NOTIFICATION_INFORMATION_CLASS, *PPOLICY_NOTIFICATION_INFORMATION_CLASS;

enum HAL_INTERRUPT_TARGET_TYPE
{
  InterruptTargetTypeApic = 0,
  InterruptTargetTypeApicRequest = 1,
  InterruptTargetTypeGlobal = 2,
  InterruptTargetTypeRemappingTable = 3,
};

typedef struct _KEY_VALUE_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataOffset;
  /* 0x000c */ unsigned long DataLength;
  /* 0x0010 */ unsigned long NameLength;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION; /* size: 0x0018 */

typedef enum _UNWIND_OP_CODES
{
  UWOP_PUSH_NONVOL = 0,
  UWOP_ALLOC_LARGE = 1,
  UWOP_ALLOC_SMALL = 2,
  UWOP_SET_FPREG = 3,
  UWOP_SAVE_NONVOL = 4,
  UWOP_SAVE_NONVOL_FAR = 5,
  UWOP_SPARE_CODE1 = 6,
  UWOP_SPARE_CODE2 = 7,
  UWOP_SAVE_XMM128 = 8,
  UWOP_SAVE_XMM128_FAR = 9,
  UWOP_PUSH_MACHFRAME = 10,
} UNWIND_OP_CODES, *PUNWIND_OP_CODES;

typedef struct _PROC_PERF_CONSTRAINT
{
  /* 0x0000 */ struct _KPRCB* Prcb;
  /* 0x0008 */ unsigned __int64 PerfContext;
  /* 0x0010 */ unsigned long PercentageCap;
  /* 0x0014 */ unsigned long ThermalCap;
  /* 0x0018 */ unsigned long TargetFrequency;
  /* 0x001c */ unsigned long AcumulatedFullFrequency;
  /* 0x0020 */ unsigned long AcumulatedZeroFrequency;
  /* 0x0024 */ unsigned long FrequencyHistoryTotal;
  /* 0x0028 */ unsigned long AverageFrequency;
  /* 0x002c */ long __PADDING__[1];
} PROC_PERF_CONSTRAINT, *PPROC_PERF_CONSTRAINT; /* size: 0x0030 */

enum ReplacesCorHdrNumericDefines
{
  COMIMAGE_FLAGS_ILONLY = 1,
  COMIMAGE_FLAGS_32BITREQUIRED = 2,
  COMIMAGE_FLAGS_IL_LIBRARY = 4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COR_VERSION_MAJOR_V2 = 2,
  COR_VERSION_MAJOR = 2,
  COR_VERSION_MINOR = 0,
  COR_DELETED_NAME_LENGTH = 8,
  COR_VTABLEGAP_NAME_LENGTH = 8,
  NATIVE_TYPE_MAX_CB = 1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
  IMAGE_COR_MIH_METHODRVA = 1,
  IMAGE_COR_MIH_EHRVA = 2,
  IMAGE_COR_MIH_BASICBLOCK = 8,
  COR_VTABLE_32BIT = 1,
  COR_VTABLE_64BIT = 2,
  COR_VTABLE_FROM_UNMANAGED = 4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
  COR_VTABLE_CALL_MOST_DERIVED = 16,
  IMAGE_COR_EATJ_THUNK_SIZE = 32,
  MAX_CLASS_NAME = 1024,
  MAX_PACKAGE_NAME = 1024,
};

enum LSA_FOREST_TRUST_COLLISION_RECORD_TYPE
{
  CollisionTdo = 0,
  CollisionXref = 1,
  CollisionOther = 2,
};

typedef struct _TEB_ACTIVE_FRAME_CONTEXT32
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long FrameName;
} TEB_ACTIVE_FRAME_CONTEXT32, *PTEB_ACTIVE_FRAME_CONTEXT32; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX32
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT32 BasicContext;
  /* 0x0008 */ unsigned long SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX32, *PTEB_ACTIVE_FRAME_CONTEXT_EX32; /* size: 0x000c */

typedef enum _TP_LOG_LEVEL
{
  TP_LOG_LEVEL_ERROR = 0,
  TP_LOG_LEVEL_WARNING = 1,
  TP_LOG_LEVEL_INFO = 2,
  TP_LOG_LEVEL_TRACE_ENTER = 3,
  TP_LOG_LEVEL_TRACE_LEAVE = 4,
} TP_LOG_LEVEL, *PTP_LOG_LEVEL;

typedef enum _MM_TRIM_WHILE_AGING_STATE
{
  MmTrimWhileAgingOff = 0,
  MmTrimWhileAgingLowPriority = 1,
  MmTrimWhileAgingPassive = 2,
  MmTrimWhileAgingNormal = 3,
  MmTrimWhileAgingAggressive = 4,
  MmTrimWhileAgingMax = 5,
} MM_TRIM_WHILE_AGING_STATE, *PMM_TRIM_WHILE_AGING_STATE;

typedef enum _EVENT_TRACE_INFORMATION_CLASS
{
  EventTraceKernelVersionInformation = 0,
  EventTraceGroupMaskInformation = 1,
  EventTracePerformanceInformation = 2,
  EventTraceTimeProfileInformation = 3,
  EventTraceSessionSecurityInformation = 4,
  EventTraceSpinlockInformation = 5,
  EventTraceStackTracingInformation = 6,
  EventTraceExecutiveResourceInformation = 7,
  EventTraceHeapTracingInformation = 8,
  EventTraceHeapSummaryTracingInformation = 9,
  EventTracePoolTagFilterInformation = 10,
  MaxEventTraceInfoClass = 11,
} EVENT_TRACE_INFORMATION_CLASS, *PEVENT_TRACE_INFORMATION_CLASS;

typedef enum _HARDERROR_RESPONSE
{
  ResponseReturnToCaller = 0,
  ResponseNotHandled = 1,
  ResponseAbort = 2,
  ResponseCancel = 3,
  ResponseIgnore = 4,
  ResponseNo = 5,
  ResponseOk = 6,
  ResponseRetry = 7,
  ResponseYes = 8,
  ResponseTryAgain = 9,
  ResponseContinue = 10,
} HARDERROR_RESPONSE, *PHARDERROR_RESPONSE;

typedef enum _MM_STORE_KEY_TYPE
{
  MmStoreKeyTypeProcess = 0,
  MmStoreKeyTypeSession = 1,
  MmStoreKeyTypeSystem = 2,
  MmStoreKeyTypeSection = 3,
  MmStoreKeyTypeMax = 4,
} MM_STORE_KEY_TYPE, *PMM_STORE_KEY_TYPE;

enum PCI_EXPRESS_ASPM_CONTROL
{
  L0sAndL1EntryDisabled = 0,
  L0sEntryEnabled = 1,
  L1EntryEnabled = 2,
  L0sAndL1EntryEnabled = 3,
};

typedef struct _ETW_CRITSEC_EVENT_INIT
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* SpinCount;
  /* 0x0028 */ void* Address;
} ETW_CRITSEC_EVENT_INIT, *PETW_CRITSEC_EVENT_INIT; /* size: 0x0030 */

enum RTL_BSD_ITEM_TYPE
{
  RtlBsdItemVersionNumber = 0,
  RtlBsdItemProductType = 1,
  RtlBsdItemAabEnabled = 2,
  RtlBsdItemAabTimeout = 3,
  RtlBsdItemBootGood = 4,
  RtlBsdItemBootShutdown = 5,
  RtlBsdSleepInProgress = 6,
  RtlBsdPowerTransition = 7,
  RtlBsdItemMax = 8,
};

enum LATENCY_TIME
{
  LT_DONT_CARE = 0,
  LT_LOWEST_LATENCY = 1,
};

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER
{
  /* 0x0000 */ void* EventHandle;
  /* 0x0008 */ unsigned long KeyValue;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_ASSIGN_EVENT_BUFFER, *PFILE_PIPE_ASSIGN_EVENT_BUFFER; /* size: 0x0010 */

typedef enum _PFFI_CONFLICT_TYPE
{
  PfFiConflictCreate = 0,
  PfFiConflictTruncate = 1,
  PfFiConflictDelete = 2,
  PfFiConflictDeleteCreate = 3,
  PfFiConflictPurge = 4,
  PfFiConflictRename = 5,
  PfFiConflictRenameDirectory = 6,
  PfFiConflictSetLink = 7,
  PfFiConflictVolumeLock = 8,
  PfFiConflictVolumeDismount = 9,
  PfFiConflictTypeMax = 10,
} PFFI_CONFLICT_TYPE, *PPFFI_CONFLICT_TYPE;

typedef enum _PSPROCESSPRIORITYMODE
{
  PsProcessPriorityBackground = 0,
  PsProcessPriorityForeground = 1,
  PsProcessPrioritySpinning = 2,
} PSPROCESSPRIORITYMODE, *PPSPROCESSPRIORITYMODE;

enum VERIFIER_MODE
{
  VERIFIER_MODE_UNUSED = 0,
  VERIFIER_MODE_TRIAGE = 1,
  VERIFIER_MODE_FIELD = 2,
  VERIFIER_MODE_LOGO = 3,
  VERIFIER_MODE_TEST = 4,
};

enum BATTERY_QUERY_INFORMATION_LEVEL
{
  BatteryInformation = 0,
  BatteryGranularityInformation = 1,
  BatteryTemperature = 2,
  BatteryEstimatedTime = 3,
  BatteryDeviceName = 4,
  BatteryManufactureDate = 5,
  BatteryManufactureName = 6,
  BatteryUniqueID = 7,
};

typedef struct _INITIAL_PRIVILEGE_SET
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ unsigned long Control;
  /* 0x0008 */ struct _LUID_AND_ATTRIBUTES Privilege[3];
} INITIAL_PRIVILEGE_SET, *PINITIAL_PRIVILEGE_SET; /* size: 0x002c */

typedef enum _ENLISTMENT_INFORMATION_CLASS
{
  EnlistmentBasicInformation = 0,
  EnlistmentRecoveryInformation = 1,
  EnlistmentCrmInformation = 2,
} ENLISTMENT_INFORMATION_CLASS, *PENLISTMENT_INFORMATION_CLASS;

typedef struct _RELATION_LIST_ENTRY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxCount;
  /* 0x0008 */ struct _DEVICE_OBJECT* Devices[1];
} RELATION_LIST_ENTRY, *PRELATION_LIST_ENTRY; /* size: 0x0010 */

typedef struct _FILE_LINK_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_99[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_INFORMATION, *PFILE_LINK_INFORMATION; /* size: 0x0018 */

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned short CompoundAceType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long SidStart;
} COMPOUND_ACCESS_ALLOWED_ACE, *PCOMPOUND_ACCESS_ALLOWED_ACE; /* size: 0x0010 */

typedef enum _KBUGCHECK_DUMP_IO_TYPE
{
  KbDumpIoInvalid = 0,
  KbDumpIoHeader = 1,
  KbDumpIoBody = 2,
  KbDumpIoSecondaryData = 3,
  KbDumpIoComplete = 4,
} KBUGCHECK_DUMP_IO_TYPE, *PKBUGCHECK_DUMP_IO_TYPE;

typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Primary : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ContainmentWarning : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reset : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ThresholdExceeded : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ResourceNotAvailable : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long LatentError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Reserved : 26; /* bit position: 6 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS; /* size: 0x0004 */

enum NOTIFY_MAPPED_WRITE_STATUS
{
  DisallowMappedWrite = 0,
  AllowMappedWriteNoCompletionCallback = 1,
  AllowMappedWriteWithCompletionCallback = 2,
};

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL
{
  BackTraceDatabaseCreate = 0,
  BackTraceDatabaseDelete = 1,
  BackTraceDatabaseFlush = 2,
  BackTraceDatabaseMaxControl = 3,
} RTL_STACK_TRACE_DATABASE_CONTROL, *PRTL_STACK_TRACE_DATABASE_CONTROL;

struct PPM_PERFSTATE_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Status;
  /* 0x0008 */ unsigned long Latency;
  /* 0x000c */ unsigned long Speed;
  /* 0x0010 */ unsigned long Processor;
}; /* size: 0x0014 */

typedef enum _KPROFILE_SOURCE
{
  ProfileTime = 0,
  ProfileAlignmentFixup = 1,
  ProfileTotalIssues = 2,
  ProfilePipelineDry = 3,
  ProfileLoadInstructions = 4,
  ProfilePipelineFrozen = 5,
  ProfileBranchInstructions = 6,
  ProfileTotalNonissues = 7,
  ProfileDcacheMisses = 8,
  ProfileIcacheMisses = 9,
  ProfileCacheMisses = 10,
  ProfileBranchMispredictions = 11,
  ProfileStoreInstructions = 12,
  ProfileFpInstructions = 13,
  ProfileIntegerInstructions = 14,
  Profile2Issue = 15,
  Profile3Issue = 16,
  Profile4Issue = 17,
  ProfileSpecialInstructions = 18,
  ProfileTotalCycles = 19,
  ProfileIcacheIssues = 20,
  ProfileDcacheAccesses = 21,
  ProfileMemoryBarrierCycles = 22,
  ProfileLoadLinkedIssues = 23,
  ProfileMaximum = 24,
} KPROFILE_SOURCE, *PKPROFILE_SOURCE;

typedef struct _SLIST_ENTRY32
{
  /* 0x0000 */ unsigned long Next;
} SLIST_ENTRY32, *PSLIST_ENTRY32; /* size: 0x0004 */

typedef enum _ACL_INFORMATION_CLASS
{
  AclRevisionInformation = 1,
  AclSizeInformation = 2,
} ACL_INFORMATION_CLASS, *PACL_INFORMATION_CLASS;

typedef enum _CM_SERVICE_LOAD_TYPE
{
  BootLoad = 0,
  SystemLoad = 1,
  AutoLoad = 2,
  DemandLoad = 3,
  DisableLoad = 4,
} CM_SERVICE_LOAD_TYPE, *PCM_SERVICE_LOAD_TYPE;

typedef struct _KMUTANT
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
  /* 0x0018 */ struct _LIST_ENTRY MutantListEntry;
  /* 0x0028 */ struct _KTHREAD* OwnerThread;
  /* 0x0030 */ unsigned char Abandoned;
  /* 0x0031 */ unsigned char ApcDisable;
  /* 0x0032 */ char __PADDING__[6];
} KMUTANT, *PKMUTANT; /* size: 0x0038 */

typedef struct _PERFINFO_EVENT_MATCH_ID
{
  /* 0x0000 */ long UniqueID;
  /* 0x0004 */ unsigned short HookID;
  /* 0x0006 */ unsigned short Flags;
} PERFINFO_EVENT_MATCH_ID, *PPERFINFO_EVENT_MATCH_ID; /* size: 0x0008 */

enum PCI_EXPRESS_DEVICE_TYPE
{
  PciExpressEndpoint = 0,
  PciExpressLegacyEndpoint = 1,
  PciExpressRootPort = 4,
  PciExpressUpstreamSwitchPort = 5,
  PciExpressDownstreamSwitchPort = 6,
  PciExpressToPciXBridge = 7,
  PciXToExpressBridge = 8,
  PciExpressRootComplexIntegratedEndpoint = 9,
  PciExpressRootComplexEventCollector = 10,
};

typedef struct _DUMP_INITIALIZATION_CONTEXT
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ void* MemoryBlock;
  /* 0x0010 */ void* CommonBuffer[2];
  /* 0x0020 */ union _LARGE_INTEGER PhysicalAddress[2];
  /* 0x0030 */ void* StallRoutine /* function */;
  /* 0x0038 */ void* OpenRoutine /* function */;
  /* 0x0040 */ void* WriteRoutine /* function */;
  /* 0x0048 */ void* FinishRoutine /* function */;
  /* 0x0050 */ struct _ADAPTER_OBJECT* AdapterObject;
  /* 0x0058 */ void* MappedRegisterBase;
  /* 0x0060 */ void* PortConfiguration;
  /* 0x0068 */ unsigned char CrashDump;
  /* 0x0069 */ char Padding_100[3];
  /* 0x006c */ unsigned long MaximumTransferSize;
  /* 0x0070 */ unsigned long CommonBufferSize;
  /* 0x0074 */ long Padding_101;
  /* 0x0078 */ void* TargetAddress;
  /* 0x0080 */ void* WritePendingRoutine /* function */;
  /* 0x0088 */ unsigned long PartitionStyle;
  union
  {
    union
    {
      struct
      {
        /* 0x008c */ unsigned long Signature;
        /* 0x0090 */ unsigned long CheckSum;
      } /* size: 0x0008 */ Mbr;
      struct
      {
        /* 0x008c */ struct _GUID DiskId;
      } /* size: 0x0010 */ Gpt;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ DiskInfo;
  /* 0x009c */ long __PADDING__[1];
} DUMP_INITIALIZATION_CONTEXT, *PDUMP_INITIALIZATION_CONTEXT; /* size: 0x00a0 */

typedef struct _DUMP_STACK_CONTEXT
{
  /* 0x0000 */ struct _DUMP_INITIALIZATION_CONTEXT Init;
  /* 0x00a0 */ union _LARGE_INTEGER PartitionOffset;
  /* 0x00a8 */ void* DumpPointers;
  /* 0x00b0 */ unsigned long PointersLength;
  /* 0x00b4 */ long Padding_102;
  /* 0x00b8 */ unsigned short* ModulePrefix;
  /* 0x00c0 */ struct _LIST_ENTRY DriverList;
  /* 0x00d0 */ struct _STRING InitMsg;
  /* 0x00e0 */ struct _STRING ProgMsg;
  /* 0x00f0 */ struct _STRING DoneMsg;
  /* 0x0100 */ void* FileObject;
  /* 0x0108 */ enum _DEVICE_USAGE_NOTIFICATION_TYPE UsageType;
  /* 0x010c */ long __PADDING__[1];
} DUMP_STACK_CONTEXT, *PDUMP_STACK_CONTEXT; /* size: 0x0110 */

typedef enum _SM_ENCRYPTION_SCOPE
{
  SmEncryptAll = 0,
  SmNoEncryptInternalIf = 1,
  SmNoEncryptInternal = 2,
  SmEncryptionScopeMax = 3,
} SM_ENCRYPTION_SCOPE, *PSM_ENCRYPTION_SCOPE;

enum IMAGE_AUX_SYMBOL_TYPE
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
};

typedef struct _INTERRUPT_REMAPPING_INFO
{
  /* 0x0000 */ unsigned long IrtIndex;
} INTERRUPT_REMAPPING_INFO, *PINTERRUPT_REMAPPING_INFO; /* size: 0x0004 */

enum HAL_APIC_DESTINATION_MODE
{
  ApicDestinationModePhysical = 1,
  ApicDestinationModeLogicalFlat = 2,
  ApicDestinationModeLogicalClustered = 3,
  ApicDestinationModeUnknown = 4,
};

typedef struct _INTERRUPT_VECTOR_DATA
{
  /* 0x0000 */ enum INTERRUPT_CONNECTION_TYPE Type;
  /* 0x0004 */ unsigned long Vector;
  /* 0x0008 */ unsigned char Irql;
  /* 0x0009 */ char Padding_103[3];
  /* 0x000c */ enum _KINTERRUPT_POLARITY Polarity;
  /* 0x0010 */ enum _KINTERRUPT_MODE Mode;
  /* 0x0014 */ long Padding_104;
  /* 0x0018 */ struct _GROUP_AFFINITY TargetProcessors;
  /* 0x0028 */ struct _INTERRUPT_REMAPPING_INFO IntRemapInfo;
  /* 0x002c */ long Padding_105;
  union
  {
    struct
    {
      /* 0x0030 */ unsigned long Gsiv;
    } /* size: 0x0004 */ ControllerInput;
    struct
    {
      /* 0x0030 */ union _LARGE_INTEGER Address;
      /* 0x0038 */ unsigned long DataPayload;
      /* 0x003c */ long __PADDING__[1];
    } /* size: 0x0010 */ XapicMessage;
    struct
    {
      /* 0x0030 */ struct _INTERRUPT_HT_INTR_INFO IntrInfo;
    } /* size: 0x0008 */ Hypertransport;
    struct
    {
      /* 0x0030 */ union _LARGE_INTEGER Address;
      /* 0x0038 */ unsigned long DataPayload;
      /* 0x003c */ long __PADDING__[1];
    } /* size: 0x0010 */ GenericMessage;
    struct
    {
      struct
      {
        /* 0x0030 */ enum HAL_APIC_DESTINATION_MODE DestinationMode;
      } /* size: 0x0004 */ MessageRequest;
      /* 0x0034 */ long __PADDING__[3];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} INTERRUPT_VECTOR_DATA, *PINTERRUPT_VECTOR_DATA; /* size: 0x0040 */

typedef enum _WORK_QUEUE_TYPE
{
  CriticalWorkQueue = 0,
  DelayedWorkQueue = 1,
  HyperCriticalWorkQueue = 2,
  MaximumWorkQueue = 3,
} WORK_QUEUE_TYPE, *PWORK_QUEUE_TYPE;

typedef enum _IRQ_DEVICE_POLICY_USHORT
{
  IrqPolicyMachineDefault = 0,
  IrqPolicyAllCloseProcessors = 1,
  IrqPolicyOneCloseProcessor = 2,
  IrqPolicyAllProcessorsInMachine = 3,
  IrqPolicyAllProcessorsInGroup = 3,
  IrqPolicySpecifiedProcessors = 4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 5,
} IRQ_DEVICE_POLICY_USHORT, *PIRQ_DEVICE_POLICY_USHORT;

typedef enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 1,
  NtProductLanManNt = 2,
  NtProductServer = 3,
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;

typedef struct _PCI_MSI_MESSAGE_ADDRESS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Reserved : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long Address : 30; /* bit position: 2 */
  }; /* bitfield */
} PCI_MSI_MESSAGE_ADDRESS, *PPCI_MSI_MESSAGE_ADDRESS; /* size: 0x0004 */

typedef struct _PERFINFO_BOOT_PREFETCH_INFORMATION
{
  /* 0x0000 */ long Action;
  /* 0x0004 */ long Status;
  /* 0x0008 */ long Pages;
} PERFINFO_BOOT_PREFETCH_INFORMATION, *PPERFINFO_BOOT_PREFETCH_INFORMATION; /* size: 0x000c */

typedef enum _CONFIGURATION_CLASS
{
  SystemClass = 0,
  ProcessorClass = 1,
  CacheClass = 2,
  AdapterClass = 3,
  ControllerClass = 4,
  PeripheralClass = 5,
  MemoryClass = 6,
  MaximumClass = 7,
} CONFIGURATION_CLASS, *PCONFIGURATION_CLASS;

typedef enum _PF_PHASED_SCENARIO_TYPE
{
  PfScenarioTypeNone = 0,
  PfScenarioTypeStandby = 1,
  PfScenarioTypeHibernate = 2,
  PfScenarioTypeFUS = 3,
  PfScenarioTypeLogon = 4,
  PfScenarioTypeMax = 5,
} PF_PHASED_SCENARIO_TYPE, *PPF_PHASED_SCENARIO_TYPE;

typedef enum _PSW32THREADCALLOUTTYPE
{
  PsW32ThreadCalloutInitialize = 0,
  PsW32ThreadCalloutExit = 1,
} PSW32THREADCALLOUTTYPE, *PPSW32THREADCALLOUTTYPE;

typedef struct _EMP_RULE_PARSER_STACK
{
  /* 0x0000 */ unsigned long TotalElements;
  /* 0x0004 */ long Padding_106;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY StackListHead;
} EMP_RULE_PARSER_STACK, *PEMP_RULE_PARSER_STACK; /* size: 0x0010 */

typedef enum _MM_FLUSH_REASON
{
  FlushOnly = 0,
  SystemFailure = 1,
} MM_FLUSH_REASON, *PMM_FLUSH_REASON;

typedef struct _TXN_PARAMETER_BLOCK
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short TxFsContext;
  /* 0x0004 */ long Padding_107;
  /* 0x0008 */ void* TransactionObject;
} TXN_PARAMETER_BLOCK, *PTXN_PARAMETER_BLOCK; /* size: 0x0010 */

typedef enum _TRACE_INFORMATION_CLASS
{
  TraceIdClass = 0,
  TraceHandleClass = 1,
  TraceEnableFlagsClass = 2,
  TraceEnableLevelClass = 3,
  GlobalLoggerHandleClass = 4,
  EventLoggerHandleClass = 5,
  AllLoggerHandlesClass = 6,
  TraceHandleByNameClass = 7,
  LoggerEventsLostClass = 8,
  TraceSessionSettingsClass = 9,
  LoggerEventsLoggedClass = 10,
  MaxTraceInformationClass = 11,
} TRACE_INFORMATION_CLASS, *PTRACE_INFORMATION_CLASS;

typedef enum _WORKERFACTORYINFOCLASS
{
  WorkerFactoryTimeout = 0,
  WorkerFactoryRetryTimeout = 1,
  WorkerFactoryIdleTimeout = 2,
  WorkerFactoryBindingCount = 3,
  WorkerFactoryThreadMinimum = 4,
  WorkerFactoryThreadMaximum = 5,
  WorkerFactoryPaused = 6,
  WorkerFactoryBasicInformation = 7,
  WorkerFactoryAdjustThreadGoal = 8,
  WorkerFactoryLongRunningSwitch = 9,
  WorkerFactoryStackInformation = 10,
  MaxWorkerFactoryInfoClass = 11,
} WORKERFACTORYINFOCLASS, *PWORKERFACTORYINFOCLASS;

typedef enum _CRASHDMP_EVENTS
{
  CRASHDMP_EVENT_NONE = 0,
  CRASHDMP_EVENT_CRASH_BEGIN = 1,
  CRASHDMP_EVENT_CRASH_END = 2,
  CRASHDMP_EVENT_HIBERNATE_BEGIN = 3,
  CRASHDMP_EVENT_HIBERNATE_END = 4,
} CRASHDMP_EVENTS, *PCRASHDMP_EVENTS;

typedef enum _MANDATORY_LEVEL
{
  MandatoryLevelUntrusted = 0,
  MandatoryLevelLow = 1,
  MandatoryLevelMedium = 2,
  MandatoryLevelHigh = 3,
  MandatoryLevelSystem = 4,
  MandatoryLevelSecureProcess = 5,
  MandatoryLevelCount = 6,
} MANDATORY_LEVEL, *PMANDATORY_LEVEL;

typedef enum _LOCK_OPERATION
{
  IoReadAccess = 0,
  IoWriteAccess = 1,
  IoModifyAccess = 2,
} LOCK_OPERATION, *PLOCK_OPERATION;

typedef enum _RM_COMMAND_NUMBER
{
  RmDummyCommand = 0,
  RmAuditSetCommand = 1,
  RmCreateLogonSession = 2,
  RmDeleteLogonSession = 3,
  RmAddLogonSessionInfo = 4,
  RmGlobalSaclSetCommand = 5,
  RmMaxCommand = 6,
} RM_COMMAND_NUMBER, *PRM_COMMAND_NUMBER;

typedef enum _LSA_SID_NAME_MAPPING_OPERATION_ERROR
{
  LsaSidNameMappingOperation_Success = 0,
  LsaSidNameMappingOperation_NonMappingError = 1,
  LsaSidNameMappingOperation_NameCollision = 2,
  LsaSidNameMappingOperation_SidCollision = 3,
  LsaSidNameMappingOperation_DomainNotFound = 4,
  LsaSidNameMappingOperation_DomainSidPrefixMismatch = 5,
  LsaSidNameMappingOperation_MappingNotFound = 6,
} LSA_SID_NAME_MAPPING_OPERATION_ERROR, *PLSA_SID_NAME_MAPPING_OPERATION_ERROR;

typedef enum _POLICY_AUDIT_EVENT_TYPE
{
  AuditCategorySystem = 0,
  AuditCategoryLogon = 1,
  AuditCategoryObjectAccess = 2,
  AuditCategoryPrivilegeUse = 3,
  AuditCategoryDetailedTracking = 4,
  AuditCategoryPolicyChange = 5,
  AuditCategoryAccountManagement = 6,
  AuditCategoryDirectoryServiceAccess = 7,
  AuditCategoryAccountLogon = 8,
} POLICY_AUDIT_EVENT_TYPE, *PPOLICY_AUDIT_EVENT_TYPE;

typedef enum _TP_DEBUG_CLASS
{
  TP_DEBUG_CLASS_POOL = 0,
} TP_DEBUG_CLASS, *PTP_DEBUG_CLASS;

typedef enum _KRESOURCEMANAGER_STATE
{
  KResourceManagerUninitialized = 0,
  KResourceManagerOffline = 1,
  KResourceManagerOnline = 2,
} KRESOURCEMANAGER_STATE, *PKRESOURCEMANAGER_STATE;

typedef enum _UMS_THREAD_STATE
{
  UmsThreadNoStateTransition = 0,
  UmsThreadSuspendedState = 1,
  UmsThreadTerminatedState = 2,
  UmsThreadResumedState = 3,
  UmsThreadMaximumState = 4,
} UMS_THREAD_STATE, *PUMS_THREAD_STATE;

typedef enum _DEVICE_REMOVAL_POLICY
{
  RemovalPolicyNotDetermined = 0,
  RemovalPolicyExpectNoRemoval = 1,
  RemovalPolicyExpectOrderlyRemoval = 2,
  RemovalPolicyExpectSurpriseRemoval = 3,
  RemovalPolicySuggestOrderlyRemoval = 4,
  RemovalPolicySuggestSurpriseRemoval = 5,
  RemovalPolicyUnspecified = 6,
} DEVICE_REMOVAL_POLICY, *PDEVICE_REMOVAL_POLICY;

typedef enum _KOBJECTS
{
  EventNotificationObject = 0,
  EventSynchronizationObject = 1,
  MutantObject = 2,
  ProcessObject = 3,
  QueueObject = 4,
  SemaphoreObject = 5,
  ThreadObject = 6,
  GateObject = 7,
  TimerNotificationObject = 8,
  TimerSynchronizationObject = 9,
  Spare2Object = 10,
  Spare3Object = 11,
  Spare4Object = 12,
  Spare5Object = 13,
  Spare6Object = 14,
  Spare7Object = 15,
  Spare8Object = 16,
  Spare9Object = 17,
  ApcObject = 18,
  DpcObject = 19,
  DeviceQueueObject = 20,
  EventPairObject = 21,
  InterruptObject = 22,
  ProfileObject = 23,
  ThreadedDpcObject = 24,
  MaximumKernelObject = 25,
} KOBJECTS, *PKOBJECTS;

typedef enum _CRASHDUMP_CONFIGURATION
{
  CrashDumpDisable = 0,
  CrashDumpReconfigure = 1,
} CRASHDUMP_CONFIGURATION, *PCRASHDUMP_CONFIGURATION;

typedef enum _LSA_COMMAND_NUMBER
{
  LsapDummyCommand = 0,
  LsapWriteAuditMessageCommand = 1,
  LsapComponentTestCommand = 2,
  LsapLogonSessionDeletedCommand = 3,
} LSA_COMMAND_NUMBER, *PLSA_COMMAND_NUMBER;

typedef enum _KTBFLUSH_TYPE
{
  FlushKernel = 0,
  FlushUser = 1,
  FlushSession = 2,
  FlushEntire = 3,
} KTBFLUSH_TYPE, *PKTBFLUSH_TYPE;

typedef struct _LSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT
{
  /* 0x0000 */ enum _LSA_SID_NAME_MAPPING_OPERATION_ERROR ErrorCode;
} LSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT, *PLSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT; /* size: 0x0004 */

typedef union _LSA_SID_NAME_MAPPING_OPERATION_OUTPUT
{
  union
  {
    /* 0x0000 */ struct _LSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT AddOutput;
    /* 0x0000 */ struct _LSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT RemoveOutput;
    /* 0x0000 */ struct _LSA_SID_NAME_MAPPING_OPERATION_GENERIC_OUTPUT AddMultipleOutput;
  }; /* size: 0x0004 */
} LSA_SID_NAME_MAPPING_OPERATION_OUTPUT, *PLSA_SID_NAME_MAPPING_OPERATION_OUTPUT; /* size: 0x0004 */

enum POWER_PLATFORM_ROLE
{
  PlatformRoleUnspecified = 0,
  PlatformRoleDesktop = 1,
  PlatformRoleMobile = 2,
  PlatformRoleWorkstation = 3,
  PlatformRoleEnterpriseServer = 4,
  PlatformRoleSOHOServer = 5,
  PlatformRoleAppliancePC = 6,
  PlatformRolePerformanceServer = 7,
  PlatformRoleMaximum = 8,
};

typedef struct _KQUEUE
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
  /* 0x0018 */ struct _LIST_ENTRY EntryListHead;
  /* 0x0028 */ volatile unsigned long CurrentCount;
  /* 0x002c */ unsigned long MaximumCount;
  /* 0x0030 */ struct _LIST_ENTRY ThreadListHead;
} KQUEUE, *PKQUEUE; /* size: 0x0040 */

union EX_QUEUE_WORKER_INFO
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long QueueDisabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long MakeThreadsAsNecessary : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long WaitMode : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long WorkerCount : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ long QueueWorkerInfo;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _EX_WORK_QUEUE
{
  /* 0x0000 */ struct _KQUEUE WorkerQueue;
  /* 0x0040 */ unsigned long DynamicThreadCount;
  /* 0x0044 */ unsigned long WorkItemsProcessed;
  /* 0x0048 */ unsigned long WorkItemsProcessedLastPass;
  /* 0x004c */ unsigned long QueueDepthLastPass;
  /* 0x0050 */ union EX_QUEUE_WORKER_INFO Info;
  /* 0x0054 */ long __PADDING__[1];
} EX_WORK_QUEUE, *PEX_WORK_QUEUE; /* size: 0x0058 */

typedef enum _HEAP_INFORMATION_CLASS
{
  HeapCompatibilityInformation = 0,
  HeapEnableTerminationOnCorruption = 1,
  HeapExtendedInformation = 2,
  HeapDetailedFailureInformation = -2147483647,
  HeapSetDebuggingInformation = -2147483646,
} HEAP_INFORMATION_CLASS, *PHEAP_INFORMATION_CLASS;

typedef struct _EVENT_INSTANCE_HEADER
{
  /* 0x0000 */ unsigned short Size;
  union
  {
    /* 0x0002 */ unsigned short FieldTypeFlags;
    struct
    {
      /* 0x0002 */ unsigned char HeaderType;
      /* 0x0003 */ unsigned char MarkerFlags;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0004 */ unsigned long Version;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Level;
      /* 0x0006 */ unsigned short Version;
    } /* size: 0x0004 */ Class;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ unsigned __int64 RegHandle;
  /* 0x0020 */ unsigned long InstanceId;
  /* 0x0024 */ unsigned long ParentInstanceId;
  union
  {
    struct
    {
      /* 0x0028 */ unsigned long KernelTime;
      /* 0x002c */ unsigned long UserTime;
    }; /* size: 0x0008 */
    /* 0x0028 */ unsigned __int64 ProcessorTime;
    struct
    {
      /* 0x0028 */ unsigned long EventId;
      /* 0x002c */ unsigned long Flags;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned __int64 ParentRegHandle;
} EVENT_INSTANCE_HEADER, *PEVENT_INSTANCE_HEADER; /* size: 0x0038 */

typedef enum _IA64_FUNCTION_TABLE_TYPE
{
  IA64_RF_SORTED = 0,
  IA64_RF_UNSORTED = 1,
  IA64_RF_CALLBACK = 2,
} IA64_FUNCTION_TABLE_TYPE, *PIA64_FUNCTION_TABLE_TYPE;

typedef enum _SEP_ACL_TYPE
{
  SepAclTypeDacl = 1,
  SepAclTypeSacl = 2,
  SepAclTypeMacl = 3,
} SEP_ACL_TYPE, *PSEP_ACL_TYPE;

typedef struct _ETW_UMS_EVENT_PARK
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ScheduledThreadId;
  /* 0x0008 */ unsigned long ParkFlags;
} ETW_UMS_EVENT_PARK, *PETW_UMS_EVENT_PARK; /* size: 0x000c */

enum PCI_EXPRESS_POWER_STATE
{
  PowerOn = 0,
  PowerOff = 1,
};

typedef enum _EX_HOST_CALLBACK_REASON
{
  ExHostCallbackPreBind = 0,
  ExHostCallbackPostBind = 1,
  ExHostCallbackPreUnbind = 2,
  ExHostCallbackPostUnbind = 3,
  ExHostCallbackMax = 4,
} EX_HOST_CALLBACK_REASON, *PEX_HOST_CALLBACK_REASON;

enum ST_STORE<SM_TRAITS>::_ST_LAZY_WORK_TYPE
{
  StLazyWorkCompaction = 1,
  StLazyWorkUnpersistRestore = 2,
  StLazyWorkEtaRefresh = 3,
  StLazyWorkTypeMax = 4,
};

struct ST_STORE<SM_TRAITS>::_ST_LAZY_WORK
{
  /* 0x0000 */ enum ST_STORE<SM_TRAITS>::_ST_LAZY_WORK_TYPE Type;
}; /* size: 0x0004 */

enum IMPORT_OBJECT_NAME_TYPE
{
  IMPORT_OBJECT_ORDINAL = 0,
  IMPORT_OBJECT_NAME = 1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 2,
  IMPORT_OBJECT_NAME_UNDECORATE = 3,
};

typedef enum _HV_HYPERVISOR_INTERFACE
{
  HvMicrosoftHypervisorInterface = 0x31237648,
} HV_HYPERVISOR_INTERFACE, *PHV_HYPERVISOR_INTERFACE;

typedef struct _RTL_SPLAY_LINKS
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* Parent;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS* RightChild;
} RTL_SPLAY_LINKS, *PRTL_SPLAY_LINKS; /* size: 0x0018 */

typedef enum _INTERLOCKED_RESULT
{
  ResultNegative = 1,
  ResultZero = 0,
  ResultPositive = 2,
} INTERLOCKED_RESULT, *PINTERLOCKED_RESULT;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS
{
  ActivationContextBasicInformation = 1,
  ActivationContextDetailedInformation = 2,
  AssemblyDetailedInformationInActivationContext = 3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 4,
  RunlevelInformationInActivationContext = 5,
  CompatibilityInformationInActivationContext = 6,
  ActivationContextManifestResourceName = 7,
  MaxActivationContextInfoClass = 8,
  AssemblyDetailedInformationInActivationContxt = 3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 4,
} ACTIVATION_CONTEXT_INFO_CLASS, *PACTIVATION_CONTEXT_INFO_CLASS;

typedef enum _TOKEN_ELEVATION_TYPE
{
  TokenElevationTypeDefault = 1,
  TokenElevationTypeFull = 2,
  TokenElevationTypeLimited = 3,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE;

typedef enum _MMLISTS
{
  ZeroedPageList = 0,
  FreePageList = 1,
  StandbyPageList = 2,
  ModifiedPageList = 3,
  ModifiedNoWritePageList = 4,
  BadPageList = 5,
  ActiveAndValid = 6,
  TransitionPage = 7,
} MMLISTS, *PMMLISTS;

typedef enum _STORAGE_IDENTIFIER_CODE_SET
{
  StorageIdCodeSetReserved = 0,
  StorageIdCodeSetBinary = 1,
  StorageIdCodeSetAscii = 2,
  StorageIdCodeSetUtf8 = 3,
} STORAGE_IDENTIFIER_CODE_SET, *PSTORAGE_IDENTIFIER_CODE_SET;

typedef enum _TP_CALLBACK_PRIORITY
{
  TP_CALLBACK_PRIORITY_HIGH = 0,
  TP_CALLBACK_PRIORITY_NORMAL = 1,
  TP_CALLBACK_PRIORITY_LOW = 2,
  TP_CALLBACK_PRIORITY_INVALID = 3,
} TP_CALLBACK_PRIORITY, *PTP_CALLBACK_PRIORITY;

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0,
  NEC98x86 = 1,
  EndAlternatives = 2,
} ALTERNATIVE_ARCHITECTURE_TYPE, *PALTERNATIVE_ARCHITECTURE_TYPE;

enum ACTCTX_REQUESTED_RUN_LEVEL
{
  ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
  ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
  ACTCTX_RUN_LEVEL_NUMBERS = 4,
};

typedef enum _MEMORY_RESERVE_TYPE
{
  MemoryReserveUserApc = 0,
  MemoryReserveIoCompletion = 1,
  MemoryReserveTypeMax = 2,
} MEMORY_RESERVE_TYPE, *PMEMORY_RESERVE_TYPE;

typedef struct _LPCP_MESSAGE
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY Entry;
    struct
    {
      /* 0x0000 */ struct _SINGLE_LIST_ENTRY FreeEntry;
      /* 0x0008 */ unsigned long Reserved0;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  /* 0x0010 */ void* SenderPort;
  /* 0x0018 */ struct _ETHREAD* RepliedToThread;
  /* 0x0020 */ void* PortContext;
  /* 0x0028 */ struct _PORT_MESSAGE Request;
} LPCP_MESSAGE, *PLPCP_MESSAGE; /* size: 0x0050 */

typedef enum _MONITOR_DISPLAY_STATE
{
  PowerMonitorOff = 0,
  PowerMonitorOn = 1,
  PowerMonitorDim = 2,
} MONITOR_DISPLAY_STATE, *PMONITOR_DISPLAY_STATE;

typedef enum _WOW64_FUNCTION_CODE64
{
  WOW64_FUNCTION_NOP = 0,
  WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
  WOW64_FUNCTION_MAXIMUM = 2,
} WOW64_FUNCTION_CODE64, *PWOW64_FUNCTION_CODE64;

typedef enum _CM_SERVICE_NODE_TYPE
{
  DriverType = 1,
  FileSystemType = 2,
  Win32ServiceOwnProcess = 16,
  Win32ServiceShareProcess = 32,
  AdapterType = 4,
  RecognizerType = 8,
} CM_SERVICE_NODE_TYPE, *PCM_SERVICE_NODE_TYPE;

typedef struct _KDPC_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY DpcListHead;
  /* 0x0010 */ unsigned __int64 DpcLock;
  /* 0x0018 */ volatile long DpcQueueDepth;
  /* 0x001c */ unsigned long DpcCount;
} KDPC_DATA, *PKDPC_DATA; /* size: 0x0020 */

enum ETWTRACECONTROLCODE
{
  EtwStartLoggerCode = 1,
  EtwStopLoggerCode = 2,
  EtwQueryLoggerCode = 3,
  EtwUpdateLoggerCode = 4,
  EtwFlushLoggerCode = 5,
  EtwActivityIdCreate = 12,
  EtwWdiScenarioCode = 13,
  EtwWdiSemUpdate = 20,
};

typedef enum _STORAGE_MEDIA_TYPE
{
  DDS_4mm = 32,
  MiniQic = 33,
  Travan = 34,
  QIC = 35,
  MP_8mm = 36,
  AME_8mm = 37,
  AIT1_8mm = 38,
  DLT = 39,
  NCTP = 40,
  IBM_3480 = 41,
  IBM_3490E = 42,
  IBM_Magstar_3590 = 43,
  IBM_Magstar_MP = 44,
  STK_DATA_D3 = 45,
  SONY_DTF = 46,
  DV_6mm = 47,
  DMI = 48,
  SONY_D2 = 49,
  CLEANER_CARTRIDGE = 50,
  CD_ROM = 51,
  CD_R = 52,
  CD_RW = 53,
  DVD_ROM = 54,
  DVD_R = 55,
  DVD_RW = 56,
  MO_3_RW = 57,
  MO_5_WO = 58,
  MO_5_RW = 59,
  MO_5_LIMDOW = 60,
  PC_5_WO = 61,
  PC_5_RW = 62,
  PD_5_RW = 63,
  ABL_5_WO = 64,
  PINNACLE_APEX_5_RW = 65,
  SONY_12_WO = 66,
  PHILIPS_12_WO = 67,
  HITACHI_12_WO = 68,
  CYGNET_12_WO = 69,
  KODAK_14_WO = 70,
  MO_NFR_525 = 71,
  NIKON_12_RW = 72,
  IOMEGA_ZIP = 73,
  IOMEGA_JAZ = 74,
  SYQUEST_EZ135 = 75,
  SYQUEST_EZFLYER = 76,
  SYQUEST_SYJET = 77,
  AVATAR_F2 = 78,
  MP2_8mm = 79,
  DST_S = 80,
  DST_M = 81,
  DST_L = 82,
  VXATape_1 = 83,
  VXATape_2 = 84,
  STK_9840 = 85,
  LTO_Ultrium = 86,
  LTO_Accelis = 87,
  DVD_RAM = 88,
  AIT_8mm = 89,
  ADR_1 = 90,
  ADR_2 = 91,
  STK_9940 = 92,
  SAIT = 93,
  VXATape = 94,
} STORAGE_MEDIA_TYPE, *PSTORAGE_MEDIA_TYPE;

typedef enum _HV_CPU_COUNTER
{
  StLpCounterGlobalTime = 1,
  StLpCounterTotalRunTime = 2,
  StLpCounterHypervisorRunTime = 3,
} HV_CPU_COUNTER, *PHV_CPU_COUNTER;

typedef enum _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE
{
  ResourceTypeSingle = 0,
  ResourceTypeRange = 1,
  ResourceTypeExtendedCounterConfiguration = 2,
  ResourceTypeOverflow = 3,
  ResourceTypeMax = 4,
} PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE, *PPHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE;

typedef enum _IOP_PRIORITY_HINT
{
  IopIoPriorityNotSet = 0,
  IopIoPriorityVeryLow = 1,
  IopIoPriorityLow = 2,
  IopIoPriorityNormal = 3,
  IopIoPriorityHigh = 4,
  IopIoPriorityCritical = 5,
  MaxIopIoPriorityTypes = 6,
} IOP_PRIORITY_HINT, *PIOP_PRIORITY_HINT;

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS
{
  AlpcMessageSidInformation = 0,
  AlpcMessageTokenModifiedIdInformation = 1,
} ALPC_MESSAGE_INFORMATION_CLASS, *PALPC_MESSAGE_INFORMATION_CLASS;

typedef enum _IO_ACCESS_TYPE
{
  ReadAccess = 0,
  WriteAccess = 1,
  ModifyAccess = 2,
} IO_ACCESS_TYPE, *PIO_ACCESS_TYPE;

typedef enum _STORAGE_IDENTIFIER_TYPE
{
  StorageIdTypeVendorSpecific = 0,
  StorageIdTypeVendorId = 1,
  StorageIdTypeEUI64 = 2,
  StorageIdTypeFCPHName = 3,
  StorageIdTypePortRelative = 4,
  StorageIdTypeTargetPortGroup = 5,
  StorageIdTypeLogicalUnitGroup = 6,
  StorageIdTypeMD5LogicalUnitIdentifier = 7,
  StorageIdTypeScsiNameString = 8,
} STORAGE_IDENTIFIER_TYPE, *PSTORAGE_IDENTIFIER_TYPE;

typedef struct _PROCESSOR_IDLE_STATE
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0001 */ char Padding_108[3];
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ unsigned __int64 Context;
  /* 0x0018 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE, *PPROCESSOR_IDLE_STATE; /* size: 0x0020 */

typedef struct _PROCESSOR_IDLE_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct _PROCESSOR_IDLE_STATE State[1];
} PROCESSOR_IDLE_STATES, *PPROCESSOR_IDLE_STATES; /* size: 0x0038 */

typedef enum _TIMER_INFORMATION_CLASS
{
  TimerBasicInformation = 0,
} TIMER_INFORMATION_CLASS, *PTIMER_INFORMATION_CLASS;

typedef enum _REG_ACTION
{
  KeyAdded = 0,
  KeyRemoved = 1,
  KeyModified = 2,
} REG_ACTION, *PREG_ACTION;

typedef enum _STORAGE_PORT_CODE_SET
{
  StoragePortCodeSetReserved = 0,
  StoragePortCodeSetStorport = 1,
  StoragePortCodeSetSCSIport = 2,
} STORAGE_PORT_CODE_SET, *PSTORAGE_PORT_CODE_SET;

typedef struct _MMVAD_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 CommitCharge : 51; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 NoChange : 1; /* bit position: 51 */
    /* 0x0000 */ unsigned __int64 VadType : 3; /* bit position: 52 */
    /* 0x0000 */ unsigned __int64 MemCommit : 1; /* bit position: 55 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 56 */
    /* 0x0000 */ unsigned __int64 Spare : 2; /* bit position: 61 */
    /* 0x0000 */ unsigned __int64 PrivateMemory : 1; /* bit position: 63 */
  }; /* bitfield */
} MMVAD_FLAGS, *PMMVAD_FLAGS; /* size: 0x0008 */

typedef struct _MMVAD_FLAGS3
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 PreferredNode : 6; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Teb : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned __int64 Spare : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 SequentialAccess : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 LastSequentialTrim : 15; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Spare2 : 8; /* bit position: 24 */
    /* 0x0000 */ unsigned __int64 LargePageCreating : 1; /* bit position: 32 */
    /* 0x0000 */ unsigned __int64 Spare3 : 31; /* bit position: 33 */
  }; /* bitfield */
} MMVAD_FLAGS3, *PMMVAD_FLAGS3; /* size: 0x0008 */

typedef struct _MMVAD_FLAGS2
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int FileOffset : 24; /* bit position: 0 */
    /* 0x0000 */ unsigned int SecNoChange : 1; /* bit position: 24 */
    /* 0x0000 */ unsigned int OneSecured : 1; /* bit position: 25 */
    /* 0x0000 */ unsigned int MultipleSecured : 1; /* bit position: 26 */
    /* 0x0000 */ unsigned int Spare : 1; /* bit position: 27 */
    /* 0x0000 */ unsigned int LongVad : 1; /* bit position: 28 */
    /* 0x0000 */ unsigned int ExtendableFile : 1; /* bit position: 29 */
    /* 0x0000 */ unsigned int Inherit : 1; /* bit position: 30 */
    /* 0x0000 */ unsigned int CopyOnWrite : 1; /* bit position: 31 */
  }; /* bitfield */
} MMVAD_FLAGS2, *PMMVAD_FLAGS2; /* size: 0x0004 */

typedef struct _MMSECURE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long ReadOnly : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long NoWrite : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long Spare : 10; /* bit position: 2 */
  }; /* bitfield */
} MMSECURE_FLAGS, *PMMSECURE_FLAGS; /* size: 0x0004 */

typedef struct _MMADDRESS_LIST
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MMSECURE_FLAGS Flags;
      /* 0x0000 */ void* StartVa;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ void* EndVa;
} MMADDRESS_LIST, *PMMADDRESS_LIST; /* size: 0x0010 */

typedef struct _MMVAD_LONG
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMVAD* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMVAD* LeftChild;
  /* 0x0010 */ struct _MMVAD* RightChild;
  /* 0x0018 */ unsigned __int64 StartingVpn;
  /* 0x0020 */ unsigned __int64 EndingVpn;
  union
  {
    union
    {
      /* 0x0028 */ unsigned __int64 LongFlags;
      /* 0x0028 */ struct _MMVAD_FLAGS VadFlags;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
  /* 0x0030 */ struct _EX_PUSH_LOCK PushLock;
  union
  {
    union
    {
      /* 0x0038 */ unsigned __int64 LongFlags3;
      /* 0x0038 */ struct _MMVAD_FLAGS3 VadFlags3;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u5;
  union
  {
    union
    {
      /* 0x0040 */ unsigned long LongFlags2;
      /* 0x0040 */ struct _MMVAD_FLAGS2 VadFlags2;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  /* 0x0044 */ long Padding_109;
  /* 0x0048 */ struct _SUBSECTION* Subsection;
  /* 0x0050 */ struct _MMPTE* FirstPrototypePte;
  /* 0x0058 */ struct _MMPTE* LastContiguousPte;
  /* 0x0060 */ struct _LIST_ENTRY ViewLinks;
  /* 0x0070 */ struct _EPROCESS* VadsProcess;
  union
  {
    union
    {
      /* 0x0078 */ struct _LIST_ENTRY List;
      /* 0x0078 */ struct _MMADDRESS_LIST Secured;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u3;
  union
  {
    union
    {
      /* 0x0088 */ struct _MMBANKED_SECTION* Banked;
      /* 0x0088 */ struct _MMEXTEND_INFO* ExtendedInfo;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u4;
} MMVAD_LONG, *PMMVAD_LONG; /* size: 0x0090 */

typedef struct _PROC_PERF_DOMAIN
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _KPRCB* Master;
  /* 0x0018 */ struct _KAFFINITY_EX Members;
  /* 0x0040 */ void* FeedbackHandler /* function */;
  /* 0x0048 */ void* GetFFHThrottleState /* function */;
  /* 0x0050 */ void* BoostPolicyHandler /* function */;
  /* 0x0058 */ void* PerfSelectionHandler /* function */;
  /* 0x0060 */ void* PerfHandler /* function */;
  /* 0x0068 */ struct _PROC_PERF_CONSTRAINT* Processors;
  /* 0x0070 */ unsigned __int64 PerfChangeTime;
  /* 0x0078 */ unsigned long ProcessorCount;
  /* 0x007c */ unsigned long PreviousFrequencyMhz;
  /* 0x0080 */ unsigned long CurrentFrequencyMhz;
  /* 0x0084 */ unsigned long PreviousFrequency;
  /* 0x0088 */ unsigned long CurrentFrequency;
  /* 0x008c */ unsigned long CurrentPerfContext;
  /* 0x0090 */ unsigned long DesiredFrequency;
  /* 0x0094 */ unsigned long MaxFrequency;
  /* 0x0098 */ unsigned long MinPerfPercent;
  /* 0x009c */ unsigned long MinThrottlePercent;
  /* 0x00a0 */ unsigned long MaxPercent;
  /* 0x00a4 */ unsigned long MinPercent;
  /* 0x00a8 */ unsigned long ConstrainedMaxPercent;
  /* 0x00ac */ unsigned long ConstrainedMinPercent;
  /* 0x00b0 */ unsigned char Coordination;
  /* 0x00b1 */ char Padding_110[3];
  /* 0x00b4 */ volatile long PerfChangeIntervalCount;
} PROC_PERF_DOMAIN, *PPROC_PERF_DOMAIN; /* size: 0x00b8 */

typedef enum _ARBITER_RESULT
{
  ArbiterResultUndefined = -1,
  ArbiterResultSuccess = 0,
  ArbiterResultExternalConflict = 1,
  ArbiterResultNullRequest = 2,
} ARBITER_RESULT, *PARBITER_RESULT;

typedef union _KWAIT_STATUS_REGISTER
{
  union
  {
    /* 0x0000 */ unsigned char Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char State : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned char Affinity : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned char Priority : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned char Apc : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned char UserApc : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned char Alert : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned char Unused : 1; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0001 */
} KWAIT_STATUS_REGISTER, *PKWAIT_STATUS_REGISTER; /* size: 0x0001 */

typedef struct _KAPC_STATE
{
  /* 0x0000 */ struct _LIST_ENTRY ApcListHead[2];
  /* 0x0020 */ struct _KPROCESS* Process;
  /* 0x0028 */ unsigned char KernelApcInProgress;
  /* 0x0029 */ unsigned char KernelApcPending;
  /* 0x002a */ unsigned char UserApcPending;
  /* 0x002b */ char __PADDING__[5];
} KAPC_STATE, *PKAPC_STATE; /* size: 0x0030 */

typedef struct _KTIMER
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
  /* 0x0018 */ union _ULARGE_INTEGER DueTime;
  /* 0x0020 */ struct _LIST_ENTRY TimerListEntry;
  /* 0x0030 */ struct _KDPC* Dpc;
  /* 0x0038 */ unsigned long Processor;
  /* 0x003c */ unsigned long Period;
} KTIMER, *PKTIMER; /* size: 0x0040 */

typedef struct _KWAIT_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY WaitListEntry;
  /* 0x0010 */ struct _KTHREAD* Thread;
  /* 0x0018 */ void* Object;
  /* 0x0020 */ struct _KWAIT_BLOCK* NextWaitBlock;
  /* 0x0028 */ unsigned short WaitKey;
  /* 0x002a */ unsigned char WaitType;
  /* 0x002b */ volatile unsigned char BlockState;
  /* 0x002c */ long SpareLong;
} KWAIT_BLOCK, *PKWAIT_BLOCK; /* size: 0x0030 */

typedef struct _KSEMAPHORE
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
  /* 0x0018 */ long Limit;
  /* 0x001c */ long __PADDING__[1];
} KSEMAPHORE, *PKSEMAPHORE; /* size: 0x0020 */

typedef struct _KTHREAD
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
  /* 0x0018 */ volatile unsigned __int64 CycleTime;
  /* 0x0020 */ unsigned __int64 QuantumTarget;
  /* 0x0028 */ void* InitialStack;
  /* 0x0030 */ void* volatile StackLimit;
  /* 0x0038 */ void* KernelStack;
  /* 0x0040 */ unsigned __int64 ThreadLock;
  /* 0x0048 */ union _KWAIT_STATUS_REGISTER WaitRegister;
  /* 0x0049 */ volatile unsigned char Running;
  /* 0x004a */ unsigned char Alerted[2];
  union
  {
    struct /* bitfield */
    {
      /* 0x004c */ unsigned long KernelStackResident : 1; /* bit position: 0 */
      /* 0x004c */ unsigned long ReadyTransition : 1; /* bit position: 1 */
      /* 0x004c */ unsigned long ProcessReadyQueue : 1; /* bit position: 2 */
      /* 0x004c */ unsigned long WaitNext : 1; /* bit position: 3 */
      /* 0x004c */ unsigned long SystemAffinityActive : 1; /* bit position: 4 */
      /* 0x004c */ unsigned long Alertable : 1; /* bit position: 5 */
      /* 0x004c */ unsigned long GdiFlushActive : 1; /* bit position: 6 */
      /* 0x004c */ unsigned long UserStackWalkActive : 1; /* bit position: 7 */
      /* 0x004c */ unsigned long ApcInterruptRequest : 1; /* bit position: 8 */
      /* 0x004c */ unsigned long ForceDeferSchedule : 1; /* bit position: 9 */
      /* 0x004c */ unsigned long QuantumEndMigrate : 1; /* bit position: 10 */
      /* 0x004c */ unsigned long UmsDirectedSwitchEnable : 1; /* bit position: 11 */
      /* 0x004c */ unsigned long TimerActive : 1; /* bit position: 12 */
      /* 0x004c */ unsigned long Reserved : 19; /* bit position: 13 */
    }; /* bitfield */
    /* 0x004c */ long MiscFlags;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0050 */ struct _KAPC_STATE ApcState;
    struct
    {
      /* 0x0050 */ unsigned char ApcStateFill[43];
      /* 0x007b */ char Priority;
      /* 0x007c */ volatile unsigned long NextProcessor;
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
  /* 0x0080 */ volatile unsigned long DeferredProcessor;
  /* 0x0084 */ long Padding_111;
  /* 0x0088 */ unsigned __int64 ApcQueueLock;
  /* 0x0090 */ volatile __int64 WaitStatus;
  /* 0x0098 */ struct _KWAIT_BLOCK* WaitBlockList;
  union
  {
    /* 0x00a0 */ struct _LIST_ENTRY WaitListEntry;
    /* 0x00a0 */ struct _SINGLE_LIST_ENTRY SwapListEntry;
  }; /* size: 0x0010 */
  /* 0x00b0 */ struct _KQUEUE* volatile Queue;
  /* 0x00b8 */ void* Teb;
  /* 0x00c0 */ struct _KTIMER Timer;
  union
  {
    struct /* bitfield */
    {
      /* 0x0100 */ volatile unsigned long AutoAlignment : 1; /* bit position: 0 */
      /* 0x0100 */ volatile unsigned long DisableBoost : 1; /* bit position: 1 */
      /* 0x0100 */ volatile unsigned long EtwStackTraceApc1Inserted : 1; /* bit position: 2 */
      /* 0x0100 */ volatile unsigned long EtwStackTraceApc2Inserted : 1; /* bit position: 3 */
      /* 0x0100 */ volatile unsigned long CalloutActive : 1; /* bit position: 4 */
      /* 0x0100 */ volatile unsigned long ApcQueueable : 1; /* bit position: 5 */
      /* 0x0100 */ volatile unsigned long EnableStackSwap : 1; /* bit position: 6 */
      /* 0x0100 */ volatile unsigned long GuiThread : 1; /* bit position: 7 */
      /* 0x0100 */ volatile unsigned long UmsPerformingSyscall : 1; /* bit position: 8 */
      /* 0x0100 */ volatile unsigned long ReservedFlags : 23; /* bit position: 9 */
    }; /* bitfield */
    /* 0x0100 */ volatile long ThreadFlags;
  }; /* size: 0x0004 */
  /* 0x0104 */ unsigned long Spare0;
  union
  {
    /* 0x0108 */ struct _KWAIT_BLOCK WaitBlock[4];
    struct
    {
      /* 0x0108 */ unsigned char WaitBlockFill4[44];
      /* 0x0134 */ unsigned long ContextSwitches;
    }; /* size: 0x0030 */
    struct
    {
      /* 0x0108 */ unsigned char WaitBlockFill5[92];
      /* 0x0164 */ volatile unsigned char State;
      /* 0x0165 */ char NpxState;
      /* 0x0166 */ unsigned char WaitIrql;
      /* 0x0167 */ char WaitMode;
    }; /* size: 0x0060 */
    struct
    {
      /* 0x0108 */ unsigned char WaitBlockFill6[140];
      /* 0x0194 */ unsigned long WaitTime;
    }; /* size: 0x0090 */
    struct
    {
      /* 0x0108 */ unsigned char WaitBlockFill7[168];
      /* 0x01b0 */ void* TebMappedLowVa;
      /* 0x01b8 */ struct _UMS_CONTROL_BLOCK* Ucb;
    }; /* size: 0x00b8 */
    struct
    {
      /* 0x0108 */ unsigned char WaitBlockFill8[188];
      union
      {
        struct
        {
          /* 0x01c4 */ short KernelApcDisable;
          /* 0x01c6 */ short SpecialApcDisable;
        }; /* size: 0x0004 */
        /* 0x01c4 */ unsigned long CombinedApcDisable;
      }; /* size: 0x0004 */
    }; /* size: 0x00c0 */
  }; /* size: 0x00c0 */
  /* 0x01c8 */ struct _LIST_ENTRY QueueListEntry;
  /* 0x01d8 */ struct _KTRAP_FRAME* TrapFrame;
  /* 0x01e0 */ void* FirstArgument;
  union
  {
    /* 0x01e8 */ void* CallbackStack;
    /* 0x01e8 */ unsigned __int64 CallbackDepth;
  }; /* size: 0x0008 */
  /* 0x01f0 */ unsigned char ApcStateIndex;
  /* 0x01f1 */ char BasePriority;
  union
  {
    /* 0x01f2 */ char PriorityDecrement;
    struct /* bitfield */
    {
      /* 0x01f2 */ unsigned char ForegroundBoost : 4; /* bit position: 0 */
      /* 0x01f2 */ unsigned char UnusualBoost : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x01f3 */ unsigned char Preempted;
  /* 0x01f4 */ unsigned char AdjustReason;
  /* 0x01f5 */ char AdjustIncrement;
  /* 0x01f6 */ char PreviousMode;
  /* 0x01f7 */ char Saturation;
  /* 0x01f8 */ unsigned long SystemCallNumber;
  /* 0x01fc */ unsigned long FreezeCount;
  /* 0x0200 */ volatile struct _GROUP_AFFINITY UserAffinity;
  /* 0x0210 */ struct _KPROCESS* Process;
  /* 0x0218 */ volatile struct _GROUP_AFFINITY Affinity;
  /* 0x0228 */ unsigned long IdealProcessor;
  /* 0x022c */ unsigned long UserIdealProcessor;
  /* 0x0230 */ struct _KAPC_STATE* ApcStatePointer[2];
  union
  {
    /* 0x0240 */ struct _KAPC_STATE SavedApcState;
    struct
    {
      /* 0x0240 */ unsigned char SavedApcStateFill[43];
      /* 0x026b */ unsigned char WaitReason;
      /* 0x026c */ char SuspendCount;
      /* 0x026d */ char Spare1;
      /* 0x026e */ unsigned char CodePatchInProgress;
    }; /* size: 0x002f */
  }; /* size: 0x0030 */
  /* 0x0270 */ void* volatile Win32Thread;
  /* 0x0278 */ void* StackBase;
  union
  {
    /* 0x0280 */ struct _KAPC SuspendApc;
    struct
    {
      /* 0x0280 */ unsigned char SuspendApcFill0[1];
      /* 0x0281 */ unsigned char ResourceIndex;
    }; /* size: 0x0002 */
    struct
    {
      /* 0x0280 */ unsigned char SuspendApcFill1[3];
      /* 0x0283 */ unsigned char QuantumReset;
    }; /* size: 0x0004 */
    struct
    {
      /* 0x0280 */ unsigned char SuspendApcFill2[4];
      /* 0x0284 */ unsigned long KernelTime;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0280 */ unsigned char SuspendApcFill3[64];
      /* 0x02c0 */ struct _KPRCB* volatile WaitPrcb;
    }; /* size: 0x0048 */
    struct
    {
      /* 0x0280 */ unsigned char SuspendApcFill4[72];
      /* 0x02c8 */ void* LegoData;
    }; /* size: 0x0050 */
    struct
    {
      /* 0x0280 */ unsigned char SuspendApcFill5[83];
      /* 0x02d3 */ unsigned char LargeStack;
      /* 0x02d4 */ unsigned long UserTime;
    }; /* size: 0x0058 */
  }; /* size: 0x0058 */
  union
  {
    /* 0x02d8 */ struct _KSEMAPHORE SuspendSemaphore;
    struct
    {
      /* 0x02d8 */ unsigned char SuspendSemaphorefill[28];
      /* 0x02f4 */ unsigned long SListFaultCount;
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
  /* 0x02f8 */ struct _LIST_ENTRY ThreadListEntry;
  /* 0x0308 */ struct _LIST_ENTRY MutantListHead;
  /* 0x0318 */ void* SListFaultAddress;
  /* 0x0320 */ __int64 ReadOperationCount;
  /* 0x0328 */ __int64 WriteOperationCount;
  /* 0x0330 */ __int64 OtherOperationCount;
  /* 0x0338 */ __int64 ReadTransferCount;
  /* 0x0340 */ __int64 WriteTransferCount;
  /* 0x0348 */ __int64 OtherTransferCount;
  /* 0x0350 */ struct _KTHREAD_COUNTERS* ThreadCounters;
  /* 0x0358 */ struct _XSTATE_SAVE* XStateSave;
} KTHREAD, *PKTHREAD; /* size: 0x0360 */

typedef enum _PNP_QUERY_RELATION
{
  PnpQueryEjectRelations = 0,
  PnpQueryRemovalRelations = 1,
  PnpQueryPowerRelations = 2,
  PnpQueryBusRelations = 3,
  PnpQueryTransportRelations = 4,
  MaxPnpQueryRelations = 5,
} PNP_QUERY_RELATION, *PPNP_QUERY_RELATION;

typedef enum _SID_NAME_USE
{
  SidTypeUser = 1,
  SidTypeGroup = 2,
  SidTypeDomain = 3,
  SidTypeAlias = 4,
  SidTypeWellKnownGroup = 5,
  SidTypeDeletedAccount = 6,
  SidTypeInvalid = 7,
  SidTypeUnknown = 8,
  SidTypeComputer = 9,
  SidTypeLabel = 10,
} SID_NAME_USE, *PSID_NAME_USE;

typedef enum _MM_SYSTEM_SIZE
{
  MmSmallSystem = 0,
  MmMediumSystem = 1,
  MmLargeSystem = 2,
} MM_SYSTEM_SIZE, *PMM_SYSTEM_SIZE;

typedef enum _HV_SERVICE_BRANCH
{
  HvServiceBranchGdr = 0,
  HvServiceBranchQfe = 1,
} HV_SERVICE_BRANCH, *PHV_SERVICE_BRANCH;

typedef enum _KAPC_ENVIRONMENT
{
  OriginalApcEnvironment = 0,
  AttachedApcEnvironment = 1,
  CurrentApcEnvironment = 2,
  InsertApcEnvironment = 3,
} KAPC_ENVIRONMENT, *PKAPC_ENVIRONMENT;

typedef enum _IO_SESSION_STATE
{
  IoSessionStateCreated = 1,
  IoSessionStateInitialized = 2,
  IoSessionStateConnected = 3,
  IoSessionStateDisconnected = 4,
  IoSessionStateDisconnectedLoggedOn = 5,
  IoSessionStateLoggedOn = 6,
  IoSessionStateLoggedOff = 7,
  IoSessionStateTerminated = 8,
  IoSessionStateMax = 9,
} IO_SESSION_STATE, *PIO_SESSION_STATE;

typedef enum _ACCESS_MASK_FORMAT
{
  AccessMask_Format_NewLine_Indent = 0,
  AccessMask_Format_NewLine = 1,
  AccessMask_Format_Colon_TAB = 2,
} ACCESS_MASK_FORMAT, *PACCESS_MASK_FORMAT;

typedef enum _HARDERROR_RESPONSE_OPTION
{
  OptionAbortRetryIgnore = 0,
  OptionOk = 1,
  OptionOkCancel = 2,
  OptionRetryCancel = 3,
  OptionYesNo = 4,
  OptionYesNoCancel = 5,
  OptionShutdownSystem = 6,
  OptionOkNoWait = 7,
  OptionCancelTryContinue = 8,
} HARDERROR_RESPONSE_OPTION, *PHARDERROR_RESPONSE_OPTION;

typedef enum _PS_RESOURCE_TYPE
{
  PsResourceNonPagedPool = 0,
  PsResourcePagedPool = 1,
  PsResourcePageFile = 2,
  PsResourceWorkingSet = 3,
  PsResourceCpuRate = 4,
  PsResourceMax = 5,
} PS_RESOURCE_TYPE, *PPS_RESOURCE_TYPE;

enum DEVICE_REGISTRY_PROPERTY
{
  DevicePropertyDeviceDescription = 0,
  DevicePropertyHardwareID = 1,
  DevicePropertyCompatibleIDs = 2,
  DevicePropertyBootConfiguration = 3,
  DevicePropertyBootConfigurationTranslated = 4,
  DevicePropertyClassName = 5,
  DevicePropertyClassGuid = 6,
  DevicePropertyDriverKeyName = 7,
  DevicePropertyManufacturer = 8,
  DevicePropertyFriendlyName = 9,
  DevicePropertyLocationInformation = 10,
  DevicePropertyPhysicalDeviceObjectName = 11,
  DevicePropertyBusTypeGuid = 12,
  DevicePropertyLegacyBusType = 13,
  DevicePropertyBusNumber = 14,
  DevicePropertyEnumeratorName = 15,
  DevicePropertyAddress = 16,
  DevicePropertyUINumber = 17,
  DevicePropertyInstallState = 18,
  DevicePropertyRemovalPolicy = 19,
  DevicePropertyResourceRequirements = 20,
  DevicePropertyAllocatedResources = 21,
  DevicePropertyContainerID = 22,
};

typedef enum _IRQ_GROUP_POLICY
{
  GroupAffinityAllGroupZero = 0,
  GroupAffinityDontCare = 1,
} IRQ_GROUP_POLICY, *PIRQ_GROUP_POLICY;

enum SA_AttrTarget
{
  SA_All = 0xffffffff,
  SA_Assembly = 1,
  SA_Class = 4,
  SA_Constructor = 32,
  SA_Delegate = 4096,
  SA_Enum = 16,
  SA_Event = 512,
  SA_Field = 256,
  SA_GenericParameter = 16384,
  SA_Interface = 1024,
  SA_Method = 64,
  SA_Module = 2,
  SA_Parameter = 2048,
  SA_Property = 128,
  SA_ReturnValue = 8192,
  SA_Struct = 8,
  SA_This = 0xffff8000,
};

typedef enum _KWAIT_REASON
{
  Executive = 0,
  FreePage = 1,
  PageIn = 2,
  PoolAllocation = 3,
  DelayExecution = 4,
  Suspended = 5,
  UserRequest = 6,
  WrExecutive = 7,
  WrFreePage = 8,
  WrPageIn = 9,
  WrPoolAllocation = 10,
  WrDelayExecution = 11,
  WrSuspended = 12,
  WrUserRequest = 13,
  WrEventPair = 14,
  WrQueue = 15,
  WrLpcReceive = 16,
  WrLpcReply = 17,
  WrVirtualMemory = 18,
  WrPageOut = 19,
  WrRendezvous = 20,
  WrKeyedEvent = 21,
  WrTerminated = 22,
  WrProcessInSwap = 23,
  WrCpuRateControl = 24,
  WrCalloutStack = 25,
  WrKernel = 26,
  WrResource = 27,
  WrPushLock = 28,
  WrMutex = 29,
  WrQuantumEnd = 30,
  WrDispatchInt = 31,
  WrPreempted = 32,
  WrYieldExecution = 33,
  WrFastMutex = 34,
  WrGuardedMutex = 35,
  WrRundown = 36,
  MaximumWaitReason = 37,
} KWAIT_REASON, *PKWAIT_REASON;

typedef enum _VF_ERROR_ID
{
  DCERROR_UNSPECIFIED = 512,
  DCERROR_DELETE_WHILE_ATTACHED = 513,
  DCERROR_DETACH_NOT_ATTACHED = 514,
  DCERROR_CANCELROUTINE_FORWARDED = 515,
  DCERROR_NULL_DEVOBJ_FORWARDED = 516,
  DCERROR_QUEUED_IRP_FORWARDED = 517,
  DCERROR_IRPSP_COPIED = 519,
  DCERROR_INSUFFICIENT_STACK_LOCATIONS = 520,
  DCERROR_QUEUED_IRP_COMPLETED = 521,
  DCERROR_FREE_OF_INUSE_IRP = 523,
  DCERROR_FREE_OF_THREADED_IRP = 524,
  DCERROR_REINIT_OF_ALLOCATED_IRP_WITH_QUOTA = 525,
  DCERROR_PNP_IRP_BAD_INITIAL_STATUS = 526,
  DCERROR_POWER_IRP_BAD_INITIAL_STATUS = 527,
  DCERROR_WMI_IRP_BAD_INITIAL_STATUS = 528,
  DCERROR_SKIPPED_DEVICE_OBJECT = 529,
  DCERROR_BOGUS_FUNC_TRASHED = 530,
  DCERROR_BOGUS_STATUS_TRASHED = 531,
  DCERROR_BOGUS_INFO_TRASHED = 532,
  DCERROR_PNP_FAILURE_FORWARDED = 533,
  DCERROR_PNP_IRP_STATUS_RESET = 534,
  DCERROR_PNP_IRP_NEEDS_HANDLING = 535,
  DCERROR_PNP_IRP_HANDS_OFF = 536,
  DCERROR_POWER_FAILURE_FORWARDED = 537,
  DCERROR_POWER_IRP_STATUS_RESET = 538,
  DCERROR_SHOULDVE_DETACHED = 541,
  DCERROR_MISSING_DISPATCH_FUNCTION = 543,
  DCERROR_WMI_IRP_NOT_FORWARDED = 544,
  DCERROR_DELETED_PRESENT_PDO = 545,
  DCERROR_BUS_FILTER_ERRONEOUSLY_DELETED = 547,
  DCERROR_INCONSISTANT_STATUS = 548,
  DCERROR_UNINITIALIZED_STATUS = 549,
  DCERROR_IRP_RETURNED_WITHOUT_COMPLETION = 550,
  DCERROR_COMPLETION_ROUTINE_PAGABLE = 551,
  DCERROR_PENDING_BIT_NOT_MIGRATED = 552,
  DCERROR_PNP_IRP_NEEDS_PDO_HANDLING = 554,
  DCERROR_TARGET_RELATION_LIST_EMPTY = 555,
  DCERROR_BOGUS_PNP_IRP_COMPLETED = 557,
  DCERROR_SUCCESSFUL_PNP_IRP_NOT_FORWARDED = 558,
  DCERROR_UNTOUCHED_PNP_IRP_NOT_FORWARDED = 559,
  DCERROR_PNP_QUERY_CAP_BAD_VERSION = 563,
  DCERROR_PNP_QUERY_CAP_BAD_SIZE = 564,
  DCERROR_PNP_QUERY_CAP_BAD_ADDRESS = 565,
  DCERROR_PNP_QUERY_CAP_BAD_UI_NUM = 566,
  DCERROR_BOGUS_MINOR_STATUS_TRASHED = 571,
  DCERROR_PENDING_RETURNED_NOT_MARKED = 573,
  DCERROR_PENDING_MARKED_NOT_RETURNED = 574,
  DCERROR_DOUBLE_DELETION = 576,
  DCERROR_DETACHED_IN_SURPRISE_REMOVAL = 577,
  DCERROR_DELETED_IN_SURPRISE_REMOVAL = 578,
  DCERROR_NON_PDO_RETURNED_IN_RELATION = 584,
  DCERROR_DUPLICATE_ENUMERATION = 585,
  DCERROR_FILE_IO_AT_BAD_IRQL = 586,
  DCERROR_MISHANDLED_TARGET_DEVICE_RELATIONS = 587,
  DCERROR_PENDING_RETURNED_NOT_MARKED_2 = 588,
  DCERROR_DDI_REQUIRES_PDO = 589,
  DCERROR_INVALID_STATUS_2 = 768,
  DCERROR_IOCALLDRIVER_ABOVE_DISPATCH_LEVEL = 769,
  DCERROR_IOCALLDRIVER_ABOVE_PASSIVE_LEVEL = 770,
  DCERROR_REMOVE_DEVICE_FAILED = 774,
} VF_ERROR_ID, *PVF_ERROR_ID;

typedef enum _PF_FUS_PHASE_ID
{
  PfFUSPhaseBegin = 0,
  PfFUSPhaseEnd = 1,
  PfFUSPhaseMax = 2,
} PF_FUS_PHASE_ID, *PPF_FUS_PHASE_ID;

typedef enum _POWER_REQUEST_TYPE
{
  PowerRequestDisplayRequired = 0,
  PowerRequestSystemRequired = 1,
  PowerRequestAwayModeRequired = 2,
} POWER_REQUEST_TYPE, *PPOWER_REQUEST_TYPE;

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION
{
  SystemFirmwareTable_Enumerate = 0,
  SystemFirmwareTable_Get = 1,
} SYSTEM_FIRMWARE_TABLE_ACTION, *PSYSTEM_FIRMWARE_TABLE_ACTION;

typedef enum _PF_ACCESS_TRACING_COMMAND
{
  PfComponentEnable = 0,
  PfComponentDisable = 1,
  PfComponentCommandMax = 2,
} PF_ACCESS_TRACING_COMMAND, *PPF_ACCESS_TRACING_COMMAND;

typedef enum _TP_TRACE_TYPE
{
  TpTraceThreadPriority = 1,
  TpTraceThreadAffinity = 2,
  MaxTpTraceType = 3,
} TP_TRACE_TYPE, *PTP_TRACE_TYPE;

typedef struct _WDBGEXTS_QUERY_INTERFACE
{
  /* 0x0000 */ const struct _GUID* Iid;
  /* 0x0008 */ void* Iface;
} WDBGEXTS_QUERY_INTERFACE, *PWDBGEXTS_QUERY_INTERFACE; /* size: 0x0010 */

typedef struct _EISA_IRQ_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Interrupt : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char LevelTriggered : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_IRQ_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
  /* 0x0001 */ unsigned char Reserved;
} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION; /* size: 0x0002 */

typedef enum _CM_ERROR_CONTROL_TYPE
{
  IgnoreError = 0,
  NormalError = 1,
  SevereError = 2,
  CriticalError = 3,
} CM_ERROR_CONTROL_TYPE, *PCM_ERROR_CONTROL_TYPE;

typedef union _UMS_APC_CONTROL
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ContextHeaderReady : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long RelinquishComplete : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long PrimaryJoinPending : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long LockAcquired : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long TerminateRequested : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long PrimaryContinueRequested : 1; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} UMS_APC_CONTROL, *PUMS_APC_CONTROL; /* size: 0x0004 */

typedef enum _PF_TRACE_TYPE
{
  PfTraceTypePageAccess = 0,
  PfTraceTypeNameLogging = 1,
  PfTraceTypeMax = 2,
} PF_TRACE_TYPE, *PPF_TRACE_TYPE;

typedef enum _POLICY_INFORMATION_CLASS
{
  PolicyAuditLogInformation = 1,
  PolicyAuditEventsInformation = 2,
  PolicyPrimaryDomainInformation = 3,
  PolicyPdAccountInformation = 4,
  PolicyAccountDomainInformation = 5,
  PolicyLsaServerRoleInformation = 6,
  PolicyReplicaSourceInformation = 7,
  PolicyDefaultQuotaInformation = 8,
  PolicyModificationInformation = 9,
  PolicyAuditFullSetInformation = 10,
  PolicyAuditFullQueryInformation = 11,
  PolicyDnsDomainInformation = 12,
  PolicyDnsDomainInformationInt = 13,
  PolicyLocalAccountDomainInformation = 14,
  PolicyLastEntry = 15,
} POLICY_INFORMATION_CLASS, *PPOLICY_INFORMATION_CLASS;

typedef enum _AMD64_FUNCTION_TABLE_TYPE
{
  AMD64_RF_SORTED = 0,
  AMD64_RF_UNSORTED = 1,
  AMD64_RF_CALLBACK = 2,
} AMD64_FUNCTION_TABLE_TYPE, *PAMD64_FUNCTION_TABLE_TYPE;

typedef struct _MI_PHYSICAL_VIEW
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMADDRESS_NODE* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMADDRESS_NODE* LeftChild;
  /* 0x0010 */ struct _MMADDRESS_NODE* RightChild;
  /* 0x0018 */ unsigned __int64 StartingVpn;
  /* 0x0020 */ unsigned __int64 EndingVpn;
  /* 0x0028 */ struct _MMVAD* Vad;
  /* 0x0030 */ enum _MI_VAD_TYPE VadType;
  /* 0x0034 */ long Padding_112;
  union
  {
    union
    {
      /* 0x0038 */ struct _MMPTE* MappingPte;
      /* 0x0038 */ struct _RTL_BITMAP_EX* BitMap;
      /* 0x0038 */ struct _MMIO_TRACKER* IoTracker;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
  /* 0x0040 */ struct _MMINPAGE_SUPPORT* InPageSupport;
} MI_PHYSICAL_VIEW, *PMI_PHYSICAL_VIEW; /* size: 0x0048 */

typedef enum _TAG_UNNAMED_4
{
  DDILOCK_UNREGISTERED = 0,
  DDILOCK_REGISTERING = 1,
  DDILOCK_REGISTERED = 2,
} TAG_UNNAMED_4, *PTAG_UNNAMED_4;

typedef enum _KTRANSACTION_STATE
{
  KTransactionUninitialized = 0,
  KTransactionActive = 1,
  KTransactionPreparing = 2,
  KTransactionPrepared = 3,
  KTransactionInDoubt = 4,
  KTransactionCommitted = 5,
  KTransactionAborted = 6,
  KTransactionDelegated = 7,
  KTransactionPrePreparing = 8,
  KTransactionForgotten = 9,
  KTransactionRecovering = 10,
  KTransactionPrePrepared = 11,
} KTRANSACTION_STATE, *PKTRANSACTION_STATE;

typedef enum _ATOM_INFORMATION_CLASS
{
  AtomBasicInformation = 0,
  AtomTableInformation = 1,
} ATOM_INFORMATION_CLASS, *PATOM_INFORMATION_CLASS;

typedef enum _DBG_STATE
{
  DbgIdle = 0,
  DbgReplyPending = 1,
  DbgCreateThreadStateChange = 2,
  DbgCreateProcessStateChange = 3,
  DbgExitThreadStateChange = 4,
  DbgExitProcessStateChange = 5,
  DbgExceptionStateChange = 6,
  DbgBreakpointStateChange = 7,
  DbgSingleStepStateChange = 8,
  DbgLoadDllStateChange = 9,
  DbgUnloadDllStateChange = 10,
} DBG_STATE, *PDBG_STATE;

enum PCI_EXPRESS_MRL_STATE
{
  MRLClosed = 0,
  MRLOpen = 1,
};

typedef struct _SCATTER_GATHER_ELEMENT
{
  /* 0x0000 */ union _LARGE_INTEGER Address;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long Padding_113;
  /* 0x0010 */ unsigned __int64 Reserved;
} SCATTER_GATHER_ELEMENT, *PSCATTER_GATHER_ELEMENT; /* size: 0x0018 */

typedef enum _HV_GUEST_OS_VENDOR
{
  HvGuestOsVendorMicrosoft = 1,
} HV_GUEST_OS_VENDOR, *PHV_GUEST_OS_VENDOR;

enum EM_RULE_STATE
{
  STATE_FALSE = 0,
  STATE_UNKNOWN = 1,
  STATE_TRUE = 2,
};

typedef struct _PROCESS_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long HandleCount;
  /* 0x0004 */ unsigned long HandleCountHighWatermark;
} PROCESS_HANDLE_INFORMATION, *PPROCESS_HANDLE_INFORMATION; /* size: 0x0008 */

typedef enum _PS_ATTRIBUTE_NUM
{
  PsAttributeParentProcess = 0,
  PsAttributeDebugObject = 1,
  PsAttributeToken = 2,
  PsAttributeClientId = 3,
  PsAttributeTebAddress = 4,
  PsAttributeImageName = 5,
  PsAttributeImageInfo = 6,
  PsAttributeMemoryReserve = 7,
  PsAttributePriorityClass = 8,
  PsAttributeErrorMode = 9,
  PsAttributeStdHandleInfo = 10,
  PsAttributeHandleList = 11,
  PsAttributeGroupAffinity = 12,
  PsAttributePreferredNode = 13,
  PsAttributeIdealProcessor = 14,
  PsAttributeUmsThread = 15,
  PsAttributeExecuteOptions = 16,
  PsAttributeMax = 17,
} PS_ATTRIBUTE_NUM, *PPS_ATTRIBUTE_NUM;

enum WELL_KNOWN_SID_TYPE
{
  WinNullSid = 0,
  WinWorldSid = 1,
  WinLocalSid = 2,
  WinCreatorOwnerSid = 3,
  WinCreatorGroupSid = 4,
  WinCreatorOwnerServerSid = 5,
  WinCreatorGroupServerSid = 6,
  WinNtAuthoritySid = 7,
  WinDialupSid = 8,
  WinNetworkSid = 9,
  WinBatchSid = 10,
  WinInteractiveSid = 11,
  WinServiceSid = 12,
  WinAnonymousSid = 13,
  WinProxySid = 14,
  WinEnterpriseControllersSid = 15,
  WinSelfSid = 16,
  WinAuthenticatedUserSid = 17,
  WinRestrictedCodeSid = 18,
  WinTerminalServerSid = 19,
  WinRemoteLogonIdSid = 20,
  WinLogonIdsSid = 21,
  WinLocalSystemSid = 22,
  WinLocalServiceSid = 23,
  WinNetworkServiceSid = 24,
  WinBuiltinDomainSid = 25,
  WinBuiltinAdministratorsSid = 26,
  WinBuiltinUsersSid = 27,
  WinBuiltinGuestsSid = 28,
  WinBuiltinPowerUsersSid = 29,
  WinBuiltinAccountOperatorsSid = 30,
  WinBuiltinSystemOperatorsSid = 31,
  WinBuiltinPrintOperatorsSid = 32,
  WinBuiltinBackupOperatorsSid = 33,
  WinBuiltinReplicatorSid = 34,
  WinBuiltinPreWindows2000CompatibleAccessSid = 35,
  WinBuiltinRemoteDesktopUsersSid = 36,
  WinBuiltinNetworkConfigurationOperatorsSid = 37,
  WinAccountAdministratorSid = 38,
  WinAccountGuestSid = 39,
  WinAccountKrbtgtSid = 40,
  WinAccountDomainAdminsSid = 41,
  WinAccountDomainUsersSid = 42,
  WinAccountDomainGuestsSid = 43,
  WinAccountComputersSid = 44,
  WinAccountControllersSid = 45,
  WinAccountCertAdminsSid = 46,
  WinAccountSchemaAdminsSid = 47,
  WinAccountEnterpriseAdminsSid = 48,
  WinAccountPolicyAdminsSid = 49,
  WinAccountRasAndIasServersSid = 50,
  WinNTLMAuthenticationSid = 51,
  WinDigestAuthenticationSid = 52,
  WinSChannelAuthenticationSid = 53,
  WinThisOrganizationSid = 54,
  WinOtherOrganizationSid = 55,
  WinBuiltinIncomingForestTrustBuildersSid = 56,
  WinBuiltinPerfMonitoringUsersSid = 57,
  WinBuiltinPerfLoggingUsersSid = 58,
  WinBuiltinAuthorizationAccessSid = 59,
  WinBuiltinTerminalServerLicenseServersSid = 60,
  WinBuiltinDCOMUsersSid = 61,
  WinBuiltinIUsersSid = 62,
  WinIUserSid = 63,
  WinBuiltinCryptoOperatorsSid = 64,
  WinUntrustedLabelSid = 65,
  WinLowLabelSid = 66,
  WinMediumLabelSid = 67,
  WinHighLabelSid = 68,
  WinSystemLabelSid = 69,
  WinWriteRestrictedCodeSid = 70,
  WinCreatorOwnerRightsSid = 71,
  WinCacheablePrincipalsGroupSid = 72,
  WinNonCacheablePrincipalsGroupSid = 73,
  WinEnterpriseReadonlyControllersSid = 74,
  WinAccountReadonlyControllersSid = 75,
  WinBuiltinEventLogReadersGroup = 76,
  WinNewEnterpriseReadonlyControllersSid = 77,
  WinBuiltinCertSvcDComAccessGroup = 78,
  WinMediumPlusLabelSid = 79,
  WinLocalLogonSid = 80,
  WinConsoleLogonSid = 81,
  WinThisOrganizationCertificateSid = 82,
};

typedef enum _SECTION_INFORMATION_CLASS
{
  SectionBasicInformation = 0,
  SectionImageInformation = 1,
  SectionRelocationInformation = 2,
  MaxSectionInfoClass = 3,
} SECTION_INFORMATION_CLASS, *PSECTION_INFORMATION_CLASS;

typedef struct _SUPPORTED_RANGE
{
  /* 0x0000 */ struct _SUPPORTED_RANGE* Next;
  /* 0x0008 */ unsigned long SystemAddressSpace;
  /* 0x000c */ long Padding_114;
  /* 0x0010 */ __int64 SystemBase;
  /* 0x0018 */ __int64 Base;
  /* 0x0020 */ __int64 Limit;
} SUPPORTED_RANGE, *PSUPPORTED_RANGE; /* size: 0x0028 */

enum POP_SUBSTITUTION_POLICY
{
  SubstituteLightenSleep = 0,
  SubstituteLightestOverallDownwardBounded = 1,
  SubstituteDeepenSleep = 2,
};

typedef struct _SMBIOS_STRUCT_HEADER
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Length;
  /* 0x0002 */ unsigned short Handle;
  /* 0x0004 */ unsigned char* Data /* zero-length array */;
} SMBIOS_STRUCT_HEADER, *PSMBIOS_STRUCT_HEADER; /* size: 0x0004 */

enum VF_EVENTS
{
  VF_EVENT_BOOT = 0,
  VF_EVENT_SHUTDOWN = 1,
  VF_EVENT_BUGCHECK = 2,
  VF_EVENT_ENTER_DEBUGGER = 3,
  VF_EVENT_EXIT_DEBUGGER = 4,
  VF_EVENT_PHASE1_INIT_COMPLETE = 5,
};

enum VF_OBJECT_TYPE
{
  VFOBJTYPE_DRIVER = 0,
  VFOBJTYPE_DEVICE = 1,
  VFOBJTYPE_SYSTEM_BIOS = 2,
};

typedef struct _AMD64_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Pad[3];
  /* 0x0006 */ unsigned short Limit;
  /* 0x0008 */ unsigned __int64 Base;
} AMD64_DESCRIPTOR, *PAMD64_DESCRIPTOR; /* size: 0x0010 */

enum LSA_FOREST_TRUST_RECORD_TYPE
{
  ForestTrustTopLevelName = 0,
  ForestTrustTopLevelNameEx = 1,
  ForestTrustDomainInfo = 2,
  ForestTrustRecordTypeLast = 2,
};

enum IO_DEVICE_RELATIONSHIP
{
  IoParentDevice = 0,
  IoChildDevice = 1,
  IoSiblingDevice = 2,
};

enum PCI_EXPRESS_INDICATOR_STATE
{
  IndicatorOn = 1,
  IndicatorBlink = 2,
  IndicatorOff = 3,
};

enum PCI_EXPRESS_MAX_PAYLOAD_SIZE
{
  MaxPayload128Bytes = 0,
  MaxPayload256Bytes = 1,
  MaxPayload512Bytes = 2,
  MaxPayload1024Bytes = 3,
  MaxPayload2048Bytes = 4,
  MaxPayload4096Bytes = 5,
};

enum VfBugcheckWorkaroundType
{
  VfBugcheckAllocZeroBytes = 1,
};

enum BATTERY_SET_INFORMATION_LEVEL
{
  BatteryCriticalBias = 0,
  BatteryCharge = 1,
  BatteryDischarge = 2,
};

typedef enum _PERFINFO_CCSWAP_TYPE
{
  PerfCSwapIdleShort = 0,
  PerfCSwapIdle = 1,
  PerfCSwapLite = 2,
  PerfCSwapFull = 3,
} PERFINFO_CCSWAP_TYPE, *PPERFINFO_CCSWAP_TYPE;

typedef enum _POLICY_DOMAIN_INFORMATION_CLASS
{
  PolicyDomainEfsInformation = 2,
  PolicyDomainKerberosTicketInformation = 3,
} POLICY_DOMAIN_INFORMATION_CLASS, *PPOLICY_DOMAIN_INFORMATION_CLASS;

typedef struct _HANDLE_TRACE_DB_ENTRY
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
  /* 0x0010 */ void* Handle;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_115;
  /* 0x0020 */ void* StackTrace[16];
} HANDLE_TRACE_DB_ENTRY, *PHANDLE_TRACE_DB_ENTRY; /* size: 0x00a0 */

typedef union _WHEA_XPF_BUS_CHECK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 TransactionTypeValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 OperationValid : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 LevelValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorruptValid : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 UncorrectedValid : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 PreciseIPValid : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 RestartableIPValid : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 OverflowValid : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 ParticipationValid : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 TimeoutValid : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned __int64 AddressSpaceValid : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned __int64 ReservedValid : 5; /* bit position: 11 */
      /* 0x0000 */ unsigned __int64 TransactionType : 2; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Operation : 4; /* bit position: 18 */
      /* 0x0000 */ unsigned __int64 Level : 3; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorrupt : 1; /* bit position: 25 */
      /* 0x0000 */ unsigned __int64 Uncorrected : 1; /* bit position: 26 */
      /* 0x0000 */ unsigned __int64 PreciseIP : 1; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 RestartableIP : 1; /* bit position: 28 */
      /* 0x0000 */ unsigned __int64 Overflow : 1; /* bit position: 29 */
      /* 0x0000 */ unsigned __int64 Participation : 2; /* bit position: 30 */
      /* 0x0000 */ unsigned __int64 Timeout : 1; /* bit position: 32 */
      /* 0x0000 */ unsigned __int64 AddressSpace : 2; /* bit position: 33 */
      /* 0x0000 */ unsigned __int64 Reserved : 29; /* bit position: 35 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 XpfBusCheck;
  }; /* size: 0x0008 */
} WHEA_XPF_BUS_CHECK, *PWHEA_XPF_BUS_CHECK; /* size: 0x0008 */

enum ST_STORE<SM_TRAITS>::_ST_PERSIST_PHASE
{
  PersistNone = 0,
  PersistPersisted = 1,
  PersistUnpersisting = 2,
  PersistSyncing = 3,
  PersistStateMax = 4,
};

typedef enum _JOBOBJECTINFOCLASS
{
  JobObjectBasicAccountingInformation = 1,
  JobObjectBasicLimitInformation = 2,
  JobObjectBasicProcessIdList = 3,
  JobObjectBasicUIRestrictions = 4,
  JobObjectSecurityLimitInformation = 5,
  JobObjectEndOfJobTimeInformation = 6,
  JobObjectAssociateCompletionPortInformation = 7,
  JobObjectBasicAndIoAccountingInformation = 8,
  JobObjectExtendedLimitInformation = 9,
  JobObjectJobSetInformation = 10,
  JobObjectGroupInformation = 11,
  MaxJobObjectInfoClass = 12,
} JOBOBJECTINFOCLASS, *PJOBOBJECTINFOCLASS;

typedef union _KGDTENTRY64
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short LimitLow;
      /* 0x0002 */ unsigned short BaseLow;
      union
      {
        struct
        {
          /* 0x0004 */ unsigned char BaseMiddle;
          /* 0x0005 */ unsigned char Flags1;
          /* 0x0006 */ unsigned char Flags2;
          /* 0x0007 */ unsigned char BaseHigh;
        } /* size: 0x0004 */ Bytes;
        struct
        {
          struct
          {
            struct /* bitfield */
            {
              /* 0x0004 */ unsigned long BaseMiddle : 8; /* bit position: 0 */
              /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
              /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
              /* 0x0004 */ unsigned long Present : 1; /* bit position: 15 */
              /* 0x0004 */ unsigned long LimitHigh : 4; /* bit position: 16 */
              /* 0x0004 */ unsigned long System : 1; /* bit position: 20 */
              /* 0x0004 */ unsigned long LongMode : 1; /* bit position: 21 */
              /* 0x0004 */ unsigned long DefaultBig : 1; /* bit position: 22 */
              /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
              /* 0x0004 */ unsigned long BaseHigh : 8; /* bit position: 24 */
            }; /* bitfield */
          } /* size: 0x0004 */ Bits;
          /* 0x0008 */ unsigned long BaseUpper;
          /* 0x000c */ unsigned long MustBeZero;
        }; /* size: 0x000c */
      }; /* size: 0x000c */
    }; /* size: 0x0010 */
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0010 */
} KGDTENTRY64, *PKGDTENTRY64; /* size: 0x0010 */

typedef enum _DBGKM_APINUMBER
{
  DbgKmExceptionApi = 0,
  DbgKmCreateThreadApi = 1,
  DbgKmCreateProcessApi = 2,
  DbgKmExitThreadApi = 3,
  DbgKmExitProcessApi = 4,
  DbgKmLoadDllApi = 5,
  DbgKmUnloadDllApi = 6,
  DbgKmErrorReportApi = 7,
  DbgKmMaxApiNumber = 8,
} DBGKM_APINUMBER, *PDBGKM_APINUMBER;

typedef enum _PROCESSINFOCLASS
{
  ProcessBasicInformation = 0,
  ProcessQuotaLimits = 1,
  ProcessIoCounters = 2,
  ProcessVmCounters = 3,
  ProcessTimes = 4,
  ProcessBasePriority = 5,
  ProcessRaisePriority = 6,
  ProcessDebugPort = 7,
  ProcessExceptionPort = 8,
  ProcessAccessToken = 9,
  ProcessLdtInformation = 10,
  ProcessLdtSize = 11,
  ProcessDefaultHardErrorMode = 12,
  ProcessIoPortHandlers = 13,
  ProcessPooledUsageAndLimits = 14,
  ProcessWorkingSetWatch = 15,
  ProcessUserModeIOPL = 16,
  ProcessEnableAlignmentFaultFixup = 17,
  ProcessPriorityClass = 18,
  ProcessWx86Information = 19,
  ProcessHandleCount = 20,
  ProcessAffinityMask = 21,
  ProcessPriorityBoost = 22,
  ProcessDeviceMap = 23,
  ProcessSessionInformation = 24,
  ProcessForegroundInformation = 25,
  ProcessWow64Information = 26,
  ProcessImageFileName = 27,
  ProcessLUIDDeviceMapsEnabled = 28,
  ProcessBreakOnTermination = 29,
  ProcessDebugObjectHandle = 30,
  ProcessDebugFlags = 31,
  ProcessHandleTracing = 32,
  ProcessIoPriority = 33,
  ProcessExecuteFlags = 34,
  ProcessTlsInformation = 35,
  ProcessCookie = 36,
  ProcessImageInformation = 37,
  ProcessCycleTime = 38,
  ProcessPagePriority = 39,
  ProcessInstrumentationCallback = 40,
  ProcessThreadStackAllocation = 41,
  ProcessWorkingSetWatchEx = 42,
  ProcessImageFileNameWin32 = 43,
  ProcessImageFileMapping = 44,
  ProcessAffinityUpdateMode = 45,
  ProcessMemoryAllocationMode = 46,
  ProcessGroupInformation = 47,
  ProcessTokenVirtualizationEnabled = 48,
  ProcessConsoleHostProcess = 49,
  ProcessWindowInformation = 50,
  MaxProcessInfoClass = 51,
} PROCESSINFOCLASS, *PPROCESSINFOCLASS;

struct tagAHCACHESTATS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long OperationLookup;
  /* 0x0008 */ unsigned long OperationRemove;
  /* 0x000c */ unsigned long OperationUpdate;
  /* 0x0010 */ unsigned long OperationFlush;
  /* 0x0014 */ unsigned long OperationDump;
  /* 0x0018 */ unsigned long OperationStartedService;
  /* 0x001c */ unsigned long OperationStoppingService;
  /* 0x0020 */ unsigned long OperationForward;
  /* 0x0024 */ unsigned long OperationQuery;
  /* 0x0028 */ unsigned long LookupHits;
  /* 0x002c */ unsigned long LookupMisses;
  /* 0x0030 */ unsigned long Inserted;
  /* 0x0034 */ unsigned long Replaced;
  /* 0x0038 */ unsigned long Updated;
  /* 0x003c */ unsigned long DropDueToServiceUnAvailability;
  /* 0x0040 */ unsigned long DropDueToInvalidServicePort;
  /* 0x0044 */ unsigned long DropDueToServiceRequestError;
  /* 0x0048 */ unsigned long DropDueToServiceDisabled;
  /* 0x004c */ unsigned long DropDueToTimeout;
  /* 0x0050 */ unsigned long DropDueToBufferOverflow;
  /* 0x0054 */ unsigned long SumQueued;
  /* 0x0058 */ unsigned long SumExceedHeapQuota;
  /* 0x005c */ unsigned long SumDroppedQueueLimit;
  /* 0x0060 */ unsigned long SumSent;
  /* 0x0064 */ unsigned long SumDroppedService;
  /* 0x0068 */ unsigned long SumServiceConnectFailures;
  /* 0x006c */ unsigned long Padding1;
  /* 0x0070 */ unsigned __int64 SumBytesAllocated;
}; /* size: 0x0078 */

struct tagSTOREDCACHEHEADER
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long dwCount;
  /* 0x0008 */ struct tagAHCACHESTATS Stats;
}; /* size: 0x0080 */

typedef struct _PROCESSOR_PERF_INFO
{
  /* 0x0000 */ struct _PROCESSOR_NUMBER Number;
  /* 0x0004 */ long Padding_116;
  /* 0x0008 */ unsigned __int64 PerfContext;
  /* 0x0010 */ unsigned long PercentageCap;
  /* 0x0014 */ long __PADDING__[1];
} PROCESSOR_PERF_INFO, *PPROCESSOR_PERF_INFO; /* size: 0x0018 */

typedef struct _KGATE
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
} KGATE, *PKGATE; /* size: 0x0018 */

typedef enum _IO_SESSION_EVENT
{
  IoSessionEventIgnore = 0,
  IoSessionEventCreated = 1,
  IoSessionEventTerminated = 2,
  IoSessionEventConnected = 3,
  IoSessionEventDisconnected = 4,
  IoSessionEventLogon = 5,
  IoSessionEventLogoff = 6,
  IoSessionEventMax = 7,
} IO_SESSION_EVENT, *PIO_SESSION_EVENT;

typedef enum _WHEA_RAW_DATA_FORMAT
{
  WheaRawDataFormatIPFSalRecord = 0,
  WheaRawDataFormatIA32MCA = 1,
  WheaRawDataFormatIntel64MCA = 2,
  WheaRawDataFormatAMD64MCA = 3,
  WheaRawDataFormatMemory = 4,
  WheaRawDataFormatPCIExpress = 5,
  WheaRawDataFormatNMIPort = 6,
  WheaRawDataFormatPCIXBus = 7,
  WheaRawDataFormatPCIXDevice = 8,
  WheaRawDataFormatGeneric = 9,
  WheaRawDataFormatMax = 10,
} WHEA_RAW_DATA_FORMAT, *PWHEA_RAW_DATA_FORMAT;

enum IMPORT_OBJECT_TYPE
{
  IMPORT_OBJECT_CODE = 0,
  IMPORT_OBJECT_DATA = 1,
  IMPORT_OBJECT_CONST = 2,
};

typedef struct _MSWmi_Guid
{
  /* 0x0000 */ unsigned char Guid[16];
} MSWmi_Guid, *PMSWmi_Guid; /* size: 0x0010 */

typedef enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION
{
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL = 1,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_ADD = 2,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_DELETE = 3,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE = 4,
} TOKEN_SECURITY_ATTRIBUTE_OPERATION, *PTOKEN_SECURITY_ATTRIBUTE_OPERATION;

typedef enum _SEP_RM_LSA_MEMORY_TYPE
{
  SepRmNoMemory = 0,
  SepRmImmediateMemory = 1,
  SepRmLsaCommandPortSharedMemory = 2,
  SepRmLsaCustomSharedMemory = 3,
  SepRmPagedPoolMemory = 4,
  SepRmNonPagedPoolMemory = 5,
  SepRmUnspecifiedMemory = 6,
} SEP_RM_LSA_MEMORY_TYPE, *PSEP_RM_LSA_MEMORY_TYPE;

typedef enum _SEP_LSA_WORK_ITEM_TAG
{
  SepDeleteLogon = 0,
  SepAuditRecord = 1,
} SEP_LSA_WORK_ITEM_TAG, *PSEP_LSA_WORK_ITEM_TAG;

typedef enum _RTL_PATH_TYPE
{
  RtlPathTypeUnknown = 0,
  RtlPathTypeUncAbsolute = 1,
  RtlPathTypeDriveAbsolute = 2,
  RtlPathTypeDriveRelative = 3,
  RtlPathTypeRooted = 4,
  RtlPathTypeRelative = 5,
  RtlPathTypeLocalDevice = 6,
  RtlPathTypeRootLocalDevice = 7,
} RTL_PATH_TYPE, *PRTL_PATH_TYPE;

typedef struct _PROC_IDLE_STATE_BUCKET
{
  /* 0x0000 */ unsigned __int64 TotalTime;
  /* 0x0008 */ unsigned __int64 MinTime;
  /* 0x0010 */ unsigned __int64 MaxTime;
  /* 0x0018 */ unsigned long Count;
  /* 0x001c */ long __PADDING__[1];
} PROC_IDLE_STATE_BUCKET, *PPROC_IDLE_STATE_BUCKET; /* size: 0x0020 */

typedef struct _PROC_IDLE_STATE_ACCOUNTING
{
  /* 0x0000 */ unsigned __int64 TotalTime;
  /* 0x0008 */ unsigned long IdleTransitions;
  /* 0x000c */ unsigned long FailedTransitions;
  /* 0x0010 */ unsigned long InvalidBucketIndex;
  /* 0x0014 */ long Padding_117;
  /* 0x0018 */ unsigned __int64 MinTime;
  /* 0x0020 */ unsigned __int64 MaxTime;
  /* 0x0028 */ struct _PROC_IDLE_STATE_BUCKET IdleTimeBuckets[16];
} PROC_IDLE_STATE_ACCOUNTING, *PPROC_IDLE_STATE_ACCOUNTING; /* size: 0x0228 */

typedef struct _PROC_IDLE_ACCOUNTING
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ long Padding_118;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ unsigned __int64 BucketLimits[16];
  /* 0x0098 */ struct _PROC_IDLE_STATE_ACCOUNTING State[1];
} PROC_IDLE_ACCOUNTING, *PPROC_IDLE_ACCOUNTING; /* size: 0x02c0 */

typedef enum _SEP_TOKEN_AUDIT_POLICY_VALUE
{
  SepTokenAuditPolicyNotSet = 0,
  SepTokenAuditPolicySetAndNull = 1,
  SepTokenAuditPolicySetAndNonNull = 2,
} SEP_TOKEN_AUDIT_POLICY_VALUE, *PSEP_TOKEN_AUDIT_POLICY_VALUE;

typedef enum _RTL_RXACT_OPERATION
{
  RtlRXactOperationDelete = 1,
  RtlRXactOperationSetValue = 2,
  RtlRXactOperationDelAttribute = 3,
  RtlRXactOperationSetAttribute = 4,
} RTL_RXACT_OPERATION, *PRTL_RXACT_OPERATION;

enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE
{
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2,
};

enum ACCESS_MASK_FIELD_TO_UPDATE
{
  AuthzBaseUpdateRemaining = 0,
  AuthzBaseUpdateCurrentGranted = 1,
  AuthzBaseUpdateCurrentDenied = 2,
};

typedef enum _DISK_SAN_POLICY
{
  DiskSanPolicyUnknown = 0,
  DiskSanPolicyOnline = 1,
  DiskSanPolicyOfflineShared = 2,
  DiskSanPolicyOffline = 3,
  DiskSanPolicyMax = 4,
} DISK_SAN_POLICY, *PDISK_SAN_POLICY;

typedef enum _DETECTION_TYPE
{
  DetectNone = 0,
  DetectInt13 = 1,
  DetectExInt13 = 2,
} DETECTION_TYPE, *PDETECTION_TYPE;

typedef struct _HEAP_EVENT_RANGE_CREATE
{
  /* 0x0000 */ void* HeapHandle;
  /* 0x0008 */ unsigned __int64 FirstRangeSize;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} HEAP_EVENT_RANGE_CREATE, *PHEAP_EVENT_RANGE_CREATE; /* size: 0x0018 */

typedef struct _HEAP_RANGE_CREATE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ struct _HEAP_EVENT_RANGE_CREATE Event;
} HEAP_RANGE_CREATE, *PHEAP_RANGE_CREATE; /* size: 0x0038 */

typedef enum _STORAGE_ID_NAA_FORMAT
{
  StorageIdNAAFormatIEEEExtended = 2,
  StorageIdNAAFormatIEEERegistered = 3,
  StorageIdNAAFormatIEEEERegisteredExtended = 5,
} STORAGE_ID_NAA_FORMAT, *PSTORAGE_ID_NAA_FORMAT;

typedef enum _MEDIA_TYPE
{
  Unknown = 0,
  F5_1Pt2_512 = 1,
  F3_1Pt44_512 = 2,
  F3_2Pt88_512 = 3,
  F3_20Pt8_512 = 4,
  F3_720_512 = 5,
  F5_360_512 = 6,
  F5_320_512 = 7,
  F5_320_1024 = 8,
  F5_180_512 = 9,
  F5_160_512 = 10,
  RemovableMedia = 11,
  FixedMedia = 12,
  F3_120M_512 = 13,
  F3_640_512 = 14,
  F5_640_512 = 15,
  F5_720_512 = 16,
  F3_1Pt2_512 = 17,
  F3_1Pt23_1024 = 18,
  F5_1Pt23_1024 = 19,
  F3_128Mb_512 = 20,
  F3_230Mb_512 = 21,
  F8_256_128 = 22,
  F3_200Mb_512 = 23,
  F3_240M_512 = 24,
  F3_32M_512 = 25,
} MEDIA_TYPE, *PMEDIA_TYPE;

typedef enum _WRITE_CACHE_ENABLE
{
  WriteCacheEnableUnknown = 0,
  WriteCacheDisabled = 1,
  WriteCacheEnabled = 2,
} WRITE_CACHE_ENABLE, *PWRITE_CACHE_ENABLE;

typedef enum _BIN_TYPES
{
  RequestSize = 0,
  RequestLocation = 1,
} BIN_TYPES, *PBIN_TYPES;

typedef struct _HEAP_RANGE_DESTROY
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
} HEAP_RANGE_DESTROY, *PHEAP_RANGE_DESTROY; /* size: 0x0028 */

typedef enum _DISK_CACHE_STATE
{
  DiskCacheNormal = 0,
  DiskCacheWriteThroughNotSupported = 1,
  DiskCacheModifyUnsuccessful = 2,
} DISK_CACHE_STATE, *PDISK_CACHE_STATE;

typedef enum _MOUNTMGR_AUTO_MOUNT_STATE
{
  Disabled = 0,
  Enabled = 1,
} MOUNTMGR_AUTO_MOUNT_STATE, *PMOUNTMGR_AUTO_MOUNT_STATE;

typedef struct _KEY_VALUE_PARTIAL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION; /* size: 0x0010 */

typedef enum _ST_ETW_TERMINATION_REASON
{
  StTrCorruption = 0,
  StTrIoFailure = 1,
  StTrMax = 2,
} ST_ETW_TERMINATION_REASON, *PST_ETW_TERMINATION_REASON;

typedef enum _WRITE_THROUGH
{
  WriteThroughUnknown = 0,
  WriteThroughNotSupported = 1,
  WriteThroughSupported = 2,
} WRITE_THROUGH, *PWRITE_THROUGH;

typedef enum _STORAGE_QUERY_TYPE
{
  PropertyStandardQuery = 0,
  PropertyExistsQuery = 1,
  PropertyMaskQuery = 2,
  PropertyQueryMaxDefined = 3,
} STORAGE_QUERY_TYPE, *PSTORAGE_QUERY_TYPE;

typedef struct _X86_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Pad;
  /* 0x0002 */ unsigned short Limit;
  /* 0x0004 */ unsigned long Base;
} X86_DESCRIPTOR, *PX86_DESCRIPTOR; /* size: 0x0008 */

typedef enum _ST_IO_TYPE
{
  StIoTypeRandRead = 0,
  StIoTypeRandWrite = 1,
  StIoTypeMax = 2,
} ST_IO_TYPE, *PST_IO_TYPE;

typedef enum _STORAGE_ASSOCIATION_TYPE
{
  StorageIdAssocDevice = 0,
  StorageIdAssocPort = 1,
  StorageIdAssocTarget = 2,
} STORAGE_ASSOCIATION_TYPE, *PSTORAGE_ASSOCIATION_TYPE;

typedef union _WHEA_REVISION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char MinorRevision;
      /* 0x0001 */ unsigned char MajorRevision;
    }; /* size: 0x0002 */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} WHEA_REVISION, *PWHEA_REVISION; /* size: 0x0002 */

typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char FRUId : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned char FRUText : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0000 */ unsigned char AsUCHAR;
  }; /* size: 0x0001 */
} WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS; /* size: 0x0001 */

typedef struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR
{
  /* 0x0000 */ unsigned long SectionOffset;
  /* 0x0004 */ unsigned long SectionLength;
  /* 0x0008 */ union _WHEA_REVISION Revision;
  /* 0x000a */ union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS ValidBits;
  /* 0x000b */ unsigned char Reserved;
  /* 0x000c */ union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS Flags;
  /* 0x0010 */ struct _GUID SectionType;
  /* 0x0020 */ struct _GUID FRUId;
  /* 0x0030 */ enum _WHEA_ERROR_SEVERITY SectionSeverity;
  /* 0x0034 */ char FRUText[20];
} WHEA_ERROR_RECORD_SECTION_DESCRIPTOR, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR; /* size: 0x0048 */

typedef enum _WRITE_CACHE_CHANGE
{
  WriteCacheChangeUnknown = 0,
  WriteCacheNotChangeable = 1,
  WriteCacheChangeable = 2,
} WRITE_CACHE_CHANGE, *PWRITE_CACHE_CHANGE;

typedef enum _SM_LOG_ENTRY_TYPE
{
  SmLogAdd = 0,
  SmLogRemove = 1,
  SmLogFull = 2,
  SmLogStoreUpdate = 3,
  SmLogEntryTypeMax = 4,
} SM_LOG_ENTRY_TYPE, *PSM_LOG_ENTRY_TYPE;

typedef enum _FSRTL_COMPARISON_RESULT
{
  LessThan = -1,
  EqualTo = 0,
  GreaterThan = 1,
} FSRTL_COMPARISON_RESULT, *PFSRTL_COMPARISON_RESULT;

typedef enum _COMPLETION_PACKET_TYPE
{
  IopCompletionPacketIrp = 0,
  IopCompletionPacketMini = 1,
  IopCompletionPacketQuota = 2,
  IopCompletionPacketUser = 3,
} COMPLETION_PACKET_TYPE, *PCOMPLETION_PACKET_TYPE;

typedef enum _FSRTL_CHANGE_BACKING_TYPE
{
  ChangeDataControlArea = 0,
  ChangeImageControlArea = 1,
  ChangeSharedCacheMap = 2,
} FSRTL_CHANGE_BACKING_TYPE, *PFSRTL_CHANGE_BACKING_TYPE;

typedef struct _KCRM_MARSHAL_HEADER
{
  /* 0x0000 */ unsigned long VersionMajor;
  /* 0x0004 */ unsigned long VersionMinor;
  /* 0x0008 */ unsigned long NumProtocols;
  /* 0x000c */ unsigned long Unused;
} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER; /* size: 0x0010 */

typedef enum _ST_ETW_EVENT
{
  StEtwEventAdd = 0,
  StEtwEventRemove = 1,
  StEtwEventRundown = 2,
  StEtwEventRegionEvict = 3,
  StEtwEventRegionWrite = 4,
  StEtwEventRegionRelease = 5,
  StEtwEventRegionCompactStart = 6,
  StEtwEventRegionCompactEnd = 7,
  StEtwEventStoreCorruption = 8,
  StEtwEventStoreEmpty = 9,
  StEtwEventRegionRundown = 10,
  StEtwEventMax = 11,
} ST_ETW_EVENT, *PST_ETW_EVENT;

typedef enum _FAST_IO_POSSIBLE
{
  FastIoIsNotPossible = 0,
  FastIoIsPossible = 1,
  FastIoIsQuestionable = 2,
} FAST_IO_POSSIBLE, *PFAST_IO_POSSIBLE;

typedef enum _TRANSFER_TYPE
{
  ReadTransfer = 0,
  WriteTransfer = 1,
  OtherTransfer = 2,
} TRANSFER_TYPE, *PTRANSFER_TYPE;

enum NETWORK_OPEN_INTEGRITY_QUALIFIER
{
  NetworkOpenIntegrityAny = 0,
  NetworkOpenIntegrityNone = 1,
  NetworkOpenIntegritySigned = 2,
  NetworkOpenIntegrityEncrypted = 3,
  NetworkOpenIntegrityMaximum = 4,
};

typedef struct _PS_PER_CPU_QUOTA_CACHE_AWARE
{
  /* 0x0000 */ struct _LIST_ENTRY SortedListEntry;
  /* 0x0010 */ struct _LIST_ENTRY IdleOnlyListHead;
  /* 0x0020 */ unsigned __int64 CycleBaseAllowance;
  /* 0x0028 */ __int64 CyclesRemaining;
  /* 0x0030 */ unsigned long CurrentGeneration;
  /* 0x0034 */ long __PADDING__[3];
} PS_PER_CPU_QUOTA_CACHE_AWARE, *PPS_PER_CPU_QUOTA_CACHE_AWARE; /* size: 0x0040 */

enum ROT_BAR_TYPE
{
  RB_UNSPECIFIED = 0,
  RB_SQUARE_CELLS = 1,
};

typedef enum _BCB_PIN_COUNT_SOURCE
{
  PinCountSource_CcAllocateInitializeBcb = 1,
  PinCountSource_CcPinFileData_Case3 = 2,
  PinCountSource_CcPinFileData_Case4 = 3,
  PinCountSource_CcPinFileData_Case5 = 4,
  PinCountSource_CcPinFileData_Case6 = 5,
  PinCountSource_CcAcquireByteRangeForWrite = 6,
  PinCountSource_CcRepinBcb = 7,
  PinCountSource_CcGetDirtyPages_Inc = 8,
  PinCountSource_CcUnpinFileData = 9,
  PinCountSource_CcGetDirtyPages_Dec = 10,
} BCB_PIN_COUNT_SOURCE, *PBCB_PIN_COUNT_SOURCE;

typedef enum _CC_MAPPING_PRIORITY
{
  LowMappingPriority = 0,
  HighMappingPriority = 1,
} CC_MAPPING_PRIORITY, *PCC_MAPPING_PRIORITY;

typedef enum _RTLP_WALK_STACK_TYPE
{
  RtlpWalkStackKernel = 0,
  RtlpWalkStackUser = 1,
  RtlpWalkStackKernelCallback = 2,
} RTLP_WALK_STACK_TYPE, *PRTLP_WALK_STACK_TYPE;

enum UNMAP_ACTIONS
{
  UNPIN = 0,
  UNREF = 1,
  SET_CLEAN = 2,
};

typedef enum _FT_STATE
{
  FtStateOk = 0,
  FtHasOrphan = 1,
  FtDisabled = 2,
  FtRegenerating = 3,
  FtInitializing = 4,
  FtCheckParity = 5,
  FtNoCheckData = 6,
} FT_STATE, *PFT_STATE;

typedef enum _MI_SUBSECTION_STATUS
{
  MiSubsectionClean = 0,
  MiSubsectionDirty = 1,
  MiSubsectionUnknown = 2,
} MI_SUBSECTION_STATUS, *PMI_SUBSECTION_STATUS;

typedef enum _BLOB_ID
{
  BLOB_TYPE_UNKNOWN = 0,
  BLOB_TYPE_CONNECTION_INFO = 1,
  BLOB_TYPE_MESSAGE = 2,
  BLOB_TYPE_SECURITY_CONTEXT = 3,
  BLOB_TYPE_SECTION = 4,
  BLOB_TYPE_REGION = 5,
  BLOB_TYPE_VIEW = 6,
  BLOB_TYPE_RESERVE = 7,
  BLOB_TYPE_DIRECT_TRANSFER = 8,
  BLOB_TYPE_HANDLE_DATA = 9,
  BLOB_TYPE_MAX_ID = 10,
} BLOB_ID, *PBLOB_ID;

typedef enum _TAG_UNNAMED_5
{
  DBGKD_SIMULATION_NONE = 0,
  DBGKD_SIMULATION_EXDI = 1,
} TAG_UNNAMED_5, *PTAG_UNNAMED_5;

typedef enum _PSP_ENVIRONMENT_BLOCK_PARSE_STATE
{
  PspEnvBlockStart = 0,
  PspEnvBlockAfterNull = 1,
  PspEnvBlockOneEquals = 2,
  PspEnvBlockAfterEquals = 3,
  PspEnvBlockInVar = 4,
  PspEnvBlockInVal = 5,
  PspEnvBlockEnd = 6,
  PspEnvBlockTotalStates = 7,
} PSP_ENVIRONMENT_BLOCK_PARSE_STATE, *PPSP_ENVIRONMENT_BLOCK_PARSE_STATE;

typedef enum _WMI_HEADER_TYPE
{
  WMIHT_NONE = 0,
  WMIHT_UNKNOWN = 1,
  WMIHT_SYSTEM32 = 2,
  WMIHT_SYSTEM64 = 3,
  WMIHT_EVENT_TRACE32 = 4,
  WMIHT_EVENT_INSTANCE32 = 5,
  WMIHT_TIMED = 6,
  WMIHT_ERROR = 7,
  WMIHT_WNODE = 8,
  WMIHT_MESSAGE = 9,
  WMIHT_PERFINFO32 = 10,
  WMIHT_PERFINFO64 = 11,
  WMIHT_EVENT32 = 12,
  WMIHT_EVENT64 = 13,
  WMIHT_EVENT_TRACE64 = 14,
  WMIHT_EVENT_INSTANCE64 = 15,
  WMIHT_MAX = 16,
} WMI_HEADER_TYPE, *PWMI_HEADER_TYPE;

typedef enum _ETW_GUID_TYPE
{
  EtwTraceGuidType = 0,
  EtwNotificationGuidType = 1,
  EtwGuidTypeMax = 2,
} ETW_GUID_TYPE, *PETW_GUID_TYPE;

typedef enum _HOTPATCH_HOOK_TYPE
{
  HOTP_Hook_None = 0,
  HOTP_Hook_VA32 = 1,
  HOTP_Hook_X86_JMP = 2,
  HOTP_Hook_PCREL32 = 3,
  HOTP_Hook_X86_JMP2B = 4,
  HOTP_Hook_VA64 = 16,
  HOTP_Hook_IA64_BRL = 32,
  HOTP_Hook_IA64_BR = 33,
  HOTP_Hook_AMD64_IND = 48,
  HOTP_Hook_AMD64_CNT = 49,
} HOTPATCH_HOOK_TYPE, *PHOTPATCH_HOOK_TYPE;

typedef enum _HEADLESS_CMD
{
  HeadlessCmdEnableTerminal = 1,
  HeadlessCmdCheckForReboot = 2,
  HeadlessCmdPutString = 3,
  HeadlessCmdClearDisplay = 4,
  HeadlessCmdClearToEndOfDisplay = 5,
  HeadlessCmdClearToEndOfLine = 6,
  HeadlessCmdDisplayAttributesOff = 7,
  HeadlessCmdDisplayInverseVideo = 8,
  HeadlessCmdSetColor = 9,
  HeadlessCmdPositionCursor = 10,
  HeadlessCmdTerminalPoll = 11,
  HeadlessCmdGetByte = 12,
  HeadlessCmdGetLine = 13,
  HeadlessCmdStartBugCheck = 14,
  HeadlessCmdDoBugCheckProcessing = 15,
  HeadlessCmdQueryInformation = 16,
  HeadlessCmdAddLogEntry = 17,
  HeadlessCmdDisplayLog = 18,
  HeadlessCmdSetBlueScreenData = 19,
  HeadlessCmdSendBlueScreenData = 20,
  HeadlessCmdQueryGUID = 21,
  HeadlessCmdPutData = 22,
} HEADLESS_CMD, *PHEADLESS_CMD;

typedef enum _HEADLESS_TERM_PORT_TYPE
{
  HeadlessUndefinedPortType = 0,
  HeadlessSerialPort = 1,
} HEADLESS_TERM_PORT_TYPE, *PHEADLESS_TERM_PORT_TYPE;

enum ETWTRACECONTROLCODE_PRIV
{
  EtwRealtimeConnectCode = 11,
  EtwRealtimeDisconnectCode = 14,
  EtwRegisterGuidsCode = 15,
  EtwReceiveNotification = 16,
  EtwSendDataBlock = 17,
  EtwSendReplyDataBlock = 18,
  EtwReceiveReplyDataBlock = 19,
  EtwEnumTraceGuidList = 21,
  EtwGetTraceGuidInfo = 22,
  EtwEnumerateTraceGuids = 23,
  EtwRegisterSecurityProv = 24,
};

typedef enum _TAG_UNNAMED_6
{
  PRIMARY_PARTITION_TABLE = 0,
  BACKUP_PARTITION_TABLE = 1,
} TAG_UNNAMED_6, *PTAG_UNNAMED_6;

enum CM_LOGREC_ACTION
{
  CmLogRecActionDummy = 0,
  CmLogRecActionCreateKey = 1,
  CmLogRecActionDeleteKey = 2,
  CmLogRecActionSetValueNew = 3,
  CmLogRecActionSetValueExisting = 4,
  CmLogRecActionDeleteValue = 5,
  CmLogRecActionSetKeyUserFlags = 6,
  CmLogRecActionSetLastWriteTime = 7,
  CmLogRecActionSetSecurityDescriptor = 8,
  CmLogRecActionRenameKey = 9,
};

typedef enum _CM_LOAD_FAILURE_TYPE
{
  _None = 0,
  _CmInitializeHive = 1,
  _HvInitializeHive = 2,
  _HvpBuildMap = 3,
  _HvpBuildMapAndCopy = 4,
  _HvpInitMap = 5,
  _HvLoadHive = 6,
  _HvpReadFileImageAndBuildMap = 7,
  _HvpRecoverData = 8,
  _HvpRecoverWholeHive = 9,
  _HvpMapFileImageAndBuildMap = 10,
  _CmpValidateHiveSecurityDescriptors = 11,
  _HvpEnlistBinInMap = 12,
  _CmCheckRegistry = 13,
  _CmRegistryIO = 14,
  _CmCheckRegistry2 = 15,
  _CmpCheckKey = 16,
  _CmpCheckValueList = 17,
  _HvCheckHive = 18,
  _HvCheckBin = 19,
} CM_LOAD_FAILURE_TYPE, *PCM_LOAD_FAILURE_TYPE;

typedef enum _CLFS_MGMT_POLICY_TYPE
{
  ClfsMgmtPolicyMaximumSize = 0,
  ClfsMgmtPolicyMinimumSize = 1,
  ClfsMgmtPolicyNewContainerSize = 2,
  ClfsMgmtPolicyGrowthRate = 3,
  ClfsMgmtPolicyLogTail = 4,
  ClfsMgmtPolicyAutoShrink = 5,
  ClfsMgmtPolicyAutoGrow = 6,
  ClfsMgmtPolicyNewContainerPrefix = 7,
  ClfsMgmtPolicyNewContainerSuffix = 8,
  ClfsMgmtPolicyNewContainerExtension = 9,
  ClfsMgmtPolicyInvalid = 10,
} CLFS_MGMT_POLICY_TYPE, *PCLFS_MGMT_POLICY_TYPE;

enum UoWActionType
{
  UoWAddThisKey = 0,
  UoWAddChildKey = 1,
  UoWDeleteThisKey = 2,
  UoWDeleteChildKey = 3,
  UoWSetValueNew = 4,
  UoWSetValueExisting = 5,
  UoWDeleteValue = 6,
  UoWSetKeyUserFlags = 7,
  UoWSetLastWriteTime = 8,
  UoWSetSecurityDescriptor = 9,
  UoWRenameSubKey = 10,
  UoWRenameOldSubKey = 11,
  UoWRenameNewSubKey = 12,
  UoWIsolation = 13,
  UoWInvalid = 14,
};

typedef struct _MMADDRESS_NODE
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMADDRESS_NODE* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMADDRESS_NODE* LeftChild;
  /* 0x0010 */ struct _MMADDRESS_NODE* RightChild;
  /* 0x0018 */ unsigned __int64 StartingVpn;
  /* 0x0020 */ unsigned __int64 EndingVpn;
} MMADDRESS_NODE, *PMMADDRESS_NODE; /* size: 0x0028 */

typedef struct _MM_AVL_TABLE
{
  /* 0x0000 */ struct _MMADDRESS_NODE BalancedRoot;
  struct /* bitfield */
  {
    /* 0x0028 */ unsigned __int64 DepthOfTree : 5; /* bit position: 0 */
    /* 0x0028 */ unsigned __int64 Unused : 3; /* bit position: 5 */
    /* 0x0028 */ unsigned __int64 NumberGenericTableElements : 56; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0030 */ void* NodeHint;
  /* 0x0038 */ void* NodeFreeHint;
} MM_AVL_TABLE, *PMM_AVL_TABLE; /* size: 0x0040 */

typedef enum _COMPARISON
{
  IsLessThan = 0,
  IsPrefix = 1,
  IsEqual = 2,
  IsGreaterThan = 3,
} COMPARISON, *PCOMPARISON;

typedef enum _HV_FILE_STATUS
{
  Shrunk = 0,
  Grown = 1,
  Unchanged = 2,
} HV_FILE_STATUS, *PHV_FILE_STATUS;

typedef enum _CM_LOCK_TYPE
{
  DoNotLock = 0,
  LockExclusive = 1,
  LockShared = 2,
} CM_LOCK_TYPE, *PCM_LOCK_TYPE;

enum WPP_DEFINE_BIT_NAMES
{
  WPP_BLOCK_START_NtfsLog = 0,
  WPP_BIT_NTFSRESERVE1 = 1,
  WPP_BIT_NTFSRESERVE2 = 2,
  WPP_BIT_NTFSRESERVE3 = 3,
  WPP_BIT_NTFSRESERVE4 = 4,
  WPP_BIT_NTFSRESERVE5 = 5,
  WPP_BIT_NTFSRESERVE6 = 6,
  WPP_BIT_NTFSRESERVE7 = 7,
  WPP_BIT_NTFSRESERVE8 = 8,
  WPP_BIT_NTFSRESERVE9 = 9,
  WPP_BIT_NTFSRESERVEA = 10,
  WPP_BIT_NTFSRESERVEB = 11,
  WPP_BIT_NTFSRESERVEC = 12,
  WPP_BIT_NTFSRESERVED = 13,
  WPP_BIT_NTFSRESERVEE = 14,
  WPP_BIT_NTFSRESERVEF = 15,
  WPP_BIT_NTFSRESERVEG = 16,
  WPP_BIT_NTFSRESERVEH = 17,
  WPP_BIT_NTFSRESERVEI = 18,
  WPP_BIT_NTFSRESERVEJ = 19,
  WPP_BIT_NTFSRESERVEK = 20,
  WPP_BIT_NTFSRESERVEL = 21,
  WPP_BIT_NTFSRESERVEM = 22,
  WPP_BIT_NTFSRESERVEN = 23,
  WPP_BIT_NTFSRESERVEO = 24,
  WPP_BIT_NTFSRESERVEP = 25,
  WPP_BIT_NTFSRESERVEQ = 26,
  WPP_BIT_CLFSBIT1 = 27,
  WPP_BIT_CLFSBIT2 = 28,
  WPP_BIT_KTMRESERVED1 = 29,
  WPP_BIT_KTMCHECKPT = 30,
  WPP_BIT_KTMOUTCOME = 31,
  WPP_BIT_KTMERROR = 32,
  WPP_BLOCK_END_NtfsLog = 33,
};

enum SWITCH_CONTEXT_TYPE
{
  STATIC_PROCESS_CONTEXT = 0,
  DYNAMIC_PROCESS_CONTEXT = 1,
  MAX_CONTEXT_TYPE = 2,
};

enum SWITCH_CONTEXT_DLL_TRIGGER_CONDITION
{
  DLL_MAPPED = 0,
  DLL_UNMAPPED = 1,
};

typedef enum _NODE_TYPE
{
  KeyBodyNode = 0,
  KeyValueNode = 1,
} NODE_TYPE, *PNODE_TYPE;

typedef enum _ATTACH_VIRTUAL_DISK_FLAG
{
  ATTACH_VIRTUAL_DISK_FLAG_NONE = 0,
  ATTACH_VIRTUAL_DISK_FLAG_READ_ONLY = 1,
  ATTACH_VIRTUAL_DISK_FLAG_NO_DRIVE_LETTER = 2,
  ATTACH_VIRTUAL_DISK_FLAG_PERMANENT_LIFETIME = 4,
  ATTACH_VIRTUAL_DISK_FLAG_NO_LOCAL_HOST = 8,
} ATTACH_VIRTUAL_DISK_FLAG, *PATTACH_VIRTUAL_DISK_FLAG;

enum HSTORAGE_TYPE
{
  Stable = 0,
  Volatile = 1,
  InvalidStorage = 2,
};

typedef enum _ST_WORK_TYPE
{
  StWorkTypePageAdd = 0,
  StWorkTypePageEvict = 1,
  StWorkTypePageRead = 2,
  StWorkTypeStats = 3,
  StWorkTypeStateChange = 4,
  StWorkTypeMaintenance = 5,
  StWorkTypeLazyWork = 6,
  StWorkTypeDeviceIo = 7,
  StWorkTypeMax = 8,
} ST_WORK_TYPE, *PST_WORK_TYPE;

enum TM_LOGREC_TYPE
{
  TmpLogRecTypeUnused1 = 1,
  TmpLogRecTypePrepare = 2,
  TmpLogRecTypeCommit = 3,
  TmpLogRecTypeForget = 4,
  TmpLogRecTypeUnused2 = 5,
  TmpLogRecTypeUnused3 = 6,
  TmpLogRecTypeDummy = 7,
};

enum IRPLOCK
{
  IRPLOCK_CANCELABLE = 0,
  IRPLOCK_CANCEL_STARTED = 1,
  IRPLOCK_CANCEL_COMPLETE = 2,
  IRPLOCK_COMPLETED = 3,
};

typedef enum _ST_QUERY_REASON
{
  StIoQueryCheck = 0,
  StIoQueryQueue = 1,
  StIoQueryRemove = 2,
  StIoQueryIssue = 3,
  StIoQueryRefresh = 4,
  StIoQueryMax = 5,
} ST_QUERY_REASON, *PST_QUERY_REASON;

enum PROFILE_NOTIFICATION_TIME
{
  PROFILE_IN_PNPEVENT = 0,
  PROFILE_NOT_IN_PNPEVENT = 1,
  PROFILE_PERHAPS_IN_PNPEVENT = 2,
};

enum ARBITER_WHICHSTATE
{
  ArbiterCurrentState = 0,
  ArbiterPossibleState = 1,
};

typedef struct _PROCESS_FOREGROUND_BACKGROUND
{
  /* 0x0000 */ unsigned char Foreground;
} PROCESS_FOREGROUND_BACKGROUND, *PPROCESS_FOREGROUND_BACKGROUND; /* size: 0x0001 */

typedef enum _SM_STORE_TYPE
{
  StoreTypeInMemory = 0,
  StoreTypeFile = 1,
  StoreTypeMax = 2,
} SM_STORE_TYPE, *PSM_STORE_TYPE;

enum PPVREMOVAL_OPTION
{
  PPVREMOVAL_SHOULD_DELETE = 0,
  PPVREMOVAL_SHOULDNT_DELETE = 1,
  PPVREMOVAL_MAY_DEFER_DELETION = 2,
};

enum SQM_TYPE
{
  SQM_TYPE_NONE = 0,
  SQM_TYPE_DWORD = 1,
  SQM_TYPE_STRING = 2,
};

typedef enum _PFFB_BUFFER_TYPE
{
  PfFbBufferTypeInvalid = -827260928,
  PfFbBufferTypeSectInfo = -827260927,
  PfFbBufferTypeEvent = -827260926,
  PfFbBufferTypeMax = -827260925,
} PFFB_BUFFER_TYPE, *PPFFB_BUFFER_TYPE;

enum PPVFAILURE_TYPE
{
  PPVERROR_DUPLICATE_PDO_ENUMERATED = 0,
  PPVERROR_MISHANDLED_TARGET_DEVICE_RELATIONS = 1,
  PPVERROR_DDI_REQUIRES_PDO = 2,
};

typedef struct _PERFINFO_PO_SESSION_CALLOUT_RET
{
  /* 0x0000 */ long Status;
} PERFINFO_PO_SESSION_CALLOUT_RET, *PPERFINFO_PO_SESSION_CALLOUT_RET; /* size: 0x0004 */

typedef enum _PNP_DEVICE_DELETE_TYPE
{
  QueryRemoveDevice = 0,
  CancelRemoveDevice = 1,
  RemoveDevice = 2,
  SurpriseRemoveDevice = 3,
  EjectDevice = 4,
  RemoveFailedDevice = 5,
  RemoveUnstartedFailedDevice = 6,
  MaxDeviceDeleteType = 7,
} PNP_DEVICE_DELETE_TYPE, *PPNP_DEVICE_DELETE_TYPE;

typedef struct _POLICY_AUDIT_SUBCATEGORIES_INFO
{
  /* 0x0000 */ unsigned long MaximumSubCategoryCount;
  /* 0x0004 */ long Padding_119;
  /* 0x0008 */ unsigned long* EventAuditingOptions;
} POLICY_AUDIT_SUBCATEGORIES_INFO, *PPOLICY_AUDIT_SUBCATEGORIES_INFO; /* size: 0x0010 */

typedef enum _PFFI_FILEINFO_INFO_TYPE
{
  PfFiFileInfoVolumeCreate = 0,
  PfFiFileInfoVolumeDelete = 1,
  PfFiFileInfoStreamCreate = 2,
  PfFiFileInfoStreamDelete = 3,
  PfFiFileAccess = 4,
  PfFiFileInfoVolumeEnumerate = 5,
  PfFiFileInfoStreamEnumerate = 6,
  PfFiFileInfoSequenceNumberGet = 7,
  PfFiFileInfoStreamTruncate = 8,
  PfFiFileInfoFileCreate = 9,
  PfFiFileInfoRegister = 10,
  PfFiFileInfoUnregister = 11,
  PfFiFileInfoIsStartingAsBootDriver = 12,
  PfFiFileDefrag = 13,
} PFFI_FILEINFO_INFO_TYPE, *PPFFI_FILEINFO_INFO_TYPE;

typedef enum _PNP_DEVICE_ACTION_REQUEST
{
  AssignResources = 0,
  ClearDeviceProblem = 1,
  ClearProblem = 2,
  ClearEjectProblem = 3,
  HaltDevice = 4,
  QueryPowerRelations = 5,
  Rebalance = 6,
  ReenumerateBootDevices = 7,
  ReenumerateDeviceOnly = 8,
  ReenumerateDeviceTree = 9,
  ReenumerateRootDevices = 10,
  RequeryDeviceState = 11,
  ResetDevice = 12,
  ResourceRequirementsChanged = 13,
  RestartEnumeration = 14,
  SetDeviceProblem = 15,
  StartDevice = 16,
  StartSystemDevicesPass0 = 17,
  StartSystemDevicesPass1 = 18,
} PNP_DEVICE_ACTION_REQUEST, *PPNP_DEVICE_ACTION_REQUEST;

typedef struct _SECURITY_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char __PADDING__[2];
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE; /* size: 0x000c */

typedef struct _ALPC_PORT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x0010 */ unsigned __int64 MaxMessageLength;
  /* 0x0018 */ unsigned __int64 MemoryBandwidth;
  /* 0x0020 */ unsigned __int64 MaxPoolUsage;
  /* 0x0028 */ unsigned __int64 MaxSectionSize;
  /* 0x0030 */ unsigned __int64 MaxViewSize;
  /* 0x0038 */ unsigned __int64 MaxTotalSectionSize;
  /* 0x0040 */ unsigned long DupObjectTypes;
  /* 0x0044 */ unsigned long Reserved;
} ALPC_PORT_ATTRIBUTES, *PALPC_PORT_ATTRIBUTES; /* size: 0x0048 */

typedef enum _INBV_DISPLAY_STATE
{
  INBV_DISPLAY_STATE_OWNED = 0,
  INBV_DISPLAY_STATE_DISABLED = 1,
  INBV_DISPLAY_STATE_LOST = 2,
} INBV_DISPLAY_STATE, *PINBV_DISPLAY_STATE;

typedef enum _PFSN_TRACING_STATE
{
  PfSnTracingStateNotPickedUp = 0,
  PfSnTracingStatePickupTimedOut = 1,
  PfSnTracingStatePickedUp = 2,
  PfSnTracingStateMax = 3,
} PFSN_TRACING_STATE, *PPFSN_TRACING_STATE;

enum PNP_LOCK_LEVEL
{
  PPL_SIMPLE_READ = 0,
  PPL_TREEOP_ALLOW_READS = 1,
  PPL_TREEOP_ALLOW_READS_NO_WAIT = 2,
  PPL_TREEOP_BLOCK_READS = 3,
  PPL_TREEOP_BLOCK_READS_FROM_ALLOW = 4,
};

typedef struct _NT_TIB
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0008 */ void* StackBase;
  /* 0x0010 */ void* StackLimit;
  /* 0x0018 */ void* SubSystemTib;
  union
  {
    /* 0x0020 */ void* FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ void* ArbitraryUserPointer;
  /* 0x0030 */ struct _NT_TIB* Self;
} NT_TIB, *PNT_TIB; /* size: 0x0038 */

typedef struct _TEB
{
  /* 0x0000 */ struct _NT_TIB NtTib;
  /* 0x0038 */ void* EnvironmentPointer;
  /* 0x0040 */ struct _CLIENT_ID ClientId;
  /* 0x0050 */ void* ActiveRpcHandle;
  /* 0x0058 */ void* ThreadLocalStoragePointer;
  /* 0x0060 */ struct _PEB* ProcessEnvironmentBlock;
  /* 0x0068 */ unsigned long LastErrorValue;
  /* 0x006c */ unsigned long CountOfOwnedCriticalSections;
  /* 0x0070 */ void* CsrClientThread;
  /* 0x0078 */ void* Win32ThreadInfo;
  /* 0x0080 */ unsigned long User32Reserved[26];
  /* 0x00e8 */ unsigned long UserReserved[5];
  /* 0x00fc */ long Padding_120;
  /* 0x0100 */ void* WOW32Reserved;
  /* 0x0108 */ unsigned long CurrentLocale;
  /* 0x010c */ unsigned long FpSoftwareStatusRegister;
  /* 0x0110 */ void* SystemReserved1[54];
  /* 0x02c0 */ long ExceptionCode;
  /* 0x02c4 */ long Padding_121;
  /* 0x02c8 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x02d0 */ unsigned char SpareBytes[24];
  /* 0x02e8 */ unsigned long TxFsContext;
  /* 0x02ec */ long Padding_122;
  /* 0x02f0 */ struct _GDI_TEB_BATCH GdiTebBatch;
  /* 0x07d8 */ struct _CLIENT_ID RealClientId;
  /* 0x07e8 */ void* GdiCachedProcessHandle;
  /* 0x07f0 */ unsigned long GdiClientPID;
  /* 0x07f4 */ unsigned long GdiClientTID;
  /* 0x07f8 */ void* GdiThreadLocalInfo;
  /* 0x0800 */ unsigned __int64 Win32ClientInfo[62];
  /* 0x09f0 */ void* glDispatchTable[233];
  /* 0x1138 */ unsigned __int64 glReserved1[29];
  /* 0x1220 */ void* glReserved2;
  /* 0x1228 */ void* glSectionInfo;
  /* 0x1230 */ void* glSection;
  /* 0x1238 */ void* glTable;
  /* 0x1240 */ void* glCurrentRC;
  /* 0x1248 */ void* glContext;
  /* 0x1250 */ unsigned long LastStatusValue;
  /* 0x1254 */ long Padding_123;
  /* 0x1258 */ struct _UNICODE_STRING StaticUnicodeString;
  /* 0x1268 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x1472 */ char Padding_124[6];
  /* 0x1478 */ void* DeallocationStack;
  /* 0x1480 */ void* TlsSlots[64];
  /* 0x1680 */ struct _LIST_ENTRY TlsLinks;
  /* 0x1690 */ void* Vdm;
  /* 0x1698 */ void* ReservedForNtRpc;
  /* 0x16a0 */ void* DbgSsReserved[2];
  /* 0x16b0 */ unsigned long HardErrorMode;
  /* 0x16b4 */ long Padding_125;
  /* 0x16b8 */ void* Instrumentation[11];
  /* 0x1710 */ struct _GUID ActivityId;
  /* 0x1720 */ void* SubProcessTag;
  /* 0x1728 */ void* EtwLocalData;
  /* 0x1730 */ void* EtwTraceData;
  /* 0x1738 */ void* WinSockData;
  /* 0x1740 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x1744 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x1744 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x1744 */ unsigned char ReservedPad0;
      /* 0x1745 */ unsigned char ReservedPad1;
      /* 0x1746 */ unsigned char ReservedPad2;
      /* 0x1747 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x1748 */ unsigned long GuaranteedStackBytes;
  /* 0x174c */ long Padding_126;
  /* 0x1750 */ void* ReservedForPerf;
  /* 0x1758 */ void* ReservedForOle;
  /* 0x1760 */ unsigned long WaitingOnLoaderLock;
  /* 0x1764 */ long Padding_127;
  /* 0x1768 */ void* SavedPriorityState;
  /* 0x1770 */ unsigned __int64 SoftPatchPtr1;
  /* 0x1778 */ void* ThreadPoolData;
  /* 0x1780 */ void** TlsExpansionSlots;
  /* 0x1788 */ void* DeallocationBStore;
  /* 0x1790 */ void* BStoreLimit;
  /* 0x1798 */ unsigned long MuiGeneration;
  /* 0x179c */ unsigned long IsImpersonating;
  /* 0x17a0 */ void* NlsCache;
  /* 0x17a8 */ void* pShimData;
  /* 0x17b0 */ unsigned long HeapVirtualAffinity;
  /* 0x17b4 */ long Padding_128;
  /* 0x17b8 */ void* CurrentTransactionHandle;
  /* 0x17c0 */ struct _TEB_ACTIVE_FRAME* ActiveFrame;
  /* 0x17c8 */ void* FlsData;
  /* 0x17d0 */ void* PreferredLanguages;
  /* 0x17d8 */ void* UserPrefLanguages;
  /* 0x17e0 */ void* MergedPrefLanguages;
  /* 0x17e8 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x17ec */ volatile unsigned short CrossTebFlags;
    /* 0x17ec */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x17ee */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x17ee */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x17ee */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x17ee */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x17ee */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x17ee */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x17ee */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x17ee */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x17ee */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x17ee */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x17ee */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x17ee */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x17ee */ unsigned short SpareSameTebBits : 5; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x17f0 */ void* TxnScopeEnterCallback;
  /* 0x17f8 */ void* TxnScopeExitCallback;
  /* 0x1800 */ void* TxnScopeContext;
  /* 0x1808 */ unsigned long LockCount;
  /* 0x180c */ unsigned long SpareUlong0;
  /* 0x1810 */ void* ResourceRetValue;
} TEB, *PTEB; /* size: 0x1818 */

typedef enum _CONTEXT_OPERATION
{
  GetOperation = 0,
  SetOperation = 1,
  MaximumOperation = 2,
} CONTEXT_OPERATION, *PCONTEXT_OPERATION;

typedef struct _MUILANGINFO
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short LangId;
  /* 0x0006 */ short LangNameIndex;
  /* 0x0008 */ unsigned short FallbackTypes;
  /* 0x000a */ short NeutralLangSpec;
  /* 0x000c */ short FallbackSpecs[4];
  /* 0x0014 */ short AlternateCodePage[4];
} MUILANGINFO, *PMUILANGINFO; /* size: 0x001c */

typedef struct _HAL_NUMA_TOPOLOGY_INTERFACE
{
  /* 0x0000 */ unsigned short NumberOfNodes;
  /* 0x0002 */ char Padding_129[6];
  /* 0x0008 */ void* QueryProcessorNode /* function */;
  /* 0x0010 */ void* PageToNode /* function */;
  /* 0x0018 */ void* QueryProximityNode /* function */;
  /* 0x0020 */ void* AddRangeProximity /* function */;
  /* 0x0028 */ void* QueryProximityId /* function */;
  /* 0x0030 */ void* QueryNodeCapacity /* function */;
  /* 0x0038 */ void* QueryNodeDistance /* function */;
} HAL_NUMA_TOPOLOGY_INTERFACE, *PHAL_NUMA_TOPOLOGY_INTERFACE; /* size: 0x0040 */

typedef enum _PF_ROBUSTNESS_CONTROL_COMMAND
{
  PfRpControlUpdate = 0,
  PfRpControlReset = 1,
  PfRpControlRobustAllStart = 2,
  PfRpControlRobustAllStop = 3,
  PfRpControlCommandMax = 4,
} PF_ROBUSTNESS_CONTROL_COMMAND, *PPF_ROBUSTNESS_CONTROL_COMMAND;

typedef enum _MI_STORE_BIT_TYPE
{
  MiStoreBitTypeInStore = 0,
  MiStoreBitTypeEvicted = 1,
  MiStoreBitTypeMax = 2,
} MI_STORE_BIT_TYPE, *PMI_STORE_BIT_TYPE;

typedef enum _MI_PFN_CACHE_ATTRIBUTE
{
  MiNonCached = 0,
  MiCached = 1,
  MiWriteCombined = 2,
  MiNotMapped = 3,
} MI_PFN_CACHE_ATTRIBUTE, *PMI_PFN_CACHE_ATTRIBUTE;

typedef enum _MM_POOL_TYPES
{
  MmNonPagedPool = 0,
  MmPagedPool = 1,
  MmSessionPagedPool = 2,
  MmMaximumPoolType = 3,
} MM_POOL_TYPES, *PMM_POOL_TYPES;

typedef enum _MM_PREEMPTIVE_TRIMS
{
  MmPreemptForNonPaged = 0,
  MmPreemptForPaged = 1,
  MmPreemptForNonPagedPriority = 2,
  MmPreemptForPagedPriority = 3,
  MmMaximumPreempt = 4,
} MM_PREEMPTIVE_TRIMS, *PMM_PREEMPTIVE_TRIMS;

enum WDIP_SEM_INSTANCE_STATE
{
  WDI_SEM_INSTANCE_STATE_ACTIVE = 0,
  WDI_SEM_INSTANCE_STATE_TRANSITION = 1,
};

enum IOV_LOG_EVENT
{
  IOV_EVENT_NONE = 0,
  IOV_EVENT_IO_ALLOCATE_IRP = 1,
  IOV_EVENT_IO_CALL_DRIVER = 2,
  IOV_EVENT_IO_CALL_DRIVER_UNWIND = 3,
  IOV_EVENT_IO_COMPLETE_REQUEST = 4,
  IOV_EVENT_IO_COMPLETION_ROUTINE = 5,
  IOV_EVENT_IO_COMPLETION_ROUTINE_UNWIND = 6,
  IOV_EVENT_IO_CANCEL_IRP = 7,
  IOV_EVENT_IO_FREE_IRP = 8,
};

enum IRP_DATABASE_EVENT
{
  IRPDBEVENT_POINTER_COUNT_ZERO = 1,
  IRPDBEVENT_REFERENCE_COUNT_ZERO = 2,
};

typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Undefined : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned long DataLinkProtocolError : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long SurpriseDownError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Reserved2 : 6; /* bit position: 6 */
      /* 0x0000 */ unsigned long PoisonedTLP : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long FlowControlProtocolError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long CompletionTimeout : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned long CompleterAbort : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long UnexpectedCompletion : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long ReceiverOverflow : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long MalformedTLP : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long ECRCError : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long UnsupportedRequestError : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long Reserved3 : 11; /* bit position: 21 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY, *PPCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY; /* size: 0x0004 */

typedef enum _PATH_TYPE
{
  DOS_PATH = 0,
  NT_PATH = 1,
} PATH_TYPE, *PPATH_TYPE;

enum SQM_EVENT_TYPE
{
  SQM_EVENT_TYPE_INIT = 1,
  SQM_EVENT_TYPE_CLEANUP = 2,
  SQM_EVENT_TYPE_START_SESSION = 3,
  SQM_EVENT_TYPE_END_SESSION = 4,
  SQM_EVENT_TYPE_SET_DWORD = 5,
  SQM_EVENT_TYPE_INCREMENT_DWORD = 6,
  SQM_EVENT_TYPE_ADDTOAVERAGE_DWORD = 7,
  SSQM_EVENT_TYPE_SETIFMAX_DWORD = 8,
  SQM_EVENT_TYPE_SETIFMIN_DWORD = 9,
  SQM_EVENT_TYPE_SET_STRING = 10,
  SQM_EVENT_TYPE_ADD_STREAMROW = 11,
};

enum DISPLAYCONFIG_SCANLINE_ORDERING
{
  DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
  DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
  DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1,
};

typedef enum _VdmServiceClass
{
  VdmStartExecution = 0,
  VdmQueueInterrupt = 1,
  VdmDelayInterrupt = 2,
  VdmInitialize = 3,
  VdmFeatures = 4,
  VdmSetInt21Handler = 5,
  VdmQueryDir = 6,
  VdmPrinterDirectIoOpen = 7,
  VdmPrinterDirectIoClose = 8,
  VdmPrinterInitialize = 9,
  VdmSetLdtEntries = 10,
  VdmSetProcessLdtInfo = 11,
  VdmAdlibEmulation = 12,
  VdmPMCliControl = 13,
  VdmQueryVdmProcess = 14,
} VdmServiceClass, *PVdmServiceClass;

enum DEVOBJ_RELATION
{
  DEVOBJ_RELATION_IDENTICAL = 0,
  DEVOBJ_RELATION_FIRST_IMMEDIATELY_ABOVE_SECOND = 1,
  DEVOBJ_RELATION_FIRST_IMMEDIATELY_BELOW_SECOND = 2,
  DEVOBJ_RELATION_FIRST_ABOVE_SECOND = 3,
  DEVOBJ_RELATION_FIRST_BELOW_SECOND = 4,
  DEVOBJ_RELATION_NOT_IN_SAME_STACK = 5,
};

typedef enum _DUMPWRITER_DATA_CLASS
{
  ClassUnknown = 0,
  ClassContextRecord = 1,
  ClassPrcb = 2,
  ClassThread = 3,
  ClassProcess = 4,
  ClassStack = 5,
} DUMPWRITER_DATA_CLASS, *PDUMPWRITER_DATA_CLASS;

typedef enum _IRQ_DEVICE_POLICY
{
  IrqPolicyMachineDefault = 0,
  IrqPolicyAllCloseProcessors = 1,
  IrqPolicyOneCloseProcessor = 2,
  IrqPolicyAllProcessorsInMachine = 3,
  IrqPolicySpecifiedProcessors = 4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 5,
} IRQ_DEVICE_POLICY, *PIRQ_DEVICE_POLICY;

enum DATABASELOCKSTATE
{
  DATABASELOCKSTATE_HELD = 0,
  DATABASELOCKSTATE_NOT_HELD = 1,
};

typedef enum _APPHELPCACHESERVICECLASS
{
  ApphelpCacheServiceLookup = 0,
  ApphelpCacheServiceRemove = 1,
  ApphelpCacheServiceUpdate = 2,
  ApphelpCacheServiceFlush = 3,
  ApphelpCacheServiceDump = 4,
  ApphelpCacheServiceStartedService = 5,
  ApphelpCacheServiceStoppingService = 6,
  ApphelpCacheServiceForward = 7,
  ApphelpCacheServiceQuery = 8,
  ApphelpCacheServiceMax = 9,
} APPHELPCACHESERVICECLASS, *PAPPHELPCACHESERVICECLASS;

enum LANGSPECTYPE_Tag
{
  LANGSPECTYPE_NONE = 0,
  LANGSPECTYPE_LANGID = 1,
  LANGSPECTYPE_LANGINFO_INDEX = 2,
  LANGSPECTYPE_LANGNAME_INDEX = 3,
};

typedef enum _tokentype
{
  TOK_EOF = 0,
  TOK_EOL = 1,
  TOK_LBRACE = 2,
  TOK_RBRACE = 3,
  TOK_STRING = 4,
  TOK_EQUAL = 5,
  TOK_COMMA = 6,
  TOK_ERRPARSE = 7,
  TOK_ERRNOMEM = 8,
} tokentype, *Ptokentype;

enum STATE
{
  ST_NORMAL = 0,
  ST_PERCENT = 1,
  ST_FLAG = 2,
  ST_WIDTH = 3,
  ST_DOT = 4,
  ST_PRECIS = 5,
  ST_SIZE = 6,
  ST_TYPE = 7,
};

enum TRIPLE_LIST_UPDATE_TYPE
{
  TripleListQueuePending = 0,
  TripleListUpdateImmediate = 1,
};

typedef enum _ADD_DRIVER_STAGE
{
  LowerDeviceFilters = 0,
  LowerClassFilters = 1,
  DeviceService = 2,
  UpperDeviceFilters = 3,
  UpperClassFilters = 4,
  MaximumAddStage = 5,
} ADD_DRIVER_STAGE, *PADD_DRIVER_STAGE;

typedef enum _TAG_UNNAMED_7
{
  WPP_TRACE_OPTIONS = 43,
} TAG_UNNAMED_7, *PTAG_UNNAMED_7;

typedef enum _RTL_NORM_FORM
{
  NormOther = 0,
  NormC = 1,
  NormD = 2,
  NormKC = 5,
  NormKD = 6,
  NormIdna = 13,
  DisallowUnassigned = 256,
  NormCDisallowUnassigned = 257,
  NormDDisallowUnassigned = 258,
  NormKCDisallowUnassigned = 261,
  NormKDDisallowUnassigned = 262,
  NormIdnaDisallowUnassigned = 269,
} RTL_NORM_FORM, *PRTL_NORM_FORM;

enum BTS_PROCESSOR_FAMILY
{
  FamilyUnsupported = 0,
  Family6 = 6,
  FamilyF = 15,
};

typedef enum _PFP_SCENCTX_PREFETCH_STATE
{
  PfpPrefetchInactive = 0,
  PfpPrefetchActive = 1,
  PfpPrefetchDone = 2,
  PfpPrefetchStateMax = 3,
} PFP_SCENCTX_PREFETCH_STATE, *PPFP_SCENCTX_PREFETCH_STATE;

typedef enum _AEL_MSG_NUMBER
{
  AelCacheExe = 0,
  AelQueryState = 1,
  AelStopListening = 2,
  AelMaxMsgNumber = 3,
} AEL_MSG_NUMBER, *PAEL_MSG_NUMBER;

typedef enum _PFS_PRIVATE_PAGE_SOURCE_TYPE
{
  PfsPrivateSourceKernel = 0,
  PfsPrivateSourceSession = 1,
  PfsPrivateSourceProcess = 2,
  PfsPrivateSourceMax = 3,
} PFS_PRIVATE_PAGE_SOURCE_TYPE, *PPFS_PRIVATE_PAGE_SOURCE_TYPE;

enum tagTYSPEC
{
  TYSPEC_CLSID = 0,
  TYSPEC_FILEEXT = 1,
  TYSPEC_MIMETYPE = 2,
  TYSPEC_FILENAME = 3,
  TYSPEC_PROGID = 4,
  TYSPEC_PACKAGENAME = 5,
  TYSPEC_OBJECTID = 6,
};

typedef enum _PF_VOLUME_SUPPORT_RESULT
{
  PfVolumeSupported = 0,
  PfVolumeNotDisk = 1,
  PfVolumeRemote = 2,
  PfVolumeRemovable = 3,
  PfVolumeDismounted = 4,
  PfVolumeSupportMax = 5,
} PF_VOLUME_SUPPORT_RESULT, *PPF_VOLUME_SUPPORT_RESULT;

enum VF_POOL_DELAY_FREE_TYPE
{
  VfPoolDelayFreeAtDispatchLevel = 0,
  VfPoolDelayFreeBelowDispatchLevel = 1,
  VfPoolDelayFreeMaximum = 2,
};

typedef enum _PPM_CHECK_PHASE
{
  PpmCheckPhaseInitiate = 0,
  PpmCheckPhaseRecordUtility = 1,
  PpmCheckPhaseCalculateCoreParkingMask = 2,
  PpmCheckPhaseReportUnparkedCores = 3,
  PpmCheckPhaseSelectProcessorState = 4,
  PpmCheckPhaseSelectDomainState = 5,
  PpmCheckPhaseCommitDomainState = 6,
  PpmCheckPhaseReportParkedCores = 7,
  PpmCheckPhaseEnd = 8,
  PpmCheckPhaseNotRunning = 9,
} PPM_CHECK_PHASE, *PPPM_CHECK_PHASE;

typedef enum _ARC_CODES
{
  ESUCCESS = 0,
  E2BIG = 1,
  EACCES = 2,
  EAGAIN = 3,
  EBADF = 4,
  EBUSY = 5,
  EFAULT = 6,
  EINVAL = 7,
  EIO = 8,
  EISDIR = 9,
  EMFILE = 10,
  EMLINK = 11,
  ENAMETOOLONG = 12,
  ENODEV = 13,
  ENOENT = 14,
  ENOEXEC = 15,
  ENOMEM = 16,
  ENOSPC = 17,
  ENOTDIR = 18,
  ENOTTY = 19,
  ENXIO = 20,
  EROFS = 21,
  EWRONGARCH = 22,
  EMAXIMUM = 23,
} ARC_CODES, *PARC_CODES;

typedef struct _REG_SET_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned long* SecurityInformation;
  /* 0x0010 */ void* SecurityDescriptor;
  /* 0x0018 */ void* CallContext;
  /* 0x0020 */ void* ObjectContext;
  /* 0x0028 */ void* Reserved;
} REG_SET_KEY_SECURITY_INFORMATION, *PREG_SET_KEY_SECURITY_INFORMATION; /* size: 0x0030 */

enum WMIGUIDINDEXES
{
  PnPIdGuidIndex = 0,
  PnPIdInstanceNamesGuidIndex = 1,
  MSAcpiInfoGuidIndex = 2,
  SmbiosDataGuidIndex = 3,
  SysidUuidGuidIndex = 4,
  Sysid1394GuidIndex = 5,
  SmbiosEventGuidIndex = 6,
};

typedef enum _EX_WF_CREATE_CLASS
{
  WFCCBasic = 0,
  WFCCWorkerLoop = 1,
  MaxWFCreateClass = 2,
} EX_WF_CREATE_CLASS, *PEX_WF_CREATE_CLASS;

typedef struct _RTL_AVL_TABLE
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedRoot;
  /* 0x0020 */ void* OrderedPointer;
  /* 0x0028 */ unsigned long WhichOrderedElement;
  /* 0x002c */ unsigned long NumberGenericTableElements;
  /* 0x0030 */ unsigned long DepthOfTree;
  /* 0x0034 */ long Padding_130;
  /* 0x0038 */ struct _RTL_BALANCED_LINKS* RestartKey;
  /* 0x0040 */ unsigned long DeleteCount;
  /* 0x0044 */ long Padding_131;
  /* 0x0048 */ void* CompareRoutine /* function */;
  /* 0x0050 */ void* AllocateRoutine /* function */;
  /* 0x0058 */ void* FreeRoutine /* function */;
  /* 0x0060 */ void* TableContext;
} RTL_AVL_TABLE, *PRTL_AVL_TABLE; /* size: 0x0068 */

typedef struct _KTMOBJECT_NAMESPACE
{
  /* 0x0000 */ struct _RTL_AVL_TABLE Table;
  /* 0x0068 */ struct _KMUTANT Mutex;
  /* 0x00a0 */ unsigned short LinksOffset;
  /* 0x00a2 */ unsigned short GuidOffset;
  /* 0x00a4 */ unsigned char Expired;
  /* 0x00a5 */ char __PADDING__[3];
} KTMOBJECT_NAMESPACE, *PKTMOBJECT_NAMESPACE; /* size: 0x00a8 */

typedef enum _TAG_UNNAMED_8
{
  DoNothing = 0,
  ReinsertContext = 1,
  FreeContext = 2,
} TAG_UNNAMED_8, *PTAG_UNNAMED_8;

typedef enum _SMKM_FRONTEND_STORE_STATE
{
  SmFeStoreStateNotPresent = 0,
  SmFeStoreStateBeingAdded = 1,
  SmFeStoreStateBeingEvicted = 2,
  SmFeStoreStatePresent = 3,
  SmFeStoreStateMax = 4,
} SMKM_FRONTEND_STORE_STATE, *PSMKM_FRONTEND_STORE_STATE;

typedef struct _MEMORY_WORKING_SET_BLOCK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 Node : 3; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 VirtualPage : 52; /* bit position: 12 */
  }; /* bitfield */
} MEMORY_WORKING_SET_BLOCK, *PMEMORY_WORKING_SET_BLOCK; /* size: 0x0008 */

typedef struct _MEMORY_WORKING_SET_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfEntries;
  /* 0x0008 */ struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
} MEMORY_WORKING_SET_INFORMATION, *PMEMORY_WORKING_SET_INFORMATION; /* size: 0x0010 */

typedef enum _SM_STORE_MANAGER_TYPE
{
  SmStoreManagerTypePhysical = 0,
  SmStoreManagerTypeVirtual = 1,
  SmStoreManagerTypeMax = 2,
} SM_STORE_MANAGER_TYPE, *PSM_STORE_MANAGER_TYPE;

typedef union _HV_X64_MSR_APIC_ASSIST_CONTENTS
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Enable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Reserved : 11; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 GpaPageNumber : 52; /* bit position: 12 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} HV_X64_MSR_APIC_ASSIST_CONTENTS, *PHV_X64_MSR_APIC_ASSIST_CONTENTS; /* size: 0x0008 */

typedef enum _ST_STATS_LEVEL
{
  StStatsLevelBasic = 0,
  StStatsLevelIoStats = 1,
  StStatsLevelRegionSpace = 2,
  StStatsLevelSpaceBitmap = 3,
  StStatsLevelMax = 4,
} ST_STATS_LEVEL, *PST_STATS_LEVEL;

typedef enum _SMKM_CALLBACK_TYPE
{
  SmKmCallbackStoreCleanup = 1,
  SmKmCallbackStoreDelete = 2,
  SmKmCallbackFileBackedStoreUpdate = 3,
  SmKmCallbackNoMoreStores = 4,
  SmKmCallbackPreStoreRead = 5,
  SmKmCallbackStoreCreateUnpersist = 6,
  SmKmCallbackEvict = 7,
  SmKmCallbackMax = 8,
} SMKM_CALLBACK_TYPE, *PSMKM_CALLBACK_TYPE;

typedef enum _SMST_ENCRYPT_OPTIONS
{
  SmStEncryptDisabled = 0,
  SmStEncryptEnabled = 1,
  SmStEncryptFileIo = 2,
  SmStEncryptAll = 3,
  SmStEnctyptOptionsMax = 4,
} SMST_ENCRYPT_OPTIONS, *PSMST_ENCRYPT_OPTIONS;

typedef enum _STORE_INFORMATION_CLASS
{
  StorePageRequest = 1,
  StoreStatsRequest = 2,
  StoreCreateRequest = 3,
  StoreDeleteRequest = 4,
  StoreListRequest = 5,
  StoreLogRequest = 6,
  StoreEmptyRequest = 7,
  CacheListRequest = 8,
  CacheCreateRequest = 9,
  CacheDeleteRequest = 10,
  CacheStoreCreateRequest = 11,
  CacheStoreDeleteRequest = 12,
  CacheStatsRequest = 13,
  CachePersistRequest = 14,
  RegistrationRequest = 15,
  GlobalCacheStatsRequest = 16,
  StoreInformationMax = 17,
} STORE_INFORMATION_CLASS, *PSTORE_INFORMATION_CLASS;

typedef enum _SM_ETW_KEYWORD_TYPE
{
  SmEtwKeywordStoreOps = 0,
  SmEtwKeywordReadyBoot = 1,
  SmEtwKeywordStoreDiag = 2,
  SmEtwKeywordContentsRundown = 3,
  SmEtwKeywordMax = 4,
} SM_ETW_KEYWORD_TYPE, *PSM_ETW_KEYWORD_TYPE;

typedef enum _SM_PAGE_REQUEST_TYPE
{
  SmPageRequestAdd = 0,
  SmPageRequestEvict = 1,
  SmPageRequestRetrieve = 2,
  SmPageRequestMax = 3,
} SM_PAGE_REQUEST_TYPE, *PSM_PAGE_REQUEST_TYPE;

typedef enum _ST_COMPACTION_STATE
{
  StCompactionNone = 0,
  StCompactionDeferred = 1,
  StCompactionQueued = 2,
  StCompactionInProgress = 3,
  StCompactionMax = 4,
} ST_COMPACTION_STATE, *PST_COMPACTION_STATE;

typedef struct _WORK_QUEUE_ITEM
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0010 */ void* WorkerRoutine /* function */;
  /* 0x0018 */ void* Parameter;
} WORK_QUEUE_ITEM, *PWORK_QUEUE_ITEM; /* size: 0x0020 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_EMPTY_QUEUE_CONTEXT
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM ExWorkItem;
  /* 0x0020 */ struct SMKM_STORE_MGR<SM_TRAITS>* StoreMgr;
  /* 0x0028 */ unsigned long StoreIndex;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE
{
  /* 0x0000 */ void* CommitBase;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned __int64 ReserveSize;
} RTL_STACK_TRACE_DATABASE_CREATE, *PRTL_STACK_TRACE_DATABASE_CREATE; /* size: 0x0018 */

typedef enum _ST_COMPACTION_CHECK_RESULT
{
  StCompactionNotNeeded = 0,
  StCompactionDefer = 1,
  StCompactionUrgent = 2,
  StCompactionCheckMax = 3,
} ST_COMPACTION_CHECK_RESULT, *PST_COMPACTION_CHECK_RESULT;

typedef enum _SM_STORE_ACTION_TYPE
{
  SmStoreEmpty = 0,
  SmStoreUnpersistUpdate = 1,
  SmStoreInitiatedWorkStart = 2,
  SmStoreInitiatedWorkEnd = 3,
  SmStoreDeviceCorrupted = 4,
  SmStoreDeviceIoFail = 5,
  SmStoreActionTypeMax = 6,
} SM_STORE_ACTION_TYPE, *PSM_STORE_ACTION_TYPE;

typedef struct _REG_ENUMERATE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ enum _KEY_INFORMATION_CLASS KeyInformationClass;
  /* 0x0010 */ void* KeyInformation;
  /* 0x0018 */ unsigned long Length;
  /* 0x001c */ long Padding_132;
  /* 0x0020 */ unsigned long* ResultLength;
  /* 0x0028 */ void* CallContext;
  /* 0x0030 */ void* ObjectContext;
  /* 0x0038 */ void* Reserved;
} REG_ENUMERATE_KEY_INFORMATION, *PREG_ENUMERATE_KEY_INFORMATION; /* size: 0x0040 */

typedef enum _SM_STORE_UNPERSIST_PHASE
{
  SmUnpersistPhaseStart = 0,
  SmUnpersistPhaseAllowReads = 1,
  SmUnpersistPhaseComplete = 2,
  SmUnpersistPhaseMax = 3,
} SM_STORE_UNPERSIST_PHASE, *PSM_STORE_UNPERSIST_PHASE;

typedef enum _SM_FP_RESOURCE_TYPE
{
  SmFpResourceIoCtx = 0,
  SmFpResourceWorkItem = 1,
  SmFpResourceMapping = 2,
  SmFpResourceMax = 3,
} SM_FP_RESOURCE_TYPE, *PSM_FP_RESOURCE_TYPE;

typedef struct _TARGET_DEVICE_REMOVAL_NOTIFICATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
  /* 0x0014 */ long Padding_133;
  /* 0x0018 */ struct _FILE_OBJECT* FileObject;
} TARGET_DEVICE_REMOVAL_NOTIFICATION, *PTARGET_DEVICE_REMOVAL_NOTIFICATION; /* size: 0x0020 */

typedef enum _ST_STATS_IO_TYPE
{
  StStatsIoTypeAdd = 0,
  StStatsIoTypeRetrieve = 1,
  StStatsIoTypeEtaFail = 2,
  StStatsIoTypeTimeout = 3,
  StStatsIoTypeRetrieveFail = 4,
  StStatsIoTypeMax = 5,
} ST_STATS_IO_TYPE, *PST_STATS_IO_TYPE;

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ValidDataLength;
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION; /* size: 0x0008 */

typedef enum _ST_IDLENESS_STATE
{
  StStateIdle = 0,
  StStateBusy = 1,
  StStateMax = 2,
} ST_IDLENESS_STATE, *PST_IDLENESS_STATE;

typedef enum _ST_MAINTENANCE_TYPE
{
  StMaintenanceTrim = 0,
  StMaintenanceEtaRefresh = 1,
  StMaintenanceMax = 2,
} ST_MAINTENANCE_TYPE, *PST_MAINTENANCE_TYPE;

typedef struct _SMC_CACHE_PARAMETERS
{
  /* 0x0000 */ unsigned __int64 CacheFileSize;
  /* 0x0008 */ unsigned long StoreAlignment;
  union
  {
    struct /* bitfield */
    {
      /* 0x000c */ unsigned long PerformsFileIo : 1; /* bit position: 0 */
      /* 0x000c */ unsigned long VdlNotSet : 1; /* bit position: 1 */
      /* 0x000c */ unsigned long Spare : 30; /* bit position: 2 */
    }; /* bitfield */
    /* 0x000c */ unsigned long CacheFlags;
  }; /* size: 0x0004 */
  /* 0x0010 */ unsigned long Priority;
  /* 0x0014 */ long __PADDING__[1];
} SMC_CACHE_PARAMETERS, *PSMC_CACHE_PARAMETERS; /* size: 0x0018 */

typedef enum _SMKM_IO_STREAM_TYPE
{
  SmKmStreamRandom = 0,
  SmKmStreamAppended = 1,
  SmKmStreamSequential = 2,
  SmKmStreamTypeMax = 3,
} SMKM_IO_STREAM_TYPE, *PSMKM_IO_STREAM_TYPE;

typedef enum _SM_PAGE_TYPE
{
  SmPageTypeProcess = 0,
  SmPageTypeSession = 1,
  SmPageTypeSystem = 2,
  SmPageTypeSection = 3,
  SmPageTypeMax = 4,
} SM_PAGE_TYPE, *PSM_PAGE_TYPE;

typedef struct _PROCESSOR_GROUP_INFO
{
  /* 0x0000 */ unsigned char MaximumProcessorCount;
  /* 0x0001 */ unsigned char ActiveProcessorCount;
  /* 0x0002 */ unsigned char Reserved[38];
  /* 0x0028 */ unsigned __int64 ActiveProcessorMask;
} PROCESSOR_GROUP_INFO, *PPROCESSOR_GROUP_INFO; /* size: 0x0030 */

typedef enum _STDM_ERROR_MODE
{
  StDmErrorHandle = 0,
  StDmErrorAssert = 1,
  StDmErrorDbgBreak = 2,
  StDmErrorFatal = 3,
  StDmErrorMax = 4,
} STDM_ERROR_MODE, *PSTDM_ERROR_MODE;

typedef enum _PF_LOG_ENTRY_TYPE
{
  PfLogEntryTypeFile = 0,
  PfLogEntryTypePrivate = 1,
  PfLogEntryTypeExtPage = 2,
  PfLogEntryTypeEvent = 3,
  PfLogEntryTypeMax = 4,
} PF_LOG_ENTRY_TYPE, *PPF_LOG_ENTRY_TYPE;

typedef enum _PF_EVENT_TYPE
{
  PfEventTypeImageLoad = 0,
  PfEventTypeAppLaunch = 1,
  PfEventTypeStartTrace = 2,
  PfEventTypeEndTrace = 3,
  PfEventTypeTimestamp = 4,
  PfEventTypeOperation = 5,
  PfEventTypeRepurpose = 6,
  PfEventTypeForegroundProcess = 7,
  PfEventTypeTimeRange = 8,
  PfEventTypeUserInput = 9,
  PfEventTypeFileAccess = 10,
  PfEventTypeUnmap = 11,
  PfEventTypeUtilization = 11,
  PfEventTypeMemInfo = 12,
  PfEventTypeFileDelete = 13,
  PfEventTypeAppExit = 14,
  PfEventTypeSystemTime = 15,
  PfEventTypePower = 16,
  PfEventTypeSessionChange = 17,
  PfEventTypeHardFaultTimeStamp = 18,
  PfEventTypeVirtualFree = 19,
  PfEventTypePerfInfo = 20,
  PfEventTypeProcessSnapshot = 21,
  PfEventTypeUserSnapshot = 22,
  PfEventTypeStreamSequenceNumber = 23,
  PfEventTypeFileTruncate = 24,
  PfEventTypeFileRename = 25,
  PfEventTypeFileCreate = 26,
  PfEventTypeAgCxContext = 27,
  PfEventTypePowerAction = 28,
  PfEventTypeHardFaultTS = 29,
  PfEventTypeRobustInfo = 30,
  PfEventTypeFileDefrag = 31,
  PfEventTypeMax = 32,
} PF_EVENT_TYPE, *PPF_EVENT_TYPE;

typedef struct _DIAGNOSTIC_BUFFER
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum _REQUESTER_TYPE CallerType;
  /* 0x000c */ long Padding_134;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned __int64 ProcessImageNameOffset;
      /* 0x0018 */ unsigned long ProcessId;
      /* 0x001c */ unsigned long ServiceTag;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0010 */ unsigned __int64 DeviceDescriptionOffset;
      /* 0x0018 */ unsigned __int64 DevicePathOffset;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0020 */ unsigned __int64 ReasonOffset;
} DIAGNOSTIC_BUFFER, *PDIAGNOSTIC_BUFFER; /* size: 0x0028 */

typedef struct _POWER_REQUEST_OVERRIDE_INFO
{
  /* 0x0000 */ void* PowerRequestHandle;
  union
  {
    /* 0x0008 */ struct _DIAGNOSTIC_BUFFER Requester;
    struct
    {
      /* 0x0008 */ unsigned long RequestOverrideMask;
      /* 0x000c */ long __PADDING__[9];
    }; /* size: 0x0028 */
  }; /* size: 0x0028 */
} POWER_REQUEST_OVERRIDE_INFO, *PPOWER_REQUEST_OVERRIDE_INFO; /* size: 0x0030 */

typedef struct _EVENT_FILTER_HEADER
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char Reserved[5];
  /* 0x0008 */ unsigned __int64 InstanceId;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long NextOffset;
} EVENT_FILTER_HEADER, *PEVENT_FILTER_HEADER; /* size: 0x0018 */

typedef enum _PF_EVENT_AGCX_CONTEXT_TYPE_INFO
{
  PfEventAgCxContextTypeStart = 0,
  PfEventAgCxContextTypeEnd = 1,
  PfEventAgCxContextTypePhase = 2,
  PfEventAgCxContextTypeMax = 3,
} PF_EVENT_AGCX_CONTEXT_TYPE_INFO, *PPF_EVENT_AGCX_CONTEXT_TYPE_INFO;

typedef struct _TP_TASK_CALLBACKS
{
  /* 0x0000 */ void* ExecuteCallback /* function */;
  /* 0x0008 */ void* Unposted /* function */;
} TP_TASK_CALLBACKS, *PTP_TASK_CALLBACKS; /* size: 0x0010 */

typedef enum _ST_ETW_CORRUPTION_TYPE
{
  StCtDecryptionFailed = 0,
  StCtCrcFailed = 1,
  StCtDecompressFailed = 2,
  StCtMax = 3,
} ST_ETW_CORRUPTION_TYPE, *PST_ETW_CORRUPTION_TYPE;

typedef struct _X86_FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} X86_FLOATING_SAVE_AREA, *PX86_FLOATING_SAVE_AREA; /* size: 0x0070 */

typedef struct _X86_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _X86_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
} X86_CONTEXT, *PX86_CONTEXT; /* size: 0x00cc */

typedef enum _ST_STATE_PARAM_TYPE
{
  StStateTypeEmpty = 0,
  StStateTypePersist = 1,
  StStateTypeUnpersist = 2,
  StStateTypeUnpersistRestore = 3,
  StStateTypeMax = 4,
} ST_STATE_PARAM_TYPE, *PST_STATE_PARAM_TYPE;

typedef struct _NON_PAGED_DEBUG_INFO
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned short Machine;
  /* 0x000a */ unsigned short Characteristics;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned __int64 ImageBase;
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO; /* size: 0x0020 */

typedef enum _B_TREE_NODE_TYPE
{
  BTreeNodeTypeIndex = 0,
  BTreeNodeTypeLeaf = 1,
  BTreeNodeTypeLeafPagedOut = 2,
  BTreeNodeTypeMax = 3,
} B_TREE_NODE_TYPE, *PB_TREE_NODE_TYPE;

typedef struct _CM_SERIAL_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long BaudClock;
} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA; /* size: 0x0008 */

typedef union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 ProcessorType : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 InstructionSet : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 ErrorType : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 Operation : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Flags : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Level : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 CPUVersion : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 CPUBrandString : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 ProcessorId : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 TargetAddress : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned __int64 RequesterId : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned __int64 ResponderId : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned __int64 InstructionPointer : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned __int64 Reserved : 51; /* bit position: 13 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS, *PWHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS; /* size: 0x0008 */

typedef struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION
{
  /* 0x0000 */ union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS ValidBits;
  /* 0x0008 */ unsigned char ProcessorType;
  /* 0x0009 */ unsigned char InstructionSet;
  /* 0x000a */ unsigned char ErrorType;
  /* 0x000b */ unsigned char Operation;
  /* 0x000c */ unsigned char Flags;
  /* 0x000d */ unsigned char Level;
  /* 0x000e */ unsigned short Reserved;
  /* 0x0010 */ unsigned __int64 CPUVersion;
  /* 0x0018 */ unsigned char CPUBrandString[128];
  /* 0x0098 */ unsigned __int64 ProcessorId;
  /* 0x00a0 */ unsigned __int64 TargetAddress;
  /* 0x00a8 */ unsigned __int64 RequesterId;
  /* 0x00b0 */ unsigned __int64 ResponderId;
  /* 0x00b8 */ unsigned __int64 InstructionPointer;
} WHEA_PROCESSOR_GENERIC_ERROR_SECTION, *PWHEA_PROCESSOR_GENERIC_ERROR_SECTION; /* size: 0x00c0 */

typedef enum _PF_POWER_ACTION_PHASE_ID
{
  PfPowerActionNotifyForSleepPhase = 0,
  PfPowerActionSleepSystemPhase = 1,
  PfPowerActionWakeSystemPhase = 2,
  PfPowerActionDriversResumePhase = 3,
  PfPowerActionWLRemoveUIPhase = 4,
  PfPowerActionServicesResumePhase = 5,
  PfPowerActionAppsResumePhase = 6,
  PfPowerActionTransitionComplete = 7,
  PfPowerActionMaxPhase = 8,
} PF_POWER_ACTION_PHASE_ID, *PPF_POWER_ACTION_PHASE_ID;

typedef struct _POWER_SETTING_REGISTRATION
{
  /* 0x0000 */ struct _GUID Guid;
} POWER_SETTING_REGISTRATION, *PPOWER_SETTING_REGISTRATION; /* size: 0x0010 */

struct XSAVE_CPU_INFO
{
  /* 0x0000 */ unsigned char Processor;
  /* 0x0001 */ char Padding_135;
  /* 0x0002 */ unsigned short Family;
  /* 0x0004 */ unsigned short Model;
  /* 0x0006 */ unsigned short Stepping;
  /* 0x0008 */ unsigned short ExtendedModel;
  /* 0x000a */ char Padding_136[2];
  /* 0x000c */ unsigned long ExtendedFamily;
  /* 0x0010 */ unsigned __int64 MicrocodeVersion;
  /* 0x0018 */ unsigned long Reserved;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

enum ST_STORE<SM_TRAITS>::_ST_DEVICE_FAIL_TYPE
{
  StDeviceFailCorruption = 0,
  StDeviceFailIoFailure = 1,
  StDeviceFailMax = 2,
};

enum ST_STORE<SM_TRAITS>::_STNP_TREE_TYPE
{
  StNpPageTree = 0,
  StNpRegionTree = 1,
  StNpTreeTypeMax = 2,
};

typedef enum _PFS_DEVICE_TYPE
{
  PFS_DEVICE_DISK_FILE_SYSTEM = 0,
  PFS_DEVICE_CD_ROM_FILE_SYSTEM = 1,
  PFS_DEVICE_FILE_SYSTEM = 2,
  PFS_DEVICE_UNKNOWN = 3,
  PFS_DEVICE_NETWORK_FILE_SYSTEM = 4,
  PFS_DEVICE_TAPE_FILE_SYSTEM = 5,
  PFS_DEVICE_DFS_FILE_SYSTEM = 6,
  PFS_DEVICE_TYPE_MAX = 7,
} PFS_DEVICE_TYPE, *PPFS_DEVICE_TYPE;

struct LIST_ENTRY64
{
  /* 0x0000 */ unsigned __int64 Flink;
  /* 0x0008 */ unsigned __int64 Blink;
}; /* size: 0x0010 */

typedef struct _IA64_DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct LIST_ENTRY64 Links;
  /* 0x0010 */ unsigned __int64 FunctionTable;
  /* 0x0018 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0020 */ unsigned __int64 MinimumAddress;
  /* 0x0028 */ unsigned __int64 MaximumAddress;
  /* 0x0030 */ unsigned __int64 BaseAddress;
  /* 0x0038 */ unsigned __int64 TargetGp;
  /* 0x0040 */ unsigned __int64 Callback;
  /* 0x0048 */ unsigned __int64 Context;
  /* 0x0050 */ unsigned __int64 OutOfProcessCallbackDll;
  /* 0x0058 */ enum _IA64_FUNCTION_TABLE_TYPE Type;
  /* 0x005c */ unsigned long EntryCount;
} IA64_DYNAMIC_FUNCTION_TABLE, *PIA64_DYNAMIC_FUNCTION_TABLE; /* size: 0x0060 */

typedef struct _AMD64_DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct LIST_ENTRY64 ListEntry;
  /* 0x0010 */ unsigned __int64 FunctionTable;
  /* 0x0018 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0020 */ unsigned __int64 MinimumAddress;
  /* 0x0028 */ unsigned __int64 MaximumAddress;
  /* 0x0030 */ unsigned __int64 BaseAddress;
  /* 0x0038 */ unsigned __int64 Callback;
  /* 0x0040 */ unsigned __int64 Context;
  /* 0x0048 */ unsigned __int64 OutOfProcessCallbackDll;
  /* 0x0050 */ enum _AMD64_FUNCTION_TABLE_TYPE Type;
  /* 0x0054 */ unsigned long EntryCount;
} AMD64_DYNAMIC_FUNCTION_TABLE, *PAMD64_DYNAMIC_FUNCTION_TABLE; /* size: 0x0058 */

typedef struct _CROSS_PLATFORM_DYNAMIC_FUNCTION_TABLE
{
  union
  {
    /* 0x0000 */ struct _IA64_DYNAMIC_FUNCTION_TABLE IA64Table;
    /* 0x0000 */ struct _AMD64_DYNAMIC_FUNCTION_TABLE Amd64Table;
    struct
    {
      /* 0x0000 */ struct _ARM_DYNAMIC_FUNCTION_TABLE ArmTable;
      /* 0x0038 */ long __PADDING__[10];
    }; /* size: 0x0060 */
  }; /* size: 0x0060 */
} CROSS_PLATFORM_DYNAMIC_FUNCTION_TABLE, *PCROSS_PLATFORM_DYNAMIC_FUNCTION_TABLE; /* size: 0x0060 */

typedef struct _ETW_REPLY_QUEUE
{
  /* 0x0000 */ struct _KQUEUE Queue;
  /* 0x0040 */ long EventsLost;
  /* 0x0044 */ long __PADDING__[1];
} ETW_REPLY_QUEUE, *PETW_REPLY_QUEUE; /* size: 0x0048 */

typedef enum _TAG_UNNAMED_9
{
  WorkQueue = 0,
  StopWorker = 1,
  EventCountMax = 2,
} TAG_UNNAMED_9, *PTAG_UNNAMED_9;

typedef enum _SM_UNPERSIST_FAIL_REASON
{
  SmUnpersistFailNone = 0,
  SmUnpersistFailCache = 1,
  SmUnpersistFailCacheHeader = 2,
  SmUnpersistFailCacheStart = 3,
  SmUnpersistFailStoreCreate = 4,
  SmUnpersistFailReasonMax = 5,
} SM_UNPERSIST_FAIL_REASON, *PSM_UNPERSIST_FAIL_REASON;

typedef enum _BG_ANIMATION_TYPE
{
  Fade = 0,
  Progress = 1,
  AnimationMax = 2,
} BG_ANIMATION_TYPE, *PBG_ANIMATION_TYPE;

typedef struct _EX_FAST_REF
{
  union
  {
    /* 0x0000 */ void* Object;
    /* 0x0000 */ unsigned __int64 RefCnt : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Value;
  }; /* size: 0x0008 */
} EX_FAST_REF, *PEX_FAST_REF; /* size: 0x0008 */

typedef struct _ETW_REF_CLOCK
{
  /* 0x0000 */ union _LARGE_INTEGER StartTime;
  /* 0x0008 */ union _LARGE_INTEGER StartPerfClock;
} ETW_REF_CLOCK, *PETW_REF_CLOCK; /* size: 0x0010 */

typedef struct _TOKEN_SOURCE
{
  /* 0x0000 */ char SourceName[8];
  /* 0x0008 */ struct _LUID SourceIdentifier;
} TOKEN_SOURCE, *PTOKEN_SOURCE; /* size: 0x0010 */

typedef struct _TOKEN_CONTROL
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
  /* 0x0018 */ struct _TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL, *PTOKEN_CONTROL; /* size: 0x0028 */

typedef struct _SECURITY_CLIENT_CONTEXT
{
  /* 0x0000 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x000c */ long Padding_137;
  /* 0x0010 */ void* ClientToken;
  /* 0x0018 */ unsigned char DirectlyAccessClientToken;
  /* 0x0019 */ unsigned char DirectAccessEffectiveOnly;
  /* 0x001a */ unsigned char ServerIsRemote;
  /* 0x001b */ char Padding_138;
  /* 0x001c */ struct _TOKEN_CONTROL ClientTokenControl;
  /* 0x0044 */ long __PADDING__[1];
} SECURITY_CLIENT_CONTEXT, *PSECURITY_CLIENT_CONTEXT; /* size: 0x0048 */

typedef struct _RTL_BITMAP
{
  /* 0x0000 */ unsigned long SizeOfBitMap;
  /* 0x0004 */ long Padding_139;
  /* 0x0008 */ unsigned long* Buffer;
} RTL_BITMAP, *PRTL_BITMAP; /* size: 0x0010 */

typedef struct _WMI_LOGGER_CONTEXT
{
  /* 0x0000 */ unsigned long LoggerId;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ unsigned long MaximumEventSize;
  /* 0x000c */ long CollectionOn;
  /* 0x0010 */ unsigned long LoggerMode;
  /* 0x0014 */ long AcceptNewEvents;
  /* 0x0018 */ void* GetCpuClock /* function */;
  /* 0x0020 */ union _LARGE_INTEGER StartTime;
  /* 0x0028 */ void* LogFileHandle;
  /* 0x0030 */ struct _ETHREAD* LoggerThread;
  /* 0x0038 */ long LoggerStatus;
  /* 0x003c */ long Padding_140;
  /* 0x0040 */ void* NBQHead;
  /* 0x0048 */ void* OverflowNBQHead;
  /* 0x0050 */ union _SLIST_HEADER QueueBlockFreeList;
  /* 0x0060 */ struct _LIST_ENTRY GlobalList;
  union
  {
    /* 0x0070 */ struct _WMI_BUFFER_HEADER* BatchedBufferList;
    /* 0x0070 */ struct _EX_FAST_REF CurrentBuffer;
  }; /* size: 0x0008 */
  /* 0x0078 */ struct _UNICODE_STRING LoggerName;
  /* 0x0088 */ struct _UNICODE_STRING LogFileName;
  /* 0x0098 */ struct _UNICODE_STRING LogFilePattern;
  /* 0x00a8 */ struct _UNICODE_STRING NewLogFileName;
  /* 0x00b8 */ unsigned long ClockType;
  /* 0x00bc */ unsigned long MaximumFileSize;
  /* 0x00c0 */ unsigned long LastFlushedBuffer;
  /* 0x00c4 */ unsigned long FlushTimer;
  /* 0x00c8 */ unsigned long FlushThreshold;
  /* 0x00cc */ long Padding_141;
  /* 0x00d0 */ union _LARGE_INTEGER ByteOffset;
  /* 0x00d8 */ unsigned long MinimumBuffers;
  /* 0x00dc */ volatile long BuffersAvailable;
  /* 0x00e0 */ volatile long NumberOfBuffers;
  /* 0x00e4 */ unsigned long MaximumBuffers;
  /* 0x00e8 */ volatile unsigned long EventsLost;
  /* 0x00ec */ unsigned long BuffersWritten;
  /* 0x00f0 */ unsigned long LogBuffersLost;
  /* 0x00f4 */ unsigned long RealTimeBuffersDelivered;
  /* 0x00f8 */ unsigned long RealTimeBuffersLost;
  /* 0x00fc */ long Padding_142;
  /* 0x0100 */ long* SequencePtr;
  /* 0x0108 */ unsigned long LocalSequence;
  /* 0x010c */ struct _GUID InstanceGuid;
  /* 0x011c */ long FileCounter;
  /* 0x0120 */ void* volatile BufferCallback /* function */;
  /* 0x0128 */ enum _POOL_TYPE PoolType;
  /* 0x012c */ long Padding_143;
  /* 0x0130 */ struct _ETW_REF_CLOCK ReferenceTime;
  /* 0x0140 */ struct _LIST_ENTRY Consumers;
  /* 0x0150 */ unsigned long NumConsumers;
  /* 0x0154 */ long Padding_144;
  /* 0x0158 */ struct _ETW_REALTIME_CONSUMER* TransitionConsumer;
  /* 0x0160 */ void* RealtimeLogfileHandle;
  /* 0x0168 */ struct _UNICODE_STRING RealtimeLogfileName;
  /* 0x0178 */ union _LARGE_INTEGER RealtimeWriteOffset;
  /* 0x0180 */ union _LARGE_INTEGER RealtimeReadOffset;
  /* 0x0188 */ union _LARGE_INTEGER RealtimeLogfileSize;
  /* 0x0190 */ unsigned __int64 RealtimeLogfileUsage;
  /* 0x0198 */ unsigned __int64 RealtimeMaximumFileSize;
  /* 0x01a0 */ unsigned long RealtimeBuffersSaved;
  /* 0x01a4 */ long Padding_145;
  /* 0x01a8 */ struct _ETW_REF_CLOCK RealtimeReferenceTime;
  /* 0x01b8 */ enum _ETW_RT_EVENT_LOSS NewRTEventsLost;
  /* 0x01bc */ long Padding_146;
  /* 0x01c0 */ struct _KEVENT LoggerEvent;
  /* 0x01d8 */ struct _KEVENT FlushEvent;
  /* 0x01f0 */ struct _KTIMER FlushTimeOutTimer;
  /* 0x0230 */ struct _KDPC FlushDpc;
  /* 0x0270 */ struct _KMUTANT LoggerMutex;
  /* 0x02a8 */ struct _EX_PUSH_LOCK LoggerLock;
  union
  {
    /* 0x02b0 */ unsigned __int64 BufferListSpinLock;
    /* 0x02b0 */ struct _EX_PUSH_LOCK BufferListPushLock;
  }; /* size: 0x0008 */
  /* 0x02b8 */ struct _SECURITY_CLIENT_CONTEXT ClientSecurityContext;
  /* 0x0300 */ struct _EX_FAST_REF SecurityDescriptor;
  /* 0x0308 */ __int64 BufferSequenceNumber;
  union
  {
    /* 0x0310 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0310 */ unsigned long Persistent : 1; /* bit position: 0 */
      /* 0x0310 */ unsigned long AutoLogger : 1; /* bit position: 1 */
      /* 0x0310 */ unsigned long FsReady : 1; /* bit position: 2 */
      /* 0x0310 */ unsigned long RealTime : 1; /* bit position: 3 */
      /* 0x0310 */ unsigned long Wow : 1; /* bit position: 4 */
      /* 0x0310 */ unsigned long KernelTrace : 1; /* bit position: 5 */
      /* 0x0310 */ unsigned long NoMoreEnable : 1; /* bit position: 6 */
      /* 0x0310 */ unsigned long StackTracing : 1; /* bit position: 7 */
      /* 0x0310 */ unsigned long ErrorLogged : 1; /* bit position: 8 */
      /* 0x0310 */ unsigned long RealtimeLoggerContextFreed : 1; /* bit position: 9 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    /* 0x0314 */ unsigned long RequestFlag;
    struct /* bitfield */
    {
      /* 0x0314 */ unsigned long RequestNewFie : 1; /* bit position: 0 */
      /* 0x0314 */ unsigned long RequestUpdateFile : 1; /* bit position: 1 */
      /* 0x0314 */ unsigned long RequestFlush : 1; /* bit position: 2 */
      /* 0x0314 */ unsigned long RequestDisableRealtime : 1; /* bit position: 3 */
      /* 0x0314 */ unsigned long RequestDisconnectConsumer : 1; /* bit position: 4 */
      /* 0x0314 */ unsigned long RequestConnectConsumer : 1; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0318 */ struct _RTL_BITMAP HookIdMap;
  /* 0x0328 */ long __PADDING__[2];
} WMI_LOGGER_CONTEXT, *PWMI_LOGGER_CONTEXT; /* size: 0x0330 */

typedef struct _SM_CACHE_STATS_ENTRY
{
  /* 0x0000 */ unsigned __int64 Bytes;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long __PADDING__[1];
} SM_CACHE_STATS_ENTRY, *PSM_CACHE_STATS_ENTRY; /* size: 0x0010 */

typedef struct _ST_READ_LATENCY_BUCKET
{
  /* 0x0000 */ unsigned long LatencyUs;
  /* 0x0004 */ unsigned long Count;
} ST_READ_LATENCY_BUCKET, *PST_READ_LATENCY_BUCKET; /* size: 0x0008 */

typedef struct _ST_READ_LATENCY_STATS
{
  /* 0x0000 */ struct _ST_READ_LATENCY_BUCKET Buckets[8];
} ST_READ_LATENCY_STATS, *PST_READ_LATENCY_STATS; /* size: 0x0040 */

typedef struct _SMP_CACHE_STATS
{
  /* 0x0000 */ unsigned long BucketSizesMb[8];
  /* 0x0020 */ struct _SM_CACHE_STATS_ENTRY CacheRead[8];
  /* 0x00a0 */ struct _SM_CACHE_STATS_ENTRY SkippedIo[8];
  /* 0x0120 */ struct _SM_CACHE_STATS_ENTRY Read[8];
  /* 0x01a0 */ struct _EX_PUSH_LOCK Lock;
  /* 0x01a8 */ struct _ST_READ_LATENCY_STATS LatencyStats;
} SMP_CACHE_STATS, *PSMP_CACHE_STATS; /* size: 0x01e8 */

typedef struct _REMOTE_PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_147;
  /* 0x0008 */ unsigned __int64 ViewSize;
  /* 0x0010 */ void* ViewBase;
} REMOTE_PORT_VIEW, *PREMOTE_PORT_VIEW; /* size: 0x0018 */

typedef enum _HOTPATCH_VALIDATION_OPTIONS
{
  HOTP_Valid_Hook_Target = 1,
} HOTPATCH_VALIDATION_OPTIONS, *PHOTPATCH_VALIDATION_OPTIONS;

typedef struct _VF_AVL_TABLE
{
  /* 0x0000 */ struct _RTL_AVL_TABLE RtlTable;
  /* 0x0068 */ struct _VF_AVL_TREE_NODE* ReservedNode;
} VF_AVL_TABLE, *PVF_AVL_TABLE; /* size: 0x0070 */

typedef enum _HOTPATCH_MODULE_ID_METHOD
{
  HOTP_ID_None = 0,
  HOTP_ID_PeHeaderHash1 = 1,
  HOTP_ID_PeHeaderHash2 = 2,
  HOTP_ID_PeChecksum = 3,
  HOTP_ID_PeDebugSignature = 16,
} HOTPATCH_MODULE_ID_METHOD, *PHOTPATCH_MODULE_ID_METHOD;

typedef enum _HOTPATCH_FIXUP_TYPE
{
  HOTP_Fixup_None = 0,
  HOTP_Fixup_VA32 = 1,
  HOTP_Fixup_PC32 = 2,
  HOTP_Fixup_VA64 = 3,
  HOTP_Fixup_PC64 = 4,
} HOTPATCH_FIXUP_TYPE, *PHOTPATCH_FIXUP_TYPE;

typedef struct _FLOAT128
{
  /* 0x0000 */ __int64 LowPart;
  /* 0x0008 */ __int64 HighPart;
} FLOAT128, *PFLOAT128; /* size: 0x0010 */

typedef struct _IA64_KEXCEPTION_FRAME
{
  /* 0x0000 */ unsigned __int64 ApEC;
  /* 0x0008 */ unsigned __int64 ApLC;
  /* 0x0010 */ unsigned __int64 IntNats;
  /* 0x0018 */ unsigned __int64 IntS0;
  /* 0x0020 */ unsigned __int64 IntS1;
  /* 0x0028 */ unsigned __int64 IntS2;
  /* 0x0030 */ unsigned __int64 IntS3;
  /* 0x0038 */ unsigned __int64 BrS0;
  /* 0x0040 */ unsigned __int64 BrS1;
  /* 0x0048 */ unsigned __int64 BrS2;
  /* 0x0050 */ unsigned __int64 BrS3;
  /* 0x0058 */ unsigned __int64 BrS4;
  /* 0x0060 */ struct _FLOAT128 FltS0;
  /* 0x0070 */ struct _FLOAT128 FltS1;
  /* 0x0080 */ struct _FLOAT128 FltS2;
  /* 0x0090 */ struct _FLOAT128 FltS3;
  /* 0x00a0 */ struct _FLOAT128 FltS4;
  /* 0x00b0 */ struct _FLOAT128 FltS5;
  /* 0x00c0 */ struct _FLOAT128 FltS6;
  /* 0x00d0 */ struct _FLOAT128 FltS7;
  /* 0x00e0 */ struct _FLOAT128 FltS8;
  /* 0x00f0 */ struct _FLOAT128 FltS9;
  /* 0x0100 */ struct _FLOAT128 FltS10;
  /* 0x0110 */ struct _FLOAT128 FltS11;
  /* 0x0120 */ struct _FLOAT128 FltS12;
  /* 0x0130 */ struct _FLOAT128 FltS13;
  /* 0x0140 */ struct _FLOAT128 FltS14;
  /* 0x0150 */ struct _FLOAT128 FltS15;
  /* 0x0160 */ struct _FLOAT128 FltS16;
  /* 0x0170 */ struct _FLOAT128 FltS17;
  /* 0x0180 */ struct _FLOAT128 FltS18;
  /* 0x0190 */ struct _FLOAT128 FltS19;
} IA64_KEXCEPTION_FRAME, *PIA64_KEXCEPTION_FRAME; /* size: 0x01a0 */

typedef enum _LDR_RES_LANGUAGE_TYPES
{
  GivenLangId = 1,
  PrimaryOfGivenLangId = 2,
  PreferredLangId = 3,
  UltimateFallbackLangId = 4,
  MachineLangId = 5,
  InstallLangId = 6,
  DefaultLcaleLangId = 7,
  USEnglishLangId = 8,
  AnyLangId = 9,
  UltimateFallbackLangIdAndInternal = 10,
} LDR_RES_LANGUAGE_TYPES, *PLDR_RES_LANGUAGE_TYPES;

typedef struct _ETW_HEAP_EVENT_FREE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ void* Address;
  /* 0x0030 */ unsigned long Source;
} ETW_HEAP_EVENT_FREE, *PETW_HEAP_EVENT_FREE; /* size: 0x0034 */

typedef struct _PCI_MSI_MESSAGE_CONTROL
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MSIEnable : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MultipleMessageCapable : 3; /* bit position: 1 */
    /* 0x0000 */ unsigned short MultipleMessageEnable : 3; /* bit position: 4 */
    /* 0x0000 */ unsigned short CapableOf64Bits : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short PerVectorMaskCapable : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short Reserved : 7; /* bit position: 9 */
  }; /* bitfield */
} PCI_MSI_MESSAGE_CONTROL, *PPCI_MSI_MESSAGE_CONTROL; /* size: 0x0002 */

enum LanguageFallbackOrder
{
  GivenLanguage = 0,
  GivenLanguageParent = 1,
  MachinePreferred = 2,
  InstallLanguage = 3,
  SystemLocale = 4,
  EnUS = 5,
  AnyLanguage = 6,
};

typedef struct _DEBUG_PARAMETERS
{
  /* 0x0000 */ unsigned long CommunicationPort;
  /* 0x0004 */ unsigned long BaudRate;
} DEBUG_PARAMETERS, *PDEBUG_PARAMETERS; /* size: 0x0008 */

typedef enum _BOUNDARY_ENTRY_TYPE
{
  OBNS_Invalid = 0,
  OBNS_Name = 1,
  OBNS_SID = 2,
  OBNS_IL = 3,
} BOUNDARY_ENTRY_TYPE, *PBOUNDARY_ENTRY_TYPE;

enum VI_PNP_HOW_PROCESSED
{
  ViPnpNotProcessed = 0,
  ViPnpPossiblyProcessed = 1,
  ViPnpDefinitelyProcessed = 2,
};

enum MEMORY_PERSISTANCE
{
  VFMP_INSTANT = 0,
  VFMP_INSTANT_NONPAGED = 1,
};

typedef struct _LSA_ADT_STRING_LIST_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_148;
  /* 0x0008 */ struct _UNICODE_STRING String;
} LSA_ADT_STRING_LIST_ENTRY, *PLSA_ADT_STRING_LIST_ENTRY; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_10
{
  PARSING = 1,
  CHECKING_EOF = 2,
} TAG_UNNAMED_10, *PTAG_UNNAMED_10;

typedef enum _WPP_TRACE_API_SUITE
{
  WppTraceDisabledSuite = 0,
  WppTraceWin2K = 1,
  WppTraceWinXP = 2,
  WppTraceTraceLH = 3,
  WppTraceServer08 = 4,
  WppTraceMaxSuite = 5,
} WPP_TRACE_API_SUITE, *PWPP_TRACE_API_SUITE;

typedef enum _WPP_FLAG_LEN_ENUM_MAX
{
  WPP_MAX_FLAG_LEN_CHECK = 1,
} WPP_FLAG_LEN_ENUM_MAX, *PWPP_FLAG_LEN_ENUM_MAX;

enum WPP_CTL_NAMES
{
  WPP_CTL_NtfsLog = 0,
  WPP_LAST_CTL = 1,
};

typedef union _MCG_STATUS
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long RestartIpValid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long ErrorIpValid : 1; /* bit position: 1 */
        /* 0x0000 */ unsigned long MachineCheckInProgress : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned long Reserved1 : 29; /* bit position: 3 */
      }; /* bitfield */
      /* 0x0004 */ unsigned long Reserved2;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCG_STATUS, *PMCG_STATUS; /* size: 0x0008 */

typedef enum _WPP_FLAG_LEN_ENUM
{
  WPP_FLAG_LEN = 1,
} WPP_FLAG_LEN_ENUM, *PWPP_FLAG_LEN_ENUM;

typedef enum _PFFI_SUBSTATUS
{
  PfFiSubStatusSuccess = 0,
  PfFiSubStatusDriverUnloading = 1,
  PfFiSubStatusOpenError = 2,
  PfFiSubStatusOpenErrorOplockBreak = 3,
  PfFiSubStatusFileInUse = 4,
  PfFiSubStatusInsufficientResources = 5,
  PfFiSubStatusDisabledUntilTickMs = 6,
  PfFiSubStatusVolumeFIUnknown = 7,
  PfFiSubStatusVolumeNoSuperfetch = 8,
  PfFiSubStatusNoVolumeContext = 9,
  PfFiSubStatusNoStreamContext = 10,
  PfFiSubStatusFailedGlobalOpenInitiate = 11,
  PfFiSubStatusFailedFileOpenInitiate = 12,
  PfFiSubStatusFailedVolumeOpenInitiate = 13,
  PfFiSubStatusFailedGetAnyInstance = 14,
  PfFiSubStatusFileNotOnSpecifiedVolume = 15,
  PfFiSubStatusConflictOnStreamContext = 16,
  PfFiSubStatusMax = 17,
} PFFI_SUBSTATUS, *PPFFI_SUBSTATUS;

typedef enum _SUPERFETCH_INFORMATION_CLASS
{
  SuperfetchRetrieveTrace = 1,
  SuperfetchSystemParameters = 2,
  SuperfetchLogEvent = 3,
  SuperfetchGenerateTrace = 4,
  SuperfetchPrefetch = 5,
  SuperfetchPfnQuery = 6,
  SuperfetchPfnSetPriority = 7,
  SuperfetchPrivSourceQuery = 8,
  SuperfetchSequenceNumberQuery = 9,
  SuperfetchScenarioPhase = 10,
  SuperfetchWorkerPriority = 11,
  SuperfetchScenarioQuery = 12,
  SuperfetchScenarioPrefetch = 13,
  SuperfetchRobustnessControl = 14,
  SuperfetchTimeControl = 15,
  SuperfetchMemoryListQuery = 16,
  SuperfetchMemoryRangesQuery = 17,
  SuperfetchTracingControl = 18,
  SuperfetchTrimWhileAgingControl = 19,
  SuperfetchRepurposedByPrefetchQuery = 20,
  SuperfetchInformationMax = 21,
} SUPERFETCH_INFORMATION_CLASS, *PSUPERFETCH_INFORMATION_CLASS;

typedef enum _PFP_SCENCTX_PREFETCH_WAITER_STATE
{
  PfpPrefetchWaiterNotPresent = 0,
  PfpPrefetchWaiterPresent = 1,
  PfpPrefetchWaiterTimedOut = 2,
  PfpPrefetchWaiterStateMax = 3,
} PFP_SCENCTX_PREFETCH_WAITER_STATE, *PPFP_SCENCTX_PREFETCH_WAITER_STATE;

typedef enum _PF_TRIM_WHILE_AGING_STATE
{
  PfTrimWhileAgingOff = 0,
  PfTrimWhileAgingLowPriority = 1,
  PfTrimWhileAgingPassive = 2,
  PfTrimWhileAgingNormal = 3,
  PfTrimWhileAgingAggressive = 4,
  PfTrimWhileAgingMax = 5,
} PF_TRIM_WHILE_AGING_STATE, *PPF_TRIM_WHILE_AGING_STATE;

typedef struct _CLS_IO_STATISTICS_HEADER
{
  /* 0x0000 */ unsigned char ubMajorVersion;
  /* 0x0001 */ unsigned char ubMinorVersion;
  /* 0x0002 */ char Padding_149[2];
  /* 0x0004 */ enum _CLFS_IOSTATS_CLASS eStatsClass;
  /* 0x0008 */ unsigned short cbLength;
  /* 0x000a */ char Padding_150[2];
  /* 0x000c */ unsigned long coffData;
} CLS_IO_STATISTICS_HEADER, *PCLS_IO_STATISTICS_HEADER; /* size: 0x0010 */

typedef struct _CLS_IO_STATISTICS
{
  /* 0x0000 */ struct _CLS_IO_STATISTICS_HEADER hdrIoStats;
  /* 0x0010 */ unsigned __int64 cFlush;
  /* 0x0018 */ unsigned __int64 cbFlush;
  /* 0x0020 */ unsigned __int64 cMetaFlush;
  /* 0x0028 */ unsigned __int64 cbMetaFlush;
} CLS_IO_STATISTICS, *PCLS_IO_STATISTICS; /* size: 0x0030 */

typedef enum _PF_SCENARIO_TYPE
{
  PfApplicationLaunchScenarioType = 0,
  PfSystemBootScenarioType = 1,
  PfMaxScenarioType = 2,
} PF_SCENARIO_TYPE, *PPF_SCENARIO_TYPE;

typedef enum _PF_LOGON_PHASE_ID
{
  PfLogonPhaseBegin = 0,
  PfLogonPhaseEnd = 1,
  PfLogonPhaseMax = 2,
} PF_LOGON_PHASE_ID, *PPF_LOGON_PHASE_ID;

typedef enum _PFP_POWER_ACTION_DPC_TYPE
{
  PfpPowerDpcHardFaultLogging = 0,
  PfpPowerDpcUnboost = 1,
  PfpPowerDpcTypeMax = 2,
} PFP_POWER_ACTION_DPC_TYPE, *PPFP_POWER_ACTION_DPC_TYPE;

typedef struct _PS_SYSTEM_DLL_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Required : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long VerifyImage : 1; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_151;
  /* 0x0008 */ struct _UNICODE_STRING DllPath;
  /* 0x0018 */ void* BaseAddress;
  /* 0x0020 */ unsigned short* DbgName;
} PS_SYSTEM_DLL_INFO, *PPS_SYSTEM_DLL_INFO; /* size: 0x0028 */

typedef enum _PFP_TRACE_STOP_REASONS
{
  PfpTraceStopPfNotStarted = 1,
  PfpTraceStopTraceListFull = 2,
  PfpTraceStopSuspend = 4,
} PFP_TRACE_STOP_REASONS, *PPFP_TRACE_STOP_REASONS;

typedef enum _PF_BOOT_SCENARIO_PHASE
{
  PfBootScenDriverInitPhase = 0,
  PfBootScenSubsystemInitPhase = 1,
  PfBootScenSystemProcInitPhase = 2,
  PfBootScenServicesInitPhase = 3,
  PfBootScenUserInitPhase = 4,
  PfBootScenTrickleIoPhase = 5,
  PfBootScenMaxPhase = 6,
} PF_BOOT_SCENARIO_PHASE, *PPF_BOOT_SCENARIO_PHASE;

typedef enum _PF_ENTRY_INFO_TYPE
{
  PfEntryInfoTypeFile = 0,
  PfEntryInfoTypeProcess = 1,
  PfEntryInfoTypeVolume = 2,
  PfEntryInfoTypeMax = 3,
} PF_ENTRY_INFO_TYPE, *PPF_ENTRY_INFO_TYPE;

typedef struct _DBGKD_GET_VERSION32
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned short ProtocolVersion;
  /* 0x0006 */ unsigned short Flags;
  /* 0x0008 */ unsigned long KernBase;
  /* 0x000c */ unsigned long PsLoadedModuleList;
  /* 0x0010 */ unsigned short MachineType;
  /* 0x0012 */ unsigned short ThCallbackStack;
  /* 0x0014 */ unsigned short NextCallback;
  /* 0x0016 */ unsigned short FramePointer;
  /* 0x0018 */ unsigned long KiCallUserMode;
  /* 0x001c */ unsigned long KeUserCallbackDispatcher;
  /* 0x0020 */ unsigned long BreakpointWithStatus;
  /* 0x0024 */ unsigned long DebuggerDataList;
} DBGKD_GET_VERSION32, *PDBGKD_GET_VERSION32; /* size: 0x0028 */

typedef enum _PF_ENABLE_STATUS
{
  PfSvNotSpecified = 0,
  PfSvEnabled = 1,
  PfSvDisabled = 2,
  PfSvMaxEnableStatus = 3,
} PF_ENABLE_STATUS, *PPF_ENABLE_STATUS;

typedef enum _PF_XP_LOG_ENTRY_TYPE
{
  PfXpLogEntryTypeData = 0,
  PfXpLogEntryTypeImage = 1,
  PfXpLogEntryTypeFileSequence = 2,
  PfXpLogEntryTypeImageReloc = 3,
  PfXpLogEntryTypeMax = 4,
} PF_XP_LOG_ENTRY_TYPE, *PPF_XP_LOG_ENTRY_TYPE;

typedef union _CLS_LSN
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned int idxRecord;
      /* 0x0004 */ unsigned long cidContainer;
    } /* size: 0x0008 */ offset;
    /* 0x0000 */ unsigned __int64 ullOffset;
  }; /* size: 0x0008 */
} CLS_LSN, *PCLS_LSN; /* size: 0x0008 */

typedef enum _PFP_BUFFER_TYPE
{
  PfpLogBuffer = 0,
  PfpEntryInfoTable = 1,
  PfpMaxBufferType = 2,
} PFP_BUFFER_TYPE, *PPFP_BUFFER_TYPE;

typedef struct _GET_CONTEXT_EX
{
  /* 0x0000 */ unsigned long Status;
  /* 0x0004 */ unsigned long ContextSize;
  /* 0x0008 */ void* pContext;
} GET_CONTEXT_EX, *PGET_CONTEXT_EX; /* size: 0x0010 */

typedef enum _PFNL_ENTRY_TYPE
{
  PfNLInfoTypeFile = 0,
  PfNLInfoTypePfBacked = 1,
  PfNLInfoTypeVolume = 2,
  PfNLInfoTypeDelete = 3,
  PfNLInfoTypeMax = 4,
} PFNL_ENTRY_TYPE, *PPFNL_ENTRY_TYPE;

typedef enum _TAG_UNNAMED_11
{
  GenerateTrace = 0,
  LogBufferThreshold = 1,
  FullBufferExists = 2,
  StopWorker = 3,
  EventCountMax = 4,
} TAG_UNNAMED_11, *PTAG_UNNAMED_11;

typedef struct _SM_CACHE_STATS_BUCKET
{
  /* 0x0000 */ unsigned long BucketSize;
  /* 0x0004 */ long Padding_152;
  /* 0x0008 */ struct _SM_CACHE_STATS_ENTRY CacheReadStatic[2];
  /* 0x0028 */ struct _SM_CACHE_STATS_ENTRY CacheReadDynamic[2];
  /* 0x0048 */ struct _SM_CACHE_STATS_ENTRY SkippedIo[2];
  /* 0x0068 */ struct _SM_CACHE_STATS_ENTRY Read[2];
} SM_CACHE_STATS_BUCKET, *PSM_CACHE_STATS_BUCKET; /* size: 0x0088 */

typedef enum _HEAP_FAILURE_TYPE
{
  heap_failure_internal = 0,
  heap_failure_unknown = 1,
  heap_failure_generic = 2,
  heap_failure_entry_corruption = 3,
  heap_failure_multiple_entries_corruption = 4,
  heap_failure_virtual_block_corruption = 5,
  heap_failure_buffer_overrun = 6,
  heap_failure_buffer_underrun = 7,
  heap_failure_block_not_busy = 8,
  heap_failure_invalid_argument = 9,
  heap_failure_usage_after_free = 10,
  heap_failure_cross_heap_operation = 11,
  heap_failure_freelists_corruption = 12,
  heap_failure_listentry_corruption = 13,
} HEAP_FAILURE_TYPE, *PHEAP_FAILURE_TYPE;

enum ACE_TYPE_TO_COPY
{
  CopyInheritedAces = 0,
  CopyNonInheritedAces = 1,
  CopyAllAces = 2,
};

typedef enum _PF_BOOT_PHASE_ID
{
  PfSystemDriverInitPhase = 120,
  PfBootAcceptedRegistryInitPhase = 270,
  PfUserShellReadyPhase = 300,
  PfMaxBootPhaseId = 900,
} PF_BOOT_PHASE_ID, *PPF_BOOT_PHASE_ID;

typedef struct _THREAD_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_153;
  /* 0x0008 */ struct _TEB* TebBaseAddress;
  /* 0x0010 */ struct _CLIENT_ID ClientId;
  /* 0x0020 */ unsigned __int64 AffinityMask;
  /* 0x0028 */ long Priority;
  /* 0x002c */ long BasePriority;
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION; /* size: 0x0030 */

struct WMIGUIDPROPERTIES
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long GuidType;
  /* 0x0014 */ unsigned long LoggerId;
  /* 0x0018 */ unsigned long EnableLevel;
  /* 0x001c */ unsigned long EnableFlags;
  /* 0x0020 */ unsigned char IsEnabled;
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

typedef enum _PF_PREFETCH_TRACE_END_REASON
{
  PfPrefTraceEndInvalid = 1,
  PfPrefTraceEndProcessExit = 2,
  PfPrefTraceEndMaxFaults = 3,
  PfPrefTraceEndMaxTime = 4,
  PfPrefTraceEndMaxSections = 5,
  PfPrefTraceEndBootSvcsInit = 6,
  PfPrefTraceEndBootShellInit = 7,
} PF_PREFETCH_TRACE_END_REASON, *PPF_PREFETCH_TRACE_END_REASON;

typedef struct _WIN32_POWEREVENT_PARAMETERS
{
  /* 0x0000 */ enum _PSPOWEREVENTTYPE EventNumber;
  /* 0x0004 */ long Padding_154;
  /* 0x0008 */ unsigned __int64 Code;
} WIN32_POWEREVENT_PARAMETERS, *PWIN32_POWEREVENT_PARAMETERS; /* size: 0x0010 */

enum VI_DEADLOCK_ALLOC_TYPE
{
  ViDeadlockUnknown = 0,
  ViDeadlockResource = 1,
  ViDeadlockNode = 2,
  ViDeadlockThread = 3,
};

typedef enum _PREFETCHER_INFORMATION_CLASS
{
  PrefetcherRetrieveTrace = 1,
  PrefetcherSystemParameters = 2,
  PrefetcherBootPhase = 3,
  PrefetcherRetrieveBootLoaderTrace = 4,
} PREFETCHER_INFORMATION_CLASS, *PPREFETCHER_INFORMATION_CLASS;

typedef enum _PFSN_PREFETCH_TYPE
{
  PfSnPrefetchDataPages = 0,
  PfSnPrefetchImagePages = 1,
  PfSnMaxPrefetchType = 2,
} PFSN_PREFETCH_TYPE, *PPFSN_PREFETCH_TYPE;

typedef struct _PPC_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Msr;
  /* 0x0008 */ unsigned long Iar;
  /* 0x000c */ unsigned long Lr;
  /* 0x0010 */ unsigned __int64 Ctr;
  /* 0x0018 */ unsigned __int64 Gpr0;
  /* 0x0020 */ unsigned __int64 Gpr1;
  /* 0x0028 */ unsigned __int64 Gpr2;
  /* 0x0030 */ unsigned __int64 Gpr3;
  /* 0x0038 */ unsigned __int64 Gpr4;
  /* 0x0040 */ unsigned __int64 Gpr5;
  /* 0x0048 */ unsigned __int64 Gpr6;
  /* 0x0050 */ unsigned __int64 Gpr7;
  /* 0x0058 */ unsigned __int64 Gpr8;
  /* 0x0060 */ unsigned __int64 Gpr9;
  /* 0x0068 */ unsigned __int64 Gpr10;
  /* 0x0070 */ unsigned __int64 Gpr11;
  /* 0x0078 */ unsigned __int64 Gpr12;
  /* 0x0080 */ unsigned __int64 Gpr13;
  /* 0x0088 */ unsigned __int64 Gpr14;
  /* 0x0090 */ unsigned __int64 Gpr15;
  /* 0x0098 */ unsigned __int64 Gpr16;
  /* 0x00a0 */ unsigned __int64 Gpr17;
  /* 0x00a8 */ unsigned __int64 Gpr18;
  /* 0x00b0 */ unsigned __int64 Gpr19;
  /* 0x00b8 */ unsigned __int64 Gpr20;
  /* 0x00c0 */ unsigned __int64 Gpr21;
  /* 0x00c8 */ unsigned __int64 Gpr22;
  /* 0x00d0 */ unsigned __int64 Gpr23;
  /* 0x00d8 */ unsigned __int64 Gpr24;
  /* 0x00e0 */ unsigned __int64 Gpr25;
  /* 0x00e8 */ unsigned __int64 Gpr26;
  /* 0x00f0 */ unsigned __int64 Gpr27;
  /* 0x00f8 */ unsigned __int64 Gpr28;
  /* 0x0100 */ unsigned __int64 Gpr29;
  /* 0x0108 */ unsigned __int64 Gpr30;
  /* 0x0110 */ unsigned __int64 Gpr31;
  /* 0x0118 */ unsigned long Cr;
  /* 0x011c */ unsigned long Xer;
  /* 0x0120 */ double Fpscr;
  /* 0x0128 */ double Fpr0;
  /* 0x0130 */ double Fpr1;
  /* 0x0138 */ double Fpr2;
  /* 0x0140 */ double Fpr3;
  /* 0x0148 */ double Fpr4;
  /* 0x0150 */ double Fpr5;
  /* 0x0158 */ double Fpr6;
  /* 0x0160 */ double Fpr7;
  /* 0x0168 */ double Fpr8;
  /* 0x0170 */ double Fpr9;
  /* 0x0178 */ double Fpr10;
  /* 0x0180 */ double Fpr11;
  /* 0x0188 */ double Fpr12;
  /* 0x0190 */ double Fpr13;
  /* 0x0198 */ double Fpr14;
  /* 0x01a0 */ double Fpr15;
  /* 0x01a8 */ double Fpr16;
  /* 0x01b0 */ double Fpr17;
  /* 0x01b8 */ double Fpr18;
  /* 0x01c0 */ double Fpr19;
  /* 0x01c8 */ double Fpr20;
  /* 0x01d0 */ double Fpr21;
  /* 0x01d8 */ double Fpr22;
  /* 0x01e0 */ double Fpr23;
  /* 0x01e8 */ double Fpr24;
  /* 0x01f0 */ double Fpr25;
  /* 0x01f8 */ double Fpr26;
  /* 0x0200 */ double Fpr27;
  /* 0x0208 */ double Fpr28;
  /* 0x0210 */ double Fpr29;
  /* 0x0218 */ double Fpr30;
  /* 0x0220 */ double Fpr31;
  /* 0x0228 */ unsigned long Fill[2];
  /* 0x0230 */ float Vscr[4];
  /* 0x0240 */ float Vr0[4];
  /* 0x0250 */ float Vr1[4];
  /* 0x0260 */ float Vr2[4];
  /* 0x0270 */ float Vr3[4];
  /* 0x0280 */ float Vr4[4];
  /* 0x0290 */ float Vr5[4];
  /* 0x02a0 */ float Vr6[4];
  /* 0x02b0 */ float Vr7[4];
  /* 0x02c0 */ float Vr8[4];
  /* 0x02d0 */ float Vr9[4];
  /* 0x02e0 */ float Vr10[4];
  /* 0x02f0 */ float Vr11[4];
  /* 0x0300 */ float Vr12[4];
  /* 0x0310 */ float Vr13[4];
  /* 0x0320 */ float Vr14[4];
  /* 0x0330 */ float Vr15[4];
  /* 0x0340 */ float Vr16[4];
  /* 0x0350 */ float Vr17[4];
  /* 0x0360 */ float Vr18[4];
  /* 0x0370 */ float Vr19[4];
  /* 0x0380 */ float Vr20[4];
  /* 0x0390 */ float Vr21[4];
  /* 0x03a0 */ float Vr22[4];
  /* 0x03b0 */ float Vr23[4];
  /* 0x03c0 */ float Vr24[4];
  /* 0x03d0 */ float Vr25[4];
  /* 0x03e0 */ float Vr26[4];
  /* 0x03f0 */ float Vr27[4];
  /* 0x0400 */ float Vr28[4];
  /* 0x0410 */ float Vr29[4];
  /* 0x0420 */ float Vr30[4];
  /* 0x0430 */ float Vr31[4];
  /* 0x0440 */ float Vr32[4];
  /* 0x0450 */ float Vr33[4];
  /* 0x0460 */ float Vr34[4];
  /* 0x0470 */ float Vr35[4];
  /* 0x0480 */ float Vr36[4];
  /* 0x0490 */ float Vr37[4];
  /* 0x04a0 */ float Vr38[4];
  /* 0x04b0 */ float Vr39[4];
  /* 0x04c0 */ float Vr40[4];
  /* 0x04d0 */ float Vr41[4];
  /* 0x04e0 */ float Vr42[4];
  /* 0x04f0 */ float Vr43[4];
  /* 0x0500 */ float Vr44[4];
  /* 0x0510 */ float Vr45[4];
  /* 0x0520 */ float Vr46[4];
  /* 0x0530 */ float Vr47[4];
  /* 0x0540 */ float Vr48[4];
  /* 0x0550 */ float Vr49[4];
  /* 0x0560 */ float Vr50[4];
  /* 0x0570 */ float Vr51[4];
  /* 0x0580 */ float Vr52[4];
  /* 0x0590 */ float Vr53[4];
  /* 0x05a0 */ float Vr54[4];
  /* 0x05b0 */ float Vr55[4];
  /* 0x05c0 */ float Vr56[4];
  /* 0x05d0 */ float Vr57[4];
  /* 0x05e0 */ float Vr58[4];
  /* 0x05f0 */ float Vr59[4];
  /* 0x0600 */ float Vr60[4];
  /* 0x0610 */ float Vr61[4];
  /* 0x0620 */ float Vr62[4];
  /* 0x0630 */ float Vr63[4];
  /* 0x0640 */ float Vr64[4];
  /* 0x0650 */ float Vr65[4];
  /* 0x0660 */ float Vr66[4];
  /* 0x0670 */ float Vr67[4];
  /* 0x0680 */ float Vr68[4];
  /* 0x0690 */ float Vr69[4];
  /* 0x06a0 */ float Vr70[4];
  /* 0x06b0 */ float Vr71[4];
  /* 0x06c0 */ float Vr72[4];
  /* 0x06d0 */ float Vr73[4];
  /* 0x06e0 */ float Vr74[4];
  /* 0x06f0 */ float Vr75[4];
  /* 0x0700 */ float Vr76[4];
  /* 0x0710 */ float Vr77[4];
  /* 0x0720 */ float Vr78[4];
  /* 0x0730 */ float Vr79[4];
  /* 0x0740 */ float Vr80[4];
  /* 0x0750 */ float Vr81[4];
  /* 0x0760 */ float Vr82[4];
  /* 0x0770 */ float Vr83[4];
  /* 0x0780 */ float Vr84[4];
  /* 0x0790 */ float Vr85[4];
  /* 0x07a0 */ float Vr86[4];
  /* 0x07b0 */ float Vr87[4];
  /* 0x07c0 */ float Vr88[4];
  /* 0x07d0 */ float Vr89[4];
  /* 0x07e0 */ float Vr90[4];
  /* 0x07f0 */ float Vr91[4];
  /* 0x0800 */ float Vr92[4];
  /* 0x0810 */ float Vr93[4];
  /* 0x0820 */ float Vr94[4];
  /* 0x0830 */ float Vr95[4];
  /* 0x0840 */ float Vr96[4];
  /* 0x0850 */ float Vr97[4];
  /* 0x0860 */ float Vr98[4];
  /* 0x0870 */ float Vr99[4];
  /* 0x0880 */ float Vr100[4];
  /* 0x0890 */ float Vr101[4];
  /* 0x08a0 */ float Vr102[4];
  /* 0x08b0 */ float Vr103[4];
  /* 0x08c0 */ float Vr104[4];
  /* 0x08d0 */ float Vr105[4];
  /* 0x08e0 */ float Vr106[4];
  /* 0x08f0 */ float Vr107[4];
  /* 0x0900 */ float Vr108[4];
  /* 0x0910 */ float Vr109[4];
  /* 0x0920 */ float Vr110[4];
  /* 0x0930 */ float Vr111[4];
  /* 0x0940 */ float Vr112[4];
  /* 0x0950 */ float Vr113[4];
  /* 0x0960 */ float Vr114[4];
  /* 0x0970 */ float Vr115[4];
  /* 0x0980 */ float Vr116[4];
  /* 0x0990 */ float Vr117[4];
  /* 0x09a0 */ float Vr118[4];
  /* 0x09b0 */ float Vr119[4];
  /* 0x09c0 */ float Vr120[4];
  /* 0x09d0 */ float Vr121[4];
  /* 0x09e0 */ float Vr122[4];
  /* 0x09f0 */ float Vr123[4];
  /* 0x0a00 */ float Vr124[4];
  /* 0x0a10 */ float Vr125[4];
  /* 0x0a20 */ float Vr126[4];
  /* 0x0a30 */ float Vr127[4];
} PPC_CONTEXT, *PPPC_CONTEXT; /* size: 0x0a40 */

typedef enum _SYSPART_EFI_DEVICE_TYPE
{
  SyspartEfiSystemDisk = 0,
  SyspartEfiSystemPartition = 1,
} SYSPART_EFI_DEVICE_TYPE, *PSYSPART_EFI_DEVICE_TYPE;

typedef enum _PTE_CHANGE_TYPE
{
  PteChanged = 0,
  PteHasReference = 1,
  PteNotTransition = 2,
} PTE_CHANGE_TYPE, *PPTE_CHANGE_TYPE;

struct MARK_HANDLE_INFO
{
  /* 0x0000 */ unsigned long UsnSourceInfo;
  /* 0x0004 */ long Padding_155;
  /* 0x0008 */ void* VolumeHandle;
  /* 0x0010 */ unsigned long HandleInfo;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef enum _SEGMENT_DEREFERENCE_OBJECT
{
  SegmentDereference = 0,
  UsedSegmentCleanup = 1,
  CloneDereference = 2,
  FreeSystemCacheVa = 3,
  ReclaimNonPagedPool = 4,
  SegMaximumObject = 5,
} SEGMENT_DEREFERENCE_OBJECT, *PSEGMENT_DEREFERENCE_OBJECT;

enum PLT_RBAR_STATE
{
  PLT_UNDEFINED = 0,
  PLT_START = 1,
  PLT_CYCLE = 2,
  PLT_COMPLETE = 3,
};

typedef enum _CONTEXT_TYPE
{
  VALUE_IS_OBJECT = 0,
  VALUE_IS_KEY = 1,
} CONTEXT_TYPE, *PCONTEXT_TYPE;

typedef enum _RESULT
{
  NotHive = 0,
  Fail = 1,
  NoMemory = 2,
  HiveSuccess = 3,
  RecoverHeader = 4,
  RecoverData = 5,
  SelfHeal = 6,
} RESULT, *PRESULT;

typedef struct _PS_MEMORY_RESERVE
{
  /* 0x0000 */ void* ReserveAddress;
  /* 0x0008 */ unsigned __int64 ReserveSize;
} PS_MEMORY_RESERVE, *PPS_MEMORY_RESERVE; /* size: 0x0010 */

typedef enum _PSP_NODE_PLACEMENT
{
  PspInheritNodeOption = 0,
  PspFixedNodeOption = 1,
  PspAllNodeOptions = 2,
} PSP_NODE_PLACEMENT, *PPSP_NODE_PLACEMENT;

typedef enum _VA_MATCH_TYPE
{
  TypeMismatch = 0,
  TypeLeaf = 1,
  TypeTable = 2,
} VA_MATCH_TYPE, *PVA_MATCH_TYPE;

enum BL_LOG_ENTRY_TYPE
{
  BlLogTypeHeader = 0,
  BlLogTypeFileId = 1,
  BlLogTypeFileAccess = 2,
  BlLogTypeDeviceId = 3,
  BlLogTypeDiskAccess = 4,
  BlLogTypeSessionStart = 5,
  BlLogTypeEtwEvent = 6,
  BlLogTypeMax = 7,
};

typedef struct _NT_TIB32
{
  /* 0x0000 */ unsigned long ExceptionList;
  /* 0x0004 */ unsigned long StackBase;
  /* 0x0008 */ unsigned long StackLimit;
  /* 0x000c */ unsigned long SubSystemTib;
  union
  {
    /* 0x0010 */ unsigned long FiberData;
    /* 0x0010 */ unsigned long Version;
  }; /* size: 0x0004 */
  /* 0x0014 */ unsigned long ArbitraryUserPointer;
  /* 0x0018 */ unsigned long Self;
} NT_TIB32, *PNT_TIB32; /* size: 0x001c */

typedef enum _PERFDIAG_TRACESTATE
{
  PerfDiagTraceState_Initialized = 0,
  PerfDiagTraceState_Boot_StartedSystemScenario = 1,
  PerfDiagTraceState_Boot_StoppedSystemScenario = 2,
  PerfDiagTraceState_Boot_StartedUserScenario = 3,
  PerfDiagTraceState_Boot_StoppedUserScenario = 4,
  PerfDiagTraceState_Shutdown_StartedScenario = 5,
  PerfDiagTraceState_Failed = 6,
} PERFDIAG_TRACESTATE, *PPERFDIAG_TRACESTATE;

typedef enum _VIRTUAL_DISK_ACCESS_MASK
{
  VIRTUAL_DISK_ACCESS_ATTACH_RO = 0x10000,
  VIRTUAL_DISK_ACCESS_ATTACH_RW = 0x20000,
  VIRTUAL_DISK_ACCESS_DETACH = 0x40000,
  VIRTUAL_DISK_ACCESS_GET_INFO = 0x80000,
  VIRTUAL_DISK_ACCESS_CREATE = 0x100000,
  VIRTUAL_DISK_ACCESS_METAOPS = 0x200000,
  VIRTUAL_DISK_ACCESS_READ = 0xd0000,
  VIRTUAL_DISK_ACCESS_ALL = 0x3f0000,
  VIRTUAL_DISK_ACCESS_WRITABLE = 0x320000,
} VIRTUAL_DISK_ACCESS_MASK, *PVIRTUAL_DISK_ACCESS_MASK;

typedef enum _OPEN_VIRTUAL_DISK_FLAG
{
  OPEN_VIRTUAL_DISK_FLAG_NONE = 0,
  OPEN_VIRTUAL_DISK_FLAG_NO_PARENTS = 1,
  OPEN_VIRTUAL_DISK_FLAG_BLANK_FILE = 2,
  OPEN_VIRTUAL_DISK_FLAG_BOOT_DRIVE = 4,
} OPEN_VIRTUAL_DISK_FLAG, *POPEN_VIRTUAL_DISK_FLAG;

typedef enum _KERNSNAP_APC_STATE
{
  KERNSNAP_APC_INITIALIZED = 0,
  KERNSNAP_APC_DISCARDED = 1,
  KERNSNAP_APC_PENDING = 2,
  KERNSNAP_APC_MAX_STATE = 3,
} KERNSNAP_APC_STATE, *PKERNSNAP_APC_STATE;

typedef struct _WMI_PNP_RECORD
{
  /* 0x0000 */ unsigned long IDLength;
  /* 0x0004 */ unsigned long DescriptionLength;
  /* 0x0008 */ unsigned long FriendlyNameLength;
  /* 0x000c */ wchar_t Strings[1];
  /* 0x000e */ char __PADDING__[2];
} WMI_PNP_RECORD, *PWMI_PNP_RECORD; /* size: 0x0010 */

typedef enum _SQM_EVENT
{
  SQM_EVENT_SETDWORD = 5,
  SQM_EVENT_INCREMENT_DWORD = 6,
  SQM_EVENT_SETSTRING = 10,
  SQM_EVENT_ADDTOSTREAM = 11,
} SQM_EVENT, *PSQM_EVENT;

enum XIPCMD
{
  XIPCMD_NOOP = 0,
  XIPCMD_GETBOOTPARAMETERS = 1,
  XIPCMD_GETBIOSPARAMETERS = 2,
};

typedef union _SM_PAGE_KEY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long KeyLow : 28; /* bit position: 0 */
      /* 0x0000 */ unsigned long KeyHigh : 4; /* bit position: 28 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long EntireKey;
  }; /* size: 0x0004 */
} SM_PAGE_KEY, *PSM_PAGE_KEY; /* size: 0x0004 */

struct SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY
{
  /* 0x0000 */ long Padding_156[4];
  /* 0x0010 */ union _SM_PAGE_KEY Key;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0014 */ unsigned long States : 16; /* bit position: 0 */
        /* 0x0014 */ unsigned long EvictFailed : 1; /* bit position: 16 */
      }; /* bitfield */
      /* 0x0014 */ unsigned long AllStates;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ StoreStates;
}; /* size: 0x0018 */

enum CHARTYPE
{
  CH_OTHER = 0,
  CH_PERCENT = 1,
  CH_DOT = 2,
  CH_STAR = 3,
  CH_ZERO = 4,
  CH_DIGIT = 5,
  CH_FLAG = 6,
  CH_SIZE = 7,
  CH_TYPE = 8,
};

enum ARG_TYPE
{
  eblank = 0,
  e_int_arg = 1,
  e_ptr_arg = 2,
  e_int64_arg = 3,
  e_long_long_arg = 4,
  e_long_arg = 5,
  e_longdouble_arg = 6,
  e_double_arg = 7,
};

struct tagStringHashElement
{
  /* 0x0000 */ unsigned short* szStr;
  /* 0x0008 */ unsigned long srStr;
  /* 0x000c */ long Padding_157;
  /* 0x0010 */ struct tagStringHashElement* pNext;
}; /* size: 0x0018 */

enum SCOPE_LEVEL
{
  ScopeLevelInterface = 1,
  ScopeLevelLink = 2,
  ScopeLevelSubnet = 3,
  ScopeLevelAdmin = 4,
  ScopeLevelSite = 5,
  ScopeLevelOrganization = 8,
  ScopeLevelGlobal = 14,
  ScopeLevelCount = 16,
};

enum NL_ADDRESS_TYPE
{
  NlatUnspecified = 0,
  NlatUnicast = 1,
  NlatAnycast = 2,
  NlatMulticast = 3,
  NlatBroadcast = 4,
  NlatInvalid = 5,
};

typedef struct _VPB
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short VolumeLabelLength;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ struct _DEVICE_OBJECT* RealDevice;
  /* 0x0018 */ unsigned long SerialNumber;
  /* 0x001c */ unsigned long ReferenceCount;
  /* 0x0020 */ wchar_t VolumeLabel[32];
} VPB, *PVPB; /* size: 0x0060 */

typedef struct _PPM_FFH_THROTTLE_STATE_INFO
{
  /* 0x0000 */ unsigned char EnableLogging;
  /* 0x0001 */ char Padding_158[3];
  /* 0x0004 */ unsigned long MismatchCount;
  /* 0x0008 */ unsigned char Initialized;
  /* 0x0009 */ char Padding_159[7];
  /* 0x0010 */ unsigned __int64 LastValue;
  /* 0x0018 */ union _LARGE_INTEGER LastLogTickCount;
} PPM_FFH_THROTTLE_STATE_INFO, *PPPM_FFH_THROTTLE_STATE_INFO; /* size: 0x0020 */

typedef struct _PROC_IDLE_SNAP
{
  /* 0x0000 */ unsigned __int64 Time;
  /* 0x0008 */ unsigned __int64 Idle;
} PROC_IDLE_SNAP, *PPROC_IDLE_SNAP; /* size: 0x0010 */

typedef struct _PROCESSOR_POWER_STATE
{
  /* 0x0000 */ struct _PPM_IDLE_STATES* IdleStates;
  /* 0x0008 */ unsigned __int64 IdleTimeLast;
  /* 0x0010 */ unsigned __int64 IdleTimeTotal;
  /* 0x0018 */ unsigned __int64 IdleTimeEntry;
  /* 0x0020 */ struct _PROC_IDLE_ACCOUNTING* IdleAccounting;
  /* 0x0028 */ enum _PROC_HYPERVISOR_STATE Hypervisor;
  /* 0x002c */ unsigned long PerfHistoryTotal;
  /* 0x0030 */ unsigned char ThermalConstraint;
  /* 0x0031 */ unsigned char PerfHistoryCount;
  /* 0x0032 */ unsigned char PerfHistorySlot;
  /* 0x0033 */ unsigned char Reserved;
  /* 0x0034 */ unsigned long LastSysTime;
  /* 0x0038 */ unsigned __int64 WmiDispatchPtr;
  /* 0x0040 */ long WmiInterfaceEnabled;
  /* 0x0044 */ long Padding_160;
  /* 0x0048 */ struct _PPM_FFH_THROTTLE_STATE_INFO FFHThrottleStateInfo;
  /* 0x0068 */ struct _KDPC PerfActionDpc;
  /* 0x00a8 */ volatile long PerfActionMask;
  /* 0x00ac */ long Padding_161;
  /* 0x00b0 */ struct _PROC_IDLE_SNAP IdleCheck;
  /* 0x00c0 */ struct _PROC_IDLE_SNAP PerfCheck;
  /* 0x00d0 */ struct _PROC_PERF_DOMAIN* Domain;
  /* 0x00d8 */ struct _PROC_PERF_CONSTRAINT* PerfConstraint;
  /* 0x00e0 */ struct _PROC_PERF_LOAD* Load;
  /* 0x00e8 */ struct _PROC_HISTORY_ENTRY* PerfHistory;
  /* 0x00f0 */ unsigned long Utility;
  /* 0x00f4 */ unsigned long OverUtilizedHistory;
  /* 0x00f8 */ volatile unsigned long AffinityCount;
  /* 0x00fc */ unsigned long AffinityHistory;
} PROCESSOR_POWER_STATE, *PPROCESSOR_POWER_STATE; /* size: 0x0100 */

typedef struct _HARD_DISK_IDENTIFIER
{
  /* 0x0000 */ unsigned long PartitionType;
  union
  {
    struct
    {
      /* 0x0004 */ unsigned long Signature;
    } /* size: 0x0004 */ Mbr;
    struct
    {
      /* 0x0004 */ struct _GUID Signature;
    } /* size: 0x0010 */ Gpt;
    struct
    {
      struct
      {
        /* 0x0004 */ unsigned long DiskNumber;
      } /* size: 0x0004 */ Raw;
      /* 0x0008 */ long __PADDING__[3];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} HARD_DISK_IDENTIFIER, *PHARD_DISK_IDENTIFIER; /* size: 0x0014 */

typedef struct _REMOVABLE_DISK_IDENTIFIER
{
  /* 0x0000 */ unsigned long DriveNumber;
} REMOVABLE_DISK_IDENTIFIER, *PREMOVABLE_DISK_IDENTIFIER; /* size: 0x0004 */

typedef struct _CDROM_IDENTIFIER
{
  /* 0x0000 */ unsigned long CdromNumber;
} CDROM_IDENTIFIER, *PCDROM_IDENTIFIER; /* size: 0x0004 */

typedef struct _FILE_PATH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned char FilePath[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_PATH, *PFILE_PATH; /* size: 0x0010 */

typedef struct _FILE_IDENTIFIER
{
  /* 0x0000 */ struct _FILE_PATH SourcePath;
} FILE_IDENTIFIER, *PFILE_IDENTIFIER; /* size: 0x0010 */

typedef struct _RAM_DISK_IDENTIFIER
{
  /* 0x0000 */ union _LARGE_INTEGER ImageBase;
  /* 0x0008 */ unsigned __int64 ImageSize;
  /* 0x0010 */ unsigned long ImageOffset;
  /* 0x0014 */ struct _FILE_IDENTIFIER Source;
} RAM_DISK_IDENTIFIER, *PRAM_DISK_IDENTIFIER; /* size: 0x0024 */

typedef struct _BLOCK_IO_IDENTIFIER
{
  /* 0x0000 */ unsigned long BlockIoType;
  union
  {
    union
    {
      /* 0x0004 */ struct _HARD_DISK_IDENTIFIER HardDisk;
      /* 0x0004 */ struct _REMOVABLE_DISK_IDENTIFIER RemovableDisk;
      /* 0x0004 */ struct _CDROM_IDENTIFIER Cdrom;
      /* 0x0004 */ struct _FILE_IDENTIFIER File;
      /* 0x0004 */ struct _RAM_DISK_IDENTIFIER RamDisk;
      /* 0x0004 */ struct _HARD_DISK_IDENTIFIER VirtualHardDisk;
    }; /* size: 0x0024 */
  } /* size: 0x0024 */ u;
} BLOCK_IO_IDENTIFIER, *PBLOCK_IO_IDENTIFIER; /* size: 0x0028 */

typedef struct _PARTITION_IDENTIFIER_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long BootEntry;
    } /* size: 0x0004 */ ElTorito;
    struct
    {
      /* 0x0000 */ struct _GUID PartitionSignature;
    } /* size: 0x0010 */ Gpt;
    struct
    {
      /* 0x0000 */ unsigned __int64 PartitionOffset;
    } /* size: 0x0008 */ Mbr;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct _BLOCK_IO_IDENTIFIER ParentIdentifier;
} PARTITION_IDENTIFIER_EX, *PPARTITION_IDENTIFIER_EX; /* size: 0x0038 */

typedef struct _PPM_IDLE_STATE
{
  /* 0x0000 */ struct _KAFFINITY_EX DomainMembers;
  /* 0x0028 */ void* IdleCheck /* function */;
  /* 0x0030 */ void* IdleHandler /* function */;
  /* 0x0038 */ unsigned __int64 HvConfig;
  /* 0x0040 */ void* Context;
  /* 0x0048 */ unsigned long Latency;
  /* 0x004c */ unsigned long Power;
  /* 0x0050 */ unsigned long TimeCheck;
  /* 0x0054 */ unsigned long StateFlags;
  /* 0x0058 */ unsigned char PromotePercent;
  /* 0x0059 */ unsigned char DemotePercent;
  /* 0x005a */ unsigned char PromotePercentBase;
  /* 0x005b */ unsigned char DemotePercentBase;
  /* 0x005c */ unsigned char StateType;
  /* 0x005d */ char __PADDING__[3];
} PPM_IDLE_STATE, *PPPM_IDLE_STATE; /* size: 0x0060 */

typedef struct _PPM_IDLE_STATES
{
  /* 0x0000 */ unsigned long Count;
  union
  {
    union
    {
      /* 0x0004 */ unsigned long AsULONG;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long AllowScaling : 1; /* bit position: 0 */
        /* 0x0004 */ unsigned long Disabled : 1; /* bit position: 1 */
        /* 0x0004 */ unsigned long HvMaxCState : 4; /* bit position: 2 */
        /* 0x0004 */ unsigned long Reserved : 26; /* bit position: 6 */
      }; /* bitfield */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Flags;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long ActualState;
  /* 0x0010 */ unsigned long OldState;
  /* 0x0014 */ unsigned char NewlyUnparked;
  /* 0x0015 */ char Padding_162[3];
  /* 0x0018 */ struct _KAFFINITY_EX TargetProcessors;
  /* 0x0040 */ struct _PPM_IDLE_STATE State[1];
} PPM_IDLE_STATES, *PPPM_IDLE_STATES; /* size: 0x00a0 */

typedef struct _TOKEN_USER
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES User;
} TOKEN_USER, *PTOKEN_USER; /* size: 0x0010 */

typedef struct _TOKEN_OWNER
{
  /* 0x0000 */ void* Owner;
} TOKEN_OWNER, *PTOKEN_OWNER; /* size: 0x0008 */

typedef struct _TOKEN_DEFAULT_DACL
{
  /* 0x0000 */ struct _ACL* DefaultDacl;
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL; /* size: 0x0008 */

typedef struct _LSA_TOKEN_INFORMATION_V1
{
  /* 0x0000 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0008 */ struct _TOKEN_USER User;
  /* 0x0018 */ struct _TOKEN_GROUPS* Groups;
  /* 0x0020 */ struct _TOKEN_PRIMARY_GROUP PrimaryGroup;
  /* 0x0028 */ struct _TOKEN_PRIVILEGES* Privileges;
  /* 0x0030 */ struct _TOKEN_OWNER Owner;
  /* 0x0038 */ struct _TOKEN_DEFAULT_DACL DefaultDacl;
} LSA_TOKEN_INFORMATION_V1, *PLSA_TOKEN_INFORMATION_V1; /* size: 0x0040 */

typedef struct _FILE_GET_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID Sid;
} FILE_GET_QUOTA_INFORMATION, *PFILE_GET_QUOTA_INFORMATION; /* size: 0x0014 */

typedef struct _IOFCOMPLETEREQUEST_STACKDATA
{
  /* 0x0000 */ struct _IOV_SESSION_DATA* IovSessionData;
  /* 0x0008 */ struct _IOV_REQUEST_PACKET* IovRequestPacket;
  /* 0x0010 */ unsigned char IsRemoveIrp;
  /* 0x0011 */ char Padding_163[3];
  /* 0x0014 */ long LocationsAdvanced;
  /* 0x0018 */ void* CompletionRoutine;
} IOFCOMPLETEREQUEST_STACKDATA, *PIOFCOMPLETEREQUEST_STACKDATA; /* size: 0x0020 */

typedef struct _KTRANSACTION
{
  /* 0x0000 */ struct _KEVENT OutcomeEvent;
  /* 0x0018 */ unsigned long cookie;
  /* 0x001c */ long Padding_164;
  /* 0x0020 */ struct _KMUTANT Mutex;
  /* 0x0058 */ struct _KTRANSACTION* TreeTx;
  /* 0x0060 */ struct _KTMOBJECT_NAMESPACE_LINK GlobalNamespaceLink;
  /* 0x0088 */ struct _KTMOBJECT_NAMESPACE_LINK TmNamespaceLink;
  /* 0x00b0 */ struct _GUID UOW;
  /* 0x00c0 */ enum _KTRANSACTION_STATE State;
  /* 0x00c4 */ unsigned long Flags;
  /* 0x00c8 */ struct _LIST_ENTRY EnlistmentHead;
  /* 0x00d8 */ unsigned long EnlistmentCount;
  /* 0x00dc */ unsigned long RecoverableEnlistmentCount;
  /* 0x00e0 */ unsigned long PrePrepareRequiredEnlistmentCount;
  /* 0x00e4 */ unsigned long PrepareRequiredEnlistmentCount;
  /* 0x00e8 */ unsigned long OutcomeRequiredEnlistmentCount;
  /* 0x00ec */ unsigned long PendingResponses;
  /* 0x00f0 */ struct _KENLISTMENT* SuperiorEnlistment;
  /* 0x00f8 */ union _CLS_LSN LastLsn;
  /* 0x0100 */ struct _LIST_ENTRY PromotedEntry;
  /* 0x0110 */ struct _KTRANSACTION* PromoterTransaction;
  /* 0x0118 */ void* PromotePropagation;
  /* 0x0120 */ unsigned long IsolationLevel;
  /* 0x0124 */ unsigned long IsolationFlags;
  /* 0x0128 */ union _LARGE_INTEGER Timeout;
  /* 0x0130 */ struct _UNICODE_STRING Description;
  /* 0x0140 */ struct _KTHREAD* RollbackThread;
  /* 0x0148 */ struct _WORK_QUEUE_ITEM RollbackWorkItem;
  /* 0x0168 */ struct _KDPC RollbackDpc;
  /* 0x01a8 */ struct _KTIMER RollbackTimer;
  /* 0x01e8 */ struct _LIST_ENTRY LsnOrderedEntry;
  /* 0x01f8 */ enum _KTRANSACTION_OUTCOME Outcome;
  /* 0x01fc */ long Padding_165;
  /* 0x0200 */ struct _KTM* Tm;
  /* 0x0208 */ __int64 CommitReservation;
  /* 0x0210 */ struct _KTRANSACTION_HISTORY TransactionHistory[10];
  /* 0x0260 */ unsigned long TransactionHistoryCount;
  /* 0x0264 */ long Padding_166;
  /* 0x0268 */ void* DTCPrivateInformation;
  /* 0x0270 */ unsigned long DTCPrivateInformationLength;
  /* 0x0274 */ long Padding_167;
  /* 0x0278 */ struct _KMUTANT DTCPrivateInformationMutex;
  /* 0x02b0 */ void* PromotedTxSelfHandle;
  /* 0x02b8 */ unsigned long PendingPromotionCount;
  /* 0x02bc */ long Padding_168;
  /* 0x02c0 */ struct _KEVENT PromotionCompletedEvent;
} KTRANSACTION, *PKTRANSACTION; /* size: 0x02d8 */

typedef struct _RTLP_RUN_ONCE_WAIT
{
  /* 0x0000 */ struct _RTLP_RUN_ONCE_WAIT* Next;
  /* 0x0008 */ struct _KGATE WakeGate;
} RTLP_RUN_ONCE_WAIT, *PRTLP_RUN_ONCE_WAIT; /* size: 0x0020 */

typedef struct _PERFINFO_PFN_INFORMATION
{
  /* 0x0000 */ unsigned __int64 PageFrameIndex;
} PERFINFO_PFN_INFORMATION, *PPERFINFO_PFN_INFORMATION; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER PerProcessUserTimeLimit;
  /* 0x0008 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0010 */ unsigned long LimitFlags;
  /* 0x0014 */ long Padding_169;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0028 */ unsigned long ActiveProcessLimit;
  /* 0x002c */ long Padding_170;
  /* 0x0030 */ unsigned __int64 Affinity;
  /* 0x0038 */ unsigned long PriorityClass;
  /* 0x003c */ unsigned long SchedulingClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION; /* size: 0x0040 */

typedef struct _DBGKD_RELEASE_BREAKPOINT
{
  /* 0x0000 */ unsigned long HardwareBreakPointNumber;
  /* 0x0004 */ unsigned long Released;
} DBGKD_RELEASE_BREAKPOINT, *PDBGKD_RELEASE_BREAKPOINT; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME32
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Previous;
  /* 0x0008 */ unsigned long Context;
} TEB_ACTIVE_FRAME32, *PTEB_ACTIVE_FRAME32; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING ServiceName;
  /* 0x0010 */ unsigned short* DeviceInstance;
  /* 0x0018 */ unsigned long DeviceInstanceLength;
  /* 0x001c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA, *PPLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA; /* size: 0x0020 */

typedef union _WHEA_TIMESTAMP
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Seconds : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Minutes : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 Hours : 8; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Precise : 1; /* bit position: 24 */
      /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 25 */
      /* 0x0000 */ unsigned __int64 Day : 8; /* bit position: 32 */
      /* 0x0000 */ unsigned __int64 Month : 8; /* bit position: 40 */
      /* 0x0000 */ unsigned __int64 Year : 8; /* bit position: 48 */
      /* 0x0000 */ unsigned __int64 Century : 8; /* bit position: 56 */
    }; /* bitfield */
    /* 0x0000 */ union _LARGE_INTEGER AsLARGE_INTEGER;
  }; /* size: 0x0008 */
} WHEA_TIMESTAMP, *PWHEA_TIMESTAMP; /* size: 0x0008 */

typedef struct _MOD_TYPE_STRINGS
{
  /* 0x0000 */ unsigned long dwModuleType;
  /* 0x0004 */ long Padding_171;
  /* 0x0008 */ unsigned short* szModuleType;
} MOD_TYPE_STRINGS, *PMOD_TYPE_STRINGS; /* size: 0x0010 */

typedef struct _VF_AVL_TREE_NODE
{
  /* 0x0000 */ void* p;
  /* 0x0008 */ unsigned __int64 RangeSize;
} VF_AVL_TREE_NODE, *PVF_AVL_TREE_NODE; /* size: 0x0010 */

typedef struct _VF_TARGET_ALL_SHARED_EXPORT_THUNKS
{
  /* 0x0000 */ struct _VERIFIER_SHARED_EXPORT_THUNK* SharedExportThunks;
  /* 0x0008 */ struct _VERIFIER_SHARED_EXPORT_THUNK* PoolSharedExportThunks;
  /* 0x0010 */ struct _VERIFIER_SHARED_EXPORT_THUNK* OrderDependentSharedExportThunks;
} VF_TARGET_ALL_SHARED_EXPORT_THUNKS, *PVF_TARGET_ALL_SHARED_EXPORT_THUNKS; /* size: 0x0018 */

typedef struct _VF_TARGET_DRIVER
{
  /* 0x0000 */ struct _VF_AVL_TREE_NODE TreeNode;
  union
  {
    union
    {
      /* 0x0010 */ struct _VF_TARGET_ALL_SHARED_EXPORT_THUNKS AllSharedExportThunks;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0010 */ unsigned long SnapSharedExportsFailed : 1; /* bit position: 0 */
          /* 0x0010 */ unsigned long Spare : 31; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0004 */ Flags;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u1;
  /* 0x0028 */ struct _VF_TARGET_VERIFIED_DRIVER_DATA* VerifiedData;
} VF_TARGET_DRIVER, *PVF_TARGET_DRIVER; /* size: 0x0030 */

typedef struct _KPROCESSOR_STATE
{
  /* 0x0000 */ struct _KSPECIAL_REGISTERS SpecialRegisters;
  /* 0x00d8 */ long Padding_172[2];
  /* 0x00e0 */ struct _CONTEXT ContextFrame;
} KPROCESSOR_STATE, *PKPROCESSOR_STATE; /* size: 0x05b0 */

typedef struct _GENERAL_LOOKASIDE_POOL
{
  union
  {
    /* 0x0000 */ union _SLIST_HEADER ListHead;
    /* 0x0000 */ struct _SINGLE_LIST_ENTRY SingleListHead;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned short Depth;
  /* 0x0012 */ unsigned short MaximumDepth;
  /* 0x0014 */ unsigned long TotalAllocates;
  union
  {
    /* 0x0018 */ unsigned long AllocateMisses;
    /* 0x0018 */ unsigned long AllocateHits;
  }; /* size: 0x0004 */
  /* 0x001c */ unsigned long TotalFrees;
  union
  {
    /* 0x0020 */ unsigned long FreeMisses;
    /* 0x0020 */ unsigned long FreeHits;
  }; /* size: 0x0004 */
  /* 0x0024 */ enum _POOL_TYPE Type;
  /* 0x0028 */ unsigned long Tag;
  /* 0x002c */ unsigned long Size;
  union
  {
    /* 0x0030 */ void* AllocateEx /* function */;
    /* 0x0030 */ void* Allocate /* function */;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ void* FreeEx /* function */;
    /* 0x0038 */ void* Free /* function */;
  }; /* size: 0x0008 */
  /* 0x0040 */ struct _LIST_ENTRY ListEntry;
  /* 0x0050 */ unsigned long LastTotalAllocates;
  union
  {
    /* 0x0054 */ unsigned long LastAllocateMisses;
    /* 0x0054 */ unsigned long LastAllocateHits;
  }; /* size: 0x0004 */
  /* 0x0058 */ unsigned long Future[2];
} GENERAL_LOOKASIDE_POOL, *PGENERAL_LOOKASIDE_POOL; /* size: 0x0060 */

typedef struct _KTIMER_TABLE
{
  /* 0x0000 */ struct _KTIMER* TimerExpiry[64];
  /* 0x0200 */ struct _KTIMER_TABLE_ENTRY TimerEntries[256];
} KTIMER_TABLE, *PKTIMER_TABLE; /* size: 0x2200 */

typedef struct _KREQUEST_PACKET
{
  /* 0x0000 */ void* CurrentPacket[3];
  /* 0x0018 */ void* WorkerRoutine /* function */;
} KREQUEST_PACKET, *PKREQUEST_PACKET; /* size: 0x0020 */

typedef struct _REQUEST_MAILBOX
{
  /* 0x0000 */ struct _REQUEST_MAILBOX* Next;
  /* 0x0008 */ __int64 RequestSummary;
  /* 0x0010 */ struct _KREQUEST_PACKET RequestPacket;
  /* 0x0030 */ long __PADDING__[4];
} REQUEST_MAILBOX, *PREQUEST_MAILBOX; /* size: 0x0040 */

typedef struct _KPRCB
{
  /* 0x0000 */ unsigned long MxCsr;
  /* 0x0004 */ unsigned char LegacyNumber;
  /* 0x0005 */ unsigned char ReservedMustBeZero;
  /* 0x0006 */ unsigned char InterruptRequest;
  /* 0x0007 */ unsigned char IdleHalt;
  /* 0x0008 */ struct _KTHREAD* CurrentThread;
  /* 0x0010 */ struct _KTHREAD* NextThread;
  /* 0x0018 */ struct _KTHREAD* IdleThread;
  /* 0x0020 */ unsigned char NestingLevel;
  /* 0x0021 */ unsigned char PrcbPad00[3];
  /* 0x0024 */ unsigned long Number;
  /* 0x0028 */ unsigned __int64 RspBase;
  /* 0x0030 */ unsigned __int64 PrcbLock;
  /* 0x0038 */ unsigned __int64 PrcbPad01;
  /* 0x0040 */ struct _KPROCESSOR_STATE ProcessorState;
  /* 0x05f0 */ char CpuType;
  /* 0x05f1 */ char CpuID;
  union
  {
    /* 0x05f2 */ unsigned short CpuStep;
    struct
    {
      /* 0x05f2 */ unsigned char CpuStepping;
      /* 0x05f3 */ unsigned char CpuModel;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x05f4 */ unsigned long MHz;
  /* 0x05f8 */ unsigned __int64 HalReserved[8];
  /* 0x0638 */ unsigned short MinorVersion;
  /* 0x063a */ unsigned short MajorVersion;
  /* 0x063c */ unsigned char BuildType;
  /* 0x063d */ unsigned char CpuVendor;
  /* 0x063e */ unsigned char CoresPerPhysicalProcessor;
  /* 0x063f */ unsigned char LogicalProcessorsPerCore;
  /* 0x0640 */ unsigned long ApicMask;
  /* 0x0644 */ unsigned long CFlushSize;
  /* 0x0648 */ void* AcpiReserved;
  /* 0x0650 */ unsigned long InitialApicId;
  /* 0x0654 */ unsigned long Stride;
  /* 0x0658 */ unsigned short Group;
  /* 0x065a */ char Padding_173[6];
  /* 0x0660 */ unsigned __int64 GroupSetMember;
  /* 0x0668 */ unsigned char GroupIndex;
  /* 0x0669 */ char Padding_174[7];
  /* 0x0670 */ struct _KSPIN_LOCK_QUEUE LockQueue[17];
  /* 0x0780 */ struct _PP_LOOKASIDE_LIST PPLookasideList[16];
  /* 0x0880 */ struct _GENERAL_LOOKASIDE_POOL PPNPagedLookasideList[32];
  /* 0x1480 */ struct _GENERAL_LOOKASIDE_POOL PPPagedLookasideList[32];
  /* 0x2080 */ volatile long PacketBarrier;
  /* 0x2084 */ long Padding_175;
  /* 0x2088 */ struct _SINGLE_LIST_ENTRY DeferredReadyListHead;
  /* 0x2090 */ volatile long MmPageFaultCount;
  /* 0x2094 */ volatile long MmCopyOnWriteCount;
  /* 0x2098 */ volatile long MmTransitionCount;
  /* 0x209c */ volatile long MmDemandZeroCount;
  /* 0x20a0 */ volatile long MmPageReadCount;
  /* 0x20a4 */ volatile long MmPageReadIoCount;
  /* 0x20a8 */ volatile long MmDirtyPagesWriteCount;
  /* 0x20ac */ volatile long MmDirtyWriteIoCount;
  /* 0x20b0 */ volatile long MmMappedPagesWriteCount;
  /* 0x20b4 */ volatile long MmMappedWriteIoCount;
  /* 0x20b8 */ unsigned long KeSystemCalls;
  /* 0x20bc */ unsigned long KeContextSwitches;
  /* 0x20c0 */ unsigned long CcFastReadNoWait;
  /* 0x20c4 */ unsigned long CcFastReadWait;
  /* 0x20c8 */ unsigned long CcFastReadNotPossible;
  /* 0x20cc */ unsigned long CcCopyReadNoWait;
  /* 0x20d0 */ unsigned long CcCopyReadWait;
  /* 0x20d4 */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x20d8 */ long LookasideIrpFloat;
  /* 0x20dc */ volatile long IoReadOperationCount;
  /* 0x20e0 */ volatile long IoWriteOperationCount;
  /* 0x20e4 */ volatile long IoOtherOperationCount;
  /* 0x20e8 */ union _LARGE_INTEGER IoReadTransferCount;
  /* 0x20f0 */ union _LARGE_INTEGER IoWriteTransferCount;
  /* 0x20f8 */ union _LARGE_INTEGER IoOtherTransferCount;
  /* 0x2100 */ volatile long TargetCount;
  /* 0x2104 */ volatile unsigned long IpiFrozen;
  /* 0x2108 */ long Padding_176[30];
  /* 0x2180 */ struct _KDPC_DATA DpcData[2];
  /* 0x21c0 */ void* DpcStack;
  /* 0x21c8 */ long MaximumDpcQueueDepth;
  /* 0x21cc */ unsigned long DpcRequestRate;
  /* 0x21d0 */ unsigned long MinimumDpcRate;
  /* 0x21d4 */ unsigned long DpcLastCount;
  /* 0x21d8 */ unsigned char ThreadDpcEnable;
  /* 0x21d9 */ volatile unsigned char QuantumEnd;
  /* 0x21da */ volatile unsigned char DpcRoutineActive;
  /* 0x21db */ volatile unsigned char IdleSchedule;
  union
  {
    /* 0x21dc */ volatile long DpcRequestSummary;
    /* 0x21dc */ short DpcRequestSlot[2];
    struct
    {
      /* 0x21dc */ short NormalDpcState;
      union
      {
        /* 0x21de */ volatile unsigned short DpcThreadActive : 1; /* bit position: 0 */
        /* 0x21de */ short ThreadDpcState;
      }; /* size: 0x0002 */
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x21e0 */ volatile unsigned long TimerHand;
  /* 0x21e4 */ long MasterOffset;
  /* 0x21e8 */ unsigned long LastTick;
  /* 0x21ec */ unsigned long UnusedPad;
  /* 0x21f0 */ unsigned __int64 PrcbPad50[2];
  /* 0x2200 */ struct _KTIMER_TABLE TimerTable;
  /* 0x4400 */ struct _KGATE DpcGate;
  /* 0x4418 */ void* PrcbPad52;
  /* 0x4420 */ struct _KDPC CallDpc;
  /* 0x4460 */ long ClockKeepAlive;
  /* 0x4464 */ unsigned char ClockCheckSlot;
  /* 0x4465 */ unsigned char ClockPollCycle;
  /* 0x4466 */ unsigned short NmiActive;
  /* 0x4468 */ long DpcWatchdogPeriod;
  /* 0x446c */ long DpcWatchdogCount;
  /* 0x4470 */ unsigned __int64 TickOffset;
  /* 0x4478 */ volatile long KeSpinLockOrdering;
  /* 0x447c */ unsigned long PrcbPad70;
  /* 0x4480 */ struct _LIST_ENTRY WaitListHead;
  /* 0x4490 */ unsigned __int64 WaitLock;
  /* 0x4498 */ unsigned long ReadySummary;
  /* 0x449c */ unsigned long QueueIndex;
  /* 0x44a0 */ struct _KDPC TimerExpirationDpc;
  /* 0x44e0 */ unsigned __int64 PrcbPad72[4];
  /* 0x4500 */ struct _LIST_ENTRY DispatcherReadyListHead[32];
  /* 0x4700 */ unsigned long InterruptCount;
  /* 0x4704 */ unsigned long KernelTime;
  /* 0x4708 */ unsigned long UserTime;
  /* 0x470c */ unsigned long DpcTime;
  /* 0x4710 */ unsigned long InterruptTime;
  /* 0x4714 */ unsigned long AdjustDpcThreshold;
  /* 0x4718 */ unsigned char DebuggerSavedIRQL;
  /* 0x4719 */ unsigned char PrcbPad80[7];
  /* 0x4720 */ unsigned long DpcTimeCount;
  /* 0x4724 */ unsigned long DpcTimeLimit;
  /* 0x4728 */ unsigned long PeriodicCount;
  /* 0x472c */ unsigned long PeriodicBias;
  /* 0x4730 */ unsigned long AvailableTime;
  /* 0x4734 */ unsigned long KeExceptionDispatchCount;
  /* 0x4738 */ struct _KNODE* ParentNode;
  /* 0x4740 */ unsigned __int64 StartCycles;
  /* 0x4748 */ unsigned __int64 PrcbPad82[3];
  /* 0x4760 */ volatile long MmSpinLockOrdering;
  /* 0x4764 */ unsigned long PageColor;
  /* 0x4768 */ unsigned long NodeColor;
  /* 0x476c */ unsigned long NodeShiftedColor;
  /* 0x4770 */ unsigned long SecondaryColorMask;
  /* 0x4774 */ unsigned long PrcbPad83;
  /* 0x4778 */ unsigned __int64 CycleTime;
  /* 0x4780 */ unsigned long CcFastMdlReadNoWait;
  /* 0x4784 */ unsigned long CcFastMdlReadWait;
  /* 0x4788 */ unsigned long CcFastMdlReadNotPossible;
  /* 0x478c */ unsigned long CcMapDataNoWait;
  /* 0x4790 */ unsigned long CcMapDataWait;
  /* 0x4794 */ unsigned long CcPinMappedDataCount;
  /* 0x4798 */ unsigned long CcPinReadNoWait;
  /* 0x479c */ unsigned long CcPinReadWait;
  /* 0x47a0 */ unsigned long CcMdlReadNoWait;
  /* 0x47a4 */ unsigned long CcMdlReadWait;
  /* 0x47a8 */ unsigned long CcLazyWriteHotSpots;
  /* 0x47ac */ unsigned long CcLazyWriteIos;
  /* 0x47b0 */ unsigned long CcLazyWritePages;
  /* 0x47b4 */ unsigned long CcDataFlushes;
  /* 0x47b8 */ unsigned long CcDataPages;
  /* 0x47bc */ unsigned long CcLostDelayedWrites;
  /* 0x47c0 */ unsigned long CcFastReadResourceMiss;
  /* 0x47c4 */ unsigned long CcCopyReadWaitMiss;
  /* 0x47c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x47cc */ unsigned long CcMapDataNoWaitMiss;
  /* 0x47d0 */ unsigned long CcMapDataWaitMiss;
  /* 0x47d4 */ unsigned long CcPinReadNoWaitMiss;
  /* 0x47d8 */ unsigned long CcPinReadWaitMiss;
  /* 0x47dc */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x47e0 */ unsigned long CcMdlReadWaitMiss;
  /* 0x47e4 */ unsigned long CcReadAheadIos;
  /* 0x47e8 */ volatile long MmCacheTransitionCount;
  /* 0x47ec */ volatile long MmCacheReadCount;
  /* 0x47f0 */ volatile long MmCacheIoCount;
  /* 0x47f4 */ unsigned long PrcbPad91[1];
  /* 0x47f8 */ unsigned __int64 RuntimeAccumulation;
  /* 0x4800 */ struct _PROCESSOR_POWER_STATE PowerState;
  /* 0x4900 */ unsigned char PrcbPad92[16];
  /* 0x4910 */ unsigned long KeAlignmentFixupCount;
  /* 0x4914 */ long Padding_177;
  /* 0x4918 */ struct _KDPC DpcWatchdogDpc;
  /* 0x4958 */ struct _KTIMER DpcWatchdogTimer;
  /* 0x4998 */ struct _CACHE_DESCRIPTOR Cache[5];
  /* 0x49d4 */ unsigned long CacheCount;
  /* 0x49d8 */ volatile unsigned long CachedCommit;
  /* 0x49dc */ volatile unsigned long CachedResidentAvailable;
  /* 0x49e0 */ void* HyperPte;
  /* 0x49e8 */ void* WheaInfo;
  /* 0x49f0 */ void* EtwSupport;
  /* 0x49f8 */ long Padding_178[2];
  /* 0x4a00 */ union _SLIST_HEADER InterruptObjectPool;
  /* 0x4a10 */ union _SLIST_HEADER HypercallPageList;
  /* 0x4a20 */ void* HypercallPageVirtual;
  /* 0x4a28 */ void* VirtualApicAssist;
  /* 0x4a30 */ unsigned __int64* StatisticsPage;
  /* 0x4a38 */ void* RateControl;
  /* 0x4a40 */ unsigned __int64 CacheProcessorMask[5];
  /* 0x4a68 */ struct _KAFFINITY_EX PackageProcessorSet;
  /* 0x4a90 */ unsigned __int64 CoreProcessorSet;
  /* 0x4a98 */ void* PebsIndexAddress;
  /* 0x4aa0 */ unsigned __int64 PrcbPad93[12];
  /* 0x4b00 */ unsigned long SpinLockAcquireCount;
  /* 0x4b04 */ unsigned long SpinLockContentionCount;
  /* 0x4b08 */ unsigned long SpinLockSpinCount;
  /* 0x4b0c */ unsigned long IpiSendRequestBroadcastCount;
  /* 0x4b10 */ unsigned long IpiSendRequestRoutineCount;
  /* 0x4b14 */ unsigned long IpiSendSoftwareInterruptCount;
  /* 0x4b18 */ unsigned long ExInitializeResourceCount;
  /* 0x4b1c */ unsigned long ExReInitializeResourceCount;
  /* 0x4b20 */ unsigned long ExDeleteResourceCount;
  /* 0x4b24 */ unsigned long ExecutiveResourceAcquiresCount;
  /* 0x4b28 */ unsigned long ExecutiveResourceContentionsCount;
  /* 0x4b2c */ unsigned long ExecutiveResourceReleaseExclusiveCount;
  /* 0x4b30 */ unsigned long ExecutiveResourceReleaseSharedCount;
  /* 0x4b34 */ unsigned long ExecutiveResourceConvertsCount;
  /* 0x4b38 */ unsigned long ExAcqResExclusiveAttempts;
  /* 0x4b3c */ unsigned long ExAcqResExclusiveAcquiresExclusive;
  /* 0x4b40 */ unsigned long ExAcqResExclusiveAcquiresExclusiveRecursive;
  /* 0x4b44 */ unsigned long ExAcqResExclusiveWaits;
  /* 0x4b48 */ unsigned long ExAcqResExclusiveNotAcquires;
  /* 0x4b4c */ unsigned long ExAcqResSharedAttempts;
  /* 0x4b50 */ unsigned long ExAcqResSharedAcquiresExclusive;
  /* 0x4b54 */ unsigned long ExAcqResSharedAcquiresShared;
  /* 0x4b58 */ unsigned long ExAcqResSharedAcquiresSharedRecursive;
  /* 0x4b5c */ unsigned long ExAcqResSharedWaits;
  /* 0x4b60 */ unsigned long ExAcqResSharedNotAcquires;
  /* 0x4b64 */ unsigned long ExAcqResSharedStarveExclusiveAttempts;
  /* 0x4b68 */ unsigned long ExAcqResSharedStarveExclusiveAcquiresExclusive;
  /* 0x4b6c */ unsigned long ExAcqResSharedStarveExclusiveAcquiresShared;
  /* 0x4b70 */ unsigned long ExAcqResSharedStarveExclusiveAcquiresSharedRecursive;
  /* 0x4b74 */ unsigned long ExAcqResSharedStarveExclusiveWaits;
  /* 0x4b78 */ unsigned long ExAcqResSharedStarveExclusiveNotAcquires;
  /* 0x4b7c */ unsigned long ExAcqResSharedWaitForExclusiveAttempts;
  /* 0x4b80 */ unsigned long ExAcqResSharedWaitForExclusiveAcquiresExclusive;
  /* 0x4b84 */ unsigned long ExAcqResSharedWaitForExclusiveAcquiresShared;
  /* 0x4b88 */ unsigned long ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive;
  /* 0x4b8c */ unsigned long ExAcqResSharedWaitForExclusiveWaits;
  /* 0x4b90 */ unsigned long ExAcqResSharedWaitForExclusiveNotAcquires;
  /* 0x4b94 */ unsigned long ExSetResOwnerPointerExclusive;
  /* 0x4b98 */ unsigned long ExSetResOwnerPointerSharedNew;
  /* 0x4b9c */ unsigned long ExSetResOwnerPointerSharedOld;
  /* 0x4ba0 */ unsigned long ExTryToAcqExclusiveAttempts;
  /* 0x4ba4 */ unsigned long ExTryToAcqExclusiveAcquires;
  /* 0x4ba8 */ unsigned long ExBoostExclusiveOwner;
  /* 0x4bac */ unsigned long ExBoostSharedOwners;
  /* 0x4bb0 */ unsigned long ExEtwSynchTrackingNotificationsCount;
  /* 0x4bb4 */ unsigned long ExEtwSynchTrackingNotificationsAccountedCount;
  /* 0x4bb8 */ unsigned char VendorString[13];
  /* 0x4bc5 */ unsigned char PrcbPad10[3];
  /* 0x4bc8 */ unsigned long FeatureBits;
  /* 0x4bcc */ long Padding_179;
  /* 0x4bd0 */ union _LARGE_INTEGER UpdateSignature;
  /* 0x4bd8 */ struct _CONTEXT* Context;
  /* 0x4be0 */ unsigned long ContextFlags;
  /* 0x4be4 */ long Padding_180;
  /* 0x4be8 */ struct _XSAVE_AREA* ExtendedState;
  /* 0x4bf0 */ long Padding_181[4];
  /* 0x4c00 */ struct _REQUEST_MAILBOX* Mailbox;
  /* 0x4c08 */ long Padding_182[30];
  /* 0x4c80 */ struct _REQUEST_MAILBOX RequestMailbox[1];
  /* 0x4cc0 */ long __PADDING__[16];
} KPRCB, *PKPRCB; /* size: 0x4d00 */

typedef struct _MAILSLOT_CREATE_PARAMETERS
{
  /* 0x0000 */ unsigned long MailslotQuota;
  /* 0x0004 */ unsigned long MaximumMessageSize;
  /* 0x0008 */ union _LARGE_INTEGER ReadTimeout;
  /* 0x0010 */ unsigned char TimeoutSpecified;
  /* 0x0011 */ char __PADDING__[7];
} MAILSLOT_CREATE_PARAMETERS, *PMAILSLOT_CREATE_PARAMETERS; /* size: 0x0018 */

typedef struct _X86_KSPECIAL_REGISTERS
{
  /* 0x0000 */ unsigned long Cr0;
  /* 0x0004 */ unsigned long Cr2;
  /* 0x0008 */ unsigned long Cr3;
  /* 0x000c */ unsigned long Cr4;
  /* 0x0010 */ unsigned long KernelDr0;
  /* 0x0014 */ unsigned long KernelDr1;
  /* 0x0018 */ unsigned long KernelDr2;
  /* 0x001c */ unsigned long KernelDr3;
  /* 0x0020 */ unsigned long KernelDr6;
  /* 0x0024 */ unsigned long KernelDr7;
  /* 0x0028 */ struct _X86_DESCRIPTOR Gdtr;
  /* 0x0030 */ struct _X86_DESCRIPTOR Idtr;
  /* 0x0038 */ unsigned short Tr;
  /* 0x003a */ unsigned short Ldtr;
  /* 0x003c */ unsigned long Reserved[6];
} X86_KSPECIAL_REGISTERS, *PX86_KSPECIAL_REGISTERS; /* size: 0x0054 */

typedef union _KEXECUTE_OPTIONS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char ExecuteDisable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned char ExecuteEnable : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned char DisableThunkEmulation : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned char Permanent : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned char ExecuteDispatchEnable : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned char ImageDispatchEnable : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned char DisableExceptionChainValidation : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned char Spare : 1; /* bit position: 7 */
    }; /* bitfield */
    /* 0x0000 */ volatile unsigned char ExecuteOptions;
  }; /* size: 0x0001 */
} KEXECUTE_OPTIONS, *PKEXECUTE_OPTIONS; /* size: 0x0001 */

typedef union _KSTACK_COUNT
{
  union
  {
    /* 0x0000 */ volatile long Value;
    struct /* bitfield */
    {
      /* 0x0000 */ volatile unsigned long State : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned long StackCount : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} KSTACK_COUNT, *PKSTACK_COUNT; /* size: 0x0004 */

typedef struct _KGUARDED_MUTEX
{
  /* 0x0000 */ volatile long Count;
  /* 0x0004 */ long Padding_183;
  /* 0x0008 */ struct _KTHREAD* Owner;
  /* 0x0010 */ unsigned long Contention;
  /* 0x0014 */ long Padding_184;
  /* 0x0018 */ struct _KGATE Gate;
  union
  {
    struct
    {
      /* 0x0030 */ short KernelApcDisable;
      /* 0x0032 */ short SpecialApcDisable;
    }; /* size: 0x0004 */
    /* 0x0030 */ unsigned long CombinedApcDisable;
  }; /* size: 0x0004 */
  /* 0x0034 */ long __PADDING__[1];
} KGUARDED_MUTEX, *PKGUARDED_MUTEX; /* size: 0x0038 */

typedef struct _KPROCESS
{
  /* 0x0000 */ struct _DISPATCHER_HEADER Header;
  /* 0x0018 */ struct _LIST_ENTRY ProfileListHead;
  /* 0x0028 */ unsigned __int64 DirectoryTableBase;
  /* 0x0030 */ struct _LIST_ENTRY ThreadListHead;
  /* 0x0040 */ unsigned __int64 ProcessLock;
  /* 0x0048 */ struct _KAFFINITY_EX Affinity;
  /* 0x0070 */ struct _LIST_ENTRY ReadyListHead;
  /* 0x0080 */ struct _SINGLE_LIST_ENTRY SwapListEntry;
  /* 0x0088 */ volatile struct _KAFFINITY_EX ActiveProcessors;
  union
  {
    struct /* bitfield */
    {
      /* 0x00b0 */ volatile long AutoAlignment : 1; /* bit position: 0 */
      /* 0x00b0 */ volatile long DisableBoost : 1; /* bit position: 1 */
      /* 0x00b0 */ volatile long DisableQuantum : 1; /* bit position: 2 */
      /* 0x00b0 */ volatile unsigned long ActiveGroupsMask : 4; /* bit position: 3 */
      /* 0x00b0 */ volatile long ReservedFlags : 25; /* bit position: 7 */
    }; /* bitfield */
    /* 0x00b0 */ volatile long ProcessFlags;
  }; /* size: 0x0004 */
  /* 0x00b4 */ char BasePriority;
  /* 0x00b5 */ char QuantumReset;
  /* 0x00b6 */ unsigned char Visited;
  /* 0x00b7 */ unsigned char Unused3;
  /* 0x00b8 */ unsigned long ThreadSeed[4];
  /* 0x00c8 */ unsigned short IdealNode[4];
  /* 0x00d0 */ unsigned short IdealGlobalNode;
  /* 0x00d2 */ union _KEXECUTE_OPTIONS Flags;
  /* 0x00d3 */ unsigned char Unused1;
  /* 0x00d4 */ unsigned long Unused2;
  /* 0x00d8 */ unsigned long Unused4;
  /* 0x00dc */ union _KSTACK_COUNT StackCount;
  /* 0x00e0 */ struct _LIST_ENTRY ProcessListEntry;
  /* 0x00f0 */ volatile unsigned __int64 CycleTime;
  /* 0x00f8 */ unsigned long KernelTime;
  /* 0x00fc */ unsigned long UserTime;
  /* 0x0100 */ void* InstrumentationCallback;
  /* 0x0108 */ union _KGDTENTRY64 LdtSystemDescriptor;
  /* 0x0118 */ void* LdtBaseAddress;
  /* 0x0120 */ struct _KGUARDED_MUTEX LdtProcessLock;
  /* 0x0158 */ unsigned short LdtFreeSelectorHint;
  /* 0x015a */ unsigned short LdtTableLength;
  /* 0x015c */ long __PADDING__[1];
} KPROCESS, *PKPROCESS; /* size: 0x0160 */

typedef struct _TEB_ACTIVE_FRAME64
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_185;
  /* 0x0008 */ unsigned __int64 Previous;
  /* 0x0010 */ unsigned __int64 Context;
} TEB_ACTIVE_FRAME64, *PTEB_ACTIVE_FRAME64; /* size: 0x0018 */

typedef struct _FSRTL_ADVANCED_FCB_HEADER
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteSize;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char IsFastIoPossible;
  /* 0x0006 */ unsigned char Flags2;
  struct /* bitfield */
  {
    /* 0x0007 */ unsigned char Reserved : 4; /* bit position: 0 */
    /* 0x0007 */ unsigned char Version : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0008 */ struct _ERESOURCE* Resource;
  /* 0x0010 */ struct _ERESOURCE* PagingIoResource;
  /* 0x0018 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0020 */ union _LARGE_INTEGER FileSize;
  /* 0x0028 */ union _LARGE_INTEGER ValidDataLength;
  /* 0x0030 */ struct _FAST_MUTEX* FastMutex;
  /* 0x0038 */ struct _LIST_ENTRY FilterContexts;
  /* 0x0048 */ struct _EX_PUSH_LOCK PushLock;
  /* 0x0050 */ void** FileContextSupportPointer;
} FSRTL_ADVANCED_FCB_HEADER, *PFSRTL_ADVANCED_FCB_HEADER; /* size: 0x0058 */

typedef struct _SHARE_ACCESS
{
  /* 0x0000 */ unsigned long OpenCount;
  /* 0x0004 */ unsigned long Readers;
  /* 0x0008 */ unsigned long Writers;
  /* 0x000c */ unsigned long Deleters;
  /* 0x0010 */ unsigned long SharedRead;
  /* 0x0014 */ unsigned long SharedWrite;
  /* 0x0018 */ unsigned long SharedDelete;
} SHARE_ACCESS, *PSHARE_ACCESS; /* size: 0x001c */

typedef struct _FAST_MUTEX
{
  /* 0x0000 */ volatile long Count;
  /* 0x0004 */ long Padding_186;
  /* 0x0008 */ struct _KTHREAD* Owner;
  /* 0x0010 */ unsigned long Contention;
  /* 0x0014 */ long Padding_187;
  /* 0x0018 */ struct _KEVENT Event;
  /* 0x0030 */ unsigned long OldIrql;
  /* 0x0034 */ long __PADDING__[1];
} FAST_MUTEX, *PFAST_MUTEX; /* size: 0x0038 */

typedef struct _VCB
{
  /* 0x0000 */ struct _FSRTL_ADVANCED_FCB_HEADER VolumeFileHeader;
  /* 0x0058 */ unsigned long VcbState;
  /* 0x005c */ unsigned long OpenCount;
  /* 0x0060 */ unsigned long ReferenceCount;
  /* 0x0064 */ struct _SHARE_ACCESS ShareAccess;
  /* 0x0080 */ unsigned long BytesPerSector;
  /* 0x0084 */ long Padding_188;
  /* 0x0088 */ union _LARGE_INTEGER SectorsOnDisk;
  /* 0x0090 */ struct _LIST_ENTRY VcbLinks;
  /* 0x00a0 */ struct _DEVICE_OBJECT* TargetDeviceObject;
  /* 0x00a8 */ struct _VPB* Vpb;
  /* 0x00b0 */ struct _VPB* SpareVpb;
  /* 0x00b8 */ struct _FILE_OBJECT* FileObjectForDismount;
  /* 0x00c0 */ struct _FILE_OBJECT* FileObjectForLock;
  /* 0x00c8 */ struct _EX_RUNDOWN_REF_CACHE_AWARE* OutstandingOperations;
  /* 0x00d0 */ struct _FAST_MUTEX VcbLock;
  /* 0x0108 */ struct _FAST_MUTEX AdvancedFcbHeaderMutex;
} VCB, *PVCB; /* size: 0x0140 */

typedef struct _TABLE_ENTRY_HEADER
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedLinks;
  /* 0x0020 */ __int64 UserData;
} TABLE_ENTRY_HEADER, *PTABLE_ENTRY_HEADER; /* size: 0x0028 */

typedef struct _PHYSICAL_MEMORY_RANGE
{
  /* 0x0000 */ union _LARGE_INTEGER BaseAddress;
  /* 0x0008 */ union _LARGE_INTEGER NumberOfBytes;
} PHYSICAL_MEMORY_RANGE, *PPHYSICAL_MEMORY_RANGE; /* size: 0x0010 */

typedef struct _DISK_SIGNATURE
{
  /* 0x0000 */ unsigned long PartitionStyle;
  union
  {
    struct
    {
      /* 0x0004 */ unsigned long Signature;
      /* 0x0008 */ unsigned long CheckSum;
    } /* size: 0x0008 */ Mbr;
    struct
    {
      /* 0x0004 */ struct _GUID DiskId;
    } /* size: 0x0010 */ Gpt;
  }; /* size: 0x0010 */
} DISK_SIGNATURE, *PDISK_SIGNATURE; /* size: 0x0014 */

typedef union _HV_X64_MSR_POWER_STATE_CONFIG
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 TypeSpecific : 52; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ChangeType : 4; /* bit position: 52 */
      /* 0x0000 */ unsigned __int64 CheckBM_STS : 1; /* bit position: 56 */
      /* 0x0000 */ unsigned __int64 SetBM_RST : 1; /* bit position: 57 */
      /* 0x0000 */ unsigned __int64 ClearBM_RST : 1; /* bit position: 58 */
      /* 0x0000 */ unsigned __int64 SetARB_DIS : 1; /* bit position: 59 */
      /* 0x0000 */ unsigned __int64 Reserved : 4; /* bit position: 60 */
    }; /* bitfield */
    struct
    {
      /* 0x0000 */ unsigned __int64 ReservedZ : 52; /* bit position: 0 */
    } /* size: 0x0008 */ Hlt;
    struct
    {
      /* 0x0000 */ unsigned short Port;
      /* 0x0002 */ unsigned short ReservedZ1;
      /* 0x0004 */ unsigned int ReservedZ2 : 20; /* bit position: 0 */
    } /* size: 0x0008 */ Io;
    struct
    {
      /* 0x0000 */ unsigned __int64 Address : 52; /* bit position: 0 */
    } /* size: 0x0008 */ Memory;
    struct
    {
      /* 0x0000 */ unsigned int Hints;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned int BreakOnMaskedInterrupt : 1; /* bit position: 0 */
        /* 0x0004 */ unsigned int Reserved : 19; /* bit position: 1 */
      }; /* bitfield */
    } /* size: 0x0008 */ Mwait;
  }; /* size: 0x0008 */
} HV_X64_MSR_POWER_STATE_CONFIG, *PHV_X64_MSR_POWER_STATE_CONFIG; /* size: 0x0008 */

typedef struct _PCI_CAPABILITIES_HEADER
{
  /* 0x0000 */ unsigned char CapabilityID;
  /* 0x0001 */ unsigned char Next;
} PCI_CAPABILITIES_HEADER, *PPCI_CAPABILITIES_HEADER; /* size: 0x0002 */

typedef struct _PM_SUPPORT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Rsvd2 : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char D1 : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char D2 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char PMED0 : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char PMED1 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char PMED2 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char PMED3Hot : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char PMED3Cold : 1; /* bit position: 7 */
  }; /* bitfield */
} PM_SUPPORT, *PPM_SUPPORT; /* size: 0x0001 */

typedef struct _PCI_PMC
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Version : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char PMEClock : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Rsvd1 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char DeviceSpecificInitialization : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Rsvd2 : 2; /* bit position: 6 */
  }; /* bitfield */
  /* 0x0001 */ struct _PM_SUPPORT Support;
} PCI_PMC, *PPCI_PMC; /* size: 0x0002 */

typedef struct _PCI_PM_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  union
  {
    union
    {
      /* 0x0002 */ struct _PCI_PMC Capabilities;
      /* 0x0002 */ unsigned short AsUSHORT;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ PMC;
  union
  {
    union
    {
      /* 0x0004 */ struct _PCI_PMCSR ControlStatus;
      /* 0x0004 */ unsigned short AsUSHORT;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ PMCSR;
  union
  {
    union
    {
      /* 0x0006 */ struct _PCI_PMCSR_BSE BridgeSupport;
      /* 0x0006 */ unsigned char AsUCHAR;
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ PMCSR_BSE;
  /* 0x0007 */ unsigned char Data;
} PCI_PM_CAPABILITY, *PPCI_PM_CAPABILITY; /* size: 0x0008 */

typedef struct _TRIAGE_PNP_DEVICE_COMPLETION_QUEUE
{
  /* 0x0000 */ struct _LIST_ENTRY DispatchedList;
} TRIAGE_PNP_DEVICE_COMPLETION_QUEUE, *PTRIAGE_PNP_DEVICE_COMPLETION_QUEUE; /* size: 0x0010 */

typedef struct _ETW_THREAD_AFFINITY_EVENT
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned short Group;
  /* 0x000e */ unsigned short Reserved;
} ETW_THREAD_AFFINITY_EVENT, *PETW_THREAD_AFFINITY_EVENT; /* size: 0x0010 */

typedef struct _ALPC_DISPATCH_CONTEXT
{
  /* 0x0000 */ struct _ALPC_PORT* PortObject;
  /* 0x0008 */ struct _KALPC_MESSAGE* Message;
  /* 0x0010 */ struct _ALPC_COMMUNICATION_INFO* CommunicationInfo;
  /* 0x0018 */ struct _ETHREAD* TargetThread;
  /* 0x0020 */ struct _ALPC_PORT* TargetPort;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short TotalLength;
  /* 0x002e */ unsigned short Type;
  /* 0x0030 */ unsigned short DataInfoOffset;
  /* 0x0032 */ char __PADDING__[6];
} ALPC_DISPATCH_CONTEXT, *PALPC_DISPATCH_CONTEXT; /* size: 0x0038 */

typedef union _PS_CLIENT_SECURITY_CONTEXT
{
  union
  {
    /* 0x0000 */ unsigned __int64 ImpersonationData;
    /* 0x0000 */ void* ImpersonationToken;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 ImpersonationLevel : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 EffectiveOnly : 1; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} PS_CLIENT_SECURITY_CONTEXT, *PPS_CLIENT_SECURITY_CONTEXT; /* size: 0x0008 */

typedef struct _ETHREAD
{
  /* 0x0000 */ struct _KTHREAD Tcb;
  /* 0x0360 */ union _LARGE_INTEGER CreateTime;
  union
  {
    /* 0x0368 */ union _LARGE_INTEGER ExitTime;
    /* 0x0368 */ struct _LIST_ENTRY KeyedWaitChain;
  }; /* size: 0x0010 */
  /* 0x0378 */ long ExitStatus;
  /* 0x037c */ long Padding_189;
  union
  {
    /* 0x0380 */ struct _LIST_ENTRY PostBlockList;
    struct
    {
      /* 0x0380 */ void* ForwardLinkShadow;
      /* 0x0388 */ void* StartAddress;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0390 */ struct _TERMINATION_PORT* TerminationPort;
    /* 0x0390 */ struct _ETHREAD* ReaperLink;
    /* 0x0390 */ void* KeyedWaitValue;
  }; /* size: 0x0008 */
  /* 0x0398 */ unsigned __int64 ActiveTimerListLock;
  /* 0x03a0 */ struct _LIST_ENTRY ActiveTimerListHead;
  /* 0x03b0 */ struct _CLIENT_ID Cid;
  union
  {
    /* 0x03c0 */ struct _KSEMAPHORE KeyedWaitSemaphore;
    /* 0x03c0 */ struct _KSEMAPHORE AlpcWaitSemaphore;
  }; /* size: 0x0020 */
  /* 0x03e0 */ union _PS_CLIENT_SECURITY_CONTEXT ClientSecurity;
  /* 0x03e8 */ struct _LIST_ENTRY IrpList;
  /* 0x03f8 */ unsigned __int64 TopLevelIrp;
  /* 0x0400 */ struct _DEVICE_OBJECT* DeviceToVerify;
  /* 0x0408 */ union _PSP_CPU_QUOTA_APC* CpuQuotaApc;
  /* 0x0410 */ void* Win32StartAddress;
  /* 0x0418 */ void* LegacyPowerObject;
  /* 0x0420 */ struct _LIST_ENTRY ThreadListEntry;
  /* 0x0430 */ struct _EX_RUNDOWN_REF RundownProtect;
  /* 0x0438 */ struct _EX_PUSH_LOCK ThreadLock;
  /* 0x0440 */ unsigned long ReadClusterSize;
  /* 0x0444 */ volatile long MmLockOrdering;
  union
  {
    /* 0x0448 */ unsigned long CrossThreadFlags;
    struct /* bitfield */
    {
      /* 0x0448 */ unsigned long Terminated : 1; /* bit position: 0 */
      /* 0x0448 */ unsigned long ThreadInserted : 1; /* bit position: 1 */
      /* 0x0448 */ unsigned long HideFromDebugger : 1; /* bit position: 2 */
      /* 0x0448 */ unsigned long ActiveImpersonationInfo : 1; /* bit position: 3 */
      /* 0x0448 */ unsigned long SystemThread : 1; /* bit position: 4 */
      /* 0x0448 */ unsigned long HardErrorsAreDisabled : 1; /* bit position: 5 */
      /* 0x0448 */ unsigned long BreakOnTermination : 1; /* bit position: 6 */
      /* 0x0448 */ unsigned long SkipCreationMsg : 1; /* bit position: 7 */
      /* 0x0448 */ unsigned long SkipTerminationMsg : 1; /* bit position: 8 */
      /* 0x0448 */ unsigned long CopyTokenOnOpen : 1; /* bit position: 9 */
      /* 0x0448 */ unsigned long ThreadIoPriority : 3; /* bit position: 10 */
      /* 0x0448 */ unsigned long ThreadPagePriority : 3; /* bit position: 13 */
      /* 0x0448 */ unsigned long RundownFail : 1; /* bit position: 16 */
      /* 0x0448 */ unsigned long NeedsWorkingSetAging : 1; /* bit position: 17 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    /* 0x044c */ unsigned long SameThreadPassiveFlags;
    struct /* bitfield */
    {
      /* 0x044c */ unsigned long ActiveExWorker : 1; /* bit position: 0 */
      /* 0x044c */ unsigned long ExWorkerCanWaitUser : 1; /* bit position: 1 */
      /* 0x044c */ unsigned long MemoryMaker : 1; /* bit position: 2 */
      /* 0x044c */ unsigned long ClonedThread : 1; /* bit position: 3 */
      /* 0x044c */ unsigned long KeyedEventInUse : 1; /* bit position: 4 */
      /* 0x044c */ unsigned long RateApcState : 2; /* bit position: 5 */
      /* 0x044c */ unsigned long SelfTerminate : 1; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    /* 0x0450 */ unsigned long SameThreadApcFlags;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0450 */ unsigned char Spare : 1; /* bit position: 0 */
        /* 0x0450 */ volatile unsigned char StartAddressInvalid : 1; /* bit position: 1 */
        /* 0x0450 */ unsigned char EtwPageFaultCalloutActive : 1; /* bit position: 2 */
        /* 0x0450 */ unsigned char OwnsProcessWorkingSetExclusive : 1; /* bit position: 3 */
        /* 0x0450 */ unsigned char OwnsProcessWorkingSetShared : 1; /* bit position: 4 */
        /* 0x0450 */ unsigned char OwnsSystemCacheWorkingSetExclusive : 1; /* bit position: 5 */
        /* 0x0450 */ unsigned char OwnsSystemCacheWorkingSetShared : 1; /* bit position: 6 */
        /* 0x0450 */ unsigned char OwnsSessionWorkingSetExclusive : 1; /* bit position: 7 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0451 */ unsigned char OwnsSessionWorkingSetShared : 1; /* bit position: 0 */
        /* 0x0451 */ unsigned char OwnsProcessAddressSpaceExclusive : 1; /* bit position: 1 */
        /* 0x0451 */ unsigned char OwnsProcessAddressSpaceShared : 1; /* bit position: 2 */
        /* 0x0451 */ unsigned char SuppressSymbolLoad : 1; /* bit position: 3 */
        /* 0x0451 */ unsigned char Prefetching : 1; /* bit position: 4 */
        /* 0x0451 */ unsigned char OwnsDynamicMemoryShared : 1; /* bit position: 5 */
        /* 0x0451 */ unsigned char OwnsChangeControlAreaExclusive : 1; /* bit position: 6 */
        /* 0x0451 */ unsigned char OwnsChangeControlAreaShared : 1; /* bit position: 7 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0452 */ unsigned char OwnsPagedPoolWorkingSetExclusive : 1; /* bit position: 0 */
        /* 0x0452 */ unsigned char OwnsPagedPoolWorkingSetShared : 1; /* bit position: 1 */
        /* 0x0452 */ unsigned char OwnsSystemPtesWorkingSetExclusive : 1; /* bit position: 2 */
        /* 0x0452 */ unsigned char OwnsSystemPtesWorkingSetShared : 1; /* bit position: 3 */
        /* 0x0452 */ unsigned char TrimTrigger : 2; /* bit position: 4 */
        /* 0x0452 */ unsigned char Spare1 : 2; /* bit position: 6 */
      }; /* bitfield */
      /* 0x0453 */ unsigned char PriorityRegionActive;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0454 */ unsigned char CacheManagerActive;
  /* 0x0455 */ unsigned char DisablePageFaultClustering;
  /* 0x0456 */ unsigned char ActiveFaultCount;
  /* 0x0457 */ unsigned char LockOrderState;
  /* 0x0458 */ unsigned __int64 AlpcMessageId;
  union
  {
    /* 0x0460 */ void* AlpcMessage;
    /* 0x0460 */ unsigned long AlpcReceiveAttributeSet;
  }; /* size: 0x0008 */
  /* 0x0468 */ struct _LIST_ENTRY AlpcWaitListEntry;
  /* 0x0478 */ unsigned long CacheManagerCount;
  /* 0x047c */ unsigned long IoBoostCount;
  /* 0x0480 */ unsigned __int64 IrpListLock;
  /* 0x0488 */ void* ReservedForSynchTracking;
  /* 0x0490 */ struct _SINGLE_LIST_ENTRY CmCallbackListHead;
} ETHREAD, *PETHREAD; /* size: 0x0498 */

typedef struct _DEVICE_DESCRIPTION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned char Master;
  /* 0x0005 */ unsigned char ScatterGather;
  /* 0x0006 */ unsigned char DemandMode;
  /* 0x0007 */ unsigned char AutoInitialize;
  /* 0x0008 */ unsigned char Dma32BitAddresses;
  /* 0x0009 */ unsigned char IgnoreCount;
  /* 0x000a */ unsigned char Reserved1;
  /* 0x000b */ unsigned char Dma64BitAddresses;
  /* 0x000c */ unsigned long BusNumber;
  /* 0x0010 */ unsigned long DmaChannel;
  /* 0x0014 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0018 */ enum _DMA_WIDTH DmaWidth;
  /* 0x001c */ enum _DMA_SPEED DmaSpeed;
  /* 0x0020 */ unsigned long MaximumLength;
  /* 0x0024 */ unsigned long DmaPort;
} DEVICE_DESCRIPTION, *PDEVICE_DESCRIPTION; /* size: 0x0028 */

typedef struct _IA64_KSWITCH_FRAME
{
  /* 0x0000 */ unsigned __int64 SwitchPredicates;
  /* 0x0008 */ unsigned __int64 SwitchRp;
  /* 0x0010 */ unsigned __int64 SwitchPFS;
  /* 0x0018 */ unsigned __int64 SwitchFPSR;
  /* 0x0020 */ unsigned __int64 SwitchBsp;
  /* 0x0028 */ unsigned __int64 SwitchRnat;
  /* 0x0030 */ struct _IA64_KEXCEPTION_FRAME SwitchExceptionFrame;
} IA64_KSWITCH_FRAME, *PIA64_KSWITCH_FRAME; /* size: 0x01d0 */

typedef struct _CLIENT_ID32
{
  /* 0x0000 */ unsigned long UniqueProcess;
  /* 0x0004 */ unsigned long UniqueThread;
} CLIENT_ID32, *PCLIENT_ID32; /* size: 0x0008 */

typedef struct _PORT_MESSAGE32
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ short DataLength;
        /* 0x0002 */ short TotalLength;
      } /* size: 0x0004 */ s1;
      /* 0x0000 */ unsigned long Length;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ short Type;
        /* 0x0006 */ short DataInfoOffset;
      } /* size: 0x0004 */ s2;
      /* 0x0004 */ unsigned long ZeroInit;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  union
  {
    /* 0x0008 */ struct _CLIENT_ID32 ClientId;
    /* 0x0008 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long MessageId;
  union
  {
    /* 0x0014 */ unsigned long ClientViewSize;
    /* 0x0014 */ unsigned long CallbackId;
  }; /* size: 0x0004 */
} PORT_MESSAGE32, *PPORT_MESSAGE32; /* size: 0x0018 */

typedef struct _ALPC_LOG_ENTRY_WAIT_FOR_REPLY
{
  /* 0x0000 */ unsigned long MessageId;
} ALPC_LOG_ENTRY_WAIT_FOR_REPLY, *PALPC_LOG_ENTRY_WAIT_FOR_REPLY; /* size: 0x0004 */

typedef struct _SMKM_STORE_REF
{
  /* 0x0000 */ void* Store;
  /* 0x0008 */ struct _EX_RUNDOWN_REF RefCount;
  /* 0x0010 */ struct _EX_RUNDOWN_REF WatchDogRefCount;
  struct /* bitfield */
  {
    /* 0x0018 */ unsigned long SeqNumber : 13; /* bit position: 0 */
    /* 0x0018 */ unsigned long NeedsWatchDog : 1; /* bit position: 13 */
    /* 0x0018 */ unsigned long KernelModeCreate : 1; /* bit position: 14 */
    /* 0x0018 */ unsigned long DynamicPopulation : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x001c */ long Padding_190;
  /* 0x0020 */ struct _KAPC WritesWatchdogApc;
  /* 0x0078 */ volatile long WritesWdApcQueued;
  /* 0x007c */ unsigned long Priority;
  /* 0x0080 */ struct _EX_PUSH_LOCK AddRemoveLock;
} SMKM_STORE_REF, *PSMKM_STORE_REF; /* size: 0x0088 */

typedef struct _PF_QUEUE
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Tail;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY* Head;
} PF_QUEUE, *PPF_QUEUE; /* size: 0x0010 */

typedef struct _SMKM_WATCHDOG_CONTEXT
{
  /* 0x0000 */ struct _KTIMER Timer;
  /* 0x0040 */ struct _KDPC Dpc;
  union
  {
    /* 0x0080 */ unsigned __int64 Alignment;
    /* 0x0080 */ struct _PF_QUEUE IoQueue;
  }; /* size: 0x0010 */
  /* 0x0090 */ unsigned __int64 Lock;
} SMKM_WATCHDOG_CONTEXT, *PSMKM_WATCHDOG_CONTEXT; /* size: 0x0098 */

typedef struct _SMKM_STORE_LIST
{
  /* 0x0000 */ struct _SMKM_STORE_REF Stores[8];
  /* 0x0440 */ void* Callback /* function */;
  /* 0x0448 */ struct _SMKM_WATCHDOG_CONTEXT WatchDog;
  /* 0x04e0 */ struct _EX_PUSH_LOCK AllStoresLock;
  /* 0x04e8 */ unsigned long StoreCount;
  /* 0x04ec */ volatile unsigned long StoreBitmap;
  /* 0x04f0 */ volatile unsigned long DynamicStoreBitmap;
  /* 0x04f4 */ unsigned long WatchDogStoreCount;
  /* 0x04f8 */ unsigned long NoDuplicationStoreIndex;
  /* 0x04fc */ volatile unsigned long NoDuplicationStoreMask;
} SMKM_STORE_LIST, *PSMKM_STORE_LIST; /* size: 0x0500 */

struct VLOCK
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
}; /* size: 0x0008 */

struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>
{
}; /* size: 0x0010 */

typedef struct _ST_WORK_ITEM_HDR
{
  union
  {
    /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
    struct
    {
      /* 0x0000 */ unsigned long Type : 3; /* bit position: 0 */
      /* 0x0004 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} ST_WORK_ITEM_HDR, *PST_WORK_ITEM_HDR; /* size: 0x0008 */

typedef struct _ST_READ_PARAMS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long PageOffset : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long DeviceIoCount : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned long Age : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long Busy : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long RemovePending : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long StoreIndex : 3; /* bit position: 19 */
      /* 0x0000 */ unsigned long DontQueueToReadQueue : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned long StoreEtaFailed : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned long Spare : 8; /* bit position: 24 */
    }; /* bitfield */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long OverlapsWithPageOffset : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long Spare0 : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned long NotPresentInOtherStores : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long Spare1 : 2; /* bit position: 17 */
      /* 0x0000 */ unsigned long OverlapsWithStoreIndex : 3; /* bit position: 19 */
      /* 0x0000 */ unsigned long OverlapsWithDontQueueToReadQueue : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned long Spare2 : 9; /* bit position: 23 */
    }; /* bitfield */
    /* 0x0000 */ volatile long AllFlags;
  }; /* size: 0x0004 */
} ST_READ_PARAMS, *PST_READ_PARAMS; /* size: 0x0004 */

struct ST_STORE<SM_TRAITS>::_ST_IO_PARAMS
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Priority : 3; /* bit position: 0 */
        /* 0x0000 */ unsigned long PageOffset : 27; /* bit position: 3 */
        /* 0x0000 */ unsigned long IsWriteUpdate : 1; /* bit position: 30 */
      }; /* bitfield */
    } /* size: 0x0004 */ Add;
    /* 0x0000 */ struct _ST_READ_PARAMS Read;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_191;
  /* 0x0008 */ void* Payload;
  /* 0x0010 */ union _SM_PAGE_KEY Key;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct ST_STORE<SM_TRAITS>::_ST_STATS_PARAMS
{
  /* 0x0000 */ enum _ST_STATS_LEVEL DetailLevel;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* Payload;
}; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_REMOVE_PARAMS
{
  /* 0x0000 */ union _SM_PAGE_KEY Key;
  /* 0x0004 */ unsigned long PageCount;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DirectEvict : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Spare : 31; /* bit position: 1 */
  }; /* bitfield */
}; /* size: 0x000c */

struct ST_STORE<SM_TRAITS>::_ST_DEVICE_IO
{
  union
  {
    /* 0x0000 */ char* TargetBuffer;
    /* 0x0000 */ struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM* ParentWorkItem;
    /* 0x0000 */ void* IoContext;
    /* 0x0000 */ long FailStatus;
  }; /* size: 0x0008 */
  /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_DEVICE_READ_HEADER* Buffer;
  /* 0x0010 */ unsigned long StoreOffset;
  struct /* bitfield */
  {
    /* 0x0014 */ unsigned long IoFailed : 1; /* bit position: 0 */
    /* 0x0014 */ unsigned long Metadata : 1; /* bit position: 1 */
    /* 0x0014 */ unsigned long SyncIo : 1; /* bit position: 2 */
    /* 0x0014 */ unsigned long EtaStarted : 1; /* bit position: 3 */
    /* 0x0014 */ unsigned long RawRead : 1; /* bit position: 4 */
    /* 0x0014 */ unsigned long ReadSize : 27; /* bit position: 5 */
  }; /* bitfield */
}; /* size: 0x0018 */

struct ST_STORE<SM_TRAITS>::_ST_MAINTENANCE_PARAMS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Type : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 29; /* bit position: 3 */
  }; /* bitfield */
  union
  {
    struct
    {
      /* 0x0004 */ unsigned long RegionsToFree;
    } /* size: 0x0004 */ Trim;
    struct
    {
      struct
      {
      } /* size: 0x0001 */ EtaRefresh;
      /* 0x0005 */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
}; /* size: 0x0008 */

struct ST_STORE<SM_TRAITS>::_ST_STATE_PARAMS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Type : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 29; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_192;
  /* 0x0008 */ void* PersistContext;
}; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM
{
  union
  {
    /* 0x0000 */ unsigned __int64 DummyAlignment;
    /* 0x0000 */ struct _ST_WORK_ITEM_HDR Hdr;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_IO_PARAMS IoParams;
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_STATS_PARAMS StatParams;
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_REMOVE_PARAMS Remove;
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_DEVICE_IO DeviceIo;
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_MAINTENANCE_PARAMS Maintenance;
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_STATE_PARAMS StateChange;
    struct
    {
      /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_LAZY_WORK LazyWork;
      /* 0x000c */ long __PADDING__[5];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0020 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_WORK_ITEM
{
  /* 0x0000 */ struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM StData;
  /* 0x0020 */ struct SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT* IoCtx;
}; /* size: 0x0028 */

typedef struct _SM_FORWARD_PROGRESS_CTX
{
  /* 0x0000 */ volatile long Lock;
  /* 0x0004 */ long Padding_193;
  /* 0x0008 */ struct _KEVENT Event;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY Resources[3];
  /* 0x0038 */ unsigned char Allocated[4];
  struct /* bitfield */
  {
    /* 0x003c */ unsigned char OwnerStartedToFree : 1; /* bit position: 0 */
    /* 0x003c */ unsigned char Spare : 7; /* bit position: 1 */
  }; /* bitfield */
  /* 0x003d */ char Padding_194;
  /* 0x003e */ unsigned short Sizes[3];
  /* 0x0044 */ long Padding_195;
  /* 0x0048 */ void* volatile OwnerContext;
} SM_FORWARD_PROGRESS_CTX, *PSM_FORWARD_PROGRESS_CTX; /* size: 0x0050 */

typedef struct _SM_LOG_CTX
{
  /* 0x0000 */ struct _SMP_LOG_BUFFER* Log;
  /* 0x0008 */ struct _PF_QUEUE FullLogs;
  /* 0x0018 */ unsigned __int64 LogLock;
  /* 0x0020 */ unsigned __int64 QueueLock;
  /* 0x0028 */ struct _KGUARDED_MUTEX LogOrderLock;
  /* 0x0060 */ union _SLIST_HEADER LogSlush;
  /* 0x0070 */ volatile long LogBuffersAllocated;
  struct
  {
    /* 0x0074 */ unsigned long EntriesLogged;
    /* 0x0078 */ unsigned long LogsFilled;
    /* 0x007c */ unsigned long LogsRetrieved;
    /* 0x0080 */ unsigned long EntriesRetrieved;
  } /* size: 0x0010 */ Stats;
  /* 0x0084 */ long Padding_196;
  /* 0x0088 */ struct _KEVENT* LogEntriesReadyEvent;
} SM_LOG_CTX, *PSM_LOG_CTX; /* size: 0x0090 */

typedef struct _SMKM_STORE_MGR_PARAMS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long UseLog : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long UseForwardProgress : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long MapIncomingMdls : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long AllowBeingAddedReads : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long Spare : 28; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_197;
  /* 0x0008 */ void* Callback /* function */;
} SMKM_STORE_MGR_PARAMS, *PSMKM_STORE_MGR_PARAMS; /* size: 0x0010 */

struct SMKM_STORE_MGR<SM_TRAITS>
{
  /* 0x0000 */ struct _SMKM_STORE_LIST Mgr;
  /* 0x0500 */ struct VLOCK FrontEndLock;
  /* 0x0508 */ struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL> FrontEnd;
  /* 0x0518 */ unsigned long AllNotPresentMask;
  /* 0x051c */ unsigned long AllNotPresentCheckMask;
  /* 0x0520 */ unsigned long EmptyInProgressBitmap;
  /* 0x0524 */ long Padding_198;
  /* 0x0528 */ struct _EX_RUNDOWN_REF EvictRundown[8];
  /* 0x0568 */ struct SMKM_STORE_MGR<SM_TRAITS>::_SM_WORK_ITEM EmptyWorkItems[8];
  /* 0x06a8 */ struct SMKM_STORE_MGR<SM_TRAITS>::_SM_EMPTY_QUEUE_CONTEXT EmptyQueueContexts[8];
  struct
  {
    /* 0x0828 */ unsigned char InProgress;
    /* 0x0829 */ unsigned char AllowReads;
    /* 0x082a */ unsigned char Failed;
    /* 0x082b */ unsigned char Spare;
  } /* size: 0x0004 */ UnpersistBitmap;
  /* 0x082c */ long Padding_199;
  /* 0x0830 */ struct _SM_FORWARD_PROGRESS_CTX FpContext;
  /* 0x0880 */ struct _SM_LOG_CTX Log;
  /* 0x0910 */ struct _SMKM_STORE_MGR_PARAMS Params;
  /* 0x0920 */ unsigned long DiskLatency;
  /* 0x0924 */ unsigned long ReadCount;
  /* 0x0928 */ long __PADDING__[2];
}; /* size: 0x0930 */

typedef struct _SMC_CACHE_REF
{
  /* 0x0000 */ struct _SMC_CACHE* Cache;
  /* 0x0008 */ struct _EX_RUNDOWN_REF RefCount;
  /* 0x0010 */ struct _EX_PUSH_LOCK AddRemoveLock;
  /* 0x0018 */ unsigned long SeqNumber : 12; /* bit position: 0 */
  /* 0x001c */ long __PADDING__[1];
} SMC_CACHE_REF, *PSMC_CACHE_REF; /* size: 0x0020 */

typedef struct _SMKM_KEYGEN_CTX
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ struct _LIST_ENTRY KeyList;
  /* 0x0018 */ struct _UNICODE_STRING RegKeyPath;
} SMKM_KEYGEN_CTX, *PSMKM_KEYGEN_CTX; /* size: 0x0028 */

typedef struct _SMC_CACHE_MANAGER
{
  /* 0x0000 */ struct _SMC_CACHE_REF Caches[16];
  /* 0x0200 */ struct _SMKM_KEYGEN_CTX KeyGenCtx;
  /* 0x0228 */ struct _KEVENT* CachesUpdatedEvent;
} SMC_CACHE_MANAGER, *PSMC_CACHE_MANAGER; /* size: 0x0230 */

typedef struct _SM_REGISTRATION_CONTEXT
{
  /* 0x0000 */ struct _KEVENT* CachesUpdatedEvent;
  /* 0x0008 */ struct _KEVENT* LogEntriesReadyEvent;
} SM_REGISTRATION_CONTEXT, *PSM_REGISTRATION_CONTEXT; /* size: 0x0010 */

typedef struct _SM_GLOBALS
{
  /* 0x0000 */ struct SMKM_STORE_MGR<SM_TRAITS> StoreMgr;
  /* 0x0930 */ struct _SM_STORE_MANAGER_CONTEXT StoreMgrContext[2];
  struct /* bitfield */
  {
    /* 0x0960 */ unsigned long StoreRegistered : 1; /* bit position: 0 */
    /* 0x0960 */ unsigned long StoreManagerPrepared : 1; /* bit position: 1 */
    /* 0x0960 */ unsigned long CacheManagerPrepared : 1; /* bit position: 2 */
    /* 0x0960 */ unsigned long RegInfoPrepared : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0964 */ long Padding_200;
  /* 0x0968 */ struct _KGUARDED_MUTEX FirstTimeInitLock;
  /* 0x09a0 */ struct _SMC_CACHE_MANAGER CacheMgr;
  /* 0x0bd0 */ struct _SM_REGISTRATION_CONTEXT RegistrationCtx;
  /* 0x0be0 */ unsigned __int64 EtwRegHandle;
  /* 0x0be8 */ unsigned long EtwRegistered : 1; /* bit position: 0 */
  /* 0x0bec */ unsigned long EtwEnabledMask;
  /* 0x0bf0 */ unsigned long MaxMmWritePagePriority;
  /* 0x0bf4 */ long Padding_201;
  /* 0x0bf8 */ void* VolumeChangeNotificationHandle;
  /* 0x0c00 */ void* HiddenVolumeChangeNotificationHandle;
  /* 0x0c08 */ struct _SMP_CACHE_STATS CacheStats;
  /* 0x0df0 */ unsigned long StatsBucketIndex;
  /* 0x0df4 */ unsigned long DbgAllocFailPercent;
  /* 0x0df8 */ unsigned long DbgAllocFailStartCount;
  /* 0x0dfc */ unsigned long DbgSeed;
  /* 0x0e00 */ unsigned long DbgAllocFailCount;
  /* 0x0e04 */ unsigned long DbgAllocCount;
  /* 0x0e08 */ unsigned long DbgMapFailCount;
  /* 0x0e0c */ unsigned long DbgMapCount;
  /* 0x0e10 */ unsigned long DbgIoFailRate;
  /* 0x0e14 */ unsigned long DbgIoFailCount;
  /* 0x0e18 */ unsigned long DbgMetaIoFailRate;
  /* 0x0e1c */ unsigned long DbgMetaIoFailCount;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0e20 */ unsigned long DisableMSChecks : 1; /* bit position: 0 */
        /* 0x0e20 */ unsigned long AlwaysPrepareForUnpersist : 1; /* bit position: 1 */
      }; /* bitfield */
      /* 0x0e20 */ unsigned long AllFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ DbgFlags;
  /* 0x0e24 */ long __PADDING__[3];
} SM_GLOBALS, *PSM_GLOBALS; /* size: 0x0e30 */

typedef struct _INTERRUPT_CONNECTION_DATA
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_202;
  /* 0x0008 */ struct _INTERRUPT_VECTOR_DATA Vectors[1];
} INTERRUPT_CONNECTION_DATA, *PINTERRUPT_CONNECTION_DATA; /* size: 0x0048 */

typedef struct _MEMORY_BASIC_INFORMATION32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionSize;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Protect;
  /* 0x0018 */ unsigned long Type;
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32; /* size: 0x001c */

typedef struct _DBGKD_SEARCH_MEMORY
{
  union
  {
    /* 0x0000 */ unsigned __int64 SearchAddress;
    /* 0x0000 */ unsigned __int64 FoundAddress;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 SearchLength;
  /* 0x0010 */ unsigned long PatternLength;
  /* 0x0014 */ long __PADDING__[1];
} DBGKD_SEARCH_MEMORY, *PDBGKD_SEARCH_MEMORY; /* size: 0x0018 */

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_203;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldFlags;
  /* 0x002c */ unsigned long NewFlags;
} JOURNAL_SET_KEY_USER_FLAGS_INFORMATION, *PJOURNAL_SET_KEY_USER_FLAGS_INFORMATION; /* size: 0x0030 */

typedef struct _ARM_KSPECIAL_REGISTERS
{
  /* 0x0000 */ unsigned long Cp15_Cr0_Id;
  /* 0x0004 */ unsigned long Cp15_Cr0_CacheType;
  /* 0x0008 */ unsigned long Cp15_Cr1_Control;
  /* 0x000c */ unsigned long Cp15_Cr2_Ttb;
  /* 0x0010 */ unsigned long Cp15_Cr3_Dacr;
  /* 0x0014 */ unsigned long Cp15_Cr5_FaultStatus;
  /* 0x0018 */ unsigned long Cp15_Cr5_FaultAddress;
  /* 0x001c */ unsigned long Cp15_Cr13_ProcessId;
} ARM_KSPECIAL_REGISTERS, *PARM_KSPECIAL_REGISTERS; /* size: 0x0020 */

typedef struct _ARM_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long R0;
  /* 0x0008 */ unsigned long R1;
  /* 0x000c */ unsigned long R2;
  /* 0x0010 */ unsigned long R3;
  /* 0x0014 */ unsigned long R4;
  /* 0x0018 */ unsigned long R5;
  /* 0x001c */ unsigned long R6;
  /* 0x0020 */ unsigned long R7;
  /* 0x0024 */ unsigned long R8;
  /* 0x0028 */ unsigned long R9;
  /* 0x002c */ unsigned long R10;
  /* 0x0030 */ unsigned long R11;
  /* 0x0034 */ unsigned long R12;
  /* 0x0038 */ unsigned long Sp;
  /* 0x003c */ unsigned long Lr;
  /* 0x0040 */ unsigned long Pc;
  /* 0x0044 */ unsigned long Cpsr;
} ARM_CONTEXT, *PARM_CONTEXT; /* size: 0x0048 */

typedef struct _ARM_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _ARM_KSPECIAL_REGISTERS SpecialRegisters;
  /* 0x0020 */ struct _ARM_CONTEXT ContextFrame;
} ARM_KPROCESSOR_STATE, *PARM_KPROCESSOR_STATE; /* size: 0x0068 */

typedef struct _UMS_CONTROL_BLOCK
{
  /* 0x0000 */ struct _RTL_UMS_CONTEXT* UmsContext;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY* CompletionListEntry;
  /* 0x0010 */ struct _KEVENT* CompletionListEvent;
  /* 0x0018 */ unsigned long ServiceSequenceNumber;
  /* 0x001c */ long Padding_204;
  union
  {
    struct
    {
      /* 0x0020 */ struct _KQUEUE UmsQueue;
      /* 0x0060 */ struct _LIST_ENTRY QueueEntry;
      /* 0x0070 */ struct _RTL_UMS_CONTEXT* volatile YieldingUmsContext;
      /* 0x0078 */ void* volatile YieldingParam;
      /* 0x0080 */ void* UmsTeb;
      union
      {
        /* 0x0088 */ unsigned long PrimaryFlags;
        /* 0x0088 */ unsigned long UmsContextHeaderReady : 1; /* bit position: 0 */
      }; /* size: 0x0004 */
    }; /* size: 0x006c */
    struct
    {
      /* 0x0020 */ struct _KQUEUE* UmsAssociatedQueue;
      /* 0x0028 */ struct _LIST_ENTRY* UmsQueueListEntry;
      /* 0x0030 */ struct _KUMS_CONTEXT_HEADER* UmsContextHeader;
      /* 0x0038 */ struct _KGATE UmsWaitGate;
      /* 0x0050 */ void* StagingArea;
      union
      {
        /* 0x0058 */ volatile long Flags;
        struct /* bitfield */
        {
          /* 0x0058 */ volatile unsigned long UmsForceQueueTermination : 1; /* bit position: 0 */
          /* 0x0058 */ volatile unsigned long UmsAssociatedQueueUsed : 1; /* bit position: 1 */
          /* 0x0058 */ volatile unsigned long UmsThreadParked : 1; /* bit position: 2 */
          /* 0x0058 */ volatile unsigned long UmsPrimaryDeliveredContext : 1; /* bit position: 3 */
        }; /* bitfield */
      }; /* size: 0x0004 */
      /* 0x005c */ long Padding_205[13];
      /* 0x0090 */ unsigned short TebSelector;
      /* 0x0092 */ char __PADDING__[6];
    }; /* size: 0x0044 */
  }; /* size: 0x006c */
} UMS_CONTROL_BLOCK, *PUMS_CONTROL_BLOCK; /* size: 0x0098 */

typedef struct _RTL_UMS_CONTEXT
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  /* 0x0008 */ long Padding_206[2];
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ void* Teb;
  /* 0x04e8 */ void* UserContext;
  union
  {
    struct /* bitfield */
    {
      /* 0x04f0 */ volatile unsigned long ScheduledThread : 1; /* bit position: 0 */
      /* 0x04f0 */ volatile unsigned long HasQuantumReq : 1; /* bit position: 1 */
      /* 0x04f0 */ volatile unsigned long HasAffinityReq : 1; /* bit position: 2 */
      /* 0x04f0 */ volatile unsigned long HasPriorityReq : 1; /* bit position: 3 */
      /* 0x04f0 */ volatile unsigned long Suspended : 1; /* bit position: 4 */
      /* 0x04f0 */ volatile unsigned long VolatileContext : 1; /* bit position: 5 */
      /* 0x04f0 */ volatile unsigned long Terminated : 1; /* bit position: 6 */
      /* 0x04f0 */ volatile unsigned long DebugActive : 1; /* bit position: 7 */
      /* 0x04f0 */ volatile unsigned long RunningOnSelfThread : 1; /* bit position: 8 */
      /* 0x04f0 */ volatile unsigned long DenyRunningOnSelfThread : 1; /* bit position: 9 */
      /* 0x04f0 */ volatile unsigned long ReservedFlags : 22; /* bit position: 10 */
    }; /* bitfield */
    /* 0x04f0 */ volatile long Flags;
  }; /* size: 0x0004 */
  /* 0x04f4 */ long Padding_207;
  union
  {
    struct /* bitfield */
    {
      /* 0x04f8 */ volatile unsigned __int64 KernelUpdateLock : 1; /* bit position: 0 */
      /* 0x04f8 */ volatile unsigned __int64 Reserved : 1; /* bit position: 1 */
      /* 0x04f8 */ volatile unsigned __int64 PrimaryClientID : 62; /* bit position: 2 */
    }; /* bitfield */
    /* 0x04f8 */ volatile unsigned __int64 ContextLock;
  }; /* size: 0x0008 */
  /* 0x0500 */ unsigned __int64 QuantumValue;
  /* 0x0508 */ struct _GROUP_AFFINITY AffinityMask;
  /* 0x0518 */ long Priority;
  /* 0x051c */ long Padding_208;
  /* 0x0520 */ struct _RTL_UMS_CONTEXT* PrimaryUmsContext;
  /* 0x0528 */ unsigned long SwitchCount;
  /* 0x052c */ unsigned long KernelYieldCount;
  /* 0x0530 */ unsigned long MixedYieldCount;
  /* 0x0534 */ unsigned long YieldCount;
  /* 0x0538 */ long __PADDING__[2];
} RTL_UMS_CONTEXT, *PRTL_UMS_CONTEXT; /* size: 0x0540 */

typedef struct _SECURITY_SUBJECT_CONTEXT
{
  /* 0x0000 */ void* ClientToken;
  /* 0x0008 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x000c */ long Padding_209;
  /* 0x0010 */ void* PrimaryToken;
  /* 0x0018 */ void* ProcessAuditId;
} SECURITY_SUBJECT_CONTEXT, *PSECURITY_SUBJECT_CONTEXT; /* size: 0x0020 */

typedef struct _KENLISTMENT
{
  /* 0x0000 */ unsigned long cookie;
  /* 0x0004 */ long Padding_210;
  /* 0x0008 */ struct _KTMOBJECT_NAMESPACE_LINK NamespaceLink;
  /* 0x0030 */ struct _GUID EnlistmentId;
  /* 0x0040 */ struct _KMUTANT Mutex;
  /* 0x0078 */ struct _LIST_ENTRY NextSameTx;
  /* 0x0088 */ struct _LIST_ENTRY NextSameRm;
  /* 0x0098 */ struct _KRESOURCEMANAGER* ResourceManager;
  /* 0x00a0 */ struct _KTRANSACTION* Transaction;
  /* 0x00a8 */ enum _KENLISTMENT_STATE State;
  /* 0x00ac */ unsigned long Flags;
  /* 0x00b0 */ unsigned long NotificationMask;
  /* 0x00b4 */ long Padding_211;
  /* 0x00b8 */ void* Key;
  /* 0x00c0 */ unsigned long KeyRefCount;
  /* 0x00c4 */ long Padding_212;
  /* 0x00c8 */ void* RecoveryInformation;
  /* 0x00d0 */ unsigned long RecoveryInformationLength;
  /* 0x00d4 */ long Padding_213;
  /* 0x00d8 */ void* DynamicNameInformation;
  /* 0x00e0 */ unsigned long DynamicNameInformationLength;
  /* 0x00e4 */ long Padding_214;
  /* 0x00e8 */ struct _KTMNOTIFICATION_PACKET* FinalNotification;
  /* 0x00f0 */ struct _KENLISTMENT* SupSubEnlistment;
  /* 0x00f8 */ void* SupSubEnlHandle;
  /* 0x0100 */ void* SubordinateTxHandle;
  /* 0x0108 */ struct _GUID CrmEnlistmentEnId;
  /* 0x0118 */ struct _GUID CrmEnlistmentTmId;
  /* 0x0128 */ struct _GUID CrmEnlistmentRmId;
  /* 0x0138 */ unsigned long NextHistory;
  /* 0x013c */ struct _KENLISTMENT_HISTORY History[20];
  /* 0x01dc */ long __PADDING__[1];
} KENLISTMENT, *PKENLISTMENT; /* size: 0x01e0 */

typedef struct _DEVOBJ_EXTENSION
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ long Padding_215;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ unsigned long PowerFlags;
  /* 0x0014 */ long Padding_216;
  /* 0x0018 */ struct _DEVICE_OBJECT_POWER_EXTENSION* Dope;
  /* 0x0020 */ unsigned long ExtensionFlags;
  /* 0x0024 */ long Padding_217;
  /* 0x0028 */ void* DeviceNode;
  /* 0x0030 */ struct _DEVICE_OBJECT* AttachedTo;
  /* 0x0038 */ long StartIoCount;
  /* 0x003c */ long StartIoKey;
  /* 0x0040 */ unsigned long StartIoFlags;
  /* 0x0044 */ long Padding_218;
  /* 0x0048 */ struct _VPB* Vpb;
  /* 0x0050 */ struct _LIST_ENTRY DependentList;
  /* 0x0060 */ struct _LIST_ENTRY ProviderList;
} DEVOBJ_EXTENSION, *PDEVOBJ_EXTENSION; /* size: 0x0070 */

typedef struct _OBJECT_HEADER_QUOTA_INFO
{
  /* 0x0000 */ unsigned long PagedPoolCharge;
  /* 0x0004 */ unsigned long NonPagedPoolCharge;
  /* 0x0008 */ unsigned long SecurityDescriptorCharge;
  /* 0x000c */ long Padding_219;
  /* 0x0010 */ void* SecurityDescriptorQuotaBlock;
  /* 0x0018 */ unsigned __int64 Reserved;
} OBJECT_HEADER_QUOTA_INFO, *POBJECT_HEADER_QUOTA_INFO; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING SymbolicLinkName;
  /* 0x0010 */ struct _GUID* AliasClassGuid;
  /* 0x0018 */ unsigned short* AliasSymbolicLinkName;
  /* 0x0020 */ unsigned long AliasSymbolicLinkNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA, *PPLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA; /* size: 0x0028 */

typedef struct _ETW_BUFFER_CONTEXT
{
  /* 0x0000 */ unsigned char ProcessorNumber;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short LoggerId;
} ETW_BUFFER_CONTEXT, *PETW_BUFFER_CONTEXT; /* size: 0x0004 */

typedef struct _IO_COMPLETION_CONTEXT
{
  /* 0x0000 */ void* Port;
  /* 0x0008 */ void* Key;
} IO_COMPLETION_CONTEXT, *PIO_COMPLETION_CONTEXT; /* size: 0x0010 */

typedef struct _KUMS_CONTEXT_HEADER
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ void* StackTop;
  /* 0x0028 */ unsigned __int64 StackSize;
  /* 0x0030 */ unsigned __int64 RspOffset;
  /* 0x0038 */ unsigned __int64 Rip;
  /* 0x0040 */ struct _XSAVE_FORMAT* FltSave;
  union
  {
    struct /* bitfield */
    {
      /* 0x0048 */ unsigned __int64 Volatile : 1; /* bit position: 0 */
      /* 0x0048 */ unsigned __int64 Reserved : 63; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0048 */ unsigned __int64 Flags;
  }; /* size: 0x0008 */
  /* 0x0050 */ struct _KTRAP_FRAME* TrapFrame;
  /* 0x0058 */ struct _KEXCEPTION_FRAME* ExceptionFrame;
  /* 0x0060 */ struct _KTHREAD* SourceThread;
  /* 0x0068 */ unsigned __int64 Return;
} KUMS_CONTEXT_HEADER, *PKUMS_CONTEXT_HEADER; /* size: 0x0070 */

typedef struct _KTRAP_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5;
  /* 0x0028 */ char PreviousMode;
  /* 0x0029 */ unsigned char PreviousIrql;
  /* 0x002a */ unsigned char FaultIndicator;
  /* 0x002b */ unsigned char ExceptionActive;
  /* 0x002c */ unsigned long MxCsr;
  /* 0x0030 */ unsigned __int64 Rax;
  /* 0x0038 */ unsigned __int64 Rcx;
  /* 0x0040 */ unsigned __int64 Rdx;
  /* 0x0048 */ unsigned __int64 R8;
  /* 0x0050 */ unsigned __int64 R9;
  /* 0x0058 */ unsigned __int64 R10;
  /* 0x0060 */ unsigned __int64 R11;
  union
  {
    /* 0x0068 */ unsigned __int64 GsBase;
    /* 0x0068 */ unsigned __int64 GsSwap;
  }; /* size: 0x0008 */
  /* 0x0070 */ struct _M128A Xmm0;
  /* 0x0080 */ struct _M128A Xmm1;
  /* 0x0090 */ struct _M128A Xmm2;
  /* 0x00a0 */ struct _M128A Xmm3;
  /* 0x00b0 */ struct _M128A Xmm4;
  /* 0x00c0 */ struct _M128A Xmm5;
  union
  {
    /* 0x00d0 */ unsigned __int64 FaultAddress;
    /* 0x00d0 */ unsigned __int64 ContextRecord;
    /* 0x00d0 */ unsigned __int64 TimeStampCKCL;
  }; /* size: 0x0008 */
  /* 0x00d8 */ unsigned __int64 Dr0;
  /* 0x00e0 */ unsigned __int64 Dr1;
  /* 0x00e8 */ unsigned __int64 Dr2;
  /* 0x00f0 */ unsigned __int64 Dr3;
  /* 0x00f8 */ unsigned __int64 Dr6;
  /* 0x0100 */ unsigned __int64 Dr7;
  union
  {
    struct
    {
      /* 0x0108 */ unsigned __int64 DebugControl;
      /* 0x0110 */ unsigned __int64 LastBranchToRip;
      /* 0x0118 */ unsigned __int64 LastBranchFromRip;
      /* 0x0120 */ unsigned __int64 LastExceptionToRip;
      /* 0x0128 */ unsigned __int64 LastExceptionFromRip;
    }; /* size: 0x0028 */
    struct
    {
      /* 0x0108 */ unsigned __int64 LastBranchControl;
      /* 0x0110 */ unsigned long LastBranchMSR;
    }; /* size: 0x000c */
  }; /* size: 0x0028 */
  /* 0x0130 */ unsigned short SegDs;
  /* 0x0132 */ unsigned short SegEs;
  /* 0x0134 */ unsigned short SegFs;
  /* 0x0136 */ unsigned short SegGs;
  /* 0x0138 */ unsigned __int64 TrapFrame;
  /* 0x0140 */ unsigned __int64 Rbx;
  /* 0x0148 */ unsigned __int64 Rdi;
  /* 0x0150 */ unsigned __int64 Rsi;
  /* 0x0158 */ unsigned __int64 Rbp;
  union
  {
    /* 0x0160 */ unsigned __int64 ErrorCode;
    /* 0x0160 */ unsigned __int64 ExceptionFrame;
    /* 0x0160 */ unsigned __int64 TimeStampKlog;
  }; /* size: 0x0008 */
  /* 0x0168 */ unsigned __int64 Rip;
  /* 0x0170 */ unsigned short SegCs;
  /* 0x0172 */ unsigned char Fill0;
  /* 0x0173 */ unsigned char Logging;
  /* 0x0174 */ unsigned short Fill1[2];
  /* 0x0178 */ unsigned long EFlags;
  /* 0x017c */ unsigned long Fill2;
  /* 0x0180 */ unsigned __int64 Rsp;
  /* 0x0188 */ unsigned short SegSs;
  /* 0x018a */ unsigned short Fill3;
  /* 0x018c */ long CodePatchCycle;
} KTRAP_FRAME, *PKTRAP_FRAME; /* size: 0x0190 */

typedef struct _KEXCEPTION_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5;
  /* 0x0028 */ unsigned __int64 InitialStack;
  /* 0x0030 */ struct _M128A Xmm6;
  /* 0x0040 */ struct _M128A Xmm7;
  /* 0x0050 */ struct _M128A Xmm8;
  /* 0x0060 */ struct _M128A Xmm9;
  /* 0x0070 */ struct _M128A Xmm10;
  /* 0x0080 */ struct _M128A Xmm11;
  /* 0x0090 */ struct _M128A Xmm12;
  /* 0x00a0 */ struct _M128A Xmm13;
  /* 0x00b0 */ struct _M128A Xmm14;
  /* 0x00c0 */ struct _M128A Xmm15;
  /* 0x00d0 */ unsigned __int64 TrapFrame;
  /* 0x00d8 */ unsigned __int64 CallbackStack;
  /* 0x00e0 */ unsigned __int64 OutputBuffer;
  /* 0x00e8 */ unsigned __int64 OutputLength;
  /* 0x00f0 */ unsigned __int64 MxCsr;
  /* 0x00f8 */ unsigned __int64 Rbp;
  /* 0x0100 */ unsigned __int64 Rbx;
  /* 0x0108 */ unsigned __int64 Rdi;
  /* 0x0110 */ unsigned __int64 Rsi;
  /* 0x0118 */ unsigned __int64 R12;
  /* 0x0120 */ unsigned __int64 R13;
  /* 0x0128 */ unsigned __int64 R14;
  /* 0x0130 */ unsigned __int64 R15;
  /* 0x0138 */ unsigned __int64 Return;
} KEXCEPTION_FRAME, *PKEXCEPTION_FRAME; /* size: 0x0140 */

struct ST_STORE<SM_TRAITS>::_ST_PAGE_INFO
{
  /* 0x0000 */ unsigned short CompressedSize;
  /* 0x0002 */ unsigned short RequestPageOffset;
  /* 0x0004 */ unsigned long SequenceNumberLo;
  /* 0x0008 */ unsigned long SequenceNumberHi;
}; /* size: 0x000c */

typedef struct _SLIST_ENTRY
{
  /* 0x0000 */ struct _SLIST_ENTRY* Next;
  /* 0x0008 */ long __PADDING__[2];
} SLIST_ENTRY, *PSLIST_ENTRY; /* size: 0x0010 */

typedef struct _PERFINFO_FILENAME_SAME_INFORMATION
{
  /* 0x0000 */ void* OldFile;
  /* 0x0008 */ void* NewFile;
} PERFINFO_FILENAME_SAME_INFORMATION, *PPERFINFO_FILENAME_SAME_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_UMS_COMPLETION_LIST
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* ThreadListHead;
  /* 0x0008 */ void* CompletionEvent;
  /* 0x0010 */ unsigned long CompletionFlags;
  /* 0x0014 */ long Padding_220;
  /* 0x0018 */ struct _SINGLE_LIST_ENTRY InternalListHead;
} RTL_UMS_COMPLETION_LIST, *PRTL_UMS_COMPLETION_LIST; /* size: 0x0020 */

typedef struct _SECTION_IMAGE_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_221;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION64, *PSECTION_IMAGE_INFORMATION64; /* size: 0x0040 */

typedef struct _DBGKM_ERROR_MSG64
{
  /* 0x0000 */ struct _EXCEPTION_RECORD64 ExceptionRecord;
  /* 0x0098 */ struct _SECTION_IMAGE_INFORMATION64 ImageInfo;
  union
  {
    /* 0x00d8 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x00d8 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x00d8 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x00d8 */ unsigned long IsFilterMessage : 1; /* bit position: 2 */
      /* 0x00d8 */ unsigned long SpareBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x00dc */ long __PADDING__[1];
} DBGKM_ERROR_MSG64, *PDBGKM_ERROR_MSG64; /* size: 0x00e0 */

typedef struct _KTHREAD_COUNTERS
{
  /* 0x0000 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0008 */ struct _THREAD_PERFORMANCE_DATA* UserData;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ContextSwitches;
  /* 0x0018 */ unsigned __int64 CycleTimeBias;
  /* 0x0020 */ unsigned __int64 HardwareCounters;
  /* 0x0028 */ struct _COUNTER_READING HwCounter[16];
} KTHREAD_COUNTERS, *PKTHREAD_COUNTERS; /* size: 0x01a8 */

typedef struct _TIME_FIELDS
{
  /* 0x0000 */ short Year;
  /* 0x0002 */ short Month;
  /* 0x0004 */ short Day;
  /* 0x0006 */ short Hour;
  /* 0x0008 */ short Minute;
  /* 0x000a */ short Second;
  /* 0x000c */ short Milliseconds;
  /* 0x000e */ short Weekday;
} TIME_FIELDS, *PTIME_FIELDS; /* size: 0x0010 */

typedef struct _XSTATE_CONTEXT
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long Reserved1;
  /* 0x0010 */ struct _XSAVE_AREA* Area;
  /* 0x0018 */ void* Buffer;
} XSTATE_CONTEXT, *PXSTATE_CONTEXT; /* size: 0x0020 */

typedef struct _XSTATE_SAVE
{
  /* 0x0000 */ struct _XSTATE_SAVE* Prev;
  /* 0x0008 */ struct _KTHREAD* Thread;
  /* 0x0010 */ unsigned char Level;
  /* 0x0011 */ char Padding_222[7];
  /* 0x0018 */ struct _XSTATE_CONTEXT XStateContext;
} XSTATE_SAVE, *PXSTATE_SAVE; /* size: 0x0038 */

typedef struct _PO_SHUTDOWN_NOTIFICATION
{
  /* 0x0000 */ void* Callback /* function */;
  /* 0x0008 */ void* Context;
} PO_SHUTDOWN_NOTIFICATION, *PPO_SHUTDOWN_NOTIFICATION; /* size: 0x0010 */

typedef struct _RTL_CRITICAL_SECTION
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ void* LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION; /* size: 0x0028 */

typedef struct _XSAVE_SUPPORTED_CPU
{
  /* 0x0000 */ struct XSAVE_CPU_INFO CpuInfo;
  union
  {
    /* 0x0020 */ struct XSAVE_CPU_ERRATA* CpuErrata;
    /* 0x0020 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} XSAVE_SUPPORTED_CPU, *PXSAVE_SUPPORTED_CPU; /* size: 0x0028 */

typedef struct _XSAVE_VENDOR
{
  /* 0x0000 */ unsigned long VendorId[3];
  /* 0x000c */ long Padding_223;
  /* 0x0010 */ struct _XSAVE_SUPPORTED_CPU SupportedCpu;
} XSAVE_VENDOR, *PXSAVE_VENDOR; /* size: 0x0038 */

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumMessageSize;
  /* 0x0004 */ unsigned long MailslotQuota;
  /* 0x0008 */ unsigned long NextMessageSize;
  /* 0x000c */ unsigned long MessagesAvailable;
  /* 0x0010 */ union _LARGE_INTEGER ReadTimeout;
} FILE_MAILSLOT_QUERY_INFORMATION, *PFILE_MAILSLOT_QUERY_INFORMATION; /* size: 0x0018 */

typedef struct _POLICY_AUDIT_CATEGORIES_INFO
{
  /* 0x0000 */ unsigned long MaximumCategoryCount;
  /* 0x0004 */ long Padding_224;
  /* 0x0008 */ struct _POLICY_AUDIT_SUBCATEGORIES_INFO* SubCategoriesInfo;
} POLICY_AUDIT_CATEGORIES_INFO, *PPOLICY_AUDIT_CATEGORIES_INFO; /* size: 0x0010 */

typedef struct _XSAVE_FEATURE
{
  /* 0x0000 */ unsigned long FeatureId;
  /* 0x0004 */ long Padding_225;
  union
  {
    /* 0x0008 */ struct _XSAVE_VENDORS* Vendors;
    /* 0x0008 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} XSAVE_FEATURE, *PXSAVE_FEATURE; /* size: 0x0010 */

typedef struct _XSAVE_POLICY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long MaxSaveAreaLength;
  /* 0x0010 */ unsigned __int64 FeatureBitmask;
  /* 0x0018 */ unsigned long NumberOfFeatures;
  /* 0x001c */ long Padding_226;
  /* 0x0020 */ struct _XSAVE_FEATURE Features[1];
} XSAVE_POLICY, *PXSAVE_POLICY; /* size: 0x0030 */

typedef struct _PERFINFO_SPINLOCK_CONFIG
{
  /* 0x0000 */ unsigned long SpinLockSpinThreshold;
  /* 0x0004 */ unsigned long SpinLockContentionSampleRate;
  /* 0x0008 */ unsigned long SpinLockAcquireSampleRate;
} PERFINFO_SPINLOCK_CONFIG, *PPERFINFO_SPINLOCK_CONFIG; /* size: 0x000c */

struct XSAVE_CPU_ERRATA
{
  /* 0x0000 */ unsigned long NumberOfErrata;
  /* 0x0004 */ long Padding_227;
  /* 0x0008 */ struct XSAVE_CPU_INFO Errata[1];
}; /* size: 0x0028 */

struct _ACTIVATION_CONTEXT_DATA;

typedef struct _HBIN
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long FileOffset;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved1[2];
  /* 0x0014 */ union _LARGE_INTEGER TimeStamp;
  /* 0x001c */ unsigned long Spare;
} HBIN, *PHBIN; /* size: 0x0020 */

typedef struct _DMA_ADAPTER
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ long Padding_228;
  /* 0x0008 */ struct _DMA_OPERATIONS* DmaOperations;
} DMA_ADAPTER, *PDMA_ADAPTER; /* size: 0x0010 */

typedef struct _MUILANGUAGES
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumLanguages;
  /* 0x0006 */ unsigned short NumLanguages;
  /* 0x0008 */ unsigned short NumInstalledLanguages;
  /* 0x000a */ char Padding_229[6];
  /* 0x0010 */ struct _MUILANGINFO* LangInfos;
} MUILANGUAGES, *PMUILANGUAGES; /* size: 0x0018 */

typedef struct _RUN_ENTRY
{
  /* 0x0000 */ unsigned long BaseCode;
  /* 0x0004 */ unsigned short RunLength;
  /* 0x0006 */ unsigned short CodeSize;
} RUN_ENTRY, *PRUN_ENTRY; /* size: 0x0008 */

typedef struct _LSA_TRANSLATED_NAME
{
  /* 0x0000 */ enum _SID_NAME_USE Use;
  /* 0x0004 */ long Padding_230;
  /* 0x0008 */ struct _UNICODE_STRING Name;
  /* 0x0018 */ long DomainIndex;
  /* 0x001c */ long __PADDING__[1];
} LSA_TRANSLATED_NAME, *PLSA_TRANSLATED_NAME; /* size: 0x0020 */

typedef union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short BridgeSecondaryStatus;
      /* 0x0002 */ unsigned short BridgeControl;
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS, *PWHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS; /* size: 0x0004 */

typedef struct _DEVICE_MAP
{
  /* 0x0000 */ struct _OBJECT_DIRECTORY* DosDevicesDirectory;
  /* 0x0008 */ struct _OBJECT_DIRECTORY* GlobalDosDevicesDirectory;
  /* 0x0010 */ void* DosDevicesDirectoryHandle;
  /* 0x0018 */ unsigned long ReferenceCount;
  /* 0x001c */ unsigned long DriveMap;
  /* 0x0020 */ unsigned char DriveType[32];
} DEVICE_MAP, *PDEVICE_MAP; /* size: 0x0040 */

typedef struct _OWNER_ENTRY
{
  /* 0x0000 */ unsigned __int64 OwnerThread;
  union
  {
    struct /* bitfield */
    {
      /* 0x0008 */ unsigned long IoPriorityBoosted : 1; /* bit position: 0 */
      /* 0x0008 */ unsigned long OwnerReferenced : 1; /* bit position: 1 */
      /* 0x0008 */ unsigned long OwnerCount : 30; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0008 */ unsigned long TableSize;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} OWNER_ENTRY, *POWNER_ENTRY; /* size: 0x0010 */

typedef struct _ERESOURCE
{
  /* 0x0000 */ struct _LIST_ENTRY SystemResourcesList;
  /* 0x0010 */ struct _OWNER_ENTRY* OwnerTable;
  /* 0x0018 */ short ActiveCount;
  /* 0x001a */ unsigned short Flag;
  /* 0x001c */ long Padding_231;
  /* 0x0020 */ struct _KSEMAPHORE* SharedWaiters;
  /* 0x0028 */ struct _KEVENT* ExclusiveWaiters;
  /* 0x0030 */ struct _OWNER_ENTRY OwnerEntry;
  /* 0x0040 */ unsigned long ActiveEntries;
  /* 0x0044 */ unsigned long ContentionCount;
  /* 0x0048 */ unsigned long NumberOfSharedWaiters;
  /* 0x004c */ unsigned long NumberOfExclusiveWaiters;
  /* 0x0050 */ void* Reserved2;
  union
  {
    /* 0x0058 */ void* Address;
    /* 0x0058 */ unsigned __int64 CreatorBackTraceIndex;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned __int64 SpinLock;
} ERESOURCE, *PERESOURCE; /* size: 0x0068 */

typedef struct _KTM
{
  /* 0x0000 */ unsigned long cookie;
  /* 0x0004 */ long Padding_232;
  /* 0x0008 */ struct _KMUTANT Mutex;
  /* 0x0040 */ enum KTM_STATE State;
  /* 0x0044 */ long Padding_233;
  /* 0x0048 */ struct _KTMOBJECT_NAMESPACE_LINK NamespaceLink;
  /* 0x0070 */ struct _GUID TmIdentity;
  /* 0x0080 */ unsigned long Flags;
  /* 0x0084 */ unsigned long VolatileFlags;
  /* 0x0088 */ struct _UNICODE_STRING LogFileName;
  /* 0x0098 */ struct _FILE_OBJECT* LogFileObject;
  /* 0x00a0 */ void* MarshallingContext;
  /* 0x00a8 */ void* LogManagementContext;
  /* 0x00b0 */ struct _KTMOBJECT_NAMESPACE Transactions;
  /* 0x0158 */ struct _KTMOBJECT_NAMESPACE ResourceManagers;
  /* 0x0200 */ struct _KMUTANT LsnOrderedMutex;
  /* 0x0238 */ struct _LIST_ENTRY LsnOrderedList;
  /* 0x0248 */ union _LARGE_INTEGER CommitVirtualClock;
  /* 0x0250 */ struct _FAST_MUTEX CommitVirtualClockMutex;
  /* 0x0288 */ union _CLS_LSN BaseLsn;
  /* 0x0290 */ union _CLS_LSN CurrentReadLsn;
  /* 0x0298 */ union _CLS_LSN LastRecoveredLsn;
  /* 0x02a0 */ void* TmRmHandle;
  /* 0x02a8 */ struct _KRESOURCEMANAGER* TmRm;
  /* 0x02b0 */ struct _KEVENT LogFullNotifyEvent;
  /* 0x02c8 */ struct _WORK_QUEUE_ITEM CheckpointWorkItem;
  /* 0x02e8 */ union _CLS_LSN CheckpointTargetLsn;
  /* 0x02f0 */ struct _WORK_QUEUE_ITEM LogFullCompletedWorkItem;
  /* 0x0310 */ struct _ERESOURCE LogWriteResource;
  /* 0x0378 */ unsigned long LogFlags;
  /* 0x037c */ long LogFullStatus;
  /* 0x0380 */ long RecoveryStatus;
  /* 0x0384 */ long Padding_234;
  /* 0x0388 */ union _CLS_LSN LastCheckBaseLsn;
  /* 0x0390 */ struct _LIST_ENTRY RestartOrderedList;
  /* 0x03a0 */ struct _WORK_QUEUE_ITEM OfflineWorkItem;
} KTM, *PKTM; /* size: 0x03c0 */

typedef struct _SCATTER_GATHER_LIST
{
  /* 0x0000 */ unsigned long NumberOfElements;
  /* 0x0004 */ long Padding_235;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _SCATTER_GATHER_ELEMENT* Elements /* zero-length array */;
} SCATTER_GATHER_LIST, *PSCATTER_GATHER_LIST; /* size: 0x0010 */

typedef struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long OriginalDesiredAccess;
  /* 0x0008 */ void* SourceProcess;
  /* 0x0010 */ void* TargetProcess;
} OB_PRE_DUPLICATE_HANDLE_INFORMATION, *POB_PRE_DUPLICATE_HANDLE_INFORMATION; /* size: 0x0018 */

typedef struct _OBJECT_DIRECTORY
{
  /* 0x0000 */ struct _OBJECT_DIRECTORY_ENTRY* HashBuckets[37];
  /* 0x0128 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0130 */ struct _DEVICE_MAP* DeviceMap;
  /* 0x0138 */ unsigned long SessionId;
  /* 0x013c */ long Padding_236;
  /* 0x0140 */ void* NamespaceEntry;
  /* 0x0148 */ unsigned long Flags;
  /* 0x014c */ long __PADDING__[1];
} OBJECT_DIRECTORY, *POBJECT_DIRECTORY; /* size: 0x0150 */

typedef union _WHEA_PCIEXPRESS_VERSION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char MinorVersion;
      /* 0x0001 */ unsigned char MajorVersion;
      /* 0x0002 */ unsigned short Reserved;
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_PCIEXPRESS_VERSION, *PWHEA_PCIEXPRESS_VERSION; /* size: 0x0004 */

typedef struct _VI_ETW_REGHANDLE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned __int64 RegHandle;
  /* 0x0018 */ void* CreatorAddress;
} VI_ETW_REGHANDLE, *PVI_ETW_REGHANDLE; /* size: 0x0020 */

typedef struct _LOOKASIDE_LIST_EX
{
  /* 0x0000 */ struct _GENERAL_LOOKASIDE_POOL L;
} LOOKASIDE_LIST_EX, *PLOOKASIDE_LIST_EX; /* size: 0x0060 */

typedef struct _FILE_NETWORK_OPEN_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ unsigned long FileAttributes;
  /* 0x0034 */ long __PADDING__[1];
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION; /* size: 0x0038 */

typedef struct _HIVE_LOAD_FAILURE
{
  /* 0x0000 */ struct _HHIVE* Hive;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ unsigned long RecoverableIndex;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ enum _CM_LOAD_FAILURE_TYPE Failure;
    /* 0x0014 */ long Status;
    /* 0x0018 */ unsigned long Point;
  } /* size: 0x000c */ Locations[8];
  /* 0x0070 */ struct
  {
    /* 0x0070 */ enum _CM_LOAD_FAILURE_TYPE Failure;
    /* 0x0074 */ long Status;
    /* 0x0078 */ unsigned long Point;
  } /* size: 0x000c */ RecoverableLocations[8];
  struct
  {
    /* 0x00d0 */ unsigned long Action;
    /* 0x0004 */ long Padding_237;
    /* 0x00d8 */ void* Handle;
    /* 0x00e0 */ long Status;
    /* 0x00e4 */ long __PADDING__[1];
  } /* size: 0x0018 */ RegistryIO;
  struct
  {
    /* 0x00e8 */ void* CheckStack;
  } /* size: 0x0008 */ CheckRegistry2;
  struct
  {
    /* 0x00f0 */ unsigned long Cell;
    /* 0x0004 */ long Padding_238;
    /* 0x00f8 */ struct _CELL_DATA* CellPoint;
    /* 0x0100 */ void* RootPoint;
    /* 0x0108 */ unsigned long Index;
    /* 0x010c */ long __PADDING__[1];
  } /* size: 0x0020 */ CheckKey;
  struct
  {
    /* 0x0110 */ struct _CELL_DATA* List;
    /* 0x0118 */ unsigned long Index;
    /* 0x011c */ unsigned long Cell;
    /* 0x0120 */ struct _CELL_DATA* CellPoint;
  } /* size: 0x0018 */ CheckValueList;
  struct
  {
    /* 0x0128 */ unsigned long Space;
    /* 0x012c */ unsigned long MapPoint;
    /* 0x0130 */ struct _HBIN* BinPoint;
  } /* size: 0x0010 */ CheckHive;
  struct
  {
    /* 0x0138 */ unsigned long Space;
    /* 0x013c */ unsigned long MapPoint;
    /* 0x0140 */ struct _HBIN* BinPoint;
  } /* size: 0x0010 */ CheckHive1;
  struct
  {
    /* 0x0148 */ struct _HBIN* Bin;
    /* 0x0150 */ struct _HCELL* CellPoint;
  } /* size: 0x0010 */ CheckBin;
  struct
  {
    /* 0x0158 */ unsigned long FileOffset;
  } /* size: 0x0004 */ RecoverData;
  /* 0x015c */ long __PADDING__[1];
} HIVE_LOAD_FAILURE, *PHIVE_LOAD_FAILURE; /* size: 0x0160 */

typedef struct _IO_SECURITY_CONTEXT
{
  /* 0x0000 */ struct _SECURITY_QUALITY_OF_SERVICE* SecurityQos;
  /* 0x0008 */ struct _ACCESS_STATE* AccessState;
  /* 0x0010 */ unsigned long DesiredAccess;
  /* 0x0014 */ unsigned long FullCreateOptions;
} IO_SECURITY_CONTEXT, *PIO_SECURITY_CONTEXT; /* size: 0x0018 */

typedef struct _AMD64_KSPECIAL_REGISTERS
{
  /* 0x0000 */ unsigned __int64 Cr0;
  /* 0x0008 */ unsigned __int64 Cr2;
  /* 0x0010 */ unsigned __int64 Cr3;
  /* 0x0018 */ unsigned __int64 Cr4;
  /* 0x0020 */ unsigned __int64 KernelDr0;
  /* 0x0028 */ unsigned __int64 KernelDr1;
  /* 0x0030 */ unsigned __int64 KernelDr2;
  /* 0x0038 */ unsigned __int64 KernelDr3;
  /* 0x0040 */ unsigned __int64 KernelDr6;
  /* 0x0048 */ unsigned __int64 KernelDr7;
  /* 0x0050 */ struct _AMD64_DESCRIPTOR Gdtr;
  /* 0x0060 */ struct _AMD64_DESCRIPTOR Idtr;
  /* 0x0070 */ unsigned short Tr;
  /* 0x0072 */ unsigned short Ldtr;
  /* 0x0074 */ unsigned long MxCsr;
  /* 0x0078 */ unsigned __int64 DebugControl;
  /* 0x0080 */ unsigned __int64 LastBranchToRip;
  /* 0x0088 */ unsigned __int64 LastBranchFromRip;
  /* 0x0090 */ unsigned __int64 LastExceptionToRip;
  /* 0x0098 */ unsigned __int64 LastExceptionFromRip;
  /* 0x00a0 */ unsigned __int64 Cr8;
  /* 0x00a8 */ unsigned __int64 MsrGsBase;
  /* 0x00b0 */ unsigned __int64 MsrGsSwap;
  /* 0x00b8 */ unsigned __int64 MsrStar;
  /* 0x00c0 */ unsigned __int64 MsrLStar;
  /* 0x00c8 */ unsigned __int64 MsrCStar;
  /* 0x00d0 */ unsigned __int64 MsrSyscallMask;
} AMD64_KSPECIAL_REGISTERS, *PAMD64_KSPECIAL_REGISTERS; /* size: 0x00d8 */

typedef struct _FILE_MAILSLOT_SET_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER* ReadTimeout;
} FILE_MAILSLOT_SET_INFORMATION, *PFILE_MAILSLOT_SET_INFORMATION; /* size: 0x0008 */

typedef struct _TRIAGE_9F_PNP
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ long Padding_239;
  /* 0x0008 */ struct _TRIAGE_PNP_DEVICE_COMPLETION_QUEUE* CompletionQueue;
  /* 0x0010 */ struct _TRIAGE_EX_WORK_QUEUE* DelayedWorkQueue;
} TRIAGE_9F_PNP, *PTRIAGE_9F_PNP; /* size: 0x0018 */

typedef struct _IO_PROC_INIT_VALUES
{
  /* 0x0000 */ unsigned short SmallIrpZoneSize;
  /* 0x0002 */ unsigned short MediumIrpZoneSize;
  /* 0x0004 */ unsigned short LargeIrpZoneSize;
  /* 0x0006 */ unsigned short CompletionZoneSize;
  /* 0x0008 */ unsigned short MdlZoneSize;
  /* 0x000a */ char Padding_240[2];
  /* 0x000c */ unsigned long SmallPacketSize;
  /* 0x0010 */ unsigned long MediumPacketSize;
  /* 0x0014 */ unsigned long LargePacketSize;
  /* 0x0018 */ unsigned long MdlPacketSize;
  /* 0x001c */ unsigned long LookasideIrpLimit;
} IO_PROC_INIT_VALUES, *PIO_PROC_INIT_VALUES; /* size: 0x0020 */

typedef struct _LSA_TRUST_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ void* Sid;
} LSA_TRUST_INFORMATION, *PLSA_TRUST_INFORMATION; /* size: 0x0018 */

typedef struct _VF_POOL_DELAY_FREE_DATA
{
  /* 0x0000 */ union _SLIST_HEADER SListHead;
  /* 0x0010 */ struct _KEVENT TrimEvent;
  /* 0x0028 */ struct _KTHREAD* TrimThread;
  /* 0x0030 */ volatile unsigned long Initialized;
  /* 0x0034 */ unsigned long Attempts;
  /* 0x0038 */ unsigned long Overflows;
  /* 0x003c */ unsigned long Trims;
} VF_POOL_DELAY_FREE_DATA, *PVF_POOL_DELAY_FREE_DATA; /* size: 0x0040 */

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDeviceInstance;
  /* 0x0010 */ unsigned long Relation;
  /* 0x0014 */ long Padding_241;
  /* 0x0018 */ unsigned short* RelatedDeviceInstance;
  /* 0x0020 */ unsigned long RelatedDeviceInstanceLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_RELATED_DEVICE_DATA, *PPLUGPLAY_CONTROL_RELATED_DEVICE_DATA; /* size: 0x0028 */

typedef struct _PROC_PERF_LOAD
{
  /* 0x0000 */ unsigned char BusyPercentage;
  /* 0x0001 */ unsigned char FrequencyPercentage;
} PROC_PERF_LOAD, *PPROC_PERF_LOAD; /* size: 0x0002 */

typedef struct _WHEAP_MEMORY_PFA_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0010 */ unsigned short Counter;
  /* 0x0012 */ char Padding_242[6];
  /* 0x0018 */ unsigned __int64 Timestamp;
  /* 0x0020 */ unsigned __int64 MemoryPage;
} WHEAP_MEMORY_PFA_ENTRY, *PWHEAP_MEMORY_PFA_ENTRY; /* size: 0x0028 */

typedef struct _WAITING_IRP
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _IRP* Irp;
  /* 0x0018 */ void* CompletionRoutine /* function */;
  /* 0x0020 */ void* Context;
  /* 0x0028 */ struct _KEVENT* Event;
  /* 0x0030 */ unsigned long Information;
  /* 0x0034 */ unsigned char BreakAllRH;
  /* 0x0035 */ char __PADDING__[3];
} WAITING_IRP, *PWAITING_IRP; /* size: 0x0038 */

typedef struct _SYSDBG_CONTROL_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ unsigned long Processor;
} SYSDBG_CONTROL_SPACE, *PSYSDBG_CONTROL_SPACE; /* size: 0x0018 */

typedef struct _REG_DELETE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ void* CallContext;
  /* 0x0010 */ void* ObjectContext;
  /* 0x0018 */ void* Reserved;
} REG_DELETE_KEY_INFORMATION, *PREG_DELETE_KEY_INFORMATION; /* size: 0x0020 */

typedef struct _FAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} FAT_STATISTICS, *PFAT_STATISTICS; /* size: 0x0024 */

typedef struct _WDIP_SEM_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY Head;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long Padding_243;
  /* 0x0018 */ struct _EX_PUSH_LOCK Lock;
} WDIP_SEM_LIST, *PWDIP_SEM_LIST; /* size: 0x0020 */

typedef struct _UNWIND_HISTORY_TABLE_ENTRY
{
  /* 0x0000 */ unsigned __int64 ImageBase;
  /* 0x0008 */ struct _RUNTIME_FUNCTION* FunctionEntry;
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY; /* size: 0x0010 */

typedef struct _UNWIND_HISTORY_TABLE
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned char LocalHint;
  /* 0x0005 */ unsigned char GlobalHint;
  /* 0x0006 */ unsigned char Search;
  /* 0x0007 */ unsigned char Once;
  /* 0x0008 */ unsigned __int64 LowAddress;
  /* 0x0010 */ unsigned __int64 HighAddress;
  /* 0x0018 */ struct _UNWIND_HISTORY_TABLE_ENTRY Entry[12];
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE; /* size: 0x00d8 */

typedef struct _LUTF8_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LUTF8_STRING, *PLUTF8_STRING; /* size: 0x0018 */

typedef union _PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long CapturedCpuShareWeight;
      /* 0x0004 */ unsigned long CapturedTotalWeight;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 CombinedData;
  }; /* size: 0x0008 */
} PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA, *PPSP_CPU_SHARE_CAPTURED_WEIGHT_DATA; /* size: 0x0008 */

typedef struct _REG_LOAD_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _UNICODE_STRING* KeyName;
  /* 0x0010 */ struct _UNICODE_STRING* SourceFile;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_244;
  /* 0x0020 */ void* TrustClassObject;
  /* 0x0028 */ void* UserEvent;
  /* 0x0030 */ unsigned long DesiredAccess;
  /* 0x0034 */ long Padding_245;
  /* 0x0038 */ void** RootHandle;
  /* 0x0040 */ void* CallContext;
  /* 0x0048 */ void* ObjectContext;
  /* 0x0050 */ void* Reserved;
} REG_LOAD_KEY_INFORMATION, *PREG_LOAD_KEY_INFORMATION; /* size: 0x0058 */

typedef struct _PERFINFO_GROUPMASK
{
  /* 0x0000 */ unsigned long Masks[8];
} PERFINFO_GROUPMASK, *PPERFINFO_GROUPMASK; /* size: 0x0020 */

typedef struct _AMD64_CONTEXT
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  union
  {
    /* 0x0100 */ struct _AMD64_XMM_SAVE_AREA32 FltSave;
    struct
    {
      /* 0x0100 */ struct _AMD64_M128 Header[2];
      /* 0x0120 */ struct _AMD64_M128 Legacy[8];
      /* 0x01a0 */ struct _AMD64_M128 Xmm0;
      /* 0x01b0 */ struct _AMD64_M128 Xmm1;
      /* 0x01c0 */ struct _AMD64_M128 Xmm2;
      /* 0x01d0 */ struct _AMD64_M128 Xmm3;
      /* 0x01e0 */ struct _AMD64_M128 Xmm4;
      /* 0x01f0 */ struct _AMD64_M128 Xmm5;
      /* 0x0200 */ struct _AMD64_M128 Xmm6;
      /* 0x0210 */ struct _AMD64_M128 Xmm7;
      /* 0x0220 */ struct _AMD64_M128 Xmm8;
      /* 0x0230 */ struct _AMD64_M128 Xmm9;
      /* 0x0240 */ struct _AMD64_M128 Xmm10;
      /* 0x0250 */ struct _AMD64_M128 Xmm11;
      /* 0x0260 */ struct _AMD64_M128 Xmm12;
      /* 0x0270 */ struct _AMD64_M128 Xmm13;
      /* 0x0280 */ struct _AMD64_M128 Xmm14;
      /* 0x0290 */ struct _AMD64_M128 Xmm15;
    }; /* size: 0x01a0 */
  }; /* size: 0x0200 */
  /* 0x0300 */ struct _AMD64_M128 VectorRegister[26];
  /* 0x04a0 */ unsigned __int64 VectorControl;
  /* 0x04a8 */ unsigned __int64 DebugControl;
  /* 0x04b0 */ unsigned __int64 LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 LastExceptionFromRip;
} AMD64_CONTEXT, *PAMD64_CONTEXT; /* size: 0x04d0 */

typedef struct _AMD64_FIBER
{
  /* 0x0000 */ unsigned __int64 FiberData;
  /* 0x0008 */ unsigned __int64 ExceptionList;
  /* 0x0010 */ unsigned __int64 StackBase;
  /* 0x0018 */ unsigned __int64 StackLimit;
  /* 0x0020 */ unsigned __int64 DeallocationStack;
  /* 0x0028 */ struct _AMD64_CONTEXT FiberContext;
  /* 0x04f8 */ unsigned __int64 Wx86Tib;
} AMD64_FIBER, *PAMD64_FIBER; /* size: 0x0500 */

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA
{
  /* 0x0000 */ unsigned long BytesPerSector;
  /* 0x0004 */ unsigned long NumberOfCylinders;
  /* 0x0008 */ unsigned long SectorsPerTrack;
  /* 0x000c */ unsigned long NumberOfHeads;
} CM_DISK_GEOMETRY_DEVICE_DATA, *PCM_DISK_GEOMETRY_DEVICE_DATA; /* size: 0x0010 */

typedef struct _MMWSLE_FREE_ENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 MustBeZero : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PreviousFree : 31; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 NextFree : 32; /* bit position: 32 */
  }; /* bitfield */
} MMWSLE_FREE_ENTRY, *PMMWSLE_FREE_ENTRY; /* size: 0x0008 */

typedef struct _BOOT_AREA_INFO
{
  /* 0x0000 */ unsigned long BootSectorCount;
  /* 0x0004 */ long Padding_246;
  /* 0x0008 */ struct
  {
    /* 0x0008 */ union _LARGE_INTEGER Offset;
  } /* size: 0x0008 */ BootSectors[2];
} BOOT_AREA_INFO, *PBOOT_AREA_INFO; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _CM_RESOURCE_LIST* ResourceList;
  /* 0x0018 */ unsigned long ResourceListSize;
  /* 0x001c */ long Padding_247;
  /* 0x0020 */ struct _PLUGPLAY_CONTROL_CONFLICT_LIST* ConflictBuffer;
  /* 0x0028 */ unsigned long ConflictBufferSize;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ long Status;
  /* 0x0034 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_DATA, *PPLUGPLAY_CONTROL_CONFLICT_DATA; /* size: 0x0038 */

typedef struct _PERFINFO_SAMPLED_PROFILE_INFORMATION
{
  /* 0x0000 */ void* InstructionPointer;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned short Count;
  union
  {
    struct /* bitfield */
    {
      /* 0x000e */ unsigned char ExecutingDpc : 1; /* bit position: 0 */
      /* 0x000e */ unsigned char ExecutingIsr : 1; /* bit position: 1 */
      /* 0x000e */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
    /* 0x000e */ unsigned char Flags;
  }; /* size: 0x0001 */
  /* 0x000f */ unsigned char ReservedByte;
} PERFINFO_SAMPLED_PROFILE_INFORMATION, *PPERFINFO_SAMPLED_PROFILE_INFORMATION; /* size: 0x0010 */

typedef struct _PERFINFO_SAMPLED_PROFILE_CACHE
{
  /* 0x0000 */ unsigned long Entries;
  /* 0x0004 */ long Padding_248;
  /* 0x0008 */ struct _PERFINFO_SAMPLED_PROFILE_INFORMATION Sample[20];
} PERFINFO_SAMPLED_PROFILE_CACHE, *PPERFINFO_SAMPLED_PROFILE_CACHE; /* size: 0x0148 */

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR; /* size: 0x0024 */

typedef struct _CM_RESOURCE_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST; /* size: 0x0028 */

union HANDLE3264
{
  union
  {
    /* 0x0000 */ void* Handle;
    /* 0x0000 */ unsigned __int64 Handle64;
    /* 0x0000 */ unsigned int Handle32;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct WMIMARKASCLOSED
{
  /* 0x0000 */ union HANDLE3264 Handle;
}; /* size: 0x0008 */

typedef union _PCC_OUTPUT_BUFFER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char AverageFrequency;
      /* 0x0001 */ unsigned char FrequencyLimit;
      /* 0x0002 */ unsigned char Reserved[2];
    } /* size: 0x0004 */ GetAverageFrequency;
    struct
    {
      /* 0x0000 */ unsigned char Reserved[4];
    } /* size: 0x0004 */ SetDesiredFrequency;
  }; /* size: 0x0004 */
} PCC_OUTPUT_BUFFER, *PPCC_OUTPUT_BUFFER; /* size: 0x0004 */

typedef struct _AGP_TARGET_BUS_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_249;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* SetBusData /* function */;
  /* 0x0028 */ void* GetBusData /* function */;
  /* 0x0030 */ unsigned char CapabilityID;
  /* 0x0031 */ char __PADDING__[7];
} AGP_TARGET_BUS_INTERFACE_STANDARD, *PAGP_TARGET_BUS_INTERFACE_STANDARD; /* size: 0x0038 */

typedef struct _JOB_ACCESS_STATE
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long AllFlags;
      /* 0x0000 */ unsigned long DebugPriv : 1; /* bit position: 0 */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Data;
  /* 0x0004 */ long Padding_250;
  /* 0x0008 */ struct _SECURITY_SUBJECT_CONTEXT CapturedContext;
} JOB_ACCESS_STATE, *PJOB_ACCESS_STATE; /* size: 0x0028 */

struct MSIX_TABLE_POINTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long BaseIndexRegister : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long TableOffset;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY
{
  /* 0x0000 */ unsigned long DeviceInstance;
  /* 0x0004 */ unsigned long DeviceFlags;
  /* 0x0008 */ unsigned long ResourceType;
  /* 0x000c */ long Padding_251;
  /* 0x0010 */ unsigned __int64 ResourceStart;
  /* 0x0018 */ unsigned __int64 ResourceEnd;
  /* 0x0020 */ unsigned long ResourceFlags;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_ENTRY, *PPLUGPLAY_CONTROL_CONFLICT_ENTRY; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST
{
  /* 0x0000 */ unsigned long Reserved1;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ unsigned long ConflictsCounted;
  /* 0x000c */ unsigned long ConflictsListed;
  /* 0x0010 */ unsigned long RequiredBufferSize;
  /* 0x0014 */ long Padding_252;
  /* 0x0018 */ struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
} PLUGPLAY_CONTROL_CONFLICT_LIST, *PPLUGPLAY_CONTROL_CONFLICT_LIST; /* size: 0x0040 */

typedef struct _VF_BTS_DATA_MANAGEMENT_AREA
{
  /* 0x0000 */ void* BTSBufferBase;
  /* 0x0008 */ void* BTSIndex;
  /* 0x0010 */ void* BTSMax;
  /* 0x0018 */ void* BTSInterruptThreshold;
  /* 0x0020 */ void* PEBSBufferBase;
  /* 0x0028 */ void* PEBSIndex;
  /* 0x0030 */ void* PEBSMax;
  /* 0x0038 */ void* PEBSInterruptThreshold;
  /* 0x0040 */ void* PEBSCounterReset[2];
  /* 0x0050 */ char Reserved[8];
} VF_BTS_DATA_MANAGEMENT_AREA, *PVF_BTS_DATA_MANAGEMENT_AREA; /* size: 0x0058 */

typedef struct _EFI_FIRMWARE_INFORMATION
{
  /* 0x0000 */ unsigned long FirmwareVersion;
  /* 0x0004 */ long Padding_253;
  /* 0x0008 */ struct _VIRTUAL_EFI_RUNTIME_SERVICES* VirtualEfiRuntimeServices;
  /* 0x0010 */ long SetVirtualAddressMapStatus;
  /* 0x0014 */ unsigned long MissedMappingsCount;
} EFI_FIRMWARE_INFORMATION, *PEFI_FIRMWARE_INFORMATION; /* size: 0x0018 */

typedef union _FOUR_PART_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version64;
    struct
    {
      /* 0x0000 */ unsigned long BuildAndRevision;
      /* 0x0004 */ unsigned long MajorAndMinor;
    } /* size: 0x0008 */ Version32;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    } /* size: 0x0008 */ Version16;
  }; /* size: 0x0008 */
} FOUR_PART_VERSION, *PFOUR_PART_VERSION; /* size: 0x0008 */

typedef struct _IMAGE_INFO_EX
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _IMAGE_INFO ImageInfo;
  /* 0x0030 */ struct _FILE_OBJECT* FileObject;
} IMAGE_INFO_EX, *PIMAGE_INFO_EX; /* size: 0x0038 */

typedef union _HV_PARTITION_PRIVILEGE_MASK
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 AccessVpRunTimeMsr : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 AccessPartitionReferenceCounter : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 AccessSynicMsrs : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 AccessSyntheticTimerMsrs : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 AccessApicMsrs : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 AccessHypercallMsrs : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 AccessVpIndex : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 AccessResetMsr : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 AccessStatsMsr : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 AccessPartitionReferenceTsc : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned __int64 Reserved1 : 22; /* bit position: 10 */
      /* 0x0000 */ unsigned __int64 CreatePartitions : 1; /* bit position: 32 */
      /* 0x0000 */ unsigned __int64 AccessPartitionId : 1; /* bit position: 33 */
      /* 0x0000 */ unsigned __int64 AccessMemoryPool : 1; /* bit position: 34 */
      /* 0x0000 */ unsigned __int64 AdjustMessageBuffers : 1; /* bit position: 35 */
      /* 0x0000 */ unsigned __int64 PostMessages : 1; /* bit position: 36 */
      /* 0x0000 */ unsigned __int64 SignalEvents : 1; /* bit position: 37 */
      /* 0x0000 */ unsigned __int64 CreatePort : 1; /* bit position: 38 */
      /* 0x0000 */ unsigned __int64 ConnectPort : 1; /* bit position: 39 */
      /* 0x0000 */ unsigned __int64 AccessStats : 1; /* bit position: 40 */
      /* 0x0000 */ unsigned __int64 Reserved2 : 2; /* bit position: 41 */
      /* 0x0000 */ unsigned __int64 Debugging : 1; /* bit position: 43 */
      /* 0x0000 */ unsigned __int64 CpuManagement : 1; /* bit position: 44 */
      /* 0x0000 */ unsigned __int64 Reserved3 : 19; /* bit position: 45 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} HV_PARTITION_PRIVILEGE_MASK, *PHV_PARTITION_PRIVILEGE_MASK; /* size: 0x0008 */

typedef struct _GENERATE_NAME_CONTEXT
{
  /* 0x0000 */ unsigned short Checksum;
  /* 0x0002 */ unsigned char ChecksumInserted;
  /* 0x0003 */ unsigned char NameLength;
  /* 0x0004 */ wchar_t NameBuffer[8];
  /* 0x0014 */ unsigned long ExtensionLength;
  /* 0x0018 */ wchar_t ExtensionBuffer[4];
  /* 0x0020 */ unsigned long LastIndexValue;
} GENERATE_NAME_CONTEXT, *PGENERATE_NAME_CONTEXT; /* size: 0x0024 */

typedef struct _FILE_OBJECT
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_254;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ struct _VPB* Vpb;
  /* 0x0018 */ void* FsContext;
  /* 0x0020 */ void* FsContext2;
  /* 0x0028 */ struct _SECTION_OBJECT_POINTERS* SectionObjectPointer;
  /* 0x0030 */ void* PrivateCacheMap;
  /* 0x0038 */ long FinalStatus;
  /* 0x003c */ long Padding_255;
  /* 0x0040 */ struct _FILE_OBJECT* RelatedFileObject;
  /* 0x0048 */ unsigned char LockOperation;
  /* 0x0049 */ unsigned char DeletePending;
  /* 0x004a */ unsigned char ReadAccess;
  /* 0x004b */ unsigned char WriteAccess;
  /* 0x004c */ unsigned char DeleteAccess;
  /* 0x004d */ unsigned char SharedRead;
  /* 0x004e */ unsigned char SharedWrite;
  /* 0x004f */ unsigned char SharedDelete;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ long Padding_256;
  /* 0x0058 */ struct _UNICODE_STRING FileName;
  /* 0x0068 */ union _LARGE_INTEGER CurrentByteOffset;
  /* 0x0070 */ unsigned long Waiters;
  /* 0x0074 */ unsigned long Busy;
  /* 0x0078 */ void* LastLock;
  /* 0x0080 */ struct _KEVENT Lock;
  /* 0x0098 */ struct _KEVENT Event;
  /* 0x00b0 */ struct _IO_COMPLETION_CONTEXT* CompletionContext;
  /* 0x00b8 */ unsigned __int64 IrpListLock;
  /* 0x00c0 */ struct _LIST_ENTRY IrpList;
  /* 0x00d0 */ void* FileObjectExtension;
} FILE_OBJECT, *PFILE_OBJECT; /* size: 0x00d8 */

typedef struct _DRIVER_OBJECT
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_257;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long Padding_258;
  /* 0x0018 */ void* DriverStart;
  /* 0x0020 */ unsigned long DriverSize;
  /* 0x0024 */ long Padding_259;
  /* 0x0028 */ void* DriverSection;
  /* 0x0030 */ struct _DRIVER_EXTENSION* DriverExtension;
  /* 0x0038 */ struct _UNICODE_STRING DriverName;
  /* 0x0048 */ struct _UNICODE_STRING* HardwareDatabase;
  /* 0x0050 */ struct _FAST_IO_DISPATCH* FastIoDispatch;
  /* 0x0058 */ void* DriverInit /* function */;
  /* 0x0060 */ void* DriverStartIo /* function */;
  /* 0x0068 */ void* DriverUnload /* function */;
  /* 0x0070 */ void* MajorFunction[28] /* function */;
} DRIVER_OBJECT, *PDRIVER_OBJECT; /* size: 0x0150 */

typedef struct _VIRTUAL_STORAGE_TYPE
{
  /* 0x0000 */ unsigned long DeviceId;
  /* 0x0004 */ struct _GUID VendorId;
} VIRTUAL_STORAGE_TYPE, *PVIRTUAL_STORAGE_TYPE; /* size: 0x0014 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY
{
  /* 0x0000 */ unsigned long EntryLength;
  /* 0x0004 */ unsigned long DependencyTypeFlags;
  /* 0x0008 */ unsigned long ProviderSpecificFlags;
  /* 0x000c */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
} STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY, *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY; /* size: 0x0020 */

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION; /* size: 0x0004 */

typedef struct _LOCKTREE_NODE
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Locks;
  /* 0x0008 */ unsigned char HoleyNode;
  /* 0x0009 */ char Padding_260[7];
  /* 0x0010 */ unsigned __int64 Extent;
  /* 0x0018 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0030 */ struct _SINGLE_LIST_ENTRY Tail;
} LOCKTREE_NODE, *PLOCKTREE_NODE; /* size: 0x0038 */

typedef struct _OBJECT_CREATE_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ long Padding_261;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ char ProbeMode;
  /* 0x0011 */ char Padding_262[3];
  /* 0x0014 */ unsigned long PagedPoolCharge;
  /* 0x0018 */ unsigned long NonPagedPoolCharge;
  /* 0x001c */ unsigned long SecurityDescriptorCharge;
  /* 0x0020 */ void* SecurityDescriptor;
  /* 0x0028 */ struct _SECURITY_QUALITY_OF_SERVICE* SecurityQos;
  /* 0x0030 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQualityOfService;
  /* 0x003c */ long __PADDING__[1];
} OBJECT_CREATE_INFORMATION, *POBJECT_CREATE_INFORMATION; /* size: 0x0040 */

typedef struct _IO_CLIENT_EXTENSION
{
  /* 0x0000 */ struct _IO_CLIENT_EXTENSION* NextExtension;
  /* 0x0008 */ void* ClientIdentificationAddress;
} IO_CLIENT_EXTENSION, *PIO_CLIENT_EXTENSION; /* size: 0x0010 */

typedef struct _INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_263;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
} INTERFACE, *PINTERFACE; /* size: 0x0020 */

typedef union _PCI_EXPRESS_ROOT_ERROR_STATUS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long CorrectableErrorReceived : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long MultipleCorrectableErrorsReceived : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long UncorrectableErrorReceived : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long MultipleUncorrectableErrorsReceived : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long FirstUncorrectableFatal : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long NonFatalErrorMessagesReceived : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long FatalErrorMessagesReceived : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long Reserved : 20; /* bit position: 7 */
      /* 0x0000 */ unsigned long AdvancedErrorInterruptMessageNumber : 5; /* bit position: 27 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_ROOT_ERROR_STATUS, *PPCI_EXPRESS_ROOT_ERROR_STATUS; /* size: 0x0004 */

typedef struct _EVENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char Channel;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char Opcode;
  /* 0x0006 */ unsigned short Task;
  /* 0x0008 */ unsigned __int64 Keyword;
} EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR; /* size: 0x0010 */

struct USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0038 */

typedef struct _IA64_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Fill1[3];
  /* 0x0010 */ unsigned __int64 DbI0;
  /* 0x0018 */ unsigned __int64 DbI1;
  /* 0x0020 */ unsigned __int64 DbI2;
  /* 0x0028 */ unsigned __int64 DbI3;
  /* 0x0030 */ unsigned __int64 DbI4;
  /* 0x0038 */ unsigned __int64 DbI5;
  /* 0x0040 */ unsigned __int64 DbI6;
  /* 0x0048 */ unsigned __int64 DbI7;
  /* 0x0050 */ unsigned __int64 DbD0;
  /* 0x0058 */ unsigned __int64 DbD1;
  /* 0x0060 */ unsigned __int64 DbD2;
  /* 0x0068 */ unsigned __int64 DbD3;
  /* 0x0070 */ unsigned __int64 DbD4;
  /* 0x0078 */ unsigned __int64 DbD5;
  /* 0x0080 */ unsigned __int64 DbD6;
  /* 0x0088 */ unsigned __int64 DbD7;
  /* 0x0090 */ struct _FLOAT128 FltS0;
  /* 0x00a0 */ struct _FLOAT128 FltS1;
  /* 0x00b0 */ struct _FLOAT128 FltS2;
  /* 0x00c0 */ struct _FLOAT128 FltS3;
  /* 0x00d0 */ struct _FLOAT128 FltT0;
  /* 0x00e0 */ struct _FLOAT128 FltT1;
  /* 0x00f0 */ struct _FLOAT128 FltT2;
  /* 0x0100 */ struct _FLOAT128 FltT3;
  /* 0x0110 */ struct _FLOAT128 FltT4;
  /* 0x0120 */ struct _FLOAT128 FltT5;
  /* 0x0130 */ struct _FLOAT128 FltT6;
  /* 0x0140 */ struct _FLOAT128 FltT7;
  /* 0x0150 */ struct _FLOAT128 FltT8;
  /* 0x0160 */ struct _FLOAT128 FltT9;
  /* 0x0170 */ struct _FLOAT128 FltS4;
  /* 0x0180 */ struct _FLOAT128 FltS5;
  /* 0x0190 */ struct _FLOAT128 FltS6;
  /* 0x01a0 */ struct _FLOAT128 FltS7;
  /* 0x01b0 */ struct _FLOAT128 FltS8;
  /* 0x01c0 */ struct _FLOAT128 FltS9;
  /* 0x01d0 */ struct _FLOAT128 FltS10;
  /* 0x01e0 */ struct _FLOAT128 FltS11;
  /* 0x01f0 */ struct _FLOAT128 FltS12;
  /* 0x0200 */ struct _FLOAT128 FltS13;
  /* 0x0210 */ struct _FLOAT128 FltS14;
  /* 0x0220 */ struct _FLOAT128 FltS15;
  /* 0x0230 */ struct _FLOAT128 FltS16;
  /* 0x0240 */ struct _FLOAT128 FltS17;
  /* 0x0250 */ struct _FLOAT128 FltS18;
  /* 0x0260 */ struct _FLOAT128 FltS19;
  /* 0x0270 */ struct _FLOAT128 FltF32;
  /* 0x0280 */ struct _FLOAT128 FltF33;
  /* 0x0290 */ struct _FLOAT128 FltF34;
  /* 0x02a0 */ struct _FLOAT128 FltF35;
  /* 0x02b0 */ struct _FLOAT128 FltF36;
  /* 0x02c0 */ struct _FLOAT128 FltF37;
  /* 0x02d0 */ struct _FLOAT128 FltF38;
  /* 0x02e0 */ struct _FLOAT128 FltF39;
  /* 0x02f0 */ struct _FLOAT128 FltF40;
  /* 0x0300 */ struct _FLOAT128 FltF41;
  /* 0x0310 */ struct _FLOAT128 FltF42;
  /* 0x0320 */ struct _FLOAT128 FltF43;
  /* 0x0330 */ struct _FLOAT128 FltF44;
  /* 0x0340 */ struct _FLOAT128 FltF45;
  /* 0x0350 */ struct _FLOAT128 FltF46;
  /* 0x0360 */ struct _FLOAT128 FltF47;
  /* 0x0370 */ struct _FLOAT128 FltF48;
  /* 0x0380 */ struct _FLOAT128 FltF49;
  /* 0x0390 */ struct _FLOAT128 FltF50;
  /* 0x03a0 */ struct _FLOAT128 FltF51;
  /* 0x03b0 */ struct _FLOAT128 FltF52;
  /* 0x03c0 */ struct _FLOAT128 FltF53;
  /* 0x03d0 */ struct _FLOAT128 FltF54;
  /* 0x03e0 */ struct _FLOAT128 FltF55;
  /* 0x03f0 */ struct _FLOAT128 FltF56;
  /* 0x0400 */ struct _FLOAT128 FltF57;
  /* 0x0410 */ struct _FLOAT128 FltF58;
  /* 0x0420 */ struct _FLOAT128 FltF59;
  /* 0x0430 */ struct _FLOAT128 FltF60;
  /* 0x0440 */ struct _FLOAT128 FltF61;
  /* 0x0450 */ struct _FLOAT128 FltF62;
  /* 0x0460 */ struct _FLOAT128 FltF63;
  /* 0x0470 */ struct _FLOAT128 FltF64;
  /* 0x0480 */ struct _FLOAT128 FltF65;
  /* 0x0490 */ struct _FLOAT128 FltF66;
  /* 0x04a0 */ struct _FLOAT128 FltF67;
  /* 0x04b0 */ struct _FLOAT128 FltF68;
  /* 0x04c0 */ struct _FLOAT128 FltF69;
  /* 0x04d0 */ struct _FLOAT128 FltF70;
  /* 0x04e0 */ struct _FLOAT128 FltF71;
  /* 0x04f0 */ struct _FLOAT128 FltF72;
  /* 0x0500 */ struct _FLOAT128 FltF73;
  /* 0x0510 */ struct _FLOAT128 FltF74;
  /* 0x0520 */ struct _FLOAT128 FltF75;
  /* 0x0530 */ struct _FLOAT128 FltF76;
  /* 0x0540 */ struct _FLOAT128 FltF77;
  /* 0x0550 */ struct _FLOAT128 FltF78;
  /* 0x0560 */ struct _FLOAT128 FltF79;
  /* 0x0570 */ struct _FLOAT128 FltF80;
  /* 0x0580 */ struct _FLOAT128 FltF81;
  /* 0x0590 */ struct _FLOAT128 FltF82;
  /* 0x05a0 */ struct _FLOAT128 FltF83;
  /* 0x05b0 */ struct _FLOAT128 FltF84;
  /* 0x05c0 */ struct _FLOAT128 FltF85;
  /* 0x05d0 */ struct _FLOAT128 FltF86;
  /* 0x05e0 */ struct _FLOAT128 FltF87;
  /* 0x05f0 */ struct _FLOAT128 FltF88;
  /* 0x0600 */ struct _FLOAT128 FltF89;
  /* 0x0610 */ struct _FLOAT128 FltF90;
  /* 0x0620 */ struct _FLOAT128 FltF91;
  /* 0x0630 */ struct _FLOAT128 FltF92;
  /* 0x0640 */ struct _FLOAT128 FltF93;
  /* 0x0650 */ struct _FLOAT128 FltF94;
  /* 0x0660 */ struct _FLOAT128 FltF95;
  /* 0x0670 */ struct _FLOAT128 FltF96;
  /* 0x0680 */ struct _FLOAT128 FltF97;
  /* 0x0690 */ struct _FLOAT128 FltF98;
  /* 0x06a0 */ struct _FLOAT128 FltF99;
  /* 0x06b0 */ struct _FLOAT128 FltF100;
  /* 0x06c0 */ struct _FLOAT128 FltF101;
  /* 0x06d0 */ struct _FLOAT128 FltF102;
  /* 0x06e0 */ struct _FLOAT128 FltF103;
  /* 0x06f0 */ struct _FLOAT128 FltF104;
  /* 0x0700 */ struct _FLOAT128 FltF105;
  /* 0x0710 */ struct _FLOAT128 FltF106;
  /* 0x0720 */ struct _FLOAT128 FltF107;
  /* 0x0730 */ struct _FLOAT128 FltF108;
  /* 0x0740 */ struct _FLOAT128 FltF109;
  /* 0x0750 */ struct _FLOAT128 FltF110;
  /* 0x0760 */ struct _FLOAT128 FltF111;
  /* 0x0770 */ struct _FLOAT128 FltF112;
  /* 0x0780 */ struct _FLOAT128 FltF113;
  /* 0x0790 */ struct _FLOAT128 FltF114;
  /* 0x07a0 */ struct _FLOAT128 FltF115;
  /* 0x07b0 */ struct _FLOAT128 FltF116;
  /* 0x07c0 */ struct _FLOAT128 FltF117;
  /* 0x07d0 */ struct _FLOAT128 FltF118;
  /* 0x07e0 */ struct _FLOAT128 FltF119;
  /* 0x07f0 */ struct _FLOAT128 FltF120;
  /* 0x0800 */ struct _FLOAT128 FltF121;
  /* 0x0810 */ struct _FLOAT128 FltF122;
  /* 0x0820 */ struct _FLOAT128 FltF123;
  /* 0x0830 */ struct _FLOAT128 FltF124;
  /* 0x0840 */ struct _FLOAT128 FltF125;
  /* 0x0850 */ struct _FLOAT128 FltF126;
  /* 0x0860 */ struct _FLOAT128 FltF127;
  /* 0x0870 */ unsigned __int64 StFPSR;
  /* 0x0878 */ unsigned __int64 IntGp;
  /* 0x0880 */ unsigned __int64 IntT0;
  /* 0x0888 */ unsigned __int64 IntT1;
  /* 0x0890 */ unsigned __int64 IntS0;
  /* 0x0898 */ unsigned __int64 IntS1;
  /* 0x08a0 */ unsigned __int64 IntS2;
  /* 0x08a8 */ unsigned __int64 IntS3;
  /* 0x08b0 */ unsigned __int64 IntV0;
  /* 0x08b8 */ unsigned __int64 IntT2;
  /* 0x08c0 */ unsigned __int64 IntT3;
  /* 0x08c8 */ unsigned __int64 IntT4;
  /* 0x08d0 */ unsigned __int64 IntSp;
  /* 0x08d8 */ unsigned __int64 IntTeb;
  /* 0x08e0 */ unsigned __int64 IntT5;
  /* 0x08e8 */ unsigned __int64 IntT6;
  /* 0x08f0 */ unsigned __int64 IntT7;
  /* 0x08f8 */ unsigned __int64 IntT8;
  /* 0x0900 */ unsigned __int64 IntT9;
  /* 0x0908 */ unsigned __int64 IntT10;
  /* 0x0910 */ unsigned __int64 IntT11;
  /* 0x0918 */ unsigned __int64 IntT12;
  /* 0x0920 */ unsigned __int64 IntT13;
  /* 0x0928 */ unsigned __int64 IntT14;
  /* 0x0930 */ unsigned __int64 IntT15;
  /* 0x0938 */ unsigned __int64 IntT16;
  /* 0x0940 */ unsigned __int64 IntT17;
  /* 0x0948 */ unsigned __int64 IntT18;
  /* 0x0950 */ unsigned __int64 IntT19;
  /* 0x0958 */ unsigned __int64 IntT20;
  /* 0x0960 */ unsigned __int64 IntT21;
  /* 0x0968 */ unsigned __int64 IntT22;
  /* 0x0970 */ unsigned __int64 IntNats;
  /* 0x0978 */ unsigned __int64 Preds;
  /* 0x0980 */ unsigned __int64 BrRp;
  /* 0x0988 */ unsigned __int64 BrS0;
  /* 0x0990 */ unsigned __int64 BrS1;
  /* 0x0998 */ unsigned __int64 BrS2;
  /* 0x09a0 */ unsigned __int64 BrS3;
  /* 0x09a8 */ unsigned __int64 BrS4;
  /* 0x09b0 */ unsigned __int64 BrT0;
  /* 0x09b8 */ unsigned __int64 BrT1;
  /* 0x09c0 */ unsigned __int64 ApUNAT;
  /* 0x09c8 */ unsigned __int64 ApLC;
  /* 0x09d0 */ unsigned __int64 ApEC;
  /* 0x09d8 */ unsigned __int64 ApCCV;
  /* 0x09e0 */ unsigned __int64 ApDCR;
  /* 0x09e8 */ unsigned __int64 RsPFS;
  /* 0x09f0 */ unsigned __int64 RsBSP;
  /* 0x09f8 */ unsigned __int64 RsBSPSTORE;
  /* 0x0a00 */ unsigned __int64 RsRSC;
  /* 0x0a08 */ unsigned __int64 RsRNAT;
  /* 0x0a10 */ unsigned __int64 StIPSR;
  /* 0x0a18 */ unsigned __int64 StIIP;
  /* 0x0a20 */ unsigned __int64 StIFS;
  /* 0x0a28 */ unsigned __int64 StFCR;
  /* 0x0a30 */ unsigned __int64 Eflag;
  /* 0x0a38 */ unsigned __int64 SegCSD;
  /* 0x0a40 */ unsigned __int64 SegSSD;
  /* 0x0a48 */ unsigned __int64 Cflag;
  /* 0x0a50 */ unsigned __int64 StFSR;
  /* 0x0a58 */ unsigned __int64 StFIR;
  /* 0x0a60 */ unsigned __int64 StFDR;
  /* 0x0a68 */ unsigned __int64 UNUSEDPACK;
} IA64_CONTEXT, *PIA64_CONTEXT; /* size: 0x0a70 */

typedef union _FS_FILTER_PARAMETERS
{
  union
  {
    struct
    {
      /* 0x0000 */ union _LARGE_INTEGER* EndingOffset;
      /* 0x0008 */ struct _ERESOURCE** ResourceToRelease;
    } /* size: 0x0010 */ AcquireForModifiedPageWriter;
    struct
    {
      /* 0x0000 */ struct _ERESOURCE* ResourceToRelease;
    } /* size: 0x0008 */ ReleaseForModifiedPageWriter;
    struct
    {
      /* 0x0000 */ enum _FS_FILTER_SECTION_SYNC_TYPE SyncType;
      /* 0x0004 */ unsigned long PageProtection;
    } /* size: 0x0008 */ AcquireForSectionSynchronization;
    struct
    {
      /* 0x0000 */ enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE NotificationType;
      /* 0x0004 */ long Padding_264;
      /* 0x0008 */ unsigned char SafeToRecurse;
      /* 0x0009 */ char __PADDING__[7];
    } /* size: 0x0010 */ NotifyStreamFileObject;
    struct
    {
      /* 0x0000 */ void* Argument1;
      /* 0x0008 */ void* Argument2;
      /* 0x0010 */ void* Argument3;
      /* 0x0018 */ void* Argument4;
      /* 0x0020 */ void* Argument5;
    } /* size: 0x0028 */ Others;
  }; /* size: 0x0028 */
} FS_FILTER_PARAMETERS, *PFS_FILTER_PARAMETERS; /* size: 0x0028 */

typedef struct _FS_FILTER_CALLBACK_DATA
{
  /* 0x0000 */ unsigned long SizeOfFsFilterCallbackData;
  /* 0x0004 */ unsigned char Operation;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ char Padding_265[2];
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ struct _FILE_OBJECT* FileObject;
  /* 0x0018 */ union _FS_FILTER_PARAMETERS Parameters;
} FS_FILTER_CALLBACK_DATA, *PFS_FILTER_CALLBACK_DATA; /* size: 0x0040 */

typedef struct _WHEAP_ERROR_SOURCE_TABLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Count;
  /* 0x0008 */ struct _LIST_ENTRY Items;
  /* 0x0018 */ struct _KEVENT InsertLock;
} WHEAP_ERROR_SOURCE_TABLE, *PWHEAP_ERROR_SOURCE_TABLE; /* size: 0x0030 */

struct tagLC_ID
{
  /* 0x0000 */ unsigned short wLanguage;
  /* 0x0002 */ unsigned short wCountry;
  /* 0x0004 */ unsigned short wCodePage;
}; /* size: 0x0006 */

struct threadlocaleinfostruct
{
  /* 0x0000 */ int refcount;
  /* 0x0004 */ unsigned int lc_codepage;
  /* 0x0008 */ unsigned int lc_collate_cp;
  /* 0x000c */ unsigned long lc_handle[6];
  /* 0x0024 */ struct tagLC_ID lc_id[6];
  /* 0x0048 */ struct
  {
    /* 0x0048 */ char* locale;
    /* 0x0050 */ unsigned short* wlocale;
    /* 0x0058 */ int* refcount;
    /* 0x0060 */ int* wrefcount;
  } /* size: 0x0020 */ lc_category[6];
  /* 0x0108 */ int lc_clike;
  /* 0x010c */ int mb_cur_max;
  /* 0x0110 */ int* lconv_intl_refcount;
  /* 0x0118 */ int* lconv_num_refcount;
  /* 0x0120 */ int* lconv_mon_refcount;
  /* 0x0128 */ struct lconv* lconv;
  /* 0x0130 */ int* ctype1_refcount;
  /* 0x0138 */ unsigned short* ctype1;
  /* 0x0140 */ const unsigned short* pctype;
  /* 0x0148 */ const unsigned char* pclmap;
  /* 0x0150 */ const unsigned char* pcumap;
  /* 0x0158 */ struct __lc_time_data* lc_time_curr;
}; /* size: 0x0160 */

typedef struct _SYSDBG_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0004 */ long Padding_266;
  /* 0x0008 */ unsigned __int64 Data;
} SYSDBG_MSR, *PSYSDBG_MSR; /* size: 0x0010 */

typedef struct _FAST_IO_DISPATCH
{
  /* 0x0000 */ unsigned long SizeOfFastIoDispatch;
  /* 0x0004 */ long Padding_267;
  /* 0x0008 */ void* FastIoCheckIfPossible /* function */;
  /* 0x0010 */ void* FastIoRead /* function */;
  /* 0x0018 */ void* FastIoWrite /* function */;
  /* 0x0020 */ void* FastIoQueryBasicInfo /* function */;
  /* 0x0028 */ void* FastIoQueryStandardInfo /* function */;
  /* 0x0030 */ void* FastIoLock /* function */;
  /* 0x0038 */ void* FastIoUnlockSingle /* function */;
  /* 0x0040 */ void* FastIoUnlockAll /* function */;
  /* 0x0048 */ void* FastIoUnlockAllByKey /* function */;
  /* 0x0050 */ void* FastIoDeviceControl /* function */;
  /* 0x0058 */ void* AcquireFileForNtCreateSection /* function */;
  /* 0x0060 */ void* ReleaseFileForNtCreateSection /* function */;
  /* 0x0068 */ void* FastIoDetachDevice /* function */;
  /* 0x0070 */ void* FastIoQueryNetworkOpenInfo /* function */;
  /* 0x0078 */ void* AcquireForModWrite /* function */;
  /* 0x0080 */ void* MdlRead /* function */;
  /* 0x0088 */ void* MdlReadComplete /* function */;
  /* 0x0090 */ void* PrepareMdlWrite /* function */;
  /* 0x0098 */ void* MdlWriteComplete /* function */;
  /* 0x00a0 */ void* FastIoReadCompressed /* function */;
  /* 0x00a8 */ void* FastIoWriteCompressed /* function */;
  /* 0x00b0 */ void* MdlReadCompleteCompressed /* function */;
  /* 0x00b8 */ void* MdlWriteCompleteCompressed /* function */;
  /* 0x00c0 */ void* FastIoQueryOpen /* function */;
  /* 0x00c8 */ void* ReleaseForModWrite /* function */;
  /* 0x00d0 */ void* AcquireForCcFlush /* function */;
  /* 0x00d8 */ void* ReleaseForCcFlush /* function */;
} FAST_IO_DISPATCH, *PFAST_IO_DISPATCH; /* size: 0x00e0 */

typedef struct _ALPC_PROCESS_CONTEXT
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ struct _LIST_ENTRY ViewListHead;
  /* 0x0018 */ volatile unsigned __int64 PagedPoolQuotaCache;
} ALPC_PROCESS_CONTEXT, *PALPC_PROCESS_CONTEXT; /* size: 0x0020 */

typedef struct _MDL
{
  /* 0x0000 */ struct _MDL* Next;
  /* 0x0008 */ short Size;
  /* 0x000a */ short MdlFlags;
  /* 0x000c */ long Padding_268;
  /* 0x0010 */ struct _EPROCESS* Process;
  /* 0x0018 */ void* MappedSystemVa;
  /* 0x0020 */ void* StartVa;
  /* 0x0028 */ unsigned long ByteCount;
  /* 0x002c */ unsigned long ByteOffset;
} MDL, *PMDL; /* size: 0x0030 */

typedef struct _MI_FLUSH_ENTRY
{
  /* 0x0000 */ struct _IO_STATUS_BLOCK IoStatus;
  /* 0x0010 */ unsigned __int64* LastPage;
  /* 0x0018 */ struct _IRP* Irp;
  /* 0x0020 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0028 */ struct _MI_OVERLAPPED_FLUSH_ENTRY* Overlap;
  /* 0x0030 */ struct _KEVENT IoEvent;
  /* 0x0048 */ struct _MDL* Mdl;
  struct
  {
    /* 0x0050 */ struct _MDL Mdl;
    /* 0x0080 */ unsigned __int64 Page[17];
  } /* size: 0x00b8 */ StaticMdl;
} MI_FLUSH_ENTRY, *PMI_FLUSH_ENTRY; /* size: 0x0108 */

typedef struct _PROCESS_WS_WATCH_INFORMATION
{
  /* 0x0000 */ void* FaultingPc;
  /* 0x0008 */ void* FaultingVa;
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION; /* size: 0x0010 */

struct SMBIOSVERSIONINFO
{
  /* 0x0000 */ unsigned char Used20CallingMethod;
  /* 0x0001 */ unsigned char SMBiosMajorVersion;
  /* 0x0002 */ unsigned char SMBiosMinorVersion;
  /* 0x0003 */ unsigned char DMIBiosRevision;
}; /* size: 0x0004 */

typedef struct _RTL_USER_PROCESS_PARAMETERS
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ void* ConsoleHandle;
  /* 0x0018 */ unsigned long ConsoleFlags;
  /* 0x001c */ long Padding_269;
  /* 0x0020 */ void* StandardInput;
  /* 0x0028 */ void* StandardOutput;
  /* 0x0030 */ void* StandardError;
  /* 0x0038 */ struct _CURDIR CurrentDirectory;
  /* 0x0050 */ struct _UNICODE_STRING DllPath;
  /* 0x0060 */ struct _UNICODE_STRING ImagePathName;
  /* 0x0070 */ struct _UNICODE_STRING CommandLine;
  /* 0x0080 */ void* Environment;
  /* 0x0088 */ unsigned long StartingX;
  /* 0x008c */ unsigned long StartingY;
  /* 0x0090 */ unsigned long CountX;
  /* 0x0094 */ unsigned long CountY;
  /* 0x0098 */ unsigned long CountCharsX;
  /* 0x009c */ unsigned long CountCharsY;
  /* 0x00a0 */ unsigned long FillAttribute;
  /* 0x00a4 */ unsigned long WindowFlags;
  /* 0x00a8 */ unsigned long ShowWindowFlags;
  /* 0x00ac */ long Padding_270;
  /* 0x00b0 */ struct _UNICODE_STRING WindowTitle;
  /* 0x00c0 */ struct _UNICODE_STRING DesktopInfo;
  /* 0x00d0 */ struct _UNICODE_STRING ShellInfo;
  /* 0x00e0 */ struct _UNICODE_STRING RuntimeData;
  /* 0x00f0 */ struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  /* 0x03f0 */ volatile unsigned __int64 EnvironmentSize;
  /* 0x03f8 */ volatile unsigned __int64 EnvironmentVersion;
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS; /* size: 0x0400 */

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _FILE_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION; /* size: 0x0028 */

typedef struct _POWER_LEGACY_EVENT_VETO
{
  /* 0x0000 */ unsigned long Reason;
  /* 0x0004 */ long Padding_271;
  /* 0x0008 */ unsigned short* Description;
} POWER_LEGACY_EVENT_VETO, *PPOWER_LEGACY_EVENT_VETO; /* size: 0x0010 */

typedef struct _VF_AVL_TREE
{
  /* 0x0000 */ volatile long Lock;
  /* 0x0004 */ long Padding_272;
  /* 0x0008 */ void* NodeToFree;
  /* 0x0010 */ unsigned __int64 NodeRangeSize;
  /* 0x0018 */ unsigned __int64 NodeCount;
  /* 0x0020 */ struct _VF_AVL_TABLE* Tables;
  /* 0x0028 */ unsigned long TablesNo;
  union
  {
    union
    {
      /* 0x002c */ unsigned long NodeSize;
      /* 0x002c */ unsigned long UseLookaside;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  /* 0x0030 */ long __PADDING__[4];
} VF_AVL_TREE, *PVF_AVL_TREE; /* size: 0x0040 */

typedef struct _VF_TARGET_DRIVERS_AVL_TREE
{
  /* 0x0000 */ struct _VF_AVL_TREE Tree;
  /* 0x0040 */ long VerifiedNodes;
  /* 0x0044 */ long Padding_273;
  /* 0x0048 */ unsigned __int64 ContiguousAllocationBytes;
  /* 0x0050 */ long __PADDING__[12];
} VF_TARGET_DRIVERS_AVL_TREE, *PVF_TARGET_DRIVERS_AVL_TREE; /* size: 0x0080 */

typedef struct _LSA_FOREST_TRUST_COLLISION_RECORD
{
  /* 0x0000 */ unsigned long Index;
  /* 0x0004 */ enum LSA_FOREST_TRUST_COLLISION_RECORD_TYPE Type;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_274;
  /* 0x0010 */ struct _UNICODE_STRING Name;
} LSA_FOREST_TRUST_COLLISION_RECORD, *PLSA_FOREST_TRUST_COLLISION_RECORD; /* size: 0x0020 */

typedef struct _FILE_STANDARD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION; /* size: 0x0018 */

typedef struct _EVENT_HEADER_EXTENDED_DATA_ITEM
{
  /* 0x0000 */ unsigned short Reserved1;
  /* 0x0002 */ unsigned short ExtType;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned short Linkage : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned short Reserved2 : 15; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0006 */ unsigned short DataSize;
  /* 0x0008 */ unsigned __int64 DataPtr;
} EVENT_HEADER_EXTENDED_DATA_ITEM, *PEVENT_HEADER_EXTENDED_DATA_ITEM; /* size: 0x0010 */

typedef struct _DBGKD_READ_WRITE_IO64
{
  /* 0x0000 */ unsigned __int64 IoAddress;
  /* 0x0008 */ unsigned long DataSize;
  /* 0x000c */ unsigned long DataValue;
} DBGKD_READ_WRITE_IO64, *PDBGKD_READ_WRITE_IO64; /* size: 0x0010 */

typedef struct _MMSUPPORT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char WorkingSetType : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char ModwriterAttached : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char TrimHard : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char MaximumWorkingSetHard : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char ForceTrim : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MinimumWorkingSetHard : 1; /* bit position: 7 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0001 */ unsigned char SessionMaster : 1; /* bit position: 0 */
    /* 0x0001 */ unsigned char TrimmerState : 2; /* bit position: 1 */
    /* 0x0001 */ unsigned char Reserved : 1; /* bit position: 3 */
    /* 0x0001 */ unsigned char PageStealers : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0002 */ unsigned char MemoryPriority : 8; /* bit position: 0 */
  struct /* bitfield */
  {
    /* 0x0003 */ unsigned char WsleDeleted : 1; /* bit position: 0 */
    /* 0x0003 */ unsigned char VmExiting : 1; /* bit position: 1 */
    /* 0x0003 */ unsigned char ExpansionFailed : 1; /* bit position: 2 */
    /* 0x0003 */ unsigned char Available : 5; /* bit position: 3 */
  }; /* bitfield */
} MMSUPPORT_FLAGS, *PMMSUPPORT_FLAGS; /* size: 0x0004 */

typedef struct _MMSUPPORT
{
  /* 0x0000 */ struct _EX_PUSH_LOCK WorkingSetMutex;
  /* 0x0008 */ struct _KGATE* ExitGate;
  /* 0x0010 */ void* AccessLog;
  /* 0x0018 */ struct _LIST_ENTRY WorkingSetExpansionLinks;
  /* 0x0028 */ unsigned long AgeDistribution[7];
  /* 0x0044 */ unsigned long MinimumWorkingSetSize;
  /* 0x0048 */ unsigned long WorkingSetSize;
  /* 0x004c */ unsigned long WorkingSetPrivateSize;
  /* 0x0050 */ unsigned long MaximumWorkingSetSize;
  /* 0x0054 */ unsigned long ChargedWslePages;
  /* 0x0058 */ unsigned long ActualWslePages;
  /* 0x005c */ unsigned long WorkingSetSizeOverhead;
  /* 0x0060 */ unsigned long PeakWorkingSetSize;
  /* 0x0064 */ unsigned long HardFaultCount;
  /* 0x0068 */ struct _MMWSL* VmWorkingSetList;
  /* 0x0070 */ unsigned short NextPageColor;
  /* 0x0072 */ unsigned short LastTrimStamp;
  /* 0x0074 */ unsigned long PageFaultCount;
  /* 0x0078 */ unsigned long RepurposeCount;
  /* 0x007c */ unsigned long Spare[2];
  /* 0x0084 */ struct _MMSUPPORT_FLAGS Flags;
} MMSUPPORT, *PMMSUPPORT; /* size: 0x0088 */

typedef struct _EPROCESS
{
  /* 0x0000 */ struct _KPROCESS Pcb;
  /* 0x0160 */ struct _EX_PUSH_LOCK ProcessLock;
  /* 0x0168 */ union _LARGE_INTEGER CreateTime;
  /* 0x0170 */ union _LARGE_INTEGER ExitTime;
  /* 0x0178 */ struct _EX_RUNDOWN_REF RundownProtect;
  /* 0x0180 */ void* UniqueProcessId;
  /* 0x0188 */ struct _LIST_ENTRY ActiveProcessLinks;
  /* 0x0198 */ unsigned __int64 ProcessQuotaUsage[2];
  /* 0x01a8 */ unsigned __int64 ProcessQuotaPeak[2];
  /* 0x01b8 */ volatile unsigned __int64 CommitCharge;
  /* 0x01c0 */ struct _EPROCESS_QUOTA_BLOCK* QuotaBlock;
  /* 0x01c8 */ struct _PS_CPU_QUOTA_BLOCK* CpuQuotaBlock;
  /* 0x01d0 */ unsigned __int64 PeakVirtualSize;
  /* 0x01d8 */ unsigned __int64 VirtualSize;
  /* 0x01e0 */ struct _LIST_ENTRY SessionProcessLinks;
  /* 0x01f0 */ void* DebugPort;
  union
  {
    /* 0x01f8 */ void* ExceptionPortData;
    /* 0x01f8 */ unsigned __int64 ExceptionPortValue;
    /* 0x01f8 */ unsigned __int64 ExceptionPortState : 3; /* bit position: 0 */
  }; /* size: 0x0008 */
  /* 0x0200 */ struct _HANDLE_TABLE* ObjectTable;
  /* 0x0208 */ struct _EX_FAST_REF Token;
  /* 0x0210 */ unsigned __int64 WorkingSetPage;
  /* 0x0218 */ struct _EX_PUSH_LOCK AddressCreationLock;
  /* 0x0220 */ struct _ETHREAD* RotateInProgress;
  /* 0x0228 */ struct _ETHREAD* ForkInProgress;
  /* 0x0230 */ unsigned __int64 HardwareTrigger;
  /* 0x0238 */ struct _MM_AVL_TABLE* PhysicalVadRoot;
  /* 0x0240 */ void* CloneRoot;
  /* 0x0248 */ volatile unsigned __int64 NumberOfPrivatePages;
  /* 0x0250 */ volatile unsigned __int64 NumberOfLockedPages;
  /* 0x0258 */ void* Win32Process;
  /* 0x0260 */ struct _EJOB* volatile Job;
  /* 0x0268 */ void* SectionObject;
  /* 0x0270 */ void* SectionBaseAddress;
  /* 0x0278 */ unsigned long Cookie;
  /* 0x027c */ unsigned long UmsScheduledThreads;
  /* 0x0280 */ struct _PAGEFAULT_HISTORY* WorkingSetWatch;
  /* 0x0288 */ void* Win32WindowStation;
  /* 0x0290 */ void* InheritedFromUniqueProcessId;
  /* 0x0298 */ void* LdtInformation;
  /* 0x02a0 */ void* Spare;
  /* 0x02a8 */ unsigned __int64 ConsoleHostProcess;
  /* 0x02b0 */ void* DeviceMap;
  /* 0x02b8 */ void* EtwDataSource;
  /* 0x02c0 */ void* FreeTebHint;
  /* 0x02c8 */ void* FreeUmsTebHint;
  union
  {
    /* 0x02d0 */ struct _HARDWARE_PTE PageDirectoryPte;
    /* 0x02d0 */ unsigned __int64 Filler;
  }; /* size: 0x0008 */
  /* 0x02d8 */ void* Session;
  /* 0x02e0 */ unsigned char ImageFileName[15];
  /* 0x02ef */ unsigned char PriorityClass;
  /* 0x02f0 */ struct _LIST_ENTRY JobLinks;
  /* 0x0300 */ void* LockedPagesList;
  /* 0x0308 */ struct _LIST_ENTRY ThreadListHead;
  /* 0x0318 */ void* SecurityPort;
  /* 0x0320 */ void* Wow64Process;
  /* 0x0328 */ volatile unsigned long ActiveThreads;
  /* 0x032c */ unsigned long ImagePathHash;
  /* 0x0330 */ unsigned long DefaultHardErrorProcessing;
  /* 0x0334 */ long LastThreadExitStatus;
  /* 0x0338 */ struct _PEB* Peb;
  /* 0x0340 */ struct _EX_FAST_REF PrefetchTrace;
  /* 0x0348 */ union _LARGE_INTEGER ReadOperationCount;
  /* 0x0350 */ union _LARGE_INTEGER WriteOperationCount;
  /* 0x0358 */ union _LARGE_INTEGER OtherOperationCount;
  /* 0x0360 */ union _LARGE_INTEGER ReadTransferCount;
  /* 0x0368 */ union _LARGE_INTEGER WriteTransferCount;
  /* 0x0370 */ union _LARGE_INTEGER OtherTransferCount;
  /* 0x0378 */ unsigned __int64 CommitChargeLimit;
  /* 0x0380 */ volatile unsigned __int64 CommitChargePeak;
  /* 0x0388 */ void* AweInfo;
  /* 0x0390 */ struct _SE_AUDIT_PROCESS_CREATION_INFO SeAuditProcessCreationInfo;
  /* 0x0398 */ struct _MMSUPPORT Vm;
  /* 0x0420 */ struct _LIST_ENTRY MmProcessLinks;
  /* 0x0430 */ void* HighestUserAddress;
  /* 0x0438 */ unsigned long ModifiedPageCount;
  union
  {
    /* 0x043c */ unsigned long Flags2;
    struct /* bitfield */
    {
      /* 0x043c */ unsigned long JobNotReallyActive : 1; /* bit position: 0 */
      /* 0x043c */ unsigned long AccountingFolded : 1; /* bit position: 1 */
      /* 0x043c */ unsigned long NewProcessReported : 1; /* bit position: 2 */
      /* 0x043c */ unsigned long ExitProcessReported : 1; /* bit position: 3 */
      /* 0x043c */ unsigned long ReportCommitChanges : 1; /* bit position: 4 */
      /* 0x043c */ unsigned long LastReportMemory : 1; /* bit position: 5 */
      /* 0x043c */ unsigned long ReportPhysicalPageChanges : 1; /* bit position: 6 */
      /* 0x043c */ unsigned long HandleTableRundown : 1; /* bit position: 7 */
      /* 0x043c */ unsigned long NeedsHandleRundown : 1; /* bit position: 8 */
      /* 0x043c */ unsigned long RefTraceEnabled : 1; /* bit position: 9 */
      /* 0x043c */ unsigned long NumaAware : 1; /* bit position: 10 */
      /* 0x043c */ unsigned long ProtectedProcess : 1; /* bit position: 11 */
      /* 0x043c */ unsigned long DefaultPagePriority : 3; /* bit position: 12 */
      /* 0x043c */ unsigned long PrimaryTokenFrozen : 1; /* bit position: 15 */
      /* 0x043c */ unsigned long ProcessVerifierTarget : 1; /* bit position: 16 */
      /* 0x043c */ unsigned long StackRandomizationDisabled : 1; /* bit position: 17 */
      /* 0x043c */ unsigned long AffinityPermanent : 1; /* bit position: 18 */
      /* 0x043c */ unsigned long AffinityUpdateEnable : 1; /* bit position: 19 */
      /* 0x043c */ unsigned long PropagateNode : 1; /* bit position: 20 */
      /* 0x043c */ unsigned long ExplicitAffinity : 1; /* bit position: 21 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    /* 0x0440 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0440 */ unsigned long CreateReported : 1; /* bit position: 0 */
      /* 0x0440 */ unsigned long NoDebugInherit : 1; /* bit position: 1 */
      /* 0x0440 */ unsigned long ProcessExiting : 1; /* bit position: 2 */
      /* 0x0440 */ unsigned long ProcessDelete : 1; /* bit position: 3 */
      /* 0x0440 */ unsigned long Wow64SplitPages : 1; /* bit position: 4 */
      /* 0x0440 */ unsigned long VmDeleted : 1; /* bit position: 5 */
      /* 0x0440 */ unsigned long OutswapEnabled : 1; /* bit position: 6 */
      /* 0x0440 */ unsigned long Outswapped : 1; /* bit position: 7 */
      /* 0x0440 */ unsigned long ForkFailed : 1; /* bit position: 8 */
      /* 0x0440 */ unsigned long Wow64VaSpace4Gb : 1; /* bit position: 9 */
      /* 0x0440 */ unsigned long AddressSpaceInitialized : 2; /* bit position: 10 */
      /* 0x0440 */ unsigned long SetTimerResolution : 1; /* bit position: 12 */
      /* 0x0440 */ unsigned long BreakOnTermination : 1; /* bit position: 13 */
      /* 0x0440 */ unsigned long DeprioritizeViews : 1; /* bit position: 14 */
      /* 0x0440 */ unsigned long WriteWatch : 1; /* bit position: 15 */
      /* 0x0440 */ unsigned long ProcessInSession : 1; /* bit position: 16 */
      /* 0x0440 */ unsigned long OverrideAddressSpace : 1; /* bit position: 17 */
      /* 0x0440 */ unsigned long HasAddressSpace : 1; /* bit position: 18 */
      /* 0x0440 */ unsigned long LaunchPrefetched : 1; /* bit position: 19 */
      /* 0x0440 */ unsigned long InjectInpageErrors : 1; /* bit position: 20 */
      /* 0x0440 */ unsigned long VmTopDown : 1; /* bit position: 21 */
      /* 0x0440 */ unsigned long ImageNotifyDone : 1; /* bit position: 22 */
      /* 0x0440 */ unsigned long PdeUpdateNeeded : 1; /* bit position: 23 */
      /* 0x0440 */ unsigned long VdmAllowed : 1; /* bit position: 24 */
      /* 0x0440 */ unsigned long CrossSessionCreate : 1; /* bit position: 25 */
      /* 0x0440 */ unsigned long ProcessInserted : 1; /* bit position: 26 */
      /* 0x0440 */ unsigned long DefaultIoPriority : 3; /* bit position: 27 */
      /* 0x0440 */ unsigned long ProcessSelfDelete : 1; /* bit position: 30 */
      /* 0x0440 */ unsigned long SetTimerResolutionLink : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0444 */ long ExitStatus;
  /* 0x0448 */ struct _MM_AVL_TABLE VadRoot;
  /* 0x0488 */ struct _ALPC_PROCESS_CONTEXT AlpcContext;
  /* 0x04a8 */ struct _LIST_ENTRY TimerResolutionLink;
  /* 0x04b8 */ unsigned long RequestedTimerResolution;
  /* 0x04bc */ unsigned long ActiveThreadsHighWatermark;
  /* 0x04c0 */ unsigned long SmallestTimerResolution;
  /* 0x04c4 */ long Padding_275;
  /* 0x04c8 */ struct _PO_DIAG_STACK_RECORD* TimerResolutionStackRecord;
} EPROCESS, *PEPROCESS; /* size: 0x04d0 */

typedef struct _KERNEL_STACK_SEGMENT
{
  /* 0x0000 */ unsigned __int64 StackBase;
  /* 0x0008 */ unsigned __int64 StackLimit;
  /* 0x0010 */ unsigned __int64 KernelStack;
  /* 0x0018 */ unsigned __int64 InitialStack;
  /* 0x0020 */ unsigned __int64 ActualLimit;
} KERNEL_STACK_SEGMENT, *PKERNEL_STACK_SEGMENT; /* size: 0x0028 */

typedef struct _KERNEL_STACK_CONTROL
{
  /* 0x0000 */ struct _KERNEL_STACK_SEGMENT Current;
  /* 0x0028 */ struct _KERNEL_STACK_SEGMENT Previous;
} KERNEL_STACK_CONTROL, *PKERNEL_STACK_CONTROL; /* size: 0x0050 */

typedef struct _IA64_DBGKD_CONTROL_SET
{
  /* 0x0000 */ unsigned long Continue;
  /* 0x0004 */ unsigned __int64 CurrentSymbolStart;
  /* 0x000c */ unsigned __int64 CurrentSymbolEnd;
} IA64_DBGKD_CONTROL_SET, *PIA64_DBGKD_CONTROL_SET; /* size: 0x0014 */

typedef struct _PS_CPU_QUOTA_BLOCK
{
  union
  {
    struct
    {
      /* 0x0000 */ struct _LIST_ENTRY ListEntry;
      /* 0x0010 */ unsigned long SessionId;
      /* 0x0014 */ unsigned long CpuShareWeight;
      /* 0x0018 */ union _PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA CapturedWeightData;
      union
      {
        struct /* bitfield */
        {
          /* 0x0020 */ unsigned long DuplicateInputMarker : 1; /* bit position: 0 */
          /* 0x0020 */ unsigned long Reserved : 31; /* bit position: 1 */
        }; /* bitfield */
        /* 0x0020 */ long MiscFlags;
      }; /* size: 0x0004 */
    }; /* size: 0x0024 */
    struct
    {
      /* 0x0000 */ unsigned __int64 BlockCurrentGenerationLock;
      /* 0x0008 */ unsigned __int64 CyclesAccumulated;
      /* 0x0010 */ long Padding_276[12];
      /* 0x0040 */ unsigned __int64 CycleCredit;
      /* 0x0048 */ unsigned long BlockCurrentGeneration;
      /* 0x004c */ unsigned long CpuCyclePercent;
      /* 0x0050 */ unsigned char CyclesFinishedForCurrentGeneration;
      /* 0x0051 */ char Padding_277[47];
      /* 0x0080 */ struct _PS_PER_CPU_QUOTA_CACHE_AWARE Cpu[256];
    }; /* size: 0x4021 */
  }; /* size: 0x4021 */
} PS_CPU_QUOTA_BLOCK, *PPS_CPU_QUOTA_BLOCK; /* size: 0x4080 */

struct CM_LOGREC
{
  /* 0x0000 */ unsigned long CheckSum;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned long Action;
  /* 0x0010 */ struct _GUID KtmUow;
  /* 0x0020 */ struct _UNICODE_STRING KeyName;
}; /* size: 0x0030 */

struct CM_CREATE_KEY_LOGREC
{
  /* 0x0000 */ struct CM_LOGREC Header;
  /* 0x0030 */ enum HSTORAGE_TYPE StorageType;
  /* 0x0034 */ unsigned long DescriptorLength;
  /* 0x0038 */ void* Descriptor;
}; /* size: 0x0040 */

typedef struct _HANDLE_TABLE
{
  /* 0x0000 */ unsigned __int64 TableCode;
  /* 0x0008 */ struct _EPROCESS* QuotaProcess;
  /* 0x0010 */ void* UniqueProcessId;
  /* 0x0018 */ struct _EX_PUSH_LOCK HandleLock;
  /* 0x0020 */ struct _LIST_ENTRY HandleTableList;
  /* 0x0030 */ struct _EX_PUSH_LOCK HandleContentionEvent;
  /* 0x0038 */ struct _HANDLE_TRACE_DEBUG_INFO* DebugInfo;
  /* 0x0040 */ long ExtraInfoPages;
  union
  {
    /* 0x0044 */ unsigned long Flags;
    /* 0x0044 */ unsigned char StrictFIFO : 1; /* bit position: 0 */
  }; /* size: 0x0004 */
  /* 0x0048 */ unsigned long FirstFreeHandle;
  /* 0x004c */ long Padding_278;
  /* 0x0050 */ struct _HANDLE_TABLE_ENTRY* LastFreeHandleEntry;
  /* 0x0058 */ unsigned long HandleCount;
  /* 0x005c */ unsigned long NextHandleNeedingPool;
  /* 0x0060 */ unsigned long HandleCountHighWatermark;
  /* 0x0064 */ long __PADDING__[1];
} HANDLE_TABLE, *PHANDLE_TABLE; /* size: 0x0068 */

typedef struct _HANDLE_TRACE_DEBUG_INFO
{
  /* 0x0000 */ long RefCount;
  /* 0x0004 */ unsigned long TableSize;
  /* 0x0008 */ unsigned long BitMaskFlags;
  /* 0x000c */ long Padding_279;
  /* 0x0010 */ struct _FAST_MUTEX CloseCompactionLock;
  /* 0x0048 */ unsigned long CurrentStackIndex;
  /* 0x004c */ long Padding_280;
  /* 0x0050 */ struct _HANDLE_TRACE_DB_ENTRY TraceDb[1];
} HANDLE_TRACE_DEBUG_INFO, *PHANDLE_TRACE_DEBUG_INFO; /* size: 0x00f0 */

typedef struct _PO_BROADCAST_SYSTEM_STATE
{
  /* 0x0000 */ enum _SYSTEM_POWER_STATE CurrentState;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE EffectiveState;
  /* 0x0008 */ enum _SYSTEM_POWER_STATE TargetState;
  /* 0x000c */ enum _SYSTEM_POWER_STATE NextState;
  /* 0x0010 */ enum POWER_ACTION PowerAction;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned char ShuttingDown;
  /* 0x0019 */ unsigned char Waking;
  /* 0x001a */ unsigned char IrpMinor;
  /* 0x001b */ char __PADDING__[1];
} PO_BROADCAST_SYSTEM_STATE, *PPO_BROADCAST_SYSTEM_STATE; /* size: 0x001c */

typedef struct _WIN32_POWERSTATE_PARAMETERS
{
  /* 0x0000 */ unsigned char Promotion;
  /* 0x0001 */ char Padding_281[3];
  /* 0x0004 */ enum POWER_ACTION SystemAction;
  /* 0x0008 */ enum _SYSTEM_POWER_STATE MinSystemState;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ enum _POWERSTATETASK PowerStateTask;
} WIN32_POWERSTATE_PARAMETERS, *PWIN32_POWERSTATE_PARAMETERS; /* size: 0x0014 */

typedef struct _PNP_REPLACE_POWER_CONTEXT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _PO_BROADCAST_SYSTEM_STATE Broadcast;
  /* 0x0020 */ unsigned long ConsoleId;
  /* 0x0024 */ struct _WIN32_POWERSTATE_PARAMETERS Win32Parameters;
} PNP_REPLACE_POWER_CONTEXT, *PPNP_REPLACE_POWER_CONTEXT; /* size: 0x0038 */

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Operation;
  /* 0x0014 */ unsigned long DeviceStatus;
  /* 0x0018 */ unsigned long DeviceProblem;
  /* 0x001c */ unsigned long Flags;
} PLUGPLAY_CONTROL_STATUS_DATA, *PPLUGPLAY_CONTROL_STATUS_DATA; /* size: 0x0020 */

typedef struct _HANDLE_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ void* Object;
    /* 0x0000 */ unsigned long ObAttributes;
    /* 0x0000 */ struct _HANDLE_TABLE_ENTRY_INFO* InfoTable;
    /* 0x0000 */ unsigned __int64 Value;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ unsigned long GrantedAccess;
    struct
    {
      /* 0x0008 */ unsigned short GrantedAccessIndex;
      /* 0x000a */ unsigned short CreatorBackTraceIndex;
    }; /* size: 0x0004 */
    /* 0x0008 */ unsigned long NextFreeTableEntry;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} HANDLE_TABLE_ENTRY, *PHANDLE_TABLE_ENTRY; /* size: 0x0010 */

typedef struct _FILE_SET_SPARSE_BUFFER
{
  /* 0x0000 */ unsigned char SetSparse;
} FILE_SET_SPARSE_BUFFER, *PFILE_SET_SPARSE_BUFFER; /* size: 0x0001 */

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} ALPC_PORT_MESSAGE_ZONE_INFORMATION, *PALPC_PORT_MESSAGE_ZONE_INFORMATION; /* size: 0x0010 */

typedef struct _HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ unsigned long AuditMask;
} HANDLE_TABLE_ENTRY_INFO, *PHANDLE_TABLE_ENTRY_INFO; /* size: 0x0004 */

typedef struct _TERMINATION_PORT
{
  /* 0x0000 */ struct _TERMINATION_PORT* Next;
  /* 0x0008 */ void* Port;
} TERMINATION_PORT, *PTERMINATION_PORT; /* size: 0x0010 */

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned char Enable;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_SET_TIME_ADJUST_INFORMATION, *PSYSTEM_SET_TIME_ADJUST_INFORMATION; /* size: 0x0008 */

typedef struct _ARBITER_BOOT_ALLOCATION_PARAMETERS
{
  /* 0x0000 */ struct _LIST_ENTRY* ArbitrationList;
} ARBITER_BOOT_ALLOCATION_PARAMETERS, *PARBITER_BOOT_ALLOCATION_PARAMETERS; /* size: 0x0008 */

typedef struct _WOW64_FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} WOW64_FLOATING_SAVE_AREA, *PWOW64_FLOATING_SAVE_AREA; /* size: 0x0070 */

typedef struct _WOW64_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _WOW64_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  /* 0x00cc */ unsigned char ExtendedRegisters[512];
} WOW64_CONTEXT, *PWOW64_CONTEXT; /* size: 0x02cc */

typedef union _PSP_CPU_QUOTA_APC
{
  union
  {
    /* 0x0000 */ struct _KAPC Apc;
    struct
    {
      /* 0x0000 */ unsigned char ApcFill[83];
      /* 0x0053 */ unsigned char ApcPending;
    }; /* size: 0x0054 */
    /* 0x0000 */ union _PSP_CPU_QUOTA_APC* Next;
  }; /* size: 0x0058 */
} PSP_CPU_QUOTA_APC, *PPSP_CPU_QUOTA_APC; /* size: 0x0058 */

typedef struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY
{
  /* 0x0000 */ union _LARGE_INTEGER MessageAddress;
  /* 0x0008 */ unsigned __int64 TargetProcessorSet;
  /* 0x0010 */ struct _KINTERRUPT* InterruptObject;
  /* 0x0018 */ unsigned long MessageData;
  /* 0x001c */ unsigned long Vector;
  /* 0x0020 */ unsigned char Irql;
  /* 0x0021 */ char Padding_282[3];
  /* 0x0024 */ enum _KINTERRUPT_MODE Mode;
  /* 0x0028 */ enum _KINTERRUPT_POLARITY Polarity;
  /* 0x002c */ long __PADDING__[1];
} IO_INTERRUPT_MESSAGE_INFO_ENTRY, *PIO_INTERRUPT_MESSAGE_INFO_ENTRY; /* size: 0x0030 */

typedef struct _KEY_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualizationCandidate : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
} KEY_VIRTUALIZATION_INFORMATION, *PKEY_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

typedef struct _EJOB
{
  /* 0x0000 */ struct _KEVENT Event;
  /* 0x0018 */ struct _LIST_ENTRY JobLinks;
  /* 0x0028 */ struct _LIST_ENTRY ProcessListHead;
  /* 0x0038 */ struct _ERESOURCE JobLock;
  /* 0x00a0 */ union _LARGE_INTEGER TotalUserTime;
  /* 0x00a8 */ union _LARGE_INTEGER TotalKernelTime;
  /* 0x00b0 */ union _LARGE_INTEGER ThisPeriodTotalUserTime;
  /* 0x00b8 */ union _LARGE_INTEGER ThisPeriodTotalKernelTime;
  /* 0x00c0 */ unsigned long TotalPageFaultCount;
  /* 0x00c4 */ unsigned long TotalProcesses;
  /* 0x00c8 */ unsigned long ActiveProcesses;
  /* 0x00cc */ unsigned long TotalTerminatedProcesses;
  /* 0x00d0 */ union _LARGE_INTEGER PerProcessUserTimeLimit;
  /* 0x00d8 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x00e0 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x00e8 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x00f0 */ unsigned long LimitFlags;
  /* 0x00f4 */ unsigned long ActiveProcessLimit;
  /* 0x00f8 */ struct _KAFFINITY_EX Affinity;
  /* 0x0120 */ unsigned char PriorityClass;
  /* 0x0121 */ char Padding_283[7];
  /* 0x0128 */ struct _JOB_ACCESS_STATE* AccessState;
  /* 0x0130 */ unsigned long UIRestrictionsClass;
  /* 0x0134 */ unsigned long EndOfJobTimeAction;
  /* 0x0138 */ void* CompletionPort;
  /* 0x0140 */ void* CompletionKey;
  /* 0x0148 */ unsigned long SessionId;
  /* 0x014c */ unsigned long SchedulingClass;
  /* 0x0150 */ unsigned __int64 ReadOperationCount;
  /* 0x0158 */ unsigned __int64 WriteOperationCount;
  /* 0x0160 */ unsigned __int64 OtherOperationCount;
  /* 0x0168 */ unsigned __int64 ReadTransferCount;
  /* 0x0170 */ unsigned __int64 WriteTransferCount;
  /* 0x0178 */ unsigned __int64 OtherTransferCount;
  /* 0x0180 */ unsigned __int64 ProcessMemoryLimit;
  /* 0x0188 */ unsigned __int64 JobMemoryLimit;
  /* 0x0190 */ unsigned __int64 PeakProcessMemoryUsed;
  /* 0x0198 */ unsigned __int64 PeakJobMemoryUsed;
  /* 0x01a0 */ unsigned __int64 CurrentJobMemoryUsed;
  /* 0x01a8 */ struct _EX_PUSH_LOCK MemoryLimitsLock;
  /* 0x01b0 */ struct _LIST_ENTRY JobSetLinks;
  /* 0x01c0 */ unsigned long MemberLevel;
  /* 0x01c4 */ unsigned long JobFlags;
} EJOB, *PEJOB; /* size: 0x01c8 */

typedef struct _POP_HIBER_CONTEXT
{
  /* 0x0000 */ unsigned char WriteToFile;
  /* 0x0001 */ unsigned char ReserveLoaderMemory;
  /* 0x0002 */ unsigned char ReserveFreeMemory;
  /* 0x0003 */ unsigned char Reset;
  /* 0x0004 */ unsigned char HiberFlags;
  /* 0x0005 */ unsigned char WroteHiberFile;
  /* 0x0006 */ unsigned char MapFrozen;
  /* 0x0007 */ char Padding_284;
  /* 0x0008 */ struct _RTL_BITMAP MemoryMap;
  /* 0x0018 */ struct _RTL_BITMAP DiscardedMemoryPages;
  /* 0x0028 */ struct _LIST_ENTRY ClonedRanges;
  /* 0x0038 */ unsigned long ClonedRangeCount;
  /* 0x003c */ long Padding_285;
  /* 0x0040 */ struct _LIST_ENTRY* NextCloneRange;
  /* 0x0048 */ unsigned __int64 NextPreserve;
  /* 0x0050 */ struct _MDL* LoaderMdl;
  /* 0x0058 */ struct _MDL* AllocatedMdl;
  /* 0x0060 */ unsigned __int64 PagesOut;
  /* 0x0068 */ void* IoPages;
  /* 0x0070 */ unsigned long IoPagesCount;
  /* 0x0074 */ long Padding_286;
  /* 0x0078 */ void* CurrentMcb;
  /* 0x0080 */ struct _DUMP_STACK_CONTEXT* DumpStack;
  /* 0x0088 */ struct _KPROCESSOR_STATE* WakeState;
  /* 0x0090 */ unsigned long PreferredIoWriteSize;
  /* 0x0094 */ unsigned long IoProgress;
  /* 0x0098 */ unsigned __int64 HiberVa;
  /* 0x00a0 */ union _LARGE_INTEGER HiberPte;
  /* 0x00a8 */ long Status;
  /* 0x00ac */ long Padding_287;
  /* 0x00b0 */ struct PO_MEMORY_IMAGE* MemoryImage;
  /* 0x00b8 */ void* CompressionWorkspace;
  /* 0x00c0 */ unsigned char* CompressedWriteBuffer;
  /* 0x00c8 */ unsigned long CompressedWriteBufferSize;
  /* 0x00cc */ unsigned long MaxCompressedOutputSize;
  /* 0x00d0 */ unsigned long* PerformanceStats;
  /* 0x00d8 */ void* CompressionBlock;
  /* 0x00e0 */ void* DmaIO;
  /* 0x00e8 */ void* TemporaryHeap;
  /* 0x00f0 */ struct _MDL* BootLoaderLogMdl;
  /* 0x00f8 */ struct _MDL* FirmwareRuntimeInformationMdl;
  /* 0x0100 */ void* ResumeContext;
  /* 0x0108 */ unsigned long ResumeContextPages;
  /* 0x010c */ long __PADDING__[1];
} POP_HIBER_CONTEXT, *PPOP_HIBER_CONTEXT; /* size: 0x0110 */

typedef struct _stat32i64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_288[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_289;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ long st_atime;
  /* 0x0024 */ long st_mtime;
  /* 0x0028 */ long st_ctime;
  /* 0x002c */ long __PADDING__[1];
} stat32i64, *Pstat32i64; /* size: 0x0030 */

typedef union _PSP_FAULT_COUNTER
{
  union
  {
    /* 0x0000 */ unsigned long Value;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Flags : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Index : 15; /* bit position: 1 */
      /* 0x0000 */ unsigned long Active : 15; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PSP_FAULT_COUNTER, *PPSP_FAULT_COUNTER; /* size: 0x0004 */

typedef struct _PSP_WS_WATCH_INFORMATION
{
  /* 0x0000 */ struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
  /* 0x0010 */ unsigned __int64 ThreadId;
} PSP_WS_WATCH_INFORMATION, *PPSP_WS_WATCH_INFORMATION; /* size: 0x0018 */

typedef struct _PAGEFAULT_HISTORY
{
  /* 0x0000 */ union _PSP_FAULT_COUNTER Faults;
  /* 0x0004 */ long Padding_290;
  /* 0x0008 */ unsigned __int64 MissCount;
  /* 0x0010 */ struct _KGATE WakeGate;
  /* 0x0028 */ struct _PSP_WS_WATCH_INFORMATION WatchInfo[1];
} PAGEFAULT_HISTORY, *PPAGEFAULT_HISTORY; /* size: 0x0040 */

typedef struct _MI_FIXUP_RECORD
{
  /* 0x0000 */ struct _MI_FIXUP_RECORD* Next;
  /* 0x0008 */ unsigned long RVA;
  /* 0x000c */ unsigned long RVAEnd;
  union
  {
    union
    {
      /* 0x0010 */ char Bytes[8];
      /* 0x0010 */ long Long;
      /* 0x0010 */ unsigned __int64 Quad;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ ByteStream;
} MI_FIXUP_RECORD, *PMI_FIXUP_RECORD; /* size: 0x0018 */

typedef struct _ARC_DISK_INFORMATION
{
  /* 0x0000 */ struct _LIST_ENTRY DiskSignatures;
} ARC_DISK_INFORMATION, *PARC_DISK_INFORMATION; /* size: 0x0010 */

typedef struct _PEB
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SkipPatchingUser32Forwarders : 1; /* bit position: 4 */
      /* 0x0003 */ unsigned char SpareBits : 3; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ long Padding_291;
  /* 0x0008 */ void* Mutant;
  /* 0x0010 */ void* ImageBaseAddress;
  /* 0x0018 */ struct _PEB_LDR_DATA* Ldr;
  /* 0x0020 */ struct _RTL_USER_PROCESS_PARAMETERS* ProcessParameters;
  /* 0x0028 */ void* SubSystemData;
  /* 0x0030 */ void* ProcessHeap;
  /* 0x0038 */ struct _RTL_CRITICAL_SECTION* FastPebLock;
  /* 0x0040 */ void* AtlThunkSListPtr;
  /* 0x0048 */ void* IFEOKey;
  union
  {
    /* 0x0050 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0050 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0050 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0050 */ unsigned long ProcessUsingVEH : 1; /* bit position: 2 */
      /* 0x0050 */ unsigned long ProcessUsingVCH : 1; /* bit position: 3 */
      /* 0x0050 */ unsigned long ProcessUsingFTH : 1; /* bit position: 4 */
      /* 0x0050 */ unsigned long ReservedBits0 : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0054 */ long Padding_292;
  union
  {
    /* 0x0058 */ void* KernelCallbackTable;
    /* 0x0058 */ void* UserSharedInfoPtr;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long SystemReserved[1];
  /* 0x0064 */ unsigned long AtlThunkSListPtr32;
  /* 0x0068 */ void* ApiSetMap;
  /* 0x0070 */ unsigned long TlsExpansionCounter;
  /* 0x0074 */ long Padding_293;
  /* 0x0078 */ void* TlsBitmap;
  /* 0x0080 */ unsigned long TlsBitmapBits[2];
  /* 0x0088 */ void* ReadOnlySharedMemoryBase;
  /* 0x0090 */ void* HotpatchInformation;
  /* 0x0098 */ void** ReadOnlyStaticServerData;
  /* 0x00a0 */ void* AnsiCodePageData;
  /* 0x00a8 */ void* OemCodePageData;
  /* 0x00b0 */ void* UnicodeCaseTableData;
  /* 0x00b8 */ unsigned long NumberOfProcessors;
  /* 0x00bc */ unsigned long NtGlobalFlag;
  /* 0x00c0 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x00c8 */ unsigned __int64 HeapSegmentReserve;
  /* 0x00d0 */ unsigned __int64 HeapSegmentCommit;
  /* 0x00d8 */ unsigned __int64 HeapDeCommitTotalFreeThreshold;
  /* 0x00e0 */ unsigned __int64 HeapDeCommitFreeBlockThreshold;
  /* 0x00e8 */ unsigned long NumberOfHeaps;
  /* 0x00ec */ unsigned long MaximumNumberOfHeaps;
  /* 0x00f0 */ void** ProcessHeaps;
  /* 0x00f8 */ void* GdiSharedHandleTable;
  /* 0x0100 */ void* ProcessStarterHelper;
  /* 0x0108 */ unsigned long GdiDCAttributeList;
  /* 0x010c */ long Padding_294;
  /* 0x0110 */ struct _RTL_CRITICAL_SECTION* LoaderLock;
  /* 0x0118 */ unsigned long OSMajorVersion;
  /* 0x011c */ unsigned long OSMinorVersion;
  /* 0x0120 */ unsigned short OSBuildNumber;
  /* 0x0122 */ unsigned short OSCSDVersion;
  /* 0x0124 */ unsigned long OSPlatformId;
  /* 0x0128 */ unsigned long ImageSubsystem;
  /* 0x012c */ unsigned long ImageSubsystemMajorVersion;
  /* 0x0130 */ unsigned long ImageSubsystemMinorVersion;
  /* 0x0134 */ long Padding_295;
  /* 0x0138 */ unsigned __int64 ActiveProcessAffinityMask;
  /* 0x0140 */ unsigned long GdiHandleBuffer[60];
  /* 0x0230 */ void* PostProcessInitRoutine /* function */;
  /* 0x0238 */ void* TlsExpansionBitmap;
  /* 0x0240 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x02c0 */ unsigned long SessionId;
  /* 0x02c4 */ long Padding_296;
  /* 0x02c8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x02d0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x02d8 */ void* pShimData;
  /* 0x02e0 */ void* AppCompatInfo;
  /* 0x02e8 */ struct _UNICODE_STRING CSDVersion;
  /* 0x02f8 */ const struct _ACTIVATION_CONTEXT_DATA* ActivationContextData;
  /* 0x0300 */ struct _ASSEMBLY_STORAGE_MAP* ProcessAssemblyStorageMap;
  /* 0x0308 */ const struct _ACTIVATION_CONTEXT_DATA* SystemDefaultActivationContextData;
  /* 0x0310 */ struct _ASSEMBLY_STORAGE_MAP* SystemAssemblyStorageMap;
  /* 0x0318 */ unsigned __int64 MinimumStackCommit;
  /* 0x0320 */ struct _FLS_CALLBACK_INFO* FlsCallback;
  /* 0x0328 */ struct _LIST_ENTRY FlsListHead;
  /* 0x0338 */ void* FlsBitmap;
  /* 0x0340 */ unsigned long FlsBitmapBits[4];
  /* 0x0350 */ unsigned long FlsHighIndex;
  /* 0x0354 */ long Padding_297;
  /* 0x0358 */ void* WerRegistrationData;
  /* 0x0360 */ void* WerShipAssertPtr;
  /* 0x0368 */ void* pContextData;
  /* 0x0370 */ void* pImageHeaderHash;
  union
  {
    /* 0x0378 */ unsigned long TracingFlags;
    struct /* bitfield */
    {
      /* 0x0378 */ unsigned long HeapTracingEnabled : 1; /* bit position: 0 */
      /* 0x0378 */ unsigned long CritSecTracingEnabled : 1; /* bit position: 1 */
      /* 0x0378 */ unsigned long SpareTracingBits : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x037c */ long __PADDING__[1];
} PEB, *PPEB; /* size: 0x0380 */

typedef struct _KPCR
{
  union
  {
    /* 0x0000 */ struct _NT_TIB NtTib;
    struct
    {
      /* 0x0000 */ union _KGDTENTRY64* GdtBase;
      /* 0x0008 */ struct _KTSS64* TssBase;
      /* 0x0010 */ unsigned __int64 UserRsp;
      /* 0x0018 */ struct _KPCR* Self;
      /* 0x0020 */ struct _KPRCB* CurrentPrcb;
      /* 0x0028 */ struct _KSPIN_LOCK_QUEUE* LockArray;
      /* 0x0030 */ void* Used_Self;
    }; /* size: 0x0038 */
  }; /* size: 0x0038 */
  /* 0x0038 */ union _KIDTENTRY64* IdtBase;
  /* 0x0040 */ unsigned __int64 Unused[2];
  /* 0x0050 */ unsigned char Irql;
  /* 0x0051 */ unsigned char SecondLevelCacheAssociativity;
  /* 0x0052 */ unsigned char ObsoleteNumber;
  /* 0x0053 */ unsigned char Fill0;
  /* 0x0054 */ unsigned long Unused0[3];
  /* 0x0060 */ unsigned short MajorVersion;
  /* 0x0062 */ unsigned short MinorVersion;
  /* 0x0064 */ unsigned long StallScaleFactor;
  /* 0x0068 */ void* Unused1[3];
  /* 0x0080 */ unsigned long KernelReserved[15];
  /* 0x00bc */ unsigned long SecondLevelCacheSize;
  /* 0x00c0 */ unsigned long HalReserved[16];
  /* 0x0100 */ unsigned long Unused2;
  /* 0x0104 */ long Padding_298;
  /* 0x0108 */ void* KdVersionBlock;
  /* 0x0110 */ void* Unused3;
  /* 0x0118 */ unsigned long PcrAlign1[24];
  /* 0x0178 */ long Padding_299[2];
  /* 0x0180 */ struct _KPRCB Prcb;
} KPCR, *PKPCR; /* size: 0x4e80 */

typedef struct _PEB_LDR_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_300[3];
  /* 0x0008 */ void* SsHandle;
  /* 0x0010 */ struct _LIST_ENTRY InLoadOrderModuleList;
  /* 0x0020 */ struct _LIST_ENTRY InMemoryOrderModuleList;
  /* 0x0030 */ struct _LIST_ENTRY InInitializationOrderModuleList;
  /* 0x0040 */ void* EntryInProgress;
  /* 0x0048 */ unsigned char ShutdownInProgress;
  /* 0x0049 */ char Padding_301[7];
  /* 0x0050 */ void* ShutdownThreadId;
} PEB_LDR_DATA, *PPEB_LDR_DATA; /* size: 0x0058 */

typedef struct _PO_IRP_QUEUE
{
  /* 0x0000 */ struct _IRP* CurrentIrp;
  /* 0x0008 */ struct _IRP* PendingIrpList;
} PO_IRP_QUEUE, *PPO_IRP_QUEUE; /* size: 0x0010 */

struct HAL_DISPATCH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_302;
  /* 0x0008 */ void* HalQuerySystemInformation /* function */;
  /* 0x0010 */ void* HalSetSystemInformation /* function */;
  /* 0x0018 */ void* HalQueryBusSlots /* function */;
  /* 0x0020 */ unsigned long Spare1;
  /* 0x0024 */ long Padding_303;
  /* 0x0028 */ void* HalExamineMBR /* function */;
  /* 0x0030 */ void* HalIoReadPartitionTable /* function */;
  /* 0x0038 */ void* HalIoSetPartitionInformation /* function */;
  /* 0x0040 */ void* HalIoWritePartitionTable /* function */;
  /* 0x0048 */ void* HalReferenceHandlerForBus /* function */;
  /* 0x0050 */ void* HalReferenceBusHandler /* function */;
  /* 0x0058 */ void* HalDereferenceBusHandler /* function */;
  /* 0x0060 */ void* HalInitPnpDriver /* function */;
  /* 0x0068 */ void* HalInitPowerManagement /* function */;
  /* 0x0070 */ void* HalGetDmaAdapter /* function */;
  /* 0x0078 */ void* HalGetInterruptTranslator /* function */;
  /* 0x0080 */ void* HalStartMirroring /* function */;
  /* 0x0088 */ void* HalEndMirroring /* function */;
  /* 0x0090 */ void* HalMirrorPhysicalMemory /* function */;
  /* 0x0098 */ void* HalEndOfBoot /* function */;
  /* 0x00a0 */ void* HalMirrorVerify /* function */;
  /* 0x00a8 */ void* HalGetCachedAcpiTable /* function */;
  /* 0x00b0 */ void* HalSetPciErrorHandlerCallback /* function */;
}; /* size: 0x00b8 */

typedef struct _OBJECT_NAME_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION; /* size: 0x0010 */

typedef struct _MACHINE_FRAME
{
  /* 0x0000 */ unsigned __int64 Rip;
  /* 0x0008 */ unsigned short SegCs;
  /* 0x000a */ unsigned short Fill1[3];
  /* 0x0010 */ unsigned long EFlags;
  /* 0x0014 */ unsigned long Fill2;
  /* 0x0018 */ unsigned __int64 Rsp;
  /* 0x0020 */ unsigned short SegSs;
  /* 0x0022 */ unsigned short Fill3[3];
} MACHINE_FRAME, *PMACHINE_FRAME; /* size: 0x0028 */

union INTEL_CACHE_INFO_EBX
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long LineSize : 12; /* bit position: 0 */
      /* 0x0000 */ unsigned long Partitions : 10; /* bit position: 12 */
      /* 0x0000 */ unsigned long Associativity : 10; /* bit position: 22 */
    }; /* bitfield */
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _PO_SESSION_INIT
{
  /* 0x0000 */ volatile unsigned char* Sleeping;
  /* 0x0008 */ unsigned long DisplayTimeout;
  /* 0x000c */ unsigned long DisplayDimTimeout;
  /* 0x0010 */ unsigned long AwayMode;
  /* 0x0014 */ unsigned long AcDc;
  /* 0x0018 */ unsigned long NormalBrightnessLevel;
  /* 0x001c */ unsigned long DimBrightnessLevel;
} PO_SESSION_INIT, *PPO_SESSION_INIT; /* size: 0x0020 */

typedef struct _X86PAE_HARDWARE_PTE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Write : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Owner : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 WriteThrough : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 CacheDisable : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Accessed : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 Dirty : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 Global : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 CopyOnWrite : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned __int64 reserved0 : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned __int64 PageFrameNumber : 24; /* bit position: 12 */
      /* 0x0000 */ unsigned __int64 reserved1 : 28; /* bit position: 36 */
    }; /* bitfield */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} X86PAE_HARDWARE_PTE, *PX86PAE_HARDWARE_PTE; /* size: 0x0008 */

typedef struct _MMWSLENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Spare : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 Hashed : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 Direct : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Age : 3; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 VirtualPageNumber : 52; /* bit position: 12 */
  }; /* bitfield */
} MMWSLENTRY, *PMMWSLENTRY; /* size: 0x0008 */

typedef struct _MMWSLE
{
  union
  {
    union
    {
      /* 0x0000 */ void* VirtualAddress;
      /* 0x0000 */ unsigned __int64 Long;
      /* 0x0000 */ struct _MMWSLENTRY e1;
      /* 0x0000 */ struct _MMWSLE_FREE_ENTRY e2;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MMWSLE, *PMMWSLE; /* size: 0x0008 */

typedef struct _MMWSLE_NONDIRECT_HASH
{
  /* 0x0000 */ void* Key;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ long __PADDING__[1];
} MMWSLE_NONDIRECT_HASH, *PMMWSLE_NONDIRECT_HASH; /* size: 0x0010 */

typedef struct _MMWSLE_HASH
{
  /* 0x0000 */ unsigned long Index;
} MMWSLE_HASH, *PMMWSLE_HASH; /* size: 0x0004 */

struct HRSRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _PO_DIAG_STACK_RECORD
{
  /* 0x0000 */ unsigned long StackDepth;
  /* 0x0004 */ long Padding_304;
  /* 0x0008 */ void* Stack[1];
} PO_DIAG_STACK_RECORD, *PPO_DIAG_STACK_RECORD; /* size: 0x0010 */

struct WHEA_PCIXDEVICE_REGISTER_PAIR
{
  /* 0x0000 */ unsigned __int64 Register;
  /* 0x0008 */ unsigned __int64 Data;
}; /* size: 0x0010 */

typedef struct _PO_NOTIFY_ORDER_LEVEL
{
  /* 0x0000 */ unsigned long DeviceCount;
  /* 0x0004 */ unsigned long ActiveCount;
  /* 0x0008 */ struct _LIST_ENTRY WaitSleep;
  /* 0x0018 */ struct _LIST_ENTRY ReadySleep;
  /* 0x0028 */ struct _LIST_ENTRY ReadyS0;
  /* 0x0038 */ struct _LIST_ENTRY WaitS0;
} PO_NOTIFY_ORDER_LEVEL, *PPO_NOTIFY_ORDER_LEVEL; /* size: 0x0048 */

typedef struct _stat32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_305[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
} stat32, *Pstat32; /* size: 0x0024 */

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION
{
  /* 0x0000 */ unsigned long VetoType;
  /* 0x0004 */ long Padding_306;
  /* 0x0008 */ struct _UNICODE_STRING VetoList;
} SYSTEM_LEGACY_DRIVER_INFORMATION, *PSYSTEM_LEGACY_DRIVER_INFORMATION; /* size: 0x0018 */

typedef struct _VI_VERIFIER_ISSUE
{
  /* 0x0000 */ unsigned __int64 IssueType;
  /* 0x0008 */ void* Address;
  /* 0x0010 */ unsigned __int64 Parameters[2];
} VI_VERIFIER_ISSUE, *PVI_VERIFIER_ISSUE; /* size: 0x0020 */

typedef struct _PRIVILEGE_SET
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ unsigned long Control;
  /* 0x0008 */ struct _LUID_AND_ATTRIBUTES Privilege[1];
} PRIVILEGE_SET, *PPRIVILEGE_SET; /* size: 0x0014 */

typedef struct _ACCESS_STATE
{
  /* 0x0000 */ struct _LUID OperationID;
  /* 0x0008 */ unsigned char SecurityEvaluated;
  /* 0x0009 */ unsigned char GenerateAudit;
  /* 0x000a */ unsigned char GenerateOnClose;
  /* 0x000b */ unsigned char PrivilegesAllocated;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long RemainingDesiredAccess;
  /* 0x0014 */ unsigned long PreviouslyGrantedAccess;
  /* 0x0018 */ unsigned long OriginalDesiredAccess;
  /* 0x001c */ long Padding_307;
  /* 0x0020 */ struct _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;
  /* 0x0040 */ void* SecurityDescriptor;
  /* 0x0048 */ void* AuxData;
  union
  {
    union
    {
      /* 0x0050 */ struct _INITIAL_PRIVILEGE_SET InitialPrivilegeSet;
      /* 0x0050 */ struct _PRIVILEGE_SET PrivilegeSet;
    }; /* size: 0x002c */
  } /* size: 0x002c */ Privileges;
  /* 0x007c */ unsigned char AuditPrivileges;
  /* 0x007d */ char Padding_308[3];
  /* 0x0080 */ struct _UNICODE_STRING ObjectName;
  /* 0x0090 */ struct _UNICODE_STRING ObjectTypeName;
} ACCESS_STATE, *PACCESS_STATE; /* size: 0x00a0 */

typedef struct _AUX_ACCESS_DATA
{
  /* 0x0000 */ struct _PRIVILEGE_SET* PrivilegesUsed;
  /* 0x0008 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0018 */ unsigned long AccessesToAudit;
  /* 0x001c */ unsigned long MaximumAuditMask;
  /* 0x0020 */ struct _GUID TransactionId;
  /* 0x0030 */ void* NewSecurityDescriptor;
  /* 0x0038 */ void* ExistingSecurityDescriptor;
  /* 0x0040 */ void* ParentSecurityDescriptor;
  /* 0x0048 */ void* DeRefSecurityDescriptor /* function */;
  /* 0x0050 */ void* SDLock;
  /* 0x0058 */ struct _ACCESS_REASONS AccessReasons;
} AUX_ACCESS_DATA, *PAUX_ACCESS_DATA; /* size: 0x00d8 */

typedef struct _PSP_OBJECT_CREATION_STATE
{
  /* 0x0000 */ struct _ACCESS_STATE AccessState;
  /* 0x00a0 */ struct _AUX_ACCESS_DATA AuxData;
  /* 0x0178 */ unsigned long HandleAttributes;
  /* 0x017c */ char PreviousMode;
  /* 0x017d */ char Padding_309[3];
  /* 0x0180 */ void* NewHandle;
} PSP_OBJECT_CREATION_STATE, *PPSP_OBJECT_CREATION_STATE; /* size: 0x0188 */

typedef struct _KPROCESS_VALUES
{
  /* 0x0000 */ unsigned __int64 KernelTime;
  /* 0x0008 */ unsigned __int64 UserTime;
  /* 0x0010 */ unsigned __int64 CycleTime;
  /* 0x0018 */ __int64 ReadOperationCount;
  /* 0x0020 */ __int64 WriteOperationCount;
  /* 0x0028 */ __int64 OtherOperationCount;
  /* 0x0030 */ __int64 ReadTransferCount;
  /* 0x0038 */ __int64 WriteTransferCount;
  /* 0x0040 */ __int64 OtherTransferCount;
} KPROCESS_VALUES, *PKPROCESS_VALUES; /* size: 0x0048 */

typedef struct _IMAGE_ROM_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long BaseOfBss;
  /* 0x0020 */ unsigned long GprMask;
  /* 0x0024 */ unsigned long CprMask[4];
  /* 0x0034 */ unsigned long GpValue;
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER; /* size: 0x0038 */

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
  /* 0x0000 */ struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
} TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION; /* size: 0x0020 */

typedef struct _CPTABLEINFO
{
  /* 0x0000 */ unsigned short CodePage;
  /* 0x0002 */ unsigned short MaximumCharacterSize;
  /* 0x0004 */ unsigned short DefaultChar;
  /* 0x0006 */ unsigned short UniDefaultChar;
  /* 0x0008 */ unsigned short TransDefaultChar;
  /* 0x000a */ unsigned short TransUniDefaultChar;
  /* 0x000c */ unsigned short DBCSCodePage;
  /* 0x000e */ unsigned char LeadByte[12];
  /* 0x001a */ char Padding_310[6];
  /* 0x0020 */ unsigned short* MultiByteTable;
  /* 0x0028 */ void* WideCharTable;
  /* 0x0030 */ unsigned short* DBCSRanges;
  /* 0x0038 */ unsigned short* DBCSOffsets;
} CPTABLEINFO, *PCPTABLEINFO; /* size: 0x0040 */

typedef struct _NLSTABLEINFO
{
  /* 0x0000 */ struct _CPTABLEINFO OemTableInfo;
  /* 0x0040 */ struct _CPTABLEINFO AnsiTableInfo;
  /* 0x0080 */ unsigned short* UpperCaseTable;
  /* 0x0088 */ unsigned short* LowerCaseTable;
} NLSTABLEINFO, *PNLSTABLEINFO; /* size: 0x0090 */

typedef union _WHEA_PCIEXPRESS_COMMAND_STATUS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short Command;
      /* 0x0002 */ unsigned short Status;
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_PCIEXPRESS_COMMAND_STATUS, *PWHEA_PCIEXPRESS_COMMAND_STATUS; /* size: 0x0004 */

struct _ACTIVATION_CONTEXT;

typedef struct _BUS_HANDLER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0008 */ enum _BUS_DATA_TYPE ConfigurationType;
  /* 0x000c */ unsigned long BusNumber;
  /* 0x0010 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0018 */ struct _BUS_HANDLER* ParentHandler;
  /* 0x0020 */ void* BusData;
  /* 0x0028 */ unsigned long DeviceControlExtensionSize;
  /* 0x002c */ long Padding_311;
  /* 0x0030 */ struct _SUPPORTED_RANGES* BusAddresses;
  /* 0x0038 */ unsigned long Reserved[4];
  /* 0x0048 */ void* GetBusData /* function */;
  /* 0x0050 */ void* SetBusData /* function */;
  /* 0x0058 */ void* AdjustResourceList /* function */;
  /* 0x0060 */ void* AssignSlotResources /* function */;
  /* 0x0068 */ void* TranslateBusAddress /* function */;
  /* 0x0070 */ void* Spare1;
  /* 0x0078 */ void* Spare2;
  /* 0x0080 */ void* Spare3;
  /* 0x0088 */ void* Spare4;
  /* 0x0090 */ void* Spare5;
  /* 0x0098 */ void* Spare6;
  /* 0x00a0 */ void* Spare7;
  /* 0x00a8 */ void* Spare8;
} BUS_HANDLER, *PBUS_HANDLER; /* size: 0x00b0 */

typedef struct _CACHE_MANAGER_CALLBACKS
{
  /* 0x0000 */ void* AcquireForLazyWrite /* function */;
  /* 0x0008 */ void* ReleaseFromLazyWrite /* function */;
  /* 0x0010 */ void* AcquireForReadAhead /* function */;
  /* 0x0018 */ void* ReleaseFromReadAhead /* function */;
} CACHE_MANAGER_CALLBACKS, *PCACHE_MANAGER_CALLBACKS; /* size: 0x0020 */

typedef struct _VF_TARGET_VERIFIED_DRIVER_DATA
{
  /* 0x0000 */ struct _VF_SUSPECT_DRIVER_ENTRY* SuspectDriverEntry;
  /* 0x0008 */ void* WMICallback;
  /* 0x0010 */ struct _LIST_ENTRY EtwHandlesListHead;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0020 */ unsigned long MissedEtwRegistration : 1; /* bit position: 0 */
          /* 0x0020 */ unsigned long Spare : 31; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0004 */ Flags;
      /* 0x0020 */ unsigned long Whole;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  /* 0x0024 */ long Padding_312;
  /* 0x0028 */ unsigned __int64 Signature;
  /* 0x0030 */ union _SLIST_HEADER PoolPageHeaders;
  /* 0x0040 */ union _SLIST_HEADER PoolTrackers;
  /* 0x0050 */ volatile unsigned long CurrentPagedPoolAllocations;
  /* 0x0054 */ volatile unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0058 */ volatile unsigned long PeakPagedPoolAllocations;
  /* 0x005c */ volatile unsigned long PeakNonPagedPoolAllocations;
  /* 0x0060 */ volatile unsigned __int64 PagedBytes;
  /* 0x0068 */ volatile unsigned __int64 NonPagedBytes;
  /* 0x0070 */ volatile unsigned __int64 PeakPagedBytes;
  /* 0x0078 */ volatile unsigned __int64 PeakNonPagedBytes;
  /* 0x0080 */ unsigned long RaiseIrqls;
  /* 0x0084 */ unsigned long AcquireSpinLocks;
  /* 0x0088 */ unsigned long SynchronizeExecutions;
  /* 0x008c */ unsigned long AllocationsWithNoTag;
  /* 0x0090 */ unsigned long AllocationsFailed;
  /* 0x0094 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0098 */ unsigned __int64 LockedBytes;
  /* 0x00a0 */ unsigned __int64 PeakLockedBytes;
  /* 0x00a8 */ unsigned __int64 MappedLockedBytes;
  /* 0x00b0 */ unsigned __int64 PeakMappedLockedBytes;
  /* 0x00b8 */ unsigned __int64 MappedIoSpaceBytes;
  /* 0x00c0 */ unsigned __int64 PeakMappedIoSpaceBytes;
  /* 0x00c8 */ unsigned __int64 PagesForMdlBytes;
  /* 0x00d0 */ unsigned __int64 PeakPagesForMdlBytes;
  /* 0x00d8 */ unsigned __int64 ContiguousMemoryBytes;
  /* 0x00e0 */ unsigned __int64 PeakContiguousMemoryBytes;
  /* 0x00e8 */ struct _LIST_ENTRY ContiguousMemoryListHead;
  /* 0x00f8 */ long __PADDING__[2];
} VF_TARGET_VERIFIED_DRIVER_DATA, *PVF_TARGET_VERIFIED_DRIVER_DATA; /* size: 0x0100 */

typedef struct _CM_INDEX_HINT_BLOCK
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long HashKey[1];
} CM_INDEX_HINT_BLOCK, *PCM_INDEX_HINT_BLOCK; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME_EX64
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME64 BasicFrame;
  /* 0x0018 */ unsigned __int64 ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX64, *PTEB_ACTIVE_FRAME_EX64; /* size: 0x0020 */

typedef struct _PCI_SLOT_NUMBER
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long DeviceNumber : 5; /* bit position: 0 */
          /* 0x0000 */ unsigned long FunctionNumber : 3; /* bit position: 5 */
          /* 0x0000 */ unsigned long Reserved : 24; /* bit position: 8 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} PCI_SLOT_NUMBER, *PPCI_SLOT_NUMBER; /* size: 0x0004 */

typedef struct _EX_DEBUG_LOG_EVENT
{
  /* 0x0000 */ unsigned short ThreadId;
  /* 0x0002 */ unsigned short ProcessId;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long Time : 24; /* bit position: 0 */
    /* 0x0004 */ unsigned long Tag : 8; /* bit position: 24 */
  }; /* bitfield */
  /* 0x0008 */ unsigned long BackTrace[4];
  /* 0x0018 */ unsigned long Data[4];
} EX_DEBUG_LOG_EVENT, *PEX_DEBUG_LOG_EVENT; /* size: 0x0028 */

typedef struct _WMI_FILEIO_NOTIFY_ROUTINES
{
  /* 0x0000 */ void* FileNameNotifyRoutine /* function */;
  /* 0x0008 */ void* InitiationNotifyRoutine /* function */;
  /* 0x0010 */ void* CompletionNotifyRoutine /* function */;
} WMI_FILEIO_NOTIFY_ROUTINES, *PWMI_FILEIO_NOTIFY_ROUTINES; /* size: 0x0018 */

typedef union _WHEA_ERROR_STATUS
{
  union
  {
    /* 0x0000 */ unsigned __int64 ErrorStatus;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Reserved1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ErrorType : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 Address : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Control : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned __int64 Data : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned __int64 Responder : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned __int64 Requester : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned __int64 FirstError : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned __int64 Overflow : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 Reserved2 : 41; /* bit position: 23 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} WHEA_ERROR_STATUS, *PWHEA_ERROR_STATUS; /* size: 0x0008 */

typedef struct _COMPRESSED_DATA_INFO
{
  /* 0x0000 */ unsigned short CompressionFormatAndEngine;
  /* 0x0002 */ unsigned char CompressionUnitShift;
  /* 0x0003 */ unsigned char ChunkShift;
  /* 0x0004 */ unsigned char ClusterShift;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ unsigned short NumberOfChunks;
  /* 0x0008 */ unsigned long CompressedChunkSizes[1];
} COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO; /* size: 0x000c */

typedef struct _TRIAGE_DEVICE_NODE
{
  /* 0x0000 */ struct _TRIAGE_DEVICE_NODE* Sibling;
  /* 0x0008 */ struct _TRIAGE_DEVICE_NODE* Child;
  /* 0x0010 */ struct _TRIAGE_DEVICE_NODE* Parent;
  /* 0x0018 */ struct _TRIAGE_DEVICE_NODE* LastChild;
  /* 0x0020 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0028 */ struct _UNICODE_STRING InstancePath;
  /* 0x0038 */ struct _UNICODE_STRING ServiceName;
  /* 0x0048 */ struct _IRP* PendingIrp;
} TRIAGE_DEVICE_NODE, *PTRIAGE_DEVICE_NODE; /* size: 0x0050 */

typedef struct _EVENT_TRACE_TIME_PROFILE_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ unsigned long ProfileInterval;
} EVENT_TRACE_TIME_PROFILE_INFORMATION, *PEVENT_TRACE_TIME_PROFILE_INFORMATION; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long DeviceDepth;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEPTH_DATA, *PPLUGPLAY_CONTROL_DEPTH_DATA; /* size: 0x0018 */

struct PROCESSOR_IDLESTATE_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned char DemotePercent;
  /* 0x0005 */ unsigned char PromotePercent;
  /* 0x0006 */ unsigned char Spare[2];
}; /* size: 0x0008 */

typedef struct _IRP
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ long Padding_313;
  /* 0x0008 */ struct _MDL* MdlAddress;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long Padding_314;
  union
  {
    union
    {
      /* 0x0018 */ struct _IRP* MasterIrp;
      /* 0x0018 */ long IrpCount;
      /* 0x0018 */ void* SystemBuffer;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ AssociatedIrp;
  /* 0x0020 */ struct _LIST_ENTRY ThreadListEntry;
  /* 0x0030 */ struct _IO_STATUS_BLOCK IoStatus;
  /* 0x0040 */ char RequestorMode;
  /* 0x0041 */ unsigned char PendingReturned;
  /* 0x0042 */ char StackCount;
  /* 0x0043 */ char CurrentLocation;
  /* 0x0044 */ unsigned char Cancel;
  /* 0x0045 */ unsigned char CancelIrql;
  /* 0x0046 */ char ApcEnvironment;
  /* 0x0047 */ unsigned char AllocationFlags;
  /* 0x0048 */ struct _IO_STATUS_BLOCK* UserIosb;
  /* 0x0050 */ struct _KEVENT* UserEvent;
  union
  {
    union
    {
      struct
      {
        union
        {
          /* 0x0058 */ void* UserApcRoutine /* function */;
          /* 0x0058 */ void* IssuingProcess;
        }; /* size: 0x0008 */
        /* 0x0060 */ void* UserApcContext;
      } /* size: 0x0010 */ AsynchronousParameters;
      /* 0x0058 */ union _LARGE_INTEGER AllocationSize;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Overlay;
  /* 0x0068 */ void* CancelRoutine /* function */;
  /* 0x0070 */ void* UserBuffer;
  union
  {
    union
    {
      struct
      {
        union
        {
          /* 0x0078 */ struct _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
          /* 0x0078 */ void* DriverContext[4];
        }; /* size: 0x0020 */
        /* 0x0098 */ struct _ETHREAD* Thread;
        /* 0x00a0 */ char* AuxiliaryBuffer;
        /* 0x00a8 */ struct _LIST_ENTRY ListEntry;
        union
        {
          /* 0x00b8 */ struct _IO_STACK_LOCATION* CurrentStackLocation;
          /* 0x00b8 */ unsigned long PacketType;
        }; /* size: 0x0008 */
        /* 0x00c0 */ struct _FILE_OBJECT* OriginalFileObject;
      } /* size: 0x0050 */ Overlay;
      /* 0x0078 */ struct _KAPC Apc;
      /* 0x0078 */ void* CompletionKey;
    }; /* size: 0x0058 */
  } /* size: 0x0058 */ Tail;
} IRP, *PIRP; /* size: 0x00d0 */

typedef union _MM_STORE_KEY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 KeyLow : 60; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 KeyHigh : 4; /* bit position: 60 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 EntireKey;
  }; /* size: 0x0008 */
} MM_STORE_KEY, *PMM_STORE_KEY; /* size: 0x0008 */

typedef struct _JOBOBJECT_JOBSET_INFORMATION
{
  /* 0x0000 */ unsigned long MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION; /* size: 0x0004 */

struct HKL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct SET_POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ enum SYSTEM_POWER_CONDITION PowerCondition;
  /* 0x0018 */ unsigned long DataLength;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

typedef struct _EVENT_HEADER
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short HeaderType;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short EventProperty;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _GUID ProviderId;
  /* 0x0028 */ struct _EVENT_DESCRIPTOR EventDescriptor;
  union
  {
    struct
    {
      /* 0x0038 */ unsigned long KernelTime;
      /* 0x003c */ unsigned long UserTime;
    }; /* size: 0x0008 */
    /* 0x0038 */ unsigned __int64 ProcessorTime;
  }; /* size: 0x0008 */
  /* 0x0040 */ struct _GUID ActivityId;
} EVENT_HEADER, *PEVENT_HEADER; /* size: 0x0050 */

typedef struct _EVENT_RECORD
{
  /* 0x0000 */ struct _EVENT_HEADER EventHeader;
  /* 0x0050 */ struct _ETW_BUFFER_CONTEXT BufferContext;
  /* 0x0054 */ unsigned short ExtendedDataCount;
  /* 0x0056 */ unsigned short UserDataLength;
  /* 0x0058 */ struct _EVENT_HEADER_EXTENDED_DATA_ITEM* ExtendedData;
  /* 0x0060 */ void* UserData;
  /* 0x0068 */ void* UserContext;
} EVENT_RECORD, *PEVENT_RECORD; /* size: 0x0070 */

typedef struct _BATTERY_INFORMATION
{
  /* 0x0000 */ unsigned long Capabilities;
  /* 0x0004 */ unsigned char Technology;
  /* 0x0005 */ unsigned char Reserved[3];
  /* 0x0008 */ unsigned char Chemistry[4];
  /* 0x000c */ unsigned long DesignedCapacity;
  /* 0x0010 */ unsigned long FullChargedCapacity;
  /* 0x0014 */ unsigned long DefaultAlert1;
  /* 0x0018 */ unsigned long DefaultAlert2;
  /* 0x001c */ unsigned long CriticalBias;
  /* 0x0020 */ unsigned long CycleCount;
} BATTERY_INFORMATION, *PBATTERY_INFORMATION; /* size: 0x0024 */

typedef struct _SEGMENT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long TotalNumberOfPtes4132 : 10; /* bit position: 0 */
    /* 0x0000 */ unsigned long ExtraSharedWowSubsections : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned long LargePages : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned long WatchProto : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned long DebugSymbolsLoaded : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned long WriteCombined : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned long NoCache : 1; /* bit position: 15 */
    /* 0x0000 */ unsigned long FloppyMedia : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long DefaultProtectionMask : 5; /* bit position: 17 */
    /* 0x0000 */ unsigned long Binary32 : 1; /* bit position: 22 */
    /* 0x0000 */ unsigned long ContainsDebug : 1; /* bit position: 23 */
    /* 0x0000 */ unsigned long Spare : 8; /* bit position: 24 */
  }; /* bitfield */
} SEGMENT_FLAGS, *PSEGMENT_FLAGS; /* size: 0x0004 */

typedef struct _MAPPED_FILE_SEGMENT
{
  /* 0x0000 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0008 */ unsigned long TotalNumberOfPtes;
  /* 0x000c */ struct _SEGMENT_FLAGS SegmentFlags;
  /* 0x0010 */ unsigned __int64 NumberOfCommittedPages;
  /* 0x0018 */ unsigned __int64 SizeOfSegment;
  union
  {
    /* 0x0020 */ struct _MMEXTEND_INFO* ExtendInfo;
    /* 0x0020 */ void* BasedAddress;
  }; /* size: 0x0008 */
  /* 0x0028 */ struct _EX_PUSH_LOCK SegmentLock;
} MAPPED_FILE_SEGMENT, *PMAPPED_FILE_SEGMENT; /* size: 0x0030 */

typedef struct _TEB_ACTIVE_FRAME
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_315;
  /* 0x0008 */ struct _TEB_ACTIVE_FRAME* Previous;
  /* 0x0010 */ const struct _TEB_ACTIVE_FRAME_CONTEXT* Context;
} TEB_ACTIVE_FRAME, *PTEB_ACTIVE_FRAME; /* size: 0x0018 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long NumberOfMatches;
  /* 0x0008 */ unsigned long BufferSizeRequired;
} LOOKUP_STREAM_FROM_CLUSTER_OUTPUT, *PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT; /* size: 0x000c */

typedef struct _NAMED_PIPE_CREATE_PARAMETERS
{
  /* 0x0000 */ unsigned long NamedPipeType;
  /* 0x0004 */ unsigned long ReadMode;
  /* 0x0008 */ unsigned long CompletionMode;
  /* 0x000c */ unsigned long MaximumInstances;
  /* 0x0010 */ unsigned long InboundQuota;
  /* 0x0014 */ unsigned long OutboundQuota;
  /* 0x0018 */ union _LARGE_INTEGER DefaultTimeout;
  /* 0x0020 */ unsigned char TimeoutSpecified;
  /* 0x0021 */ char __PADDING__[7];
} NAMED_PIPE_CREATE_PARAMETERS, *PNAMED_PIPE_CREATE_PARAMETERS; /* size: 0x0028 */

typedef struct _PCW_PROCESSOR_INFO
{
  /* 0x0000 */ unsigned __int64 IdleTime;
  /* 0x0008 */ unsigned __int64 AvailableTime;
  /* 0x0010 */ unsigned __int64 UserTime;
  /* 0x0018 */ unsigned __int64 KernelTime;
  /* 0x0020 */ unsigned long Interrupts;
  /* 0x0024 */ long Padding_316;
  /* 0x0028 */ unsigned __int64 DpcTime;
  /* 0x0030 */ unsigned __int64 InterruptTime;
  /* 0x0038 */ unsigned long DpcCount;
  /* 0x003c */ unsigned long DpcRate;
  /* 0x0040 */ unsigned __int64 C1Time;
  /* 0x0048 */ unsigned __int64 C2Time;
  /* 0x0050 */ unsigned __int64 C3Time;
  /* 0x0058 */ unsigned __int64 C1Transitions;
  /* 0x0060 */ unsigned __int64 C2Transitions;
  /* 0x0068 */ unsigned __int64 C3Transitions;
  /* 0x0070 */ unsigned long ParkingStatus;
  /* 0x0074 */ unsigned long CurrentFrequency;
  /* 0x0078 */ unsigned long PercentMaxFrequency;
  /* 0x007c */ unsigned long StateFlags;
} PCW_PROCESSOR_INFO, *PPCW_PROCESSOR_INFO; /* size: 0x0080 */

typedef struct _X86PAE_HARDWARE_PDE
{
  union
  {
    /* 0x0000 */ struct _X86PAE_HARDWARE_PTE Pte;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Write : 1; /* bit position: 1 */
        /* 0x0000 */ unsigned __int64 Owner : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned __int64 WriteThrough : 1; /* bit position: 3 */
        /* 0x0000 */ unsigned __int64 CacheDisable : 1; /* bit position: 4 */
        /* 0x0000 */ unsigned __int64 Accessed : 1; /* bit position: 5 */
        /* 0x0000 */ unsigned __int64 Dirty : 1; /* bit position: 6 */
        /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 7 */
        /* 0x0000 */ unsigned __int64 Global : 1; /* bit position: 8 */
        /* 0x0000 */ unsigned __int64 CopyOnWrite : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned __int64 Prototype : 1; /* bit position: 10 */
        /* 0x0000 */ unsigned __int64 reserved0 : 1; /* bit position: 11 */
        /* 0x0000 */ unsigned __int64 reserved2 : 9; /* bit position: 12 */
        /* 0x0000 */ unsigned __int64 PageFrameNumber : 15; /* bit position: 21 */
        /* 0x0000 */ unsigned __int64 reserved1 : 28; /* bit position: 36 */
      }; /* bitfield */
    } /* size: 0x0008 */ Large;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} X86PAE_HARDWARE_PDE, *PX86PAE_HARDWARE_PDE; /* size: 0x0008 */

struct _SCSI_REQUEST_BLOCK;

typedef struct _OBJECT_NAMESPACE_LOOKUPTABLE
{
  /* 0x0000 */ struct _LIST_ENTRY HashBuckets[37];
  /* 0x0250 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0258 */ unsigned long NumberOfPrivateSpaces;
  /* 0x025c */ long __PADDING__[1];
} OBJECT_NAMESPACE_LOOKUPTABLE, *POBJECT_NAMESPACE_LOOKUPTABLE; /* size: 0x0260 */

typedef struct _PERFINFO_TRIMPROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ProcessWorkingSet;
  /* 0x0008 */ unsigned long ProcessPageFaultCount;
  /* 0x000c */ unsigned long ProcessLastPageFaultCount;
  /* 0x0010 */ unsigned long ToTrim;
  /* 0x0014 */ unsigned long ActualTrim;
  /* 0x0018 */ unsigned long ProcessClaim;
  /* 0x001c */ unsigned long ProcessGrowthSinceLastEstimate;
  /* 0x0020 */ unsigned long ProcessEstimatedAvailable;
  /* 0x0024 */ unsigned char ProcessMemoryPriority;
  /* 0x0025 */ char __PADDING__[3];
} PERFINFO_TRIMPROCESS_INFORMATION, *PPERFINFO_TRIMPROCESS_INFORMATION; /* size: 0x0028 */

typedef struct _MMINPAGE_FLAGS3
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 FaultFromStore : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PrefetchSystemVmType : 2; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 FilePointerHighBits : 61; /* bit position: 3 */
  }; /* bitfield */
} MMINPAGE_FLAGS3, *PMMINPAGE_FLAGS3; /* size: 0x0008 */

typedef struct _ACPI_CMOS_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_317;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* ReadCmos /* function */;
  /* 0x0028 */ void* WriteCmos /* function */;
} ACPI_CMOS_INTERFACE_STANDARD, *PACPI_CMOS_INTERFACE_STANDARD; /* size: 0x0030 */

typedef struct _WMI_UDP
{
  /* 0x0000 */ unsigned long PID;
  /* 0x0004 */ unsigned short Size;
  /* 0x0006 */ char Padding_318[2];
  /* 0x0008 */ unsigned long DestAddr;
  /* 0x000c */ unsigned long SrcAddr;
  /* 0x0010 */ unsigned short DestPort;
  /* 0x0012 */ unsigned short SrcPort;
} WMI_UDP, *PWMI_UDP; /* size: 0x0014 */

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT
{
  /* 0x0000 */ unsigned __int64 NumSDChangedSuccess;
  /* 0x0008 */ unsigned __int64 NumSDChangedFail;
  /* 0x0010 */ unsigned __int64 NumSDUnused;
  /* 0x0018 */ unsigned __int64 NumSDTotal;
  /* 0x0020 */ unsigned __int64 NumMftSDChangedSuccess;
  /* 0x0028 */ unsigned __int64 NumMftSDChangedFail;
  /* 0x0030 */ unsigned __int64 NumMftSDTotal;
} SD_CHANGE_MACHINE_SID_OUTPUT, *PSD_CHANGE_MACHINE_SID_OUTPUT; /* size: 0x0038 */

typedef struct _DEVICE_CAPABILITIES
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long DeviceD1 : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long DeviceD2 : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long LockSupported : 1; /* bit position: 2 */
    /* 0x0004 */ unsigned long EjectSupported : 1; /* bit position: 3 */
    /* 0x0004 */ unsigned long Removable : 1; /* bit position: 4 */
    /* 0x0004 */ unsigned long DockDevice : 1; /* bit position: 5 */
    /* 0x0004 */ unsigned long UniqueID : 1; /* bit position: 6 */
    /* 0x0004 */ unsigned long SilentInstall : 1; /* bit position: 7 */
    /* 0x0004 */ unsigned long RawDeviceOK : 1; /* bit position: 8 */
    /* 0x0004 */ unsigned long SurpriseRemovalOK : 1; /* bit position: 9 */
    /* 0x0004 */ unsigned long WakeFromD0 : 1; /* bit position: 10 */
    /* 0x0004 */ unsigned long WakeFromD1 : 1; /* bit position: 11 */
    /* 0x0004 */ unsigned long WakeFromD2 : 1; /* bit position: 12 */
    /* 0x0004 */ unsigned long WakeFromD3 : 1; /* bit position: 13 */
    /* 0x0004 */ unsigned long HardwareDisabled : 1; /* bit position: 14 */
    /* 0x0004 */ unsigned long NonDynamic : 1; /* bit position: 15 */
    /* 0x0004 */ unsigned long WarmEjectSupported : 1; /* bit position: 16 */
    /* 0x0004 */ unsigned long NoDisplayInUI : 1; /* bit position: 17 */
    /* 0x0004 */ unsigned long Reserved1 : 1; /* bit position: 18 */
    /* 0x0004 */ unsigned long Reserved : 13; /* bit position: 19 */
  }; /* bitfield */
  /* 0x0008 */ unsigned long Address;
  /* 0x000c */ unsigned long UINumber;
  /* 0x0010 */ enum _DEVICE_POWER_STATE DeviceState[7];
  /* 0x002c */ enum _SYSTEM_POWER_STATE SystemWake;
  /* 0x0030 */ enum _DEVICE_POWER_STATE DeviceWake;
  /* 0x0034 */ unsigned long D1Latency;
  /* 0x0038 */ unsigned long D2Latency;
  /* 0x003c */ unsigned long D3Latency;
} DEVICE_CAPABILITIES, *PDEVICE_CAPABILITIES; /* size: 0x0040 */

typedef struct _ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned __int64 StartingFileOffset;
  /* 0x0008 */ unsigned long OutputBufferOffset;
  /* 0x000c */ unsigned long BytesWithinFileSize;
  /* 0x0010 */ unsigned long BytesWithinValidDataLength;
  /* 0x0014 */ unsigned short CompressionFormat;
  /* 0x0016 */ unsigned char DataUnitShift;
  /* 0x0017 */ unsigned char ChunkShift;
  /* 0x0018 */ unsigned char ClusterShift;
  /* 0x0019 */ unsigned char EncryptionFormat;
  /* 0x001a */ unsigned short NumberOfDataBlocks;
  /* 0x001c */ unsigned long DataBlockSize[1];
} ENCRYPTED_DATA_INFO, *PENCRYPTED_DATA_INFO; /* size: 0x0020 */

typedef struct _HVLP_HYPERCALL_PAGE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long DbgSlistPage : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long DbgStackPage : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long DbgDefaultPage : 1; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_319;
  union
  {
    struct
    {
      /* 0x0008 */ struct _KPRCB* SourcePrcb;
      /* 0x0010 */ void* VirtualAddress;
    } /* size: 0x0010 */ SlistInfo;
    struct
    {
      /* 0x0008 */ unsigned char PreviousIrql;
    } /* size: 0x0001 */ StackInfo;
    struct
    {
      /* 0x0008 */ unsigned char Enable;
    } /* size: 0x0001 */ DefaultInfo;
  }; /* size: 0x0010 */
  /* 0x0018 */ union _LARGE_INTEGER PhysicalAddress;
} HVLP_HYPERCALL_PAGE_INFO, *PHVLP_HYPERCALL_PAGE_INFO; /* size: 0x0020 */

typedef struct _DBGKD_SET_SPECIAL_CALL32
{
  /* 0x0000 */ unsigned long SpecialCall;
} DBGKD_SET_SPECIAL_CALL32, *PDBGKD_SET_SPECIAL_CALL32; /* size: 0x0004 */

typedef struct _SYSTEM_BIGPOOL_ENTRY
{
  union
  {
    /* 0x0000 */ void* VirtualAddress;
    /* 0x0000 */ unsigned __int64 NonPaged : 1; /* bit position: 0 */
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 SizeInBytes;
  union
  {
    /* 0x0010 */ unsigned char Tag[4];
    /* 0x0010 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_BIGPOOL_ENTRY, *PSYSTEM_BIGPOOL_ENTRY; /* size: 0x0018 */

typedef struct _PERFINFO_FILE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Irp;
  /* 0x0008 */ unsigned __int64 ThreadId;
  /* 0x0010 */ unsigned __int64 FileObject;
  /* 0x0018 */ unsigned __int64 FileKey;
  /* 0x0020 */ unsigned __int64 ExtraInformation;
  /* 0x0028 */ unsigned long InfoClass;
} PERFINFO_FILE_INFORMATION, *PPERFINFO_FILE_INFORMATION; /* size: 0x002c */

typedef union _ETW_QUEUE_BUFFER_HEADER
{
  union
  {
    /* 0x0000 */ struct _WMI_BUFFER_HEADER* Buffer;
    /* 0x0000 */ unsigned __int64 Data;
  }; /* size: 0x0008 */
} ETW_QUEUE_BUFFER_HEADER, *PETW_QUEUE_BUFFER_HEADER; /* size: 0x0008 */

typedef struct _PO_DEVICE_NOTIFY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _LIST_ENTRY PowerChildren;
  /* 0x0020 */ struct _LIST_ENTRY PowerParents;
  /* 0x0030 */ struct _DEVICE_OBJECT* TargetDevice;
  /* 0x0038 */ unsigned char OrderLevel;
  /* 0x0039 */ char Padding_320[7];
  /* 0x0040 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0048 */ unsigned short* DeviceName;
  /* 0x0050 */ unsigned short* DriverName;
  /* 0x0058 */ unsigned long ChildCount;
  /* 0x005c */ unsigned long ActiveChild;
  /* 0x0060 */ unsigned long ParentCount;
  /* 0x0064 */ unsigned long ActiveParent;
} PO_DEVICE_NOTIFY, *PPO_DEVICE_NOTIFY; /* size: 0x0068 */

typedef struct _PO_IRP_MANAGER
{
  /* 0x0000 */ struct _PO_IRP_QUEUE DeviceIrpQueue;
  /* 0x0010 */ struct _PO_IRP_QUEUE SystemIrpQueue;
} PO_IRP_MANAGER, *PPO_IRP_MANAGER; /* size: 0x0020 */

typedef struct _DEVICE_NODE
{
  /* 0x0000 */ struct _DEVICE_NODE* Sibling;
  /* 0x0008 */ struct _DEVICE_NODE* Child;
  /* 0x0010 */ struct _DEVICE_NODE* Parent;
  /* 0x0018 */ struct _DEVICE_NODE* LastChild;
  /* 0x0020 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0028 */ struct _UNICODE_STRING InstancePath;
  /* 0x0038 */ struct _UNICODE_STRING ServiceName;
  /* 0x0048 */ struct _IRP* PendingIrp;
  /* 0x0050 */ unsigned long Level;
  /* 0x0054 */ long Padding_321;
  /* 0x0058 */ struct _PO_DEVICE_NOTIFY Notify;
  /* 0x00c0 */ struct _PO_IRP_MANAGER PoIrpManager;
  /* 0x00e0 */ enum _PNP_DEVNODE_STATE State;
  /* 0x00e4 */ enum _PNP_DEVNODE_STATE PreviousState;
  /* 0x00e8 */ enum _PNP_DEVNODE_STATE StateHistory[20];
  /* 0x0138 */ unsigned long StateHistoryEntry;
  /* 0x013c */ long CompletionStatus;
  /* 0x0140 */ unsigned long Flags;
  /* 0x0144 */ unsigned long UserFlags;
  /* 0x0148 */ unsigned long Problem;
  /* 0x014c */ long Padding_322;
  /* 0x0150 */ struct _CM_RESOURCE_LIST* ResourceList;
  /* 0x0158 */ struct _CM_RESOURCE_LIST* ResourceListTranslated;
  /* 0x0160 */ struct _DEVICE_OBJECT* DuplicatePDO;
  /* 0x0168 */ struct _IO_RESOURCE_REQUIREMENTS_LIST* ResourceRequirements;
  /* 0x0170 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0174 */ unsigned long BusNumber;
  /* 0x0178 */ enum _INTERFACE_TYPE ChildInterfaceType;
  /* 0x017c */ unsigned long ChildBusNumber;
  /* 0x0180 */ unsigned short ChildBusTypeIndex;
  /* 0x0182 */ unsigned char RemovalPolicy;
  /* 0x0183 */ unsigned char HardwareRemovalPolicy;
  /* 0x0184 */ long Padding_323;
  /* 0x0188 */ struct _LIST_ENTRY TargetDeviceNotify;
  /* 0x0198 */ struct _LIST_ENTRY DeviceArbiterList;
  /* 0x01a8 */ struct _LIST_ENTRY DeviceTranslatorList;
  /* 0x01b8 */ unsigned short NoTranslatorMask;
  /* 0x01ba */ unsigned short QueryTranslatorMask;
  /* 0x01bc */ unsigned short NoArbiterMask;
  /* 0x01be */ unsigned short QueryArbiterMask;
  union
  {
    union
    {
      /* 0x01c0 */ struct _DEVICE_NODE* LegacyDeviceNode;
      /* 0x01c0 */ struct _DEVICE_RELATIONS* PendingDeviceRelations;
      /* 0x01c0 */ void* Information;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ OverUsed1;
  union
  {
    /* 0x01c8 */ struct _DEVICE_NODE* NextResourceDeviceNode;
  } /* size: 0x0008 */ OverUsed2;
  /* 0x01d0 */ struct _CM_RESOURCE_LIST* BootResources;
  /* 0x01d8 */ struct _CM_RESOURCE_LIST* BootResourcesTranslated;
  /* 0x01e0 */ unsigned long CapabilityFlags;
  /* 0x01e4 */ long Padding_324;
  struct
  {
    /* 0x01e8 */ enum PROFILE_STATUS DockStatus;
    /* 0x0004 */ long Padding_325;
    /* 0x01f0 */ struct _LIST_ENTRY ListEntry;
    /* 0x0200 */ unsigned short* SerialNumber;
  } /* size: 0x0020 */ DockInfo;
  /* 0x0208 */ unsigned long DisableableDepends;
  /* 0x020c */ long Padding_326;
  /* 0x0210 */ struct _LIST_ENTRY PendedSetInterfaceState;
  /* 0x0220 */ struct _LIST_ENTRY LegacyBusListEntry;
  /* 0x0230 */ unsigned long DriverUnloadRetryCount;
  /* 0x0234 */ long Padding_327;
  /* 0x0238 */ struct _DEVICE_NODE* PreviousParent;
  /* 0x0240 */ unsigned long DeletedChildren;
  /* 0x0244 */ unsigned long NumaNodeIndex;
  /* 0x0248 */ struct _GUID ContainerID;
  /* 0x0258 */ unsigned char OverrideFlags;
  /* 0x0259 */ unsigned char RequiresUnloadedDriver;
  /* 0x025a */ char Padding_328[6];
  /* 0x0260 */ struct _PENDING_RELATIONS_LIST_ENTRY* PendingEjectRelations;
} DEVICE_NODE, *PDEVICE_NODE; /* size: 0x0268 */

typedef struct _SMKM_STORE_QUEUE
{
  /* 0x0000 */ unsigned __int64 Lock;
  union
  {
    /* 0x0008 */ struct _PF_QUEUE ReadQueue;
    /* 0x0008 */ unsigned __int64 DummyAlignment;
  }; /* size: 0x0010 */
  /* 0x0018 */ struct _PF_QUEUE WorkQueue;
  /* 0x0028 */ struct _PF_QUEUE CompletionQueue;
  /* 0x0038 */ volatile unsigned long ReadQueueDepth;
  /* 0x003c */ volatile unsigned long WorkQueueDepth;
  /* 0x0040 */ volatile unsigned long ReadIOsOutstanding;
  /* 0x0044 */ long Padding_329;
  /* 0x0048 */ union _LARGE_INTEGER LastProcessTime;
  /* 0x0050 */ unsigned __int64 QueueLatency;
  /* 0x0058 */ struct _KEVENT Event;
} SMKM_STORE_QUEUE, *PSMKM_STORE_QUEUE; /* size: 0x0070 */

typedef struct _AMD64_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _AMD64_KSPECIAL_REGISTERS SpecialRegisters;
  /* 0x00d8 */ unsigned __int64 Fill;
  /* 0x00e0 */ struct _AMD64_CONTEXT ContextFrame;
} AMD64_KPROCESSOR_STATE, *PAMD64_KPROCESSOR_STATE; /* size: 0x05b0 */

typedef struct _POWER_SEQUENCE
{
  /* 0x0000 */ unsigned long SequenceD1;
  /* 0x0004 */ unsigned long SequenceD2;
  /* 0x0008 */ unsigned long SequenceD3;
} POWER_SEQUENCE, *PPOWER_SEQUENCE; /* size: 0x000c */

typedef struct _STRING64
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_330;
  /* 0x0008 */ unsigned __int64 Buffer;
} STRING64, *PSTRING64; /* size: 0x0010 */

typedef struct _PERFINFO_SYSCALL_ENTER_DATA
{
  /* 0x0000 */ void* SysCallAddr;
} PERFINFO_SYSCALL_ENTER_DATA, *PPERFINFO_SYSCALL_ENTER_DATA; /* size: 0x0008 */

typedef struct _X86_FXSAVE_FORMAT
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned short TagWord;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned long ErrorSelector;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned long DataSelector;
  /* 0x0018 */ unsigned long MXCsr;
  /* 0x001c */ unsigned long Reserved2;
  /* 0x0020 */ unsigned char RegisterArea[128];
  /* 0x00a0 */ unsigned char Reserved3[128];
  /* 0x0120 */ unsigned char Reserved4[224];
} X86_FXSAVE_FORMAT, *PX86_FXSAVE_FORMAT; /* size: 0x0200 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY
{
  /* 0x0000 */ unsigned long EntryLength;
  /* 0x0004 */ unsigned long DependencyTypeFlags;
  /* 0x0008 */ unsigned long ProviderSpecificFlags;
  /* 0x000c */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
  /* 0x0020 */ unsigned long AncestorLevel;
  /* 0x0024 */ unsigned long HostVolumeNameOffset;
  /* 0x0028 */ unsigned long HostVolumeNameSize;
  /* 0x002c */ unsigned long DependentVolumeNameOffset;
  /* 0x0030 */ unsigned long DependentVolumeNameSize;
  /* 0x0034 */ unsigned long RelativePathOffset;
  /* 0x0038 */ unsigned long RelativePathSize;
  /* 0x003c */ unsigned long DependentDeviceNameOffset;
  /* 0x0040 */ unsigned long DependentDeviceNameSize;
} STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY, *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY; /* size: 0x0044 */

typedef struct _ETW_COUNTERS
{
  /* 0x0000 */ long GuidCount;
  /* 0x0004 */ long PoolUsage[2];
  /* 0x000c */ long SessionCount;
} ETW_COUNTERS, *PETW_COUNTERS; /* size: 0x0010 */

typedef struct _OBJECT_DIRECTORY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING TypeName;
} OBJECT_DIRECTORY_INFORMATION, *POBJECT_DIRECTORY_INFORMATION; /* size: 0x0020 */

typedef union _HV_X64_HYPERCALL_OUTPUT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short CallStatus;
      /* 0x0002 */ unsigned short Reserved1;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned int ElementsProcessed : 12; /* bit position: 0 */
        /* 0x0004 */ unsigned int Reserved2 : 20; /* bit position: 12 */
      }; /* bitfield */
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 AsUINT64;
  }; /* size: 0x0008 */
} HV_X64_HYPERCALL_OUTPUT, *PHV_X64_HYPERCALL_OUTPUT; /* size: 0x0008 */

typedef struct _PROCESSOR_PCC_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_331;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* PccRingDoorbell /* function */;
  /* 0x0028 */ struct _PCC_HEADER* PccHeader;
  /* 0x0030 */ unsigned long PccHeaderLength;
  /* 0x0034 */ long __PADDING__[1];
} PROCESSOR_PCC_INTERFACE_STANDARD, *PPROCESSOR_PCC_INTERFACE_STANDARD; /* size: 0x0038 */

typedef struct _ETW_LAST_ENABLE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER EnableFlags;
  /* 0x0008 */ unsigned short LoggerId;
  /* 0x000a */ unsigned char Level;
  struct /* bitfield */
  {
    /* 0x000b */ unsigned char Enabled : 1; /* bit position: 0 */
    /* 0x000b */ unsigned char InternalFlag : 7; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ long __PADDING__[1];
} ETW_LAST_ENABLE_INFO, *PETW_LAST_ENABLE_INFO; /* size: 0x0010 */

typedef struct _DEVICE_OBJECT_POWER_EXTENSION
{
  /* 0x0000 */ volatile unsigned long IdleCount;
  /* 0x0004 */ volatile unsigned long BusyCount;
  /* 0x0008 */ volatile unsigned long BusyReference;
  /* 0x000c */ unsigned long TotalBusyCount;
  /* 0x0010 */ unsigned long ConservationIdleTime;
  /* 0x0014 */ unsigned long PerformanceIdleTime;
  /* 0x0018 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0020 */ struct _LIST_ENTRY IdleList;
  /* 0x0030 */ enum _POP_DEVICE_IDLE_TYPE IdleType;
  /* 0x0034 */ enum _DEVICE_POWER_STATE IdleState;
  /* 0x0038 */ enum _DEVICE_POWER_STATE CurrentState;
  /* 0x003c */ long Padding_332;
  /* 0x0040 */ struct _LIST_ENTRY Volume;
  union
  {
    struct
    {
      /* 0x0050 */ unsigned long IdleTime;
      /* 0x0054 */ unsigned long NonIdleTime;
    } /* size: 0x0008 */ Disk;
  } /* size: 0x0008 */ Specific;
} DEVICE_OBJECT_POWER_EXTENSION, *PDEVICE_OBJECT_POWER_EXTENSION; /* size: 0x0058 */

typedef struct _SECTION_OBJECT_POINTERS
{
  /* 0x0000 */ void* DataSectionObject;
  /* 0x0008 */ void* SharedCacheMap;
  /* 0x0010 */ void* ImageSectionObject;
} SECTION_OBJECT_POINTERS, *PSECTION_OBJECT_POINTERS; /* size: 0x0018 */

typedef struct _RTL_STACK_DATABASE_LOCK
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ unsigned char OldIrql;
  /* 0x0009 */ char __PADDING__[7];
} RTL_STACK_DATABASE_LOCK, *PRTL_STACK_DATABASE_LOCK; /* size: 0x0010 */

typedef struct _RTL_STD_LIST_HEAD
{
  /* 0x0000 */ struct _RTL_STD_LIST_ENTRY* Next;
  /* 0x0008 */ struct _RTL_STACK_DATABASE_LOCK Lock;
} RTL_STD_LIST_HEAD, *PRTL_STD_LIST_HEAD; /* size: 0x0018 */

typedef struct _TRUSTED_DOMAIN_AUTH_INFORMATION
{
  /* 0x0000 */ unsigned long IncomingAuthInfos;
  /* 0x0004 */ long Padding_333;
  /* 0x0008 */ struct _LSA_AUTH_INFORMATION* IncomingAuthenticationInformation;
  /* 0x0010 */ struct _LSA_AUTH_INFORMATION* IncomingPreviousAuthenticationInformation;
  /* 0x0018 */ unsigned long OutgoingAuthInfos;
  /* 0x001c */ long Padding_334;
  /* 0x0020 */ struct _LSA_AUTH_INFORMATION* OutgoingAuthenticationInformation;
  /* 0x0028 */ struct _LSA_AUTH_INFORMATION* OutgoingPreviousAuthenticationInformation;
} TRUSTED_DOMAIN_AUTH_INFORMATION, *PTRUSTED_DOMAIN_AUTH_INFORMATION; /* size: 0x0030 */

typedef struct _LOAD_DLL_EVENT_DATA
{
  /* 0x0000 */ wchar_t ImageName[1];
} LOAD_DLL_EVENT_DATA, *PLOAD_DLL_EVENT_DATA; /* size: 0x0002 */

typedef struct _IOV_FORCED_PENDING_TRACE
{
  /* 0x0000 */ struct _IRP* Irp;
  /* 0x0008 */ struct _ETHREAD* Thread;
  /* 0x0010 */ void* StackTrace[62];
} IOV_FORCED_PENDING_TRACE, *PIOV_FORCED_PENDING_TRACE; /* size: 0x0200 */

typedef union _AMD_L2_CACHE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct
    {
      /* 0x0000 */ unsigned char LineSize;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char LinesPerTag : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char Associativity : 4; /* bit position: 4 */
      }; /* bitfield */
      /* 0x0002 */ unsigned short Size;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} AMD_L2_CACHE_INFO, *PAMD_L2_CACHE_INFO; /* size: 0x0004 */

typedef struct _BOOT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long FriendlyNameOffset;
  /* 0x0014 */ unsigned long BootFilePathOffset;
  /* 0x0018 */ unsigned long OsOptionsLength;
  /* 0x001c */ unsigned char OsOptions[1];
  /* 0x001d */ char __PADDING__[3];
} BOOT_ENTRY, *PBOOT_ENTRY; /* size: 0x0020 */

typedef struct _BOOT_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _BOOT_ENTRY BootEntry;
} BOOT_ENTRY_LIST, *PBOOT_ENTRY_LIST; /* size: 0x0024 */

typedef struct _MEMORY_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ unsigned long __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ unsigned long __alignment2;
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _SINGLE_LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Next;
} SINGLE_LIST_ENTRY32, *PSINGLE_LIST_ENTRY32; /* size: 0x0004 */

typedef struct _PARTITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0008 */ union _LARGE_INTEGER PartitionLength;
  /* 0x0010 */ unsigned long HiddenSectors;
  /* 0x0014 */ unsigned long PartitionNumber;
  /* 0x0018 */ unsigned char PartitionType;
  /* 0x0019 */ unsigned char BootIndicator;
  /* 0x001a */ unsigned char RecognizedPartition;
  /* 0x001b */ unsigned char RewritePartition;
  /* 0x001c */ long __PADDING__[1];
} PARTITION_INFORMATION, *PPARTITION_INFORMATION; /* size: 0x0020 */

typedef struct _DRIVE_LAYOUT_INFORMATION
{
  /* 0x0000 */ unsigned long PartitionCount;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ struct _PARTITION_INFORMATION PartitionEntry[1];
} DRIVE_LAYOUT_INFORMATION, *PDRIVE_LAYOUT_INFORMATION; /* size: 0x0028 */

typedef struct _Wx86TIB
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long InitialPc;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* DeallocationStack;
  /* 0x0014 */ unsigned long LogFlags;
  /* 0x0018 */ unsigned long InitialSp;
  /* 0x001c */ unsigned char SimulationCount;
  /* 0x001d */ unsigned char InCpuSimulation;
  /* 0x001e */ unsigned char EmulateInitialPc;
  /* 0x001f */ unsigned char Initialized;
  /* 0x0020 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0024 */ void* CpuContext;
  /* 0x0028 */ struct _CONTEXT* InitialExceptionContext;
  /* 0x002c */ void* pCallersRIID;
  /* 0x0030 */ void* pCallersUnknown;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ void* SelfRegDllName;
  /* 0x003c */ void* SelfRegDllHandle;
} Wx86TIB, *PWx86TIB; /* size: 0x0040 */

typedef struct _EXCEPTION_REGISTRATION_RECORD
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* Next;
  /* 0x0008 */ void* Handler /* function */;
} EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD; /* size: 0x0010 */

typedef struct _DMA_OPERATIONS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_335;
  /* 0x0008 */ void* PutDmaAdapter /* function */;
  /* 0x0010 */ void* AllocateCommonBuffer /* function */;
  /* 0x0018 */ void* FreeCommonBuffer /* function */;
  /* 0x0020 */ void* AllocateAdapterChannel /* function */;
  /* 0x0028 */ void* FlushAdapterBuffers /* function */;
  /* 0x0030 */ void* FreeAdapterChannel /* function */;
  /* 0x0038 */ void* FreeMapRegisters /* function */;
  /* 0x0040 */ void* MapTransfer /* function */;
  /* 0x0048 */ void* GetDmaAlignment /* function */;
  /* 0x0050 */ void* ReadDmaCounter /* function */;
  /* 0x0058 */ void* GetScatterGatherList /* function */;
  /* 0x0060 */ void* PutScatterGatherList /* function */;
  /* 0x0068 */ void* CalculateScatterGatherList /* function */;
  /* 0x0070 */ void* BuildScatterGatherList /* function */;
  /* 0x0078 */ void* BuildMdlFromScatterGatherList /* function */;
} DMA_OPERATIONS, *PDMA_OPERATIONS; /* size: 0x0080 */

typedef struct _EXCEPTION_RECORD
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0010 */ void* ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ long Padding_336;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD, *PEXCEPTION_RECORD; /* size: 0x0098 */

typedef struct _DBGKD_CREATE_FILE
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long FileAttributes;
  /* 0x0008 */ unsigned long ShareAccess;
  /* 0x000c */ unsigned long CreateDisposition;
  /* 0x0010 */ unsigned long CreateOptions;
  /* 0x0014 */ long Padding_337;
  /* 0x0018 */ unsigned __int64 Handle;
  /* 0x0020 */ unsigned __int64 Length;
} DBGKD_CREATE_FILE, *PDBGKD_CREATE_FILE; /* size: 0x0028 */

typedef struct _DBGKD_READ_FILE
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long __PADDING__[1];
} DBGKD_READ_FILE, *PDBGKD_READ_FILE; /* size: 0x0018 */

typedef struct _DBGKD_WRITE_FILE
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long __PADDING__[1];
} DBGKD_WRITE_FILE, *PDBGKD_WRITE_FILE; /* size: 0x0018 */

typedef struct _DBGKD_CLOSE_FILE
{
  /* 0x0000 */ unsigned __int64 Handle;
} DBGKD_CLOSE_FILE, *PDBGKD_CLOSE_FILE; /* size: 0x0008 */

typedef struct _DBGKD_FILE_IO
{
  /* 0x0000 */ unsigned long ApiNumber;
  /* 0x0004 */ long Status;
  union
  {
    union
    {
      /* 0x0008 */ unsigned __int64 ReserveSpace[7];
      /* 0x0008 */ struct _DBGKD_CREATE_FILE CreateFile;
      /* 0x0008 */ struct _DBGKD_READ_FILE ReadFile;
      /* 0x0008 */ struct _DBGKD_WRITE_FILE WriteFile;
      /* 0x0008 */ struct _DBGKD_CLOSE_FILE CloseFile;
    }; /* size: 0x0038 */
  } /* size: 0x0038 */ u;
} DBGKD_FILE_IO, *PDBGKD_FILE_IO; /* size: 0x0040 */

typedef struct _CM_PERF_COUNTERS
{
  /* 0x0000 */ unsigned __int64 OpenedKeys;
  /* 0x0008 */ unsigned __int64 DelayCloseKCBs;
  /* 0x0010 */ unsigned __int64 PrivateAllocPages;
  /* 0x0018 */ unsigned __int64 PrivateAllocFree;
  /* 0x0020 */ unsigned __int64 PrivateAllocUsed;
  /* 0x0028 */ unsigned __int64 LookupCacheHit;
  /* 0x0030 */ unsigned __int64 LookupCacheMissFound;
  /* 0x0038 */ unsigned __int64 LookupCacheMissNotFound;
  /* 0x0040 */ unsigned __int64 ViewMap;
  /* 0x0048 */ unsigned __int64 ViewUnMap;
  /* 0x0050 */ unsigned __int64 HiveShrink;
} CM_PERF_COUNTERS, *PCM_PERF_COUNTERS; /* size: 0x0058 */

typedef struct _PCI_AGP_ISOCH_STATUS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long ErrorCode : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long Rsvd1 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Isoch_L : 3; /* bit position: 3 */
    /* 0x0000 */ unsigned long Isoch_Y : 2; /* bit position: 6 */
    /* 0x0000 */ unsigned long Isoch_N : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long Rsvd2 : 16; /* bit position: 16 */
  }; /* bitfield */
} PCI_AGP_ISOCH_STATUS, *PPCI_AGP_ISOCH_STATUS; /* size: 0x0004 */

typedef struct _SE_ACCESS_REPLY
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ResultListCount;
  /* 0x0008 */ unsigned long* GrantedAccess;
  /* 0x0010 */ long* AccessStatus;
  /* 0x0018 */ struct _ACCESS_REASONS* AccessReason;
  /* 0x0020 */ struct _PRIVILEGE_SET** Privileges;
} SE_ACCESS_REPLY, *PSE_ACCESS_REPLY; /* size: 0x0028 */

typedef struct _PROCESSOR_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char DynamicThrottle;
  /* 0x0005 */ unsigned char Spare[3];
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DisableCStates : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ unsigned long PolicyCount;
  /* 0x0010 */ struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY; /* size: 0x004c */

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Linkage;
  /* 0x0010 */ unsigned __int64 Signature;
} RTL_DYNAMIC_HASH_TABLE_ENTRY, *PRTL_DYNAMIC_HASH_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _WMI_POWER_RECORD
{
  /* 0x0000 */ unsigned char SystemS1;
  /* 0x0001 */ unsigned char SystemS2;
  /* 0x0002 */ unsigned char SystemS3;
  /* 0x0003 */ unsigned char SystemS4;
  /* 0x0004 */ unsigned char SystemS5;
  /* 0x0005 */ char Pad1;
  /* 0x0006 */ char Pad2;
  /* 0x0007 */ char Pad3;
} WMI_POWER_RECORD, *PWMI_POWER_RECORD; /* size: 0x0008 */

typedef struct _TXFS_CREATE_MINIVERSION_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long BaseVersion;
  /* 0x0008 */ unsigned short MiniVersion;
  /* 0x000a */ char __PADDING__[2];
} TXFS_CREATE_MINIVERSION_INFO, *PTXFS_CREATE_MINIVERSION_INFO; /* size: 0x000c */

typedef struct _KI_UMS_STAGING_AREA
{
  /* 0x0000 */ struct _XSAVE_FORMAT FltSave;
  /* 0x0200 */ unsigned char StackBuffer[2783];
  /* 0x0cdf */ char __PADDING__[1];
} KI_UMS_STAGING_AREA, *PKI_UMS_STAGING_AREA; /* size: 0x0ce0 */

typedef struct _LUNICODE_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned short* Buffer;
} LUNICODE_STRING, *PLUNICODE_STRING; /* size: 0x0018 */

typedef struct _ETW_PERF_COUNTERS
{
  /* 0x0000 */ long TotalActiveSessions;
  /* 0x0004 */ long TotalBufferMemoryNonPagedPool;
  /* 0x0008 */ long TotalBufferMemoryPagedPool;
  /* 0x000c */ long TotalGuidsEnabled;
  /* 0x0010 */ long TotalGuidsNotEnabled;
  /* 0x0014 */ long TotalGuidsPreEnabled;
} ETW_PERF_COUNTERS, *PETW_PERF_COUNTERS; /* size: 0x0018 */

typedef struct _PRIV_CHECK_CTX
{
  /* 0x0000 */ struct _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;
  /* 0x0020 */ struct _PRIVILEGE_SET RequiredPrivileges;
  /* 0x0034 */ char PreviousMode;
  /* 0x0035 */ unsigned char AccessGranted;
  /* 0x0036 */ char __PADDING__[2];
} PRIV_CHECK_CTX, *PPRIV_CHECK_CTX; /* size: 0x0038 */

typedef struct _CM_HARDWARE_PROFILE
{
  /* 0x0000 */ unsigned long NameLength;
  /* 0x0004 */ long Padding_338;
  /* 0x0008 */ unsigned short* FriendlyName;
  /* 0x0010 */ unsigned long PreferenceOrder;
  /* 0x0014 */ unsigned long Id;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} CM_HARDWARE_PROFILE, *PCM_HARDWARE_PROFILE; /* size: 0x0020 */

typedef struct _OBJECT_ATTRIBUTES32
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long RootDirectory;
  /* 0x0008 */ unsigned long ObjectName;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long SecurityDescriptor;
  /* 0x0014 */ unsigned long SecurityQualityOfService;
} OBJECT_ATTRIBUTES32, *POBJECT_ATTRIBUTES32; /* size: 0x0018 */

typedef struct _KRESOURCEMANAGER_COMPLETION_BINDING
{
  /* 0x0000 */ struct _LIST_ENTRY NotificationListHead;
  /* 0x0010 */ void* Port;
  /* 0x0018 */ unsigned __int64 Key;
  /* 0x0020 */ struct _EPROCESS* BindingProcess;
} KRESOURCEMANAGER_COMPLETION_BINDING, *PKRESOURCEMANAGER_COMPLETION_BINDING; /* size: 0x0028 */

typedef struct _KRESOURCEMANAGER
{
  /* 0x0000 */ struct _KEVENT NotificationAvailable;
  /* 0x0018 */ unsigned long cookie;
  /* 0x001c */ enum _KRESOURCEMANAGER_STATE State;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long Padding_339;
  /* 0x0028 */ struct _KMUTANT Mutex;
  /* 0x0060 */ struct _KTMOBJECT_NAMESPACE_LINK NamespaceLink;
  /* 0x0088 */ struct _GUID RmId;
  /* 0x0098 */ struct _KQUEUE NotificationQueue;
  /* 0x00d8 */ struct _KMUTANT NotificationMutex;
  /* 0x0110 */ struct _LIST_ENTRY EnlistmentHead;
  /* 0x0120 */ unsigned long EnlistmentCount;
  /* 0x0124 */ long Padding_340;
  /* 0x0128 */ void* NotificationRoutine /* function */;
  /* 0x0130 */ void* Key;
  /* 0x0138 */ struct _LIST_ENTRY ProtocolListHead;
  /* 0x0148 */ struct _LIST_ENTRY PendingPropReqListHead;
  /* 0x0158 */ struct _LIST_ENTRY CRMListEntry;
  /* 0x0168 */ struct _KTM* Tm;
  /* 0x0170 */ struct _UNICODE_STRING Description;
  /* 0x0180 */ struct _KTMOBJECT_NAMESPACE Enlistments;
  /* 0x0228 */ struct _KRESOURCEMANAGER_COMPLETION_BINDING CompletionBinding;
} KRESOURCEMANAGER, *PKRESOURCEMANAGER; /* size: 0x0250 */

typedef struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0008 */ struct _KINTERRUPT** InterruptObject;
  /* 0x0010 */ void* ServiceRoutine /* function */;
  /* 0x0018 */ void* ServiceContext;
  /* 0x0020 */ unsigned __int64* SpinLock;
  /* 0x0028 */ unsigned char SynchronizeIrql;
  /* 0x0029 */ unsigned char FloatingSave;
  /* 0x002a */ char __PADDING__[6];
} IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS, *PIO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS; /* size: 0x0030 */

typedef struct _SYSTEM_ALARM_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE; /* size: 0x0030 */

struct GUIDREGINFO
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long InstanceCount;
  /* 0x0014 */ unsigned long Flags;
}; /* size: 0x0018 */

typedef struct _TRANSACTION_NOTIFICATION
{
  /* 0x0000 */ void* TransactionKey;
  /* 0x0008 */ unsigned long TransactionNotification;
  /* 0x000c */ long Padding_341;
  /* 0x0010 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0018 */ unsigned long ArgumentLength;
  /* 0x001c */ long __PADDING__[1];
} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION; /* size: 0x0020 */

typedef struct _KTMNOTIFICATION_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _KENLISTMENT* EnlistmentRef;
  /* 0x0018 */ struct _TRANSACTION_NOTIFICATION Notification;
} KTMNOTIFICATION_PACKET, *PKTMNOTIFICATION_PACKET; /* size: 0x0038 */

typedef struct _PCW_CALLBACK_TABLE
{
  /* 0x0000 */ void* Register /* function */;
  /* 0x0008 */ void* Unregister /* function */;
  /* 0x0010 */ void* CreateInstance /* function */;
  /* 0x0018 */ void* CloseInstance /* function */;
  /* 0x0020 */ void* AddInstance /* function */;
} PCW_CALLBACK_TABLE, *PPCW_CALLBACK_TABLE; /* size: 0x0028 */

typedef struct _PER_FILEOBJECT_CTXCTRL
{
  /* 0x0000 */ struct _FAST_MUTEX FastMutex;
  /* 0x0038 */ struct _LIST_ENTRY FilterContexts;
} PER_FILEOBJECT_CTXCTRL, *PPER_FILEOBJECT_CTXCTRL; /* size: 0x0048 */

typedef struct _HEAP_EVENT_RANGE
{
  /* 0x0000 */ void* HeapHandle;
  /* 0x0008 */ void* Address;
  /* 0x0010 */ unsigned __int64 Size;
} HEAP_EVENT_RANGE, *PHEAP_EVENT_RANGE; /* size: 0x0018 */

typedef union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ReceiverError : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 5; /* bit position: 1 */
      /* 0x0000 */ unsigned long BadTLP : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long BadDLLP : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long ReplayNumRollover : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long Reserved2 : 3; /* bit position: 9 */
      /* 0x0000 */ unsigned long ReplayTimerTimeout : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long AdvisoryNonFatalError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved3 : 18; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_CORRECTABLE_ERROR_STATUS, *PPCI_EXPRESS_CORRECTABLE_ERROR_STATUS; /* size: 0x0004 */

typedef struct _IOV_REQUEST_PACKET
{
  /* 0x0000 */ struct _IRP* TrackedIrp;
  /* 0x0008 */ unsigned __int64 HeaderLock;
  /* 0x0010 */ unsigned char LockIrql;
  /* 0x0011 */ char Padding_342[3];
  /* 0x0014 */ volatile long ReferenceCount;
  /* 0x0018 */ long PointerCount;
  /* 0x001c */ unsigned long HeaderFlags;
  /* 0x0020 */ struct _LIST_ENTRY HashLink;
  /* 0x0030 */ void* NotificationCallback /* function */;
  /* 0x0038 */ unsigned long Flags;
  /* 0x003c */ unsigned char DepartureIrql;
  /* 0x003d */ unsigned char ArrivalIrql;
  /* 0x003e */ char Padding_343[2];
  /* 0x0040 */ struct _LIST_ENTRY SessionHead;
  /* 0x0050 */ char StackCount;
  /* 0x0051 */ char Padding_344[3];
  /* 0x0054 */ unsigned long QuotaCharge;
  /* 0x0058 */ struct _EPROCESS* QuotaProcess;
  /* 0x0060 */ void* RealIrpCompletionRoutine /* function */;
  /* 0x0068 */ unsigned char RealIrpControl;
  /* 0x0069 */ char Padding_345[7];
  /* 0x0070 */ void* RealIrpContext;
  /* 0x0078 */ void* AllocatorStack[8];
  /* 0x00b8 */ unsigned char TopStackLocation;
  /* 0x00b9 */ char PriorityBoost;
  /* 0x00ba */ unsigned char LastLocation;
  /* 0x00bb */ char Padding_346;
  /* 0x00bc */ unsigned long RefTrackingCount;
  /* 0x00c0 */ unsigned char* SystemDestVA;
  /* 0x00c8 */ struct _IO_STACK_LOCATION* ForcePendingLocation;
  /* 0x00d0 */ unsigned long Settings;
  /* 0x00d4 */ long Padding_347;
  /* 0x00d8 */ struct _IOV_SESSION_DATA* pIovSessionData;
  /* 0x00e0 */ struct _VF_WATCHDOG_IRP* WatchdogData;
} IOV_REQUEST_PACKET, *PIOV_REQUEST_PACKET; /* size: 0x00e8 */

typedef struct _OB_POST_CREATE_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long GrantedAccess;
} OB_POST_CREATE_HANDLE_INFORMATION, *POB_POST_CREATE_HANDLE_INFORMATION; /* size: 0x0004 */

typedef struct _IOV_DATABASE_HEADER
{
  /* 0x0000 */ struct _IRP* TrackedIrp;
  /* 0x0008 */ unsigned __int64 HeaderLock;
  /* 0x0010 */ unsigned char LockIrql;
  /* 0x0011 */ char Padding_348[3];
  /* 0x0014 */ volatile long ReferenceCount;
  /* 0x0018 */ long PointerCount;
  /* 0x001c */ unsigned long HeaderFlags;
  /* 0x0020 */ struct _LIST_ENTRY HashLink;
  /* 0x0030 */ void* NotificationCallback /* function */;
} IOV_DATABASE_HEADER, *PIOV_DATABASE_HEADER; /* size: 0x0038 */

typedef struct _JOURNAL_RENAME_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_349;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING KeyKeyName;
} JOURNAL_RENAME_KEY_INFORMATION, *PJOURNAL_RENAME_KEY_INFORMATION; /* size: 0x0038 */

typedef struct _IMAGE_DATA_DIRECTORY
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY; /* size: 0x0008 */

typedef struct _IMAGE_OPTIONAL_HEADER64
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned __int64 ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned __int64 SizeOfStackReserve;
  /* 0x0050 */ unsigned __int64 SizeOfStackCommit;
  /* 0x0058 */ unsigned __int64 SizeOfHeapReserve;
  /* 0x0060 */ unsigned __int64 SizeOfHeapCommit;
  /* 0x0068 */ unsigned long LoaderFlags;
  /* 0x006c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0070 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64; /* size: 0x00f0 */

typedef struct _VF_WATCHDOG_IRP
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _IRP* Irp;
  /* 0x0018 */ unsigned long DueTickCount;
  /* 0x001c */ volatile unsigned char Inserted;
  /* 0x001d */ char TrackedStackLocation;
  /* 0x001e */ unsigned short CancelTimeoutTicks;
} VF_WATCHDOG_IRP, *PVF_WATCHDOG_IRP; /* size: 0x0020 */

typedef struct _DBGKM_CREATE_THREAD64
{
  /* 0x0000 */ unsigned long SubSystemKey;
  /* 0x0004 */ long Padding_350;
  /* 0x0008 */ unsigned __int64 StartAddress;
} DBGKM_CREATE_THREAD64, *PDBGKM_CREATE_THREAD64; /* size: 0x0010 */

typedef struct _ARM_DBGKD_CONTROL_SET
{
  /* 0x0000 */ unsigned long Continue;
  /* 0x0004 */ unsigned long CurrentSymbolStart;
  /* 0x0008 */ unsigned long CurrentSymbolEnd;
} ARM_DBGKD_CONTROL_SET, *PARM_DBGKD_CONTROL_SET; /* size: 0x000c */

typedef struct _UNWIND_INFO
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Version : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Flags : 5; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0001 */ unsigned char SizeOfProlog;
  /* 0x0002 */ unsigned char CountOfCodes;
  struct /* bitfield */
  {
    /* 0x0003 */ unsigned char FrameRegister : 4; /* bit position: 0 */
    /* 0x0003 */ unsigned char FrameOffset : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ union _UNWIND_CODE UnwindCode[1];
} UNWIND_INFO, *PUNWIND_INFO; /* size: 0x0006 */

typedef struct _DBGKM_EXIT_THREAD
{
  /* 0x0000 */ long ExitStatus;
} DBGKM_EXIT_THREAD, *PDBGKM_EXIT_THREAD; /* size: 0x0004 */

typedef struct _COVERAGE_MODULE_INFO
{
  /* 0x0000 */ unsigned long ModuleInfoSize;
  /* 0x0004 */ unsigned long IsBinaryLoaded;
  /* 0x0008 */ struct _UNICODE_STRING ModulePathName;
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned char CoverageSection[1];
  /* 0x001d */ char __PADDING__[3];
} COVERAGE_MODULE_INFO, *PCOVERAGE_MODULE_INFO; /* size: 0x0020 */

typedef struct _PERFINFO_PO_POSTSLEEP
{
  /* 0x0000 */ union _LARGE_INTEGER PerformanceCounter;
} PERFINFO_PO_POSTSLEEP, *PPERFINFO_PO_POSTSLEEP; /* size: 0x0008 */

typedef struct _FILE_FS_VOLUME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeCreationTime;
  /* 0x0008 */ unsigned long VolumeSerialNumber;
  /* 0x000c */ unsigned long VolumeLabelLength;
  /* 0x0010 */ unsigned char SupportsObjects;
  /* 0x0011 */ char Padding_351;
  /* 0x0012 */ wchar_t VolumeLabel[1];
  /* 0x0014 */ long __PADDING__[1];
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _TRANSLATOR_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_352;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* TranslateResources /* function */;
  /* 0x0028 */ void* TranslateResourceRequirements /* function */;
} TRANSLATOR_INTERFACE, *PTRANSLATOR_INTERFACE; /* size: 0x0030 */

typedef struct _EFI_DRIVER_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long FriendlyNameOffset;
  /* 0x0010 */ unsigned long DriverFilePathOffset;
} EFI_DRIVER_ENTRY, *PEFI_DRIVER_ENTRY; /* size: 0x0014 */

typedef struct _EFI_DRIVER_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _EFI_DRIVER_ENTRY DriverEntry;
} EFI_DRIVER_ENTRY_LIST, *PEFI_DRIVER_ENTRY_LIST; /* size: 0x0018 */

typedef struct _SCOPE_TABLE
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE, *PSCOPE_TABLE; /* size: 0x0014 */

typedef struct _POWER_DISPLAY_BRIGHTNESS_VALUE
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long Value;
} POWER_DISPLAY_BRIGHTNESS_VALUE, *PPOWER_DISPLAY_BRIGHTNESS_VALUE; /* size: 0x0014 */

typedef struct _HV_HYPERVISOR_VERSION_INFO
{
  /* 0x0000 */ unsigned int BuildNumber;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned int MinorVersion : 16; /* bit position: 0 */
    /* 0x0004 */ unsigned int MajorVersion : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0008 */ unsigned int ServicePack;
  struct /* bitfield */
  {
    /* 0x000c */ unsigned int ServiceNumber : 24; /* bit position: 0 */
    /* 0x000c */ unsigned int ServiceBranch : 8; /* bit position: 24 */
  }; /* bitfield */
} HV_HYPERVISOR_VERSION_INFO, *PHV_HYPERVISOR_VERSION_INFO; /* size: 0x0010 */

typedef union _HV_CPUID_RESULT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned int Eax;
      /* 0x0004 */ unsigned int Ebx;
      /* 0x0008 */ unsigned int Ecx;
      /* 0x000c */ unsigned int Edx;
    }; /* size: 0x0010 */
    /* 0x0000 */ unsigned int AsUINT32[4];
    struct
    {
      /* 0x0000 */ unsigned int ReservedEax;
      /* 0x0004 */ unsigned int ReservedEbx;
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned int ReservedEcx : 31; /* bit position: 0 */
        /* 0x0008 */ unsigned int HypervisorPresent : 1; /* bit position: 31 */
      }; /* bitfield */
      /* 0x000c */ unsigned int ReservedEdx;
    } /* size: 0x0010 */ VersionAndFeatures;
    struct
    {
      /* 0x0000 */ unsigned int MaxFunction;
      /* 0x0004 */ unsigned char VendorName[12];
    } /* size: 0x0010 */ HvVendorAndMaxFunction;
    struct
    {
      /* 0x0000 */ unsigned int Interface;
      /* 0x0004 */ unsigned int ReservedEbx;
      /* 0x0008 */ unsigned int ReservedEcx;
      /* 0x000c */ unsigned int ReservedEdx;
    } /* size: 0x0010 */ HvInterface;
    /* 0x0000 */ struct _HV_HYPERVISOR_VERSION_INFO MsHvVersion;
    struct
    {
      /* 0x0000 */ union _HV_PARTITION_PRIVILEGE_MASK PartitionPrivileges;
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned int MaxSupportedCState : 4; /* bit position: 0 */
        /* 0x0008 */ unsigned int Reserved : 28; /* bit position: 4 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x000c */ unsigned int MwaitAvailable : 1; /* bit position: 0 */
        /* 0x000c */ unsigned int GuestDebuggingAvailable : 1; /* bit position: 1 */
        /* 0x000c */ unsigned int PerformanceMonitorsAvailable : 1; /* bit position: 2 */
        /* 0x000c */ unsigned int CpuDynamicPartitioningAvailable : 1; /* bit position: 3 */
        /* 0x000c */ unsigned int XmmRegistersForFastHypercallAvailable : 1; /* bit position: 4 */
        /* 0x000c */ unsigned int GuestIdleAvailable : 1; /* bit position: 5 */
        /* 0x000c */ unsigned int Reserved1 : 26; /* bit position: 6 */
      }; /* bitfield */
    } /* size: 0x0010 */ MsHvFeatures;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned int UseHypercallForAddressSpaceSwitch : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned int UseHypercallForLocalFlush : 1; /* bit position: 1 */
        /* 0x0000 */ unsigned int UseHypercallForRemoteFlush : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned int UseApicMsrs : 1; /* bit position: 3 */
        /* 0x0000 */ unsigned int UseMsrForReset : 1; /* bit position: 4 */
        /* 0x0000 */ unsigned int UseRelaxedTiming : 1; /* bit position: 5 */
        /* 0x0000 */ unsigned int Reserved : 26; /* bit position: 6 */
      }; /* bitfield */
      /* 0x0004 */ unsigned int LongSpinWaitCount;
      /* 0x0008 */ unsigned int ReservedEcx;
      /* 0x000c */ unsigned int ReservedEdx;
    } /* size: 0x0010 */ MsHvEnlightenmentInformation;
    struct
    {
      /* 0x0000 */ unsigned int MaxVirtualProcessorCount;
      /* 0x0004 */ unsigned int MaxLogicalProcessorCount;
      /* 0x0008 */ unsigned int ReservedEcx;
      /* 0x000c */ unsigned int ReservedEdx;
    } /* size: 0x0010 */ MsHvImplementationLimits;
  }; /* size: 0x0010 */
} HV_CPUID_RESULT, *PHV_CPUID_RESULT; /* size: 0x0010 */

typedef struct _PS_INITIAL_TEB
{
  struct
  {
    /* 0x0000 */ void* OldStackBase;
    /* 0x0008 */ void* OldStackLimit;
  } /* size: 0x0010 */ OldInitialTeb;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* StackAllocationBase;
  /* 0x0028 */ void* Wow64StackBase;
  /* 0x0030 */ void* Wow64StackLimit;
  /* 0x0038 */ void* Wow64StackAllocationBase;
} PS_INITIAL_TEB, *PPS_INITIAL_TEB; /* size: 0x0040 */

typedef struct _DBGKD_RESTORE_BREAKPOINT
{
  /* 0x0000 */ unsigned long BreakPointHandle;
} DBGKD_RESTORE_BREAKPOINT, *PDBGKD_RESTORE_BREAKPOINT; /* size: 0x0004 */

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ unsigned short DataLength;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[2];
} SL_KMEM_CACHE_VALUE_DESCRIPTOR, *PSL_KMEM_CACHE_VALUE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _RUNTIME_FUNCTION
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long UnwindData;
} RUNTIME_FUNCTION, *PRUNTIME_FUNCTION; /* size: 0x000c */

typedef struct _EMP_ENTRY_DB_RECORD
{
  /* 0x0000 */ struct _GUID EntryId;
  /* 0x0010 */ long ProviderReferenceCount;
  /* 0x0014 */ long Padding_353;
  /* 0x0018 */ struct _SINGLE_LIST_ENTRY List;
  /* 0x0020 */ struct _LIST_ENTRY* EvalEntry;
  /* 0x0028 */ struct _LIST_ENTRY EntryBlockListHead;
  /* 0x0038 */ struct _LIST_ENTRY EntryLazyCallbackListHead;
  /* 0x0048 */ struct _SINGLE_LIST_ENTRY EntryDependencyListHead;
} EMP_ENTRY_DB_RECORD, *PEMP_ENTRY_DB_RECORD; /* size: 0x0050 */

typedef struct _FILETIME
{
  /* 0x0000 */ unsigned long dwLowDateTime;
  /* 0x0004 */ unsigned long dwHighDateTime;
} FILETIME, *PFILETIME; /* size: 0x0008 */

typedef struct _JOURNAL_CLIENT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTimeStamp;
  /* 0x0010 */ unsigned __int64 RecordsToProcess;
  /* 0x0018 */ unsigned long RelativeFillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_CLIENT_INFORMATION, *PJOURNAL_CLIENT_INFORMATION; /* size: 0x0020 */

typedef struct _LSA_REFERENCED_DOMAIN_LIST
{
  /* 0x0000 */ unsigned long Entries;
  /* 0x0004 */ long Padding_354;
  /* 0x0008 */ struct _LSA_TRUST_INFORMATION* Domains;
} LSA_REFERENCED_DOMAIN_LIST, *PLSA_REFERENCED_DOMAIN_LIST; /* size: 0x0010 */

typedef struct _PERFINFO_TRACE_HEADER
{
  union
  {
    /* 0x0000 */ unsigned long Marker;
    struct
    {
      /* 0x0000 */ unsigned short Version;
      /* 0x0002 */ unsigned char HeaderType;
      /* 0x0003 */ unsigned char Flags;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long Header;
    /* 0x0004 */ struct _WMI_TRACE_PACKET Packet;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0008 */ unsigned __int64 TS;
    /* 0x0008 */ union _LARGE_INTEGER SystemTime;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned char Data[1];
  /* 0x0011 */ char __PADDING__[7];
} PERFINFO_TRACE_HEADER, *PPERFINFO_TRACE_HEADER; /* size: 0x0018 */

typedef struct _PERFINFO_PO_CALIBRATED_PERFCOUNTER
{
  /* 0x0000 */ union _LARGE_INTEGER PerformanceCounter;
} PERFINFO_PO_CALIBRATED_PERFCOUNTER, *PPERFINFO_PO_CALIBRATED_PERFCOUNTER; /* size: 0x0008 */

typedef struct _MTRR_DEFAULT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Type : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Reserved0 : 2; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 FixedEnabled : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned __int64 MtrrEnabled : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned __int64 Reserved1 : 52; /* bit position: 12 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MTRR_DEFAULT, *PMTRR_DEFAULT; /* size: 0x0008 */

typedef struct _PROCESSOR_LOCKSTEP
{
  /* 0x0000 */ unsigned long Processor;
  /* 0x0004 */ long Limit;
  /* 0x0008 */ volatile long TargetCount;
  /* 0x000c */ long Padding_355;
  /* 0x0010 */ volatile long* TargetPhase;
} PROCESSOR_LOCKSTEP, *PPROCESSOR_LOCKSTEP; /* size: 0x0018 */

typedef struct _NEW_RANGE
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ long Padding_356;
  /* 0x0008 */ unsigned __int64 Base;
  /* 0x0010 */ unsigned __int64 Limit;
  /* 0x0018 */ unsigned char Type;
  /* 0x0019 */ char Padding_357[7];
  /* 0x0020 */ struct _MTRR_RANGE* MTRR;
  /* 0x0028 */ unsigned __int64* FixedMTRR;
  /* 0x0030 */ struct _MTRR_DEFAULT Default;
  /* 0x0038 */ unsigned char NoRange;
  /* 0x0039 */ char Padding_358[7];
  /* 0x0040 */ struct _ONE_RANGE* Ranges;
  /* 0x0048 */ unsigned long NoMTRR;
  /* 0x004c */ long Padding_359;
  /* 0x0050 */ struct _PROCESSOR_LOCKSTEP Synchronize;
  /* 0x0068 */ unsigned long Processor;
  /* 0x006c */ long __PADDING__[1];
} NEW_RANGE, *PNEW_RANGE; /* size: 0x0070 */

struct tagShimCacheEntryData
{
  /* 0x0000 */ unsigned long probed;
  /* 0x0004 */ unsigned long probeResult;
  /* 0x0008 */ unsigned long CustomDataSize;
  /* 0x000c */ long Padding_360;
  /* 0x0010 */ unsigned char* CustomData;
}; /* size: 0x0018 */

struct tagSHIMCACHEENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _UNICODE_STRING FileName;
  /* 0x0020 */ __int64 FileTime;
  /* 0x0028 */ struct tagShimCacheEntryData data;
}; /* size: 0x0040 */

typedef struct _TRANSACTION_LIST_ENTRY
{
  /* 0x0000 */ struct _GUID UOW;
} TRANSACTION_LIST_ENTRY, *PTRANSACTION_LIST_ENTRY; /* size: 0x0010 */

struct _TP_POOL;

typedef union _HV_X64_MSR_GUEST_OS_ID_CONTENTS
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 BuildNumber : 16; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ServiceVersion : 8; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 MinorVersion : 8; /* bit position: 24 */
      /* 0x0000 */ unsigned __int64 MajorVersion : 8; /* bit position: 32 */
      /* 0x0000 */ unsigned __int64 OsId : 8; /* bit position: 40 */
      /* 0x0000 */ unsigned __int64 VendorId : 16; /* bit position: 48 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} HV_X64_MSR_GUEST_OS_ID_CONTENTS, *PHV_X64_MSR_GUEST_OS_ID_CONTENTS; /* size: 0x0008 */

typedef struct _ENCRYPTION_BUFFER
{
  /* 0x0000 */ unsigned long EncryptionOperation;
  /* 0x0004 */ unsigned char Private[1];
  /* 0x0005 */ char __PADDING__[3];
} ENCRYPTION_BUFFER, *PENCRYPTION_BUFFER; /* size: 0x0008 */

typedef struct _REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ unsigned short ReparseDataLength;
  /* 0x0002 */ unsigned short UnparsedNameLength;
} REPARSE_POINT_INFORMATION, *PREPARSE_POINT_INFORMATION; /* size: 0x0004 */

typedef struct _HV_HIVE_CELL_PAIR
{
  /* 0x0000 */ struct _HHIVE* Hive;
  /* 0x0008 */ unsigned long Cell;
  /* 0x000c */ long __PADDING__[1];
} HV_HIVE_CELL_PAIR, *PHV_HIVE_CELL_PAIR; /* size: 0x0010 */

typedef struct _SMBIOS_TABLE_HEADER
{
  /* 0x0000 */ unsigned char Signature[4];
  /* 0x0004 */ unsigned char Checksum;
  /* 0x0005 */ unsigned char Length;
  /* 0x0006 */ unsigned char MajorVersion;
  /* 0x0007 */ unsigned char MinorVersion;
  /* 0x0008 */ unsigned short MaximumStructureSize;
  /* 0x000a */ unsigned char EntryPointRevision;
  /* 0x000b */ unsigned char Reserved[5];
  /* 0x0010 */ unsigned char Signature2[5];
  /* 0x0015 */ unsigned char IntermediateChecksum;
  /* 0x0016 */ unsigned short StructureTableLength;
  /* 0x0018 */ unsigned long StructureTableAddress;
  /* 0x001c */ unsigned short NumberStructures;
  /* 0x001e */ unsigned char Revision;
} SMBIOS_TABLE_HEADER, *PSMBIOS_TABLE_HEADER; /* size: 0x001f */

typedef struct _SYSTEM_ALARM_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE; /* size: 0x000c */

typedef struct _HEADLESS_LOADER_BLOCK
{
  /* 0x0000 */ unsigned char UsedBiosSettings;
  /* 0x0001 */ unsigned char DataBits;
  /* 0x0002 */ unsigned char StopBits;
  /* 0x0003 */ unsigned char Parity;
  /* 0x0004 */ unsigned long BaudRate;
  /* 0x0008 */ unsigned long PortNumber;
  /* 0x000c */ long Padding_361;
  /* 0x0010 */ unsigned char* PortAddress;
  /* 0x0018 */ unsigned short PciDeviceId;
  /* 0x001a */ unsigned short PciVendorId;
  /* 0x001c */ unsigned char PciBusNumber;
  /* 0x001d */ char Padding_362;
  /* 0x001e */ unsigned short PciBusSegment;
  /* 0x0020 */ unsigned char PciSlotNumber;
  /* 0x0021 */ unsigned char PciFunctionNumber;
  /* 0x0022 */ char Padding_363[2];
  /* 0x0024 */ unsigned long PciFlags;
  /* 0x0028 */ struct _GUID SystemGUID;
  /* 0x0038 */ unsigned char IsMMIODevice;
  /* 0x0039 */ unsigned char TerminalType;
  /* 0x003a */ char __PADDING__[6];
} HEADLESS_LOADER_BLOCK, *PHEADLESS_LOADER_BLOCK; /* size: 0x0040 */

typedef struct _DBGKD_READ_WRITE_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0004 */ unsigned long DataValueLow;
  /* 0x0008 */ unsigned long DataValueHigh;
} DBGKD_READ_WRITE_MSR, *PDBGKD_READ_WRITE_MSR; /* size: 0x000c */

typedef struct _PCIX_BRIDGE_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short Bus64Bit : 1; /* bit position: 0 */
        /* 0x0002 */ unsigned short Bus133MHzCapable : 1; /* bit position: 1 */
        /* 0x0002 */ unsigned short SplitCompletionDiscarded : 1; /* bit position: 2 */
        /* 0x0002 */ unsigned short UnexpectedSplitCompletion : 1; /* bit position: 3 */
        /* 0x0002 */ unsigned short SplitCompletionOverrun : 1; /* bit position: 4 */
        /* 0x0002 */ unsigned short SplitRequestDelayed : 1; /* bit position: 5 */
        /* 0x0002 */ unsigned short BusModeFrequency : 4; /* bit position: 6 */
        /* 0x0002 */ unsigned short Rsvd : 2; /* bit position: 10 */
        /* 0x0002 */ unsigned short Version : 2; /* bit position: 12 */
        /* 0x0002 */ unsigned short Bus266MHzCapable : 1; /* bit position: 14 */
        /* 0x0002 */ unsigned short Bus533MHzCapable : 1; /* bit position: 15 */
      }; /* bitfield */
      /* 0x0002 */ unsigned short AsUSHORT;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ SecondaryStatus;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long FunctionNumber : 3; /* bit position: 0 */
        /* 0x0004 */ unsigned long DeviceNumber : 5; /* bit position: 3 */
        /* 0x0004 */ unsigned long BusNumber : 8; /* bit position: 8 */
        /* 0x0004 */ unsigned long Device64Bit : 1; /* bit position: 16 */
        /* 0x0004 */ unsigned long Device133MHzCapable : 1; /* bit position: 17 */
        /* 0x0004 */ unsigned long SplitCompletionDiscarded : 1; /* bit position: 18 */
        /* 0x0004 */ unsigned long UnexpectedSplitCompletion : 1; /* bit position: 19 */
        /* 0x0004 */ unsigned long SplitCompletionOverrun : 1; /* bit position: 20 */
        /* 0x0004 */ unsigned long SplitRequestDelayed : 1; /* bit position: 21 */
        /* 0x0004 */ unsigned long Rsvd : 7; /* bit position: 22 */
        /* 0x0004 */ unsigned long DIMCapable : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long Device266MHzCapable : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Device533MHzCapable : 1; /* bit position: 31 */
      }; /* bitfield */
      /* 0x0004 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ BridgeStatus;
  /* 0x0008 */ unsigned short UpstreamSplitTransactionCapacity;
  /* 0x000a */ unsigned short UpstreamSplitTransactionLimit;
  /* 0x000c */ unsigned short DownstreamSplitTransactionCapacity;
  /* 0x000e */ unsigned short DownstreamSplitTransactionLimit;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0010 */ unsigned long SelectSecondaryRegisters : 1; /* bit position: 0 */
        /* 0x0010 */ unsigned long ErrorPresentInOtherBank : 1; /* bit position: 1 */
        /* 0x0010 */ unsigned long AdditionalCorrectableError : 1; /* bit position: 2 */
        /* 0x0010 */ unsigned long AdditionalUncorrectableError : 1; /* bit position: 3 */
        /* 0x0010 */ unsigned long ErrorPhase : 3; /* bit position: 4 */
        /* 0x0010 */ unsigned long ErrorCorrected : 1; /* bit position: 7 */
        /* 0x0010 */ unsigned long Syndrome : 8; /* bit position: 8 */
        /* 0x0010 */ unsigned long ErrorFirstCommand : 4; /* bit position: 16 */
        /* 0x0010 */ unsigned long ErrorSecondCommand : 4; /* bit position: 20 */
        /* 0x0010 */ unsigned long ErrorUpperAttributes : 4; /* bit position: 24 */
        /* 0x0010 */ unsigned long ControlUpdateEnable : 1; /* bit position: 28 */
        /* 0x0010 */ unsigned long Rsvd : 1; /* bit position: 29 */
        /* 0x0010 */ unsigned long DisableSingleBitCorrection : 1; /* bit position: 30 */
        /* 0x0010 */ unsigned long EccMode : 1; /* bit position: 31 */
      }; /* bitfield */
      /* 0x0010 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ EccControlStatus;
  /* 0x0014 */ unsigned long EccFirstAddress;
  /* 0x0018 */ unsigned long EccSecondAddress;
  /* 0x001c */ unsigned long EccAttribute;
} PCIX_BRIDGE_CAPABILITY, *PPCIX_BRIDGE_CAPABILITY; /* size: 0x0020 */

union tagMATCHMODE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short Type : 4; /* bit position: 0 */
      /* 0x0000 */ unsigned short Flags : 4; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short wMatchMode;
    /* 0x0000 */ unsigned long dwMatchMode;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _I386_LOADER_BLOCK
{
  /* 0x0000 */ void* CommonDataArea;
  /* 0x0008 */ unsigned long MachineType;
  /* 0x000c */ unsigned long VirtualBias;
} I386_LOADER_BLOCK, *PI386_LOADER_BLOCK; /* size: 0x0010 */

typedef union _WOW64_EXECUTE_OPTIONS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StackReserveSize : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long StackCommitSize : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned long Deprecated0 : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long DisableWowAssert : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long DisableTurboDispatch : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned long Unused : 13; /* bit position: 15 */
      /* 0x0000 */ unsigned long Reserved0 : 1; /* bit position: 28 */
      /* 0x0000 */ unsigned long Reserved1 : 1; /* bit position: 29 */
      /* 0x0000 */ unsigned long Reserved2 : 1; /* bit position: 30 */
      /* 0x0000 */ unsigned long Reserved3 : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} WOW64_EXECUTE_OPTIONS, *PWOW64_EXECUTE_OPTIONS; /* size: 0x0004 */

typedef struct _WOW64INFO
{
  /* 0x0000 */ unsigned long NativeSystemPageSize;
  /* 0x0004 */ unsigned long CpuFlags;
  /* 0x0008 */ union _WOW64_EXECUTE_OPTIONS Wow64ExecuteFlags;
  /* 0x000c */ unsigned long InstrumentationCallback;
} WOW64INFO, *PWOW64INFO; /* size: 0x0010 */

typedef struct _SYSTEM_POOL_ENTRY
{
  /* 0x0000 */ unsigned char Allocated;
  /* 0x0001 */ unsigned char Spare0;
  /* 0x0002 */ unsigned short AllocatorBackTraceIndex;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ unsigned char Tag[4];
    /* 0x0008 */ unsigned long TagUlong;
    /* 0x0008 */ void* ProcessChargedQuota;
  }; /* size: 0x0008 */
} SYSTEM_POOL_ENTRY, *PSYSTEM_POOL_ENTRY; /* size: 0x0010 */

typedef struct _CM_POST_KEY_BODY
{
  /* 0x0000 */ struct _LIST_ENTRY KeyBodyList;
  /* 0x0010 */ struct _CM_KEY_BODY* KeyBody;
} CM_POST_KEY_BODY, *PCM_POST_KEY_BODY; /* size: 0x0018 */

typedef struct _PCI_HEADER_TYPE_2
{
  /* 0x0000 */ unsigned long SocketRegistersBaseAddress;
  /* 0x0004 */ unsigned char CapabilitiesPtr;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ unsigned short SecondaryStatus;
  /* 0x0008 */ unsigned char PrimaryBus;
  /* 0x0009 */ unsigned char SecondaryBus;
  /* 0x000a */ unsigned char SubordinateBus;
  /* 0x000b */ unsigned char SecondaryLatency;
  /* 0x000c */ struct
  {
    /* 0x000c */ unsigned long Base;
    /* 0x0010 */ unsigned long Limit;
  } /* size: 0x0008 */ Range[4];
  /* 0x002c */ unsigned char InterruptLine;
  /* 0x002d */ unsigned char InterruptPin;
  /* 0x002e */ unsigned short BridgeControl;
} PCI_HEADER_TYPE_2, *PPCI_HEADER_TYPE_2; /* size: 0x0030 */

typedef union _PSP_CREATE_THREAD_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long CreateSuspended : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long CreateSkipAttach : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long CreateHideFromDebugger : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long CreateRunModeWow64 : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long NoSecurityAugmentation : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long ChangeOwner : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long ProcessLocked : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long InitialThread : 1; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PSP_CREATE_THREAD_FLAGS, *PPSP_CREATE_THREAD_FLAGS; /* size: 0x0004 */

typedef struct _SYSTEM_ACPI_AUDIT_INFORMATION
{
  /* 0x0000 */ unsigned long RsdpCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long SameRsdt : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long SlicPresent : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long SlicDifferent : 1; /* bit position: 2 */
  }; /* bitfield */
} SYSTEM_ACPI_AUDIT_INFORMATION, *PSYSTEM_ACPI_AUDIT_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ACCESS_INFORMATION
{
  /* 0x0000 */ unsigned long AccessFlags;
} FILE_ACCESS_INFORMATION, *PFILE_ACCESS_INFORMATION; /* size: 0x0004 */

typedef struct _ETW_UMS_EVENT_DISASSOCIATE
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ScheduledThreadId;
  /* 0x0008 */ unsigned long PrimaryThreadId;
  /* 0x000c */ unsigned long UmsApcControlFlags;
  /* 0x0010 */ long Status;
} ETW_UMS_EVENT_DISASSOCIATE, *PETW_UMS_EVENT_DISASSOCIATE; /* size: 0x0014 */

typedef union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 ErrorStatus : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 IdInfo : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 MemoryNumber : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 IoNumber : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 RegisterDataPairs : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Reserved : 59; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS, *PWHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS; /* size: 0x0008 */

typedef struct _CALL_PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned __int64 SpinLock;
  /* 0x0008 */ struct _LIST_ENTRY HashTable[64];
} CALL_PERFORMANCE_DATA, *PCALL_PERFORMANCE_DATA; /* size: 0x0408 */

typedef struct _SE_CM_VALUE_AUDIT_DATA
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long DataLen;
  /* 0x0008 */ void* Data;
} SE_CM_VALUE_AUDIT_DATA, *PSE_CM_VALUE_AUDIT_DATA; /* size: 0x0010 */

typedef struct _PARTITION_DESCRIPTOR
{
  /* 0x0000 */ unsigned char ActiveFlag;
  /* 0x0001 */ unsigned char StartingTrack;
  /* 0x0002 */ unsigned char StartingCylinderLsb;
  /* 0x0003 */ unsigned char StartingCylinderMsb;
  /* 0x0004 */ unsigned char PartitionType;
  /* 0x0005 */ unsigned char EndingTrack;
  /* 0x0006 */ unsigned char EndingCylinderLsb;
  /* 0x0007 */ unsigned char EndingCylinderMsb;
  /* 0x0008 */ unsigned char StartingSectorLsb0;
  /* 0x0009 */ unsigned char StartingSectorLsb1;
  /* 0x000a */ unsigned char StartingSectorMsb0;
  /* 0x000b */ unsigned char StartingSectorMsb1;
  /* 0x000c */ unsigned char PartitionLengthLsb0;
  /* 0x000d */ unsigned char PartitionLengthLsb1;
  /* 0x000e */ unsigned char PartitionLengthMsb0;
  /* 0x000f */ unsigned char PartitionLengthMsb1;
} PARTITION_DESCRIPTOR, *PPARTITION_DESCRIPTOR; /* size: 0x0010 */

struct in6_addr
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char Byte[16];
      /* 0x0000 */ unsigned short Word[8];
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
}; /* size: 0x0010 */

struct SCOPE_ID
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Zone : 28; /* bit position: 0 */
      /* 0x0000 */ unsigned long Level : 4; /* bit position: 28 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Value;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct sockaddr_in6
{
  /* 0x0000 */ unsigned short sin6_family;
  /* 0x0002 */ unsigned short sin6_port;
  /* 0x0004 */ unsigned long sin6_flowinfo;
  /* 0x0008 */ struct in6_addr sin6_addr;
  union
  {
    /* 0x0018 */ unsigned long sin6_scope_id;
    /* 0x0018 */ struct SCOPE_ID sin6_scope_struct;
  }; /* size: 0x0004 */
}; /* size: 0x001c */

typedef struct _DBGKD_GET_SET_BUS_DATA
{
  /* 0x0000 */ unsigned long BusDataType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ unsigned long SlotNumber;
  /* 0x000c */ unsigned long Offset;
  /* 0x0010 */ unsigned long Length;
} DBGKD_GET_SET_BUS_DATA, *PDBGKD_GET_SET_BUS_DATA; /* size: 0x0014 */

typedef struct _KI_LOCAL_ARRAY9
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ unsigned char Fill5;
  /* 0x0005 */ unsigned char Fill6;
  /* 0x0006 */ unsigned char Fill7;
  /* 0x0007 */ unsigned char Fill8;
  /* 0x0008 */ unsigned char Fill9;
  /* 0x0009 */ unsigned char Fill10;
  /* 0x000a */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY9, *PKI_LOCAL_ARRAY9; /* size: 0x0062 */

typedef struct _MMPTE
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 Long;
      /* 0x0000 */ volatile unsigned __int64 VolatileLong;
      /* 0x0000 */ struct _MMPTE_HARDWARE Hard;
      /* 0x0000 */ struct _HARDWARE_PTE Flush;
      /* 0x0000 */ struct _MMPTE_PROTOTYPE Proto;
      /* 0x0000 */ struct _MMPTE_SOFTWARE Soft;
      /* 0x0000 */ struct _MMPTE_TIMESTAMP TimeStamp;
      /* 0x0000 */ struct _MMPTE_TRANSITION Trans;
      /* 0x0000 */ struct _MMPTE_SUBSECTION Subsect;
      /* 0x0000 */ struct _MMPTE_LIST List;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} MMPTE, *PMMPTE; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_INFO
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_INFO, *PPO_WAKE_SOURCE_INFO; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON
{
  /* 0x0000 */ unsigned char AffectedState[8];
  /* 0x0008 */ unsigned long PowerReasonCode;
  /* 0x000c */ unsigned long PowerReasonLength;
} SYSTEM_POWER_STATE_DISABLE_REASON, *PSYSTEM_POWER_STATE_DISABLE_REASON; /* size: 0x0010 */

typedef struct _DBGKD_WRITE_BREAKPOINT64
{
  /* 0x0000 */ unsigned __int64 BreakPointAddress;
  /* 0x0008 */ unsigned long BreakPointHandle;
  /* 0x000c */ long __PADDING__[1];
} DBGKD_WRITE_BREAKPOINT64, *PDBGKD_WRITE_BREAKPOINT64; /* size: 0x0010 */

typedef union _WHEA_PROCESSOR_FAMILY_INFO
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Stepping : 4; /* bit position: 0 */
        /* 0x0000 */ unsigned long Model : 4; /* bit position: 4 */
        /* 0x0000 */ unsigned long Family : 4; /* bit position: 8 */
        /* 0x0000 */ unsigned long ProcessorType : 2; /* bit position: 12 */
        /* 0x0000 */ unsigned long Reserved1 : 2; /* bit position: 14 */
        /* 0x0000 */ unsigned long ExtendedModel : 4; /* bit position: 16 */
        /* 0x0000 */ unsigned long ExtendedFamily : 8; /* bit position: 20 */
        /* 0x0000 */ unsigned long Reserved2 : 4; /* bit position: 28 */
      }; /* bitfield */
      /* 0x0004 */ unsigned long Reserved3;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 AsULONGLONG;
  }; /* size: 0x0008 */
} WHEA_PROCESSOR_FAMILY_INFO, *PWHEA_PROCESSOR_FAMILY_INFO; /* size: 0x0008 */

typedef struct _VARIABLE_NAME
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _GUID VendorGuid;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} VARIABLE_NAME, *PVARIABLE_NAME; /* size: 0x0018 */

typedef struct _SYSTEM_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_364;
  /* 0x0008 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_POOLTAG_INFORMATION, *PSYSTEM_POOLTAG_INFORMATION; /* size: 0x0030 */

typedef struct _MMSECTION_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int BeingDeleted : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned int BeingCreated : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned int BeingPurged : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned int NoModifiedWriting : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned int FailAllIo : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned int Image : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned int Based : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned int File : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned int Networked : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned int Rom : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned int PhysicalMemory : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned int CopyOnWrite : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned int Reserve : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned int Commit : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned int Accessed : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned int WasPurged : 1; /* bit position: 15 */
    /* 0x0000 */ unsigned int UserReference : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned int GlobalMemory : 1; /* bit position: 17 */
    /* 0x0000 */ unsigned int DeleteOnClose : 1; /* bit position: 18 */
    /* 0x0000 */ unsigned int FilePointerNull : 1; /* bit position: 19 */
    /* 0x0000 */ unsigned int GlobalOnlyPerSession : 1; /* bit position: 20 */
    /* 0x0000 */ unsigned int SetMappedFileIoComplete : 1; /* bit position: 21 */
    /* 0x0000 */ unsigned int CollidedFlush : 1; /* bit position: 22 */
    /* 0x0000 */ unsigned int NoChange : 1; /* bit position: 23 */
    /* 0x0000 */ unsigned int Spare : 1; /* bit position: 24 */
    /* 0x0000 */ unsigned int UserWritable : 1; /* bit position: 25 */
    /* 0x0000 */ unsigned int PreferredNode : 6; /* bit position: 26 */
  }; /* bitfield */
} MMSECTION_FLAGS, *PMMSECTION_FLAGS; /* size: 0x0004 */

typedef struct _SECTION
{
  /* 0x0000 */ struct _MMADDRESS_NODE Address;
  /* 0x0028 */ struct _SEGMENT* Segment;
  /* 0x0030 */ union _LARGE_INTEGER SizeOfSection;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long LongFlags;
      /* 0x0038 */ struct _MMSECTION_FLAGS Flags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  struct /* bitfield */
  {
    /* 0x003c */ unsigned long InitialPageProtection : 12; /* bit position: 0 */
    /* 0x003c */ unsigned long SessionId : 20; /* bit position: 12 */
  }; /* bitfield */
} SECTION, *PSECTION; /* size: 0x0040 */

typedef struct _IO_SESSION_CONNECT_INFO
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned char LocalSession;
  /* 0x0005 */ char __PADDING__[3];
} IO_SESSION_CONNECT_INFO, *PIO_SESSION_CONNECT_INFO; /* size: 0x0008 */

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_365;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldSecurityDescriptorLength;
  /* 0x002c */ long Padding_366;
  /* 0x0030 */ void* OldSecurityDescriptor;
  /* 0x0038 */ unsigned long NewSecurityDescriptorLength;
  /* 0x003c */ long Padding_367;
  /* 0x0040 */ void* NewSecurityDescriptor;
} JOURNAL_SET_KEY_SECURITY_INFORMATION, *PJOURNAL_SET_KEY_SECURITY_INFORMATION; /* size: 0x0048 */

typedef struct _LSA_AUTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastUpdateTime;
  /* 0x0008 */ unsigned long AuthType;
  /* 0x000c */ unsigned long AuthInfoLength;
  /* 0x0010 */ unsigned char* AuthInfo;
} LSA_AUTH_INFORMATION, *PLSA_AUTH_INFORMATION; /* size: 0x0018 */

typedef struct _SYSDBG_VIRTUAL
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_VIRTUAL, *PSYSDBG_VIRTUAL; /* size: 0x0018 */

typedef struct _EX_EXTENSION_REGISTRATION_1
{
  /* 0x0000 */ unsigned short ExtensionId;
  /* 0x0002 */ unsigned short ExtensionVersion;
  /* 0x0004 */ unsigned short FunctionCount;
  /* 0x0006 */ char Padding_368[2];
  /* 0x0008 */ const void* FunctionTable;
  /* 0x0010 */ void** HostTable;
  /* 0x0018 */ void* DriverObject;
} EX_EXTENSION_REGISTRATION_1, *PEX_EXTENSION_REGISTRATION_1; /* size: 0x0020 */

typedef struct _KFLOATING_SAVE
{
  /* 0x0000 */ unsigned long Dummy;
} KFLOATING_SAVE, *PKFLOATING_SAVE; /* size: 0x0004 */

typedef struct _CSV_NAMESPACE_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long DeviceNumber;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ unsigned long SectorSize;
  /* 0x0014 */ long __PADDING__[1];
} CSV_NAMESPACE_INFO, *PCSV_NAMESPACE_INFO; /* size: 0x0018 */

typedef struct _PERFINFO_PROCESS_INSWAP
{
  /* 0x0000 */ unsigned __int64 DirectoryTableBase;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ long __PADDING__[1];
} PERFINFO_PROCESS_INSWAP, *PPERFINFO_PROCESS_INSWAP; /* size: 0x0010 */

typedef struct _SYSTEM_VERIFIER_ISSUE
{
  /* 0x0000 */ unsigned __int64 IssueType;
  /* 0x0008 */ void* Address;
  /* 0x0010 */ unsigned __int64 Parameters[2];
} SYSTEM_VERIFIER_ISSUE, *PSYSTEM_VERIFIER_ISSUE; /* size: 0x0020 */

typedef union _AMD_L1_CACHE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct
    {
      /* 0x0000 */ unsigned char LineSize;
      /* 0x0001 */ unsigned char LinesPerTag;
      /* 0x0002 */ unsigned char Associativity;
      /* 0x0003 */ unsigned char Size;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} AMD_L1_CACHE_INFO, *PAMD_L1_CACHE_INFO; /* size: 0x0004 */

typedef struct _WHEA_DRS_OBJECT
{
  /* 0x0000 */ struct _WHEA_DRS_OBJECT* Next;
  /* 0x0008 */ long Busy;
  /* 0x000c */ long Padding_369;
  /* 0x0010 */ void* Handler /* function */;
  /* 0x0018 */ unsigned char Level;
  /* 0x0019 */ char Padding_370[7];
  /* 0x0020 */ void* Context;
} WHEA_DRS_OBJECT, *PWHEA_DRS_OBJECT; /* size: 0x0028 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned __int64 UniqueProcessId;
  /* 0x0010 */ unsigned __int64 HandleValue;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned short CreatorBackTraceIndex;
  /* 0x001e */ unsigned short ObjectTypeIndex;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ unsigned long Reserved;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX; /* size: 0x0028 */

typedef struct _DBGKD_CONTINUE
{
  /* 0x0000 */ long ContinueStatus;
} DBGKD_CONTINUE, *PDBGKD_CONTINUE; /* size: 0x0004 */

typedef struct _KINTERRUPT
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_371;
  /* 0x0008 */ struct _LIST_ENTRY InterruptListEntry;
  /* 0x0018 */ void* ServiceRoutine /* function */;
  /* 0x0020 */ void* MessageServiceRoutine /* function */;
  /* 0x0028 */ unsigned long MessageIndex;
  /* 0x002c */ long Padding_372;
  /* 0x0030 */ void* ServiceContext;
  /* 0x0038 */ unsigned __int64 SpinLock;
  /* 0x0040 */ unsigned long TickCount;
  /* 0x0044 */ long Padding_373;
  /* 0x0048 */ unsigned __int64* ActualLock;
  /* 0x0050 */ void* DispatchAddress /* function */;
  /* 0x0058 */ unsigned long Vector;
  /* 0x005c */ unsigned char Irql;
  /* 0x005d */ unsigned char SynchronizeIrql;
  /* 0x005e */ unsigned char FloatingSave;
  /* 0x005f */ unsigned char Connected;
  /* 0x0060 */ unsigned long Number;
  /* 0x0064 */ unsigned char ShareVector;
  /* 0x0065 */ char Pad[3];
  /* 0x0068 */ enum _KINTERRUPT_MODE Mode;
  /* 0x006c */ enum _KINTERRUPT_POLARITY Polarity;
  /* 0x0070 */ unsigned long ServiceCount;
  /* 0x0074 */ unsigned long DispatchCount;
  /* 0x0078 */ unsigned __int64 Rsvd1;
  /* 0x0080 */ struct _KTRAP_FRAME* TrapFrame;
  /* 0x0088 */ void* Reserved;
  /* 0x0090 */ unsigned long DispatchCode[4];
} KINTERRUPT, *PKINTERRUPT; /* size: 0x00a0 */

typedef struct _OBJECT_ATTRIBUTES64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_374;
  /* 0x0008 */ unsigned __int64 RootDirectory;
  /* 0x0010 */ unsigned __int64 ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_375;
  /* 0x0020 */ unsigned __int64 SecurityDescriptor;
  /* 0x0028 */ unsigned __int64 SecurityQualityOfService;
} OBJECT_ATTRIBUTES64, *POBJECT_ATTRIBUTES64; /* size: 0x0030 */

typedef union _PCI_EXPRESS_DEVICE_STATUS_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short CorrectableErrorDetected : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short NonFatalErrorDetected : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short FatalErrorDetected : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short UnsupportedRequestDetected : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short AuxPowerDetected : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short TransactionsPending : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned short Rsvd : 10; /* bit position: 6 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_DEVICE_STATUS_REGISTER, *PPCI_EXPRESS_DEVICE_STATUS_REGISTER; /* size: 0x0002 */

typedef struct _IMAGE_SYMBOL
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ short SectionNumber;
  /* 0x000e */ unsigned short Type;
  /* 0x0010 */ unsigned char StorageClass;
  /* 0x0011 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL, *PIMAGE_SYMBOL; /* size: 0x0012 */

typedef struct _EX_PUSH_LOCK_CACHE_AWARE
{
  /* 0x0000 */ struct _EX_PUSH_LOCK* Locks[32];
} EX_PUSH_LOCK_CACHE_AWARE, *PEX_PUSH_LOCK_CACHE_AWARE; /* size: 0x0100 */

typedef struct _TRACE_GUID_PROPERTIES
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long GuidType;
  /* 0x0014 */ unsigned long LoggerId;
  /* 0x0018 */ unsigned long EnableLevel;
  /* 0x001c */ unsigned long EnableFlags;
  /* 0x0020 */ unsigned char IsEnable;
  /* 0x0021 */ char __PADDING__[3];
} TRACE_GUID_PROPERTIES, *PTRACE_GUID_PROPERTIES; /* size: 0x0024 */

typedef struct _SYSTEM_CALL_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long TotalCalls;
  /* 0x0008 */ union _LARGE_INTEGER TimeOfCalls[1];
} SYSTEM_CALL_TIME_INFORMATION, *PSYSTEM_CALL_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _PO_POWER_REQUEST
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned long SessionId;
  /* 0x0014 */ unsigned long SupportedRequestMask;
  /* 0x0018 */ unsigned long RequestOverrideMask;
  /* 0x001c */ long PowerRequestCount[3];
  /* 0x0028 */ struct _DIAGNOSTIC_CONTEXT* DiagnosticContext;
} PO_POWER_REQUEST, *PPO_POWER_REQUEST; /* size: 0x0030 */

typedef struct _TRUSTED_POSIX_OFFSET_INFO
{
  /* 0x0000 */ unsigned long Offset;
} TRUSTED_POSIX_OFFSET_INFO, *PTRUSTED_POSIX_OFFSET_INFO; /* size: 0x0004 */

typedef struct _DIAGNOSTIC_CONTEXT
{
  /* 0x0000 */ enum _REQUESTER_TYPE CallerType;
  /* 0x0004 */ long Padding_376;
  union
  {
    struct
    {
      /* 0x0008 */ struct _EPROCESS* Process;
      /* 0x0010 */ unsigned long ServiceTag;
    }; /* size: 0x000c */
    /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  }; /* size: 0x000c */
  /* 0x0014 */ long Padding_377;
  /* 0x0018 */ unsigned __int64 ReasonSize;
} DIAGNOSTIC_CONTEXT, *PDIAGNOSTIC_CONTEXT; /* size: 0x0020 */

typedef struct _HWPROFILE_NOTIFY_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _IO_NOTIFICATION_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ unsigned long SessionId;
  /* 0x0018 */ void* SessionHandle;
  /* 0x0020 */ void* CallbackRoutine /* function */;
  /* 0x0028 */ void* Context;
  /* 0x0030 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0038 */ unsigned short RefCount;
  /* 0x003a */ unsigned char Unregistered;
  /* 0x003b */ char Padding_378[5];
  /* 0x0040 */ struct _KGUARDED_MUTEX* Lock;
  /* 0x0048 */ struct _ERESOURCE* EntryLock;
} HWPROFILE_NOTIFY_ENTRY, *PHWPROFILE_NOTIFY_ENTRY; /* size: 0x0050 */

typedef struct _VIRTUAL_EFI_RUNTIME_SERVICES
{
  /* 0x0000 */ unsigned __int64 GetTime;
  /* 0x0008 */ unsigned __int64 SetTime;
  /* 0x0010 */ unsigned __int64 GetWakeupTime;
  /* 0x0018 */ unsigned __int64 SetWakeupTime;
  /* 0x0020 */ unsigned __int64 SetVirtualAddressMap;
  /* 0x0028 */ unsigned __int64 ConvertPointer;
  /* 0x0030 */ unsigned __int64 GetVariable;
  /* 0x0038 */ unsigned __int64 GetNextVariableName;
  /* 0x0040 */ unsigned __int64 SetVariable;
  /* 0x0048 */ unsigned __int64 GetNextHighMonotonicCount;
  /* 0x0050 */ unsigned __int64 ResetSystem;
  /* 0x0058 */ unsigned __int64 UpdateCapsule;
  /* 0x0060 */ unsigned __int64 QueryCapsuleCapabilities;
  /* 0x0068 */ unsigned __int64 QueryVariableInfo;
} VIRTUAL_EFI_RUNTIME_SERVICES, *PVIRTUAL_EFI_RUNTIME_SERVICES; /* size: 0x0070 */

typedef struct _RESUME_INFORMATION_BLOCK
{
  /* 0x0000 */ struct _VIRTUAL_EFI_RUNTIME_SERVICES VirtualRuntimeServicesTable;
  /* 0x0070 */ long SetVirtualAddressMapStatus;
  /* 0x0074 */ long __PADDING__[1];
} RESUME_INFORMATION_BLOCK, *PRESUME_INFORMATION_BLOCK; /* size: 0x0078 */

typedef struct _WHEA_PCIEXPRESS_DEVICE_ID
{
  /* 0x0000 */ unsigned short VendorID;
  /* 0x0002 */ unsigned short DeviceID;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long ClassCode : 24; /* bit position: 0 */
    /* 0x0004 */ unsigned long FunctionNumber : 8; /* bit position: 24 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DeviceNumber : 8; /* bit position: 0 */
    /* 0x0008 */ unsigned long Segment : 16; /* bit position: 8 */
    /* 0x0008 */ unsigned long PrimaryBusNumber : 8; /* bit position: 24 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x000c */ unsigned long SecondaryBusNumber : 8; /* bit position: 0 */
    /* 0x000c */ unsigned long Reserved1 : 3; /* bit position: 8 */
    /* 0x000c */ unsigned long SlotNumber : 13; /* bit position: 11 */
    /* 0x000c */ unsigned long Reserved2 : 8; /* bit position: 24 */
  }; /* bitfield */
} WHEA_PCIEXPRESS_DEVICE_ID, *PWHEA_PCIEXPRESS_DEVICE_ID; /* size: 0x0010 */

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned char HypervisorConnected;
  /* 0x0001 */ unsigned char Spare0[7];
  /* 0x0008 */ unsigned __int64 EnabledAddressSpaceEnlightenments;
} SYSTEM_HYPERVISOR_QUERY_INFORMATION, *PSYSTEM_HYPERVISOR_QUERY_INFORMATION; /* size: 0x0010 */

typedef struct _PCC_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned short HeaderLength;
  /* 0x0006 */ unsigned char MajorVersion;
  /* 0x0007 */ unsigned char MinorVersion;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned long SciDoorbell : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
      }; /* bitfield */
      /* 0x0008 */ unsigned long AsULong;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ SupportedFeatures;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x000c */ unsigned short CommandCode : 8; /* bit position: 0 */
        /* 0x000c */ unsigned short ReservedZ : 7; /* bit position: 8 */
        /* 0x000c */ unsigned short SciDoorbell : 1; /* bit position: 15 */
      }; /* bitfield */
      /* 0x000c */ unsigned short AsUShort;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Command;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x000e */ unsigned short CommandComplete : 1; /* bit position: 0 */
        /* 0x000e */ unsigned short SciReceived : 1; /* bit position: 1 */
        /* 0x000e */ unsigned short Error : 1; /* bit position: 2 */
        /* 0x000e */ unsigned short Reserved : 13; /* bit position: 3 */
      }; /* bitfield */
      /* 0x000e */ unsigned short AsUShort;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Status;
  /* 0x0010 */ unsigned long Latency;
  /* 0x0014 */ unsigned long MinimumCommandInterval;
  /* 0x0018 */ unsigned long MaximumCommandInterval;
  /* 0x001c */ unsigned long NominalFrequency;
  /* 0x0020 */ unsigned long MinimumFrequency;
  /* 0x0024 */ unsigned long MinimumUnthrottledFrequency;
} PCC_HEADER, *PPCC_HEADER; /* size: 0x0028 */

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* Previous;
  /* 0x0008 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} RTL_ACTIVATION_CONTEXT_STACK_FRAME, *PRTL_ACTIVATION_CONTEXT_STACK_FRAME; /* size: 0x0018 */

typedef struct _TRANSACTION_PROPERTIES_INFORMATION
{
  /* 0x0000 */ unsigned long IsolationLevel;
  /* 0x0004 */ unsigned long IsolationFlags;
  /* 0x0008 */ union _LARGE_INTEGER Timeout;
  /* 0x0010 */ unsigned long Outcome;
  /* 0x0014 */ unsigned long DescriptionLength;
  /* 0x0018 */ wchar_t Description[1];
  /* 0x001a */ char __PADDING__[6];
} TRANSACTION_PROPERTIES_INFORMATION, *PTRANSACTION_PROPERTIES_INFORMATION; /* size: 0x0020 */

struct ISBASENAME
{
  /* 0x0000 */ unsigned long BaseIndex;
  /* 0x0004 */ wchar_t BaseName[1];
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_HEADER
{
  /* 0x0000 */ enum PO_WAKE_SOURCE_TYPE Type;
  /* 0x0004 */ unsigned long Size;
} PO_WAKE_SOURCE_HEADER, *PPO_WAKE_SOURCE_HEADER; /* size: 0x0008 */

typedef struct _RTL_UMS_SCHEDULER_STARTUP_INFO
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_379;
  /* 0x0008 */ struct _RTL_UMS_COMPLETION_LIST* CompletionList;
  /* 0x0010 */ void* SchedulerProc /* function */;
  /* 0x0018 */ void* SchedulerParam;
} RTL_UMS_SCHEDULER_STARTUP_INFO, *PRTL_UMS_SCHEDULER_STARTUP_INFO; /* size: 0x0020 */

typedef struct _AMD64_XMM_SAVE_AREA32_2
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _AMD64_M128 FloatRegisters[8];
  /* 0x00a0 */ struct _AMD64_M128 XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[224];
} AMD64_XMM_SAVE_AREA32_2, *PAMD64_XMM_SAVE_AREA32_2; /* size: 0x0280 */

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION
{
  /* 0x0000 */ unsigned char DriverInPath;
  /* 0x0001 */ char Padding_380[3];
  /* 0x0004 */ unsigned long DriverNameLength;
  /* 0x0008 */ wchar_t DriverName[1];
  /* 0x000a */ char __PADDING__[2];
} FILE_FS_DRIVER_PATH_INFORMATION, *PFILE_FS_DRIVER_PATH_INFORMATION; /* size: 0x000c */

typedef struct _VERIFIER_TRIAGE_RULE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Code : 16; /* bit position: 0 */
    /* 0x0000 */ unsigned long Type : 3; /* bit position: 16 */
    /* 0x0000 */ unsigned long Size : 13; /* bit position: 19 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long Features;
} VERIFIER_TRIAGE_RULE, *PVERIFIER_TRIAGE_RULE; /* size: 0x0008 */

typedef struct _ARBITER_LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long AlternativeCount;
  /* 0x0014 */ long Padding_381;
  /* 0x0018 */ struct _IO_RESOURCE_DESCRIPTOR* Alternatives;
  /* 0x0020 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0028 */ enum _ARBITER_REQUEST_SOURCE RequestSource;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ __int64 WorkSpace;
  /* 0x0038 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x003c */ unsigned long SlotNumber;
  /* 0x0040 */ unsigned long BusNumber;
  /* 0x0044 */ long Padding_382;
  /* 0x0048 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR* Assignment;
  /* 0x0050 */ struct _IO_RESOURCE_DESCRIPTOR* SelectedAlternative;
  /* 0x0058 */ enum _ARBITER_RESULT Result;
  /* 0x005c */ long __PADDING__[1];
} ARBITER_LIST_ENTRY, *PARBITER_LIST_ENTRY; /* size: 0x0060 */

typedef struct _ETW_SET_MARK_INFORMATION
{
  /* 0x0000 */ unsigned long Flag;
  /* 0x0004 */ wchar_t Mark[1];
  /* 0x0006 */ char __PADDING__[2];
} ETW_SET_MARK_INFORMATION, *PETW_SET_MARK_INFORMATION; /* size: 0x0008 */

typedef struct _ETW_TRACE_SESSION_SETTINGS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ unsigned long MinimumBuffers;
  /* 0x000c */ unsigned long MaximumBuffers;
  /* 0x0010 */ unsigned long LoggerMode;
  /* 0x0014 */ unsigned long FlushTimer;
  /* 0x0018 */ unsigned long FlushThreshold;
  /* 0x001c */ unsigned long ClockType;
} ETW_TRACE_SESSION_SETTINGS, *PETW_TRACE_SESSION_SETTINGS; /* size: 0x0020 */

typedef struct _BUFFER_INFO
{
  /* 0x0000 */ char* Buffer;
  /* 0x0008 */ char* Current;
  /* 0x0010 */ unsigned long MaxSize;
  /* 0x0014 */ long __PADDING__[1];
} BUFFER_INFO, *PBUFFER_INFO; /* size: 0x0018 */

typedef struct _RTL_TRACE_DATABASE
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Tag;
  /* 0x000c */ long Padding_383;
  /* 0x0010 */ struct _RTL_TRACE_SEGMENT* SegmentList;
  /* 0x0018 */ unsigned __int64 MaximumSize;
  /* 0x0020 */ unsigned __int64 CurrentSize;
  /* 0x0028 */ unsigned char SavedIrql;
  /* 0x0029 */ char Padding_384[7];
  /* 0x0030 */ void* Owner;
  union
  {
    union
    {
      /* 0x0038 */ unsigned __int64 SpinLock;
      /* 0x0038 */ struct _FAST_MUTEX FastMutex;
    }; /* size: 0x0038 */
  } /* size: 0x0038 */ u;
  /* 0x0070 */ unsigned long NoOfBuckets;
  /* 0x0074 */ long Padding_385;
  /* 0x0078 */ struct _RTL_TRACE_BLOCK** Buckets;
  /* 0x0080 */ void* HashFunction /* function */;
  /* 0x0088 */ unsigned __int64 NoOfTraces;
  /* 0x0090 */ unsigned __int64 NoOfHits;
  /* 0x0098 */ unsigned long HashCounter[16];
} RTL_TRACE_DATABASE, *PRTL_TRACE_DATABASE; /* size: 0x00d8 */

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfObjects;
  /* 0x0008 */ unsigned long NumberOfHandles;
  /* 0x000c */ unsigned long TypeIndex;
  /* 0x0010 */ unsigned long InvalidAttributes;
  /* 0x0014 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0024 */ unsigned long ValidAccessMask;
  /* 0x0028 */ unsigned long PoolType;
  /* 0x002c */ unsigned char SecurityRequired;
  /* 0x002d */ unsigned char WaitableObject;
  /* 0x002e */ char Padding_386[2];
  /* 0x0030 */ struct _UNICODE_STRING TypeName;
} SYSTEM_OBJECTTYPE_INFORMATION, *PSYSTEM_OBJECTTYPE_INFORMATION; /* size: 0x0040 */

typedef struct _TRIPLE_LIST_ENTRY
{
  /* 0x0000 */ struct _TRIPLE_LIST_ENTRY* Flink[3];
  /* 0x0018 */ struct _TRIPLE_LIST_ENTRY* Blink;
} TRIPLE_LIST_ENTRY, *PTRIPLE_LIST_ENTRY; /* size: 0x0020 */

typedef struct _TRIPLE_LIST
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit0 : 1; /* bit position: 0 */
        /* 0x0000 */ volatile unsigned long ActiveListBit0 : 1; /* bit position: 1 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit0 : 1; /* bit position: 2 */
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit1 : 1; /* bit position: 3 */
        /* 0x0000 */ volatile unsigned long ActiveListBit1 : 1; /* bit position: 4 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit1 : 1; /* bit position: 5 */
        /* 0x0000 */ volatile unsigned long ReaderDidTheSwitch : 1; /* bit position: 6 */
        /* 0x0000 */ volatile unsigned long Reserved : 22; /* bit position: 7 */
        /* 0x0000 */ volatile unsigned long ReaderBusy : 1; /* bit position: 29 */
        /* 0x0000 */ volatile unsigned long UpdateReady : 1; /* bit position: 30 */
        /* 0x0000 */ volatile unsigned long OverflowUpdateReady : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0004 */ ControlBits;
    /* 0x0000 */ volatile long CombinedControlBits;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_387;
  /* 0x0008 */ struct _TRIPLE_LIST_ENTRY Head;
  /* 0x0028 */ struct _TRIPLE_LIST_ENTRY* Tail[3];
  /* 0x0040 */ void* RemoveCallback /* function */;
  /* 0x0048 */ void* RemoveContext;
  /* 0x0050 */ struct _TRIPLE_LIST_ENTRY* PendingHead;
  /* 0x0058 */ struct _TRIPLE_LIST_ENTRY** PendingTailPtr;
  /* 0x0060 */ unsigned long PendingListIndex;
  /* 0x0064 */ long __PADDING__[1];
} TRIPLE_LIST, *PTRIPLE_LIST; /* size: 0x0068 */

typedef struct _AMD64_DBGKD_CONTROL_REPORT
{
  /* 0x0000 */ unsigned __int64 Dr6;
  /* 0x0008 */ unsigned __int64 Dr7;
  /* 0x0010 */ unsigned long EFlags;
  /* 0x0014 */ unsigned short InstructionCount;
  /* 0x0016 */ unsigned short ReportFlags;
  /* 0x0018 */ unsigned char InstructionStream[16];
  /* 0x0028 */ unsigned short SegCs;
  /* 0x002a */ unsigned short SegDs;
  /* 0x002c */ unsigned short SegEs;
  /* 0x002e */ unsigned short SegFs;
} AMD64_DBGKD_CONTROL_REPORT, *PAMD64_DBGKD_CONTROL_REPORT; /* size: 0x0030 */

typedef struct _RTL_TRACE_ENUMERATE
{
  /* 0x0000 */ struct _RTL_TRACE_DATABASE* Database;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ long Padding_388;
  /* 0x0010 */ struct _RTL_TRACE_BLOCK* Block;
} RTL_TRACE_ENUMERATE, *PRTL_TRACE_ENUMERATE; /* size: 0x0018 */

struct CM_Power_Data_s
{
  /* 0x0000 */ unsigned long PD_Size;
  /* 0x0004 */ enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
  /* 0x0008 */ unsigned long PD_Capabilities;
  /* 0x000c */ unsigned long PD_D1Latency;
  /* 0x0010 */ unsigned long PD_D2Latency;
  /* 0x0014 */ unsigned long PD_D3Latency;
  /* 0x0018 */ enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  /* 0x0034 */ enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
}; /* size: 0x0038 */

typedef struct _TP_NBQ_GUARD
{
  /* 0x0000 */ struct _LIST_ENTRY GuardLinks;
  /* 0x0010 */ void* Guards[2];
} TP_NBQ_GUARD, *PTP_NBQ_GUARD; /* size: 0x0020 */

typedef struct _HEADLESS_RSP_GET_BYTE
{
  /* 0x0000 */ unsigned char Value;
} HEADLESS_RSP_GET_BYTE, *PHEADLESS_RSP_GET_BYTE; /* size: 0x0001 */

struct ACPI_REGS_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_389;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* ReadAcpiRegister /* function */;
  /* 0x0028 */ void* WriteAcpiRegister /* function */;
}; /* size: 0x0030 */

typedef struct _PI_RESOURCE_ARBITER_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY DeviceArbiterList;
  /* 0x0010 */ unsigned char ResourceType;
  /* 0x0011 */ char Padding_390[7];
  /* 0x0018 */ struct _ARBITER_INTERFACE* ArbiterInterface;
  /* 0x0020 */ struct _DEVICE_NODE* DeviceNode;
  /* 0x0028 */ struct _LIST_ENTRY ResourceList;
  /* 0x0038 */ struct _LIST_ENTRY BestResourceList;
  /* 0x0048 */ struct _LIST_ENTRY BestConfig;
  /* 0x0058 */ struct _LIST_ENTRY ActiveArbiterList;
  /* 0x0068 */ unsigned char State;
  /* 0x0069 */ unsigned char ResourcesChanged;
  /* 0x006a */ char __PADDING__[6];
} PI_RESOURCE_ARBITER_ENTRY, *PPI_RESOURCE_ARBITER_ENTRY; /* size: 0x0070 */

typedef struct _GROUP_RELATIONSHIP
{
  /* 0x0000 */ unsigned short MaximumGroupCount;
  /* 0x0002 */ unsigned short ActiveGroupCount;
  /* 0x0004 */ unsigned char Reserved[20];
  /* 0x0018 */ struct _PROCESSOR_GROUP_INFO GroupInfo[1];
} GROUP_RELATIONSHIP, *PGROUP_RELATIONSHIP; /* size: 0x0048 */

typedef struct _ETW_HEAP_EVENT_EXPANSION
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ unsigned __int64 CommittedSize;
  /* 0x0030 */ void* Address;
  /* 0x0038 */ unsigned __int64 FreeSpace;
  /* 0x0040 */ unsigned __int64 CommittedSpace;
  /* 0x0048 */ unsigned __int64 ReservedSpace;
  /* 0x0050 */ unsigned long NoOfUCRs;
  /* 0x0054 */ unsigned __int64 AllocatedSpace;
} ETW_HEAP_EVENT_EXPANSION, *PETW_HEAP_EVENT_EXPANSION; /* size: 0x005c */

typedef struct _PPC_KSPECIAL_REGISTERS
{
  /* 0x0000 */ unsigned long KernelDr0;
  /* 0x0004 */ unsigned long KernelDr1;
  /* 0x0008 */ unsigned long KernelDr2;
  /* 0x000c */ unsigned long KernelDr3;
  /* 0x0010 */ unsigned long KernelDr4;
  /* 0x0014 */ unsigned long KernelDr5;
  /* 0x0018 */ unsigned long KernelDr6;
  /* 0x001c */ unsigned long KernelDr7;
} PPC_KSPECIAL_REGISTERS, *PPPC_KSPECIAL_REGISTERS; /* size: 0x0020 */

typedef struct _PPC_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _PPC_CONTEXT ContextFrame;
  /* 0x0a40 */ struct _PPC_KSPECIAL_REGISTERS SpecialRegisters;
} PPC_KPROCESSOR_STATE, *PPPC_KPROCESSOR_STATE; /* size: 0x0a60 */

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} ALPC_PORT_ASSOCIATE_COMPLETION_PORT, *PALPC_PORT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

typedef struct _HAL_ENLIGHTENMENT
{
  /* 0x0000 */ unsigned long Enlightenments;
  /* 0x0004 */ unsigned long HypervisorConnected;
  /* 0x0008 */ void* EndOfInterrupt /* function */;
  /* 0x0010 */ void* ApicWriteIcr /* function */;
  /* 0x0018 */ unsigned long Reserved0;
  /* 0x001c */ unsigned long SpinCountMask;
  /* 0x0020 */ void* LongSpinWait /* function */;
  /* 0x0028 */ void* GetReferenceTime /* function */;
} HAL_ENLIGHTENMENT, *PHAL_ENLIGHTENMENT; /* size: 0x0030 */

typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO
{
  /* 0x0000 */ void* Sid;
  /* 0x0008 */ struct _UNICODE_STRING DnsName;
  /* 0x0018 */ struct _UNICODE_STRING NetbiosName;
} LSA_FOREST_TRUST_DOMAIN_INFO, *PLSA_FOREST_TRUST_DOMAIN_INFO; /* size: 0x0028 */

typedef union _WHEA_XPF_CACHE_CHECK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 TransactionTypeValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 OperationValid : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 LevelValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorruptValid : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 UncorrectedValid : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 PreciseIPValid : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 RestartableIPValid : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 OverflowValid : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 ReservedValid : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 TransactionType : 2; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Operation : 4; /* bit position: 18 */
      /* 0x0000 */ unsigned __int64 Level : 3; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorrupt : 1; /* bit position: 25 */
      /* 0x0000 */ unsigned __int64 Uncorrected : 1; /* bit position: 26 */
      /* 0x0000 */ unsigned __int64 PreciseIP : 1; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 RestartableIP : 1; /* bit position: 28 */
      /* 0x0000 */ unsigned __int64 Overflow : 1; /* bit position: 29 */
      /* 0x0000 */ unsigned __int64 Reserved : 34; /* bit position: 30 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 XpfCacheCheck;
  }; /* size: 0x0008 */
} WHEA_XPF_CACHE_CHECK, *PWHEA_XPF_CACHE_CHECK; /* size: 0x0008 */

typedef struct _ADAPTER_OBJECT
{
  /* 0x0000 */ struct _DMA_ADAPTER DmaAdapter;
  /* 0x0010 */ struct _ADAPTER_OBJECT* RealAdapterObject;
} ADAPTER_OBJECT, *PADAPTER_OBJECT; /* size: 0x0018 */

struct POWER_ACTION_POLICY
{
  /* 0x0000 */ enum POWER_ACTION Action;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long EventCode;
}; /* size: 0x000c */

struct SYSTEM_POWER_LEVEL
{
  /* 0x0000 */ unsigned char Enable;
  /* 0x0001 */ unsigned char Spare[3];
  /* 0x0004 */ unsigned long BatteryLevel;
  /* 0x0008 */ struct POWER_ACTION_POLICY PowerPolicy;
  /* 0x0014 */ enum _SYSTEM_POWER_STATE MinSystemState;
}; /* size: 0x0018 */

typedef union _KIDTENTRY64
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short OffsetLow;
      /* 0x0002 */ unsigned short Selector;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned short IstIndex : 3; /* bit position: 0 */
        /* 0x0004 */ unsigned short Reserved0 : 5; /* bit position: 3 */
        /* 0x0004 */ unsigned short Type : 5; /* bit position: 8 */
        /* 0x0004 */ unsigned short Dpl : 2; /* bit position: 13 */
        /* 0x0004 */ unsigned short Present : 1; /* bit position: 15 */
      }; /* bitfield */
      /* 0x0006 */ unsigned short OffsetMiddle;
      /* 0x0008 */ unsigned long OffsetHigh;
      /* 0x000c */ unsigned long Reserved1;
    }; /* size: 0x0010 */
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0010 */
} KIDTENTRY64, *PKIDTENTRY64; /* size: 0x0010 */

typedef struct _PAE_ADDRESS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Offset : 12; /* bit position: 0 */
      /* 0x0000 */ unsigned long Table : 9; /* bit position: 12 */
      /* 0x0000 */ unsigned long Directory : 9; /* bit position: 21 */
      /* 0x0000 */ unsigned long DirectoryPointer : 2; /* bit position: 30 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Offset : 21; /* bit position: 0 */
        /* 0x0000 */ unsigned long Directory : 9; /* bit position: 21 */
        /* 0x0000 */ unsigned long DirectoryPointer : 2; /* bit position: 30 */
      }; /* bitfield */
    } /* size: 0x0004 */ LargeAddress;
    /* 0x0000 */ unsigned long DwordPart;
  }; /* size: 0x0004 */
} PAE_ADDRESS, *PPAE_ADDRESS; /* size: 0x0004 */

typedef struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION
{
  /* 0x0000 */ void* WdHandler /* function */;
  /* 0x0008 */ void* Context;
} SYSTEM_WATCHDOG_HANDLER_INFORMATION, *PSYSTEM_WATCHDOG_HANDLER_INFORMATION; /* size: 0x0010 */

typedef struct _TOKEN_LINKED_TOKEN
{
  /* 0x0000 */ void* LinkedToken;
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN; /* size: 0x0008 */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ProcessorMask;
  /* 0x0008 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x000c */ long Padding_391;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char Flags;
    } /* size: 0x0001 */ ProcessorCore;
    struct
    {
      /* 0x0010 */ unsigned long NodeNumber;
    } /* size: 0x0004 */ NumaNode;
    /* 0x0010 */ struct _CACHE_DESCRIPTOR Cache;
    /* 0x0010 */ unsigned __int64 Reserved[2];
  }; /* size: 0x0010 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION; /* size: 0x0020 */

typedef struct _PP_LOOKASIDE_LIST64
{
  /* 0x0000 */ unsigned long P;
  /* 0x0004 */ unsigned long L;
} PP_LOOKASIDE_LIST64, *PPP_LOOKASIDE_LIST64; /* size: 0x0008 */

typedef struct _WMIP_GUIDENTRY_NONPAGED
{
  /* 0x0000 */ struct _KEVENT CollectInProgress;
  /* 0x0018 */ struct _WORK_QUEUE_ITEM LegacyWorkItem;
} WMIP_GUIDENTRY_NONPAGED, *PWMIP_GUIDENTRY_NONPAGED; /* size: 0x0038 */

typedef struct _SD_CHANGE_MACHINE_SID_INPUT
{
  /* 0x0000 */ unsigned short CurrentMachineSIDOffset;
  /* 0x0002 */ unsigned short CurrentMachineSIDLength;
  /* 0x0004 */ unsigned short NewMachineSIDOffset;
  /* 0x0006 */ unsigned short NewMachineSIDLength;
} SD_CHANGE_MACHINE_SID_INPUT, *PSD_CHANGE_MACHINE_SID_INPUT; /* size: 0x0008 */

typedef struct _SD_GLOBAL_CHANGE_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ChangeType;
  /* 0x0008 */ struct _SD_CHANGE_MACHINE_SID_INPUT SdChange;
} SD_GLOBAL_CHANGE_INPUT, *PSD_GLOBAL_CHANGE_INPUT; /* size: 0x0010 */

typedef struct _IO_REMOVE_LOCK_COMMON_BLOCK
{
  /* 0x0000 */ unsigned char Removed;
  /* 0x0001 */ unsigned char Reserved[3];
  /* 0x0004 */ long IoCount;
  /* 0x0008 */ struct _KEVENT RemoveEvent;
} IO_REMOVE_LOCK_COMMON_BLOCK, *PIO_REMOVE_LOCK_COMMON_BLOCK; /* size: 0x0020 */

typedef struct _IO_REMOVE_LOCK_DBG_BLOCK
{
  /* 0x0000 */ long Signature;
  /* 0x0004 */ unsigned long HighWatermark;
  /* 0x0008 */ __int64 MaxLockedTicks;
  /* 0x0010 */ long AllocateTag;
  /* 0x0014 */ long Padding_392;
  /* 0x0018 */ struct _LIST_ENTRY LockList;
  /* 0x0028 */ unsigned __int64 Spin;
  /* 0x0030 */ long LowMemoryCount;
  /* 0x0034 */ unsigned long Reserved1[4];
  /* 0x0044 */ long Padding_393;
  /* 0x0048 */ void* Reserved2;
  /* 0x0050 */ struct _IO_REMOVE_LOCK_TRACKING_BLOCK* Blocks;
} IO_REMOVE_LOCK_DBG_BLOCK, *PIO_REMOVE_LOCK_DBG_BLOCK; /* size: 0x0058 */

typedef struct _IO_PRIVATE_REMOVE_LOCK
{
  /* 0x0000 */ struct _IO_REMOVE_LOCK_COMMON_BLOCK Common;
  /* 0x0020 */ struct _IO_REMOVE_LOCK_DBG_BLOCK Dbg;
} IO_PRIVATE_REMOVE_LOCK, *PIO_PRIVATE_REMOVE_LOCK; /* size: 0x0078 */

typedef struct _FILE_FS_LABEL_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeLabelLength;
  /* 0x0004 */ wchar_t VolumeLabel[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_FS_LABEL_INFORMATION, *PFILE_FS_LABEL_INFORMATION; /* size: 0x0008 */

typedef struct _TRACE_ENABLE_CONTEXT_EX
{
  /* 0x0000 */ unsigned short LoggerId;
  /* 0x0002 */ unsigned char Level;
  /* 0x0003 */ unsigned char InternalFlag;
  /* 0x0004 */ unsigned long EnableFlags;
  /* 0x0008 */ unsigned long EnableFlagsHigh;
  /* 0x000c */ unsigned long Reserved;
} TRACE_ENABLE_CONTEXT_EX, *PTRACE_ENABLE_CONTEXT_EX; /* size: 0x0010 */

typedef struct _SUPPORTED_RANGES
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned char Sorted;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned long NoIO;
  /* 0x0008 */ struct _SUPPORTED_RANGE IO;
  /* 0x0030 */ unsigned long NoMemory;
  /* 0x0034 */ long Padding_394;
  /* 0x0038 */ struct _SUPPORTED_RANGE Memory;
  /* 0x0060 */ unsigned long NoPrefetchMemory;
  /* 0x0064 */ long Padding_395;
  /* 0x0068 */ struct _SUPPORTED_RANGE PrefetchMemory;
  /* 0x0090 */ unsigned long NoDma;
  /* 0x0094 */ long Padding_396;
  /* 0x0098 */ struct _SUPPORTED_RANGE Dma;
} SUPPORTED_RANGES, *PSUPPORTED_RANGES; /* size: 0x00c0 */

typedef struct _OBJECT_HEADER_CREATOR_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY TypeList;
  /* 0x0010 */ void* CreatorUniqueProcess;
  /* 0x0018 */ unsigned short CreatorBackTraceIndex;
  /* 0x001a */ unsigned short Reserved;
  /* 0x001c */ long __PADDING__[1];
} OBJECT_HEADER_CREATOR_INFO, *POBJECT_HEADER_CREATOR_INFO; /* size: 0x0020 */

typedef struct _KNONVOLATILE_CONTEXT_POINTERS
{
  union
  {
    /* 0x0000 */ struct _M128A* FloatingContext[16];
    struct
    {
      /* 0x0000 */ struct _M128A* Xmm0;
      /* 0x0008 */ struct _M128A* Xmm1;
      /* 0x0010 */ struct _M128A* Xmm2;
      /* 0x0018 */ struct _M128A* Xmm3;
      /* 0x0020 */ struct _M128A* Xmm4;
      /* 0x0028 */ struct _M128A* Xmm5;
      /* 0x0030 */ struct _M128A* Xmm6;
      /* 0x0038 */ struct _M128A* Xmm7;
      /* 0x0040 */ struct _M128A* Xmm8;
      /* 0x0048 */ struct _M128A* Xmm9;
      /* 0x0050 */ struct _M128A* Xmm10;
      /* 0x0058 */ struct _M128A* Xmm11;
      /* 0x0060 */ struct _M128A* Xmm12;
      /* 0x0068 */ struct _M128A* Xmm13;
      /* 0x0070 */ struct _M128A* Xmm14;
      /* 0x0078 */ struct _M128A* Xmm15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
  union
  {
    /* 0x0080 */ unsigned __int64* IntegerContext[16];
    struct
    {
      /* 0x0080 */ unsigned __int64* Rax;
      /* 0x0088 */ unsigned __int64* Rcx;
      /* 0x0090 */ unsigned __int64* Rdx;
      /* 0x0098 */ unsigned __int64* Rbx;
      /* 0x00a0 */ unsigned __int64* Rsp;
      /* 0x00a8 */ unsigned __int64* Rbp;
      /* 0x00b0 */ unsigned __int64* Rsi;
      /* 0x00b8 */ unsigned __int64* Rdi;
      /* 0x00c0 */ unsigned __int64* R8;
      /* 0x00c8 */ unsigned __int64* R9;
      /* 0x00d0 */ unsigned __int64* R10;
      /* 0x00d8 */ unsigned __int64* R11;
      /* 0x00e0 */ unsigned __int64* R12;
      /* 0x00e8 */ unsigned __int64* R13;
      /* 0x00f0 */ unsigned __int64* R14;
      /* 0x00f8 */ unsigned __int64* R15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS; /* size: 0x0100 */

typedef struct _GETSETCONTEXT
{
  /* 0x0000 */ struct _KAPC Apc;
  /* 0x0058 */ char Mode;
  union
  {
    /* 0x0059 */ unsigned char Flags;
    struct /* bitfield */
    {
      /* 0x0059 */ unsigned char SignalEvent : 1; /* bit position: 0 */
      /* 0x0059 */ unsigned char PerformUnwind : 1; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x005a */ char Padding_397[2];
  /* 0x005c */ long ResultStatus;
  /* 0x0060 */ struct _KGATE WakeGate;
  /* 0x0078 */ struct _CONTEXT* ContextPtr;
  /* 0x0080 */ struct _KNONVOLATILE_CONTEXT_POINTERS NonVolatileContext;
} GETSETCONTEXT, *PGETSETCONTEXT; /* size: 0x0180 */

typedef struct _DBGKM_LOAD_DLL32
{
  /* 0x0000 */ unsigned long FileHandle;
  /* 0x0004 */ unsigned long BaseOfDll;
  /* 0x0008 */ unsigned long DebugInfoFileOffset;
  /* 0x000c */ unsigned long DebugInfoSize;
  /* 0x0010 */ unsigned long NamePointer;
} DBGKM_LOAD_DLL32, *PDBGKM_LOAD_DLL32; /* size: 0x0014 */

typedef struct _EXCEPTION_RECORD32
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned long ExceptionRecord;
  /* 0x000c */ unsigned long ExceptionAddress;
  /* 0x0010 */ unsigned long NumberParameters;
  /* 0x0014 */ unsigned long ExceptionInformation[15];
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32; /* size: 0x0050 */

typedef struct _DBGKM_EXCEPTION32
{
  /* 0x0000 */ struct _EXCEPTION_RECORD32 ExceptionRecord;
  /* 0x0050 */ unsigned long FirstChance;
} DBGKM_EXCEPTION32, *PDBGKM_EXCEPTION32; /* size: 0x0054 */

typedef struct _DBGKM_CREATE_THREAD32
{
  /* 0x0000 */ unsigned long SubSystemKey;
  /* 0x0004 */ unsigned long StartAddress;
} DBGKM_CREATE_THREAD32, *PDBGKM_CREATE_THREAD32; /* size: 0x0008 */

typedef struct _DBGKM_CREATE_PROCESS32
{
  /* 0x0000 */ unsigned long SubSystemKey;
  /* 0x0004 */ unsigned long FileHandle;
  /* 0x0008 */ unsigned long BaseOfImage;
  /* 0x000c */ unsigned long DebugInfoFileOffset;
  /* 0x0010 */ unsigned long DebugInfoSize;
  /* 0x0014 */ struct _DBGKM_CREATE_THREAD32 InitialThread;
} DBGKM_CREATE_PROCESS32, *PDBGKM_CREATE_PROCESS32; /* size: 0x001c */

typedef struct _DBGKM_EXIT_PROCESS
{
  /* 0x0000 */ long ExitStatus;
} DBGKM_EXIT_PROCESS, *PDBGKM_EXIT_PROCESS; /* size: 0x0004 */

typedef struct _DBGKM_UNLOAD_DLL32
{
  /* 0x0000 */ unsigned long BaseAddress;
} DBGKM_UNLOAD_DLL32, *PDBGKM_UNLOAD_DLL32; /* size: 0x0004 */

typedef struct _SECTION_IMAGE_INFORMATION32
{
  /* 0x0000 */ unsigned long TransferAddress;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ unsigned long MaximumStackSize;
  /* 0x000c */ unsigned long CommittedStackSize;
  /* 0x0010 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned short SubSystemMinorVersion;
      /* 0x0016 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0014 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned long GpValue;
  /* 0x001c */ unsigned short ImageCharacteristics;
  /* 0x001e */ unsigned short DllCharacteristics;
  /* 0x0020 */ unsigned short Machine;
  /* 0x0022 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0023 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0023 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0023 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0023 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0024 */ unsigned long LoaderFlags;
  /* 0x0028 */ unsigned long ImageFileSize;
  /* 0x002c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION32, *PSECTION_IMAGE_INFORMATION32; /* size: 0x0030 */

typedef struct _DBGKM_ERROR_MSG32
{
  /* 0x0000 */ struct _EXCEPTION_RECORD32 ExceptionRecord;
  /* 0x0050 */ struct _SECTION_IMAGE_INFORMATION32 ImageInfo;
  union
  {
    /* 0x0080 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0080 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0080 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x0080 */ unsigned long IsFilterMessage : 1; /* bit position: 2 */
      /* 0x0080 */ unsigned long SpareBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} DBGKM_ERROR_MSG32, *PDBGKM_ERROR_MSG32; /* size: 0x0084 */

typedef struct _PCI_TYPE1_CFG_CYCLE_BITS
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long Reserved1 : 2; /* bit position: 0 */
          /* 0x0000 */ unsigned long RegisterNumber : 6; /* bit position: 2 */
          /* 0x0000 */ unsigned long FunctionNumber : 3; /* bit position: 8 */
          /* 0x0000 */ unsigned long DeviceNumber : 5; /* bit position: 11 */
          /* 0x0000 */ unsigned long BusNumber : 8; /* bit position: 16 */
          /* 0x0000 */ unsigned long Reserved2 : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} PCI_TYPE1_CFG_CYCLE_BITS, *PPCI_TYPE1_CFG_CYCLE_BITS; /* size: 0x0004 */

typedef struct _HAL_PROCESSOR_FEATURE
{
  /* 0x0000 */ unsigned long UsableFeatureBits;
} HAL_PROCESSOR_FEATURE, *PHAL_PROCESSOR_FEATURE; /* size: 0x0004 */

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT; /* size: 0x0020 */

typedef struct _EXFAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} EXFAT_STATISTICS, *PEXFAT_STATISTICS; /* size: 0x0024 */

struct TESTHOOKCALLBACK_REGISTRATION_STRUCT
{
  /* 0x0000 */ unsigned long CallbackIndex;
  /* 0x0004 */ long Padding_398;
  /* 0x0008 */ void* Callback /* function */;
}; /* size: 0x0010 */

typedef struct _REG_QUERY_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned long* SecurityInformation;
  /* 0x0010 */ void* SecurityDescriptor;
  /* 0x0018 */ unsigned long* Length;
  /* 0x0020 */ void* CallContext;
  /* 0x0028 */ void* ObjectContext;
  /* 0x0030 */ void* Reserved;
} REG_QUERY_KEY_SECURITY_INFORMATION, *PREG_QUERY_KEY_SECURITY_INFORMATION; /* size: 0x0038 */

typedef struct _POP_THERMAL_ZONE_METRICS
{
  /* 0x0000 */ struct _ERESOURCE MetricsResource;
  /* 0x0068 */ unsigned long ActiveCount;
  /* 0x006c */ unsigned long PassiveCount;
  /* 0x0070 */ union _LARGE_INTEGER LastActiveStartTick;
  /* 0x0078 */ union _LARGE_INTEGER AverageActiveTime;
  /* 0x0080 */ union _LARGE_INTEGER LastPassiveStartTick;
  /* 0x0088 */ union _LARGE_INTEGER AveragePassiveTime;
  /* 0x0090 */ union _LARGE_INTEGER StartTickSinceLastReset;
} POP_THERMAL_ZONE_METRICS, *PPOP_THERMAL_ZONE_METRICS; /* size: 0x0098 */

typedef struct _EVENT_TRACE_HEADER
{
  /* 0x0000 */ unsigned short Size;
  union
  {
    /* 0x0002 */ unsigned short FieldTypeFlags;
    struct
    {
      /* 0x0002 */ unsigned char HeaderType;
      /* 0x0003 */ unsigned char MarkerFlags;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0004 */ unsigned long Version;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Level;
      /* 0x0006 */ unsigned short Version;
    } /* size: 0x0004 */ Class;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  union
  {
    /* 0x0018 */ struct _GUID Guid;
    /* 0x0018 */ unsigned __int64 GuidPtr;
  }; /* size: 0x0010 */
  union
  {
    struct
    {
      /* 0x0028 */ unsigned long KernelTime;
      /* 0x002c */ unsigned long UserTime;
    }; /* size: 0x0008 */
    /* 0x0028 */ unsigned __int64 ProcessorTime;
    struct
    {
      /* 0x0028 */ unsigned long ClientContext;
      /* 0x002c */ unsigned long Flags;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} EVENT_TRACE_HEADER, *PEVENT_TRACE_HEADER; /* size: 0x0030 */

typedef struct _EVENT_TRACE
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
  /* 0x0030 */ unsigned long InstanceId;
  /* 0x0034 */ unsigned long ParentInstanceId;
  /* 0x0038 */ struct _GUID ParentGuid;
  /* 0x0048 */ void* MofData;
  /* 0x0050 */ unsigned long MofLength;
  union
  {
    /* 0x0054 */ unsigned long ClientContext;
    /* 0x0054 */ struct _ETW_BUFFER_CONTEXT BufferContext;
  }; /* size: 0x0004 */
} EVENT_TRACE, *PEVENT_TRACE; /* size: 0x0058 */

typedef struct _WMI_DATATRACER_CSWAP
{
  /* 0x0000 */ unsigned long OldThreadId;
  /* 0x0004 */ unsigned long OldProcessId;
  /* 0x0008 */ unsigned __int64 CurrentPebsIndex;
} WMI_DATATRACER_CSWAP, *PWMI_DATATRACER_CSWAP; /* size: 0x0010 */

typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char BenefitsFromWriteAggregation;
  /* 0x0009 */ char __PADDING__[3];
} DEVICE_WRITE_AGGREGATION_DESCRIPTOR, *PDEVICE_WRITE_AGGREGATION_DESCRIPTOR; /* size: 0x000c */

typedef struct _PARTITION_INFORMATION_MBR
{
  /* 0x0000 */ unsigned char PartitionType;
  /* 0x0001 */ unsigned char BootIndicator;
  /* 0x0002 */ unsigned char RecognizedPartition;
  /* 0x0003 */ char Padding_399;
  /* 0x0004 */ unsigned long HiddenSectors;
} PARTITION_INFORMATION_MBR, *PPARTITION_INFORMATION_MBR; /* size: 0x0008 */

typedef union _WHEA_ERROR_INJECTION_CAPABILITIES
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ProcessorCorrectable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ProcessorUncorrectableNonFatal : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ProcessorUncorrectableFatal : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long MemoryCorrectable : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long MemoryUncorrectableNonFatal : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long MemoryUncorrectableFatal : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long PCIExpressCorrectable : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long PCIExpressUncorrectableNonFatal : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long PCIExpressUncorrectableFatal : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long PlatformCorrectable : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long PlatformUncorrectableNonFatal : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long PlatformUncorrectableFatal : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long IA64Corrected : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long IA64Recoverable : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long IA64Fatal : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned long IA64RecoverableCache : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long IA64RecoverableRegFile : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long Reserved : 15; /* bit position: 17 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_ERROR_INJECTION_CAPABILITIES, *PWHEA_ERROR_INJECTION_CAPABILITIES; /* size: 0x0004 */

typedef struct _POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ enum SYSTEM_POWER_CONDITION PowerCondition;
  /* 0x0018 */ unsigned long DataLength;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
} POWER_SETTING_VALUE, *PPOWER_SETTING_VALUE; /* size: 0x0020 */

typedef struct _POWER_LEGACY_EVENT
{
  /* 0x0000 */ enum POWER_ACTION PowerAction;
  /* 0x0004 */ unsigned long Code;
  /* 0x0008 */ unsigned long Data;
  /* 0x000c */ unsigned char NotifyPrefetch;
  /* 0x000d */ char Padding_400[3];
  /* 0x0010 */ void* WaitEvent;
} POWER_LEGACY_EVENT, *PPOWER_LEGACY_EVENT; /* size: 0x0018 */

typedef struct _POWER_MESSAGE
{
  /* 0x0000 */ enum POWER_MESSAGE_TYPE Type;
  /* 0x0004 */ long Padding_401;
  union
  {
    /* 0x0008 */ struct _POWER_SETTING_REGISTRATION PowerPolicyRegistration;
    /* 0x0008 */ struct _POWER_SETTING_REGISTRATION PowerStateRegistration;
    /* 0x0008 */ struct _POWER_SETTING_VALUE PowerPolicyChange;
    /* 0x0008 */ struct _POWER_SETTING_VALUE PowerStateChange;
    /* 0x0008 */ struct _POWER_SETTING_VALUE PowerStateInitial;
    /* 0x0008 */ struct _POWER_LEGACY_EVENT PowerLegacyEvent;
    /* 0x0008 */ struct _POWER_DISPLAY_BRIGHTNESS_VALUE PowerBrightnessChange;
    /* 0x0008 */ struct _POWER_REQUEST_OVERRIDE_INFO PowerRequestOverrideInfo;
  }; /* size: 0x0030 */
} POWER_MESSAGE, *PPOWER_MESSAGE; /* size: 0x0038 */

typedef union _PCI_EXPRESS_SRIOV_STATUS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short VFMigrationStatus : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short Reserved1 : 15; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_SRIOV_STATUS, *PPCI_EXPRESS_SRIOV_STATUS; /* size: 0x0002 */

typedef struct _WMI_TRACE_RUNDOWN_NOTIFICATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long LoggerId;
  /* 0x0008 */ unsigned long Flags;
} WMI_TRACE_RUNDOWN_NOTIFICATION, *PWMI_TRACE_RUNDOWN_NOTIFICATION; /* size: 0x000c */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
} FILE_PIPE_CLIENT_PROCESS_BUFFER, *PFILE_PIPE_CLIENT_PROCESS_BUFFER; /* size: 0x0010 */

typedef struct _PM_DISPATCH_TABLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ void* Function[1];
} PM_DISPATCH_TABLE, *PPM_DISPATCH_TABLE; /* size: 0x0010 */

typedef struct _ETW_PRIORITY_EVENT
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ char OldPriority;
  /* 0x0005 */ char NewPriority;
  /* 0x0006 */ char DynamicPriority;
  /* 0x0007 */ char Reserved;
} ETW_PRIORITY_EVENT, *PETW_PRIORITY_EVENT; /* size: 0x0008 */

typedef struct _OEM_FONT_FILE_HEADER
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned long FileSize;
  /* 0x0006 */ unsigned char Copyright[60];
  /* 0x0042 */ unsigned short Type;
  /* 0x0044 */ unsigned short Points;
  /* 0x0046 */ unsigned short VerticleResolution;
  /* 0x0048 */ unsigned short HorizontalResolution;
  /* 0x004a */ unsigned short Ascent;
  /* 0x004c */ unsigned short InternalLeading;
  /* 0x004e */ unsigned short ExternalLeading;
  /* 0x0050 */ unsigned char Italic;
  /* 0x0051 */ unsigned char Underline;
  /* 0x0052 */ unsigned char StrikeOut;
  /* 0x0053 */ unsigned short Weight;
  /* 0x0055 */ unsigned char CharacterSet;
  /* 0x0056 */ unsigned short PixelWidth;
  /* 0x0058 */ unsigned short PixelHeight;
  /* 0x005a */ unsigned char Family;
  /* 0x005b */ unsigned short AverageWidth;
  /* 0x005d */ unsigned short MaximumWidth;
  /* 0x005f */ unsigned char FirstCharacter;
  /* 0x0060 */ unsigned char LastCharacter;
  /* 0x0061 */ unsigned char DefaultCharacter;
  /* 0x0062 */ unsigned char BreakCharacter;
  /* 0x0063 */ unsigned short WidthInBytes;
  /* 0x0065 */ unsigned long Device;
  /* 0x0069 */ unsigned long Face;
  /* 0x006d */ unsigned long BitsPointer;
  /* 0x0071 */ unsigned long BitsOffset;
  /* 0x0075 */ unsigned char Filler;
  /* 0x0076 */ struct
  {
    /* 0x0076 */ unsigned short Width;
    /* 0x0078 */ unsigned short Offset;
  } /* size: 0x0004 */ Map[1];
} OEM_FONT_FILE_HEADER, *POEM_FONT_FILE_HEADER; /* size: 0x007a */

typedef struct _RTL_PROCESS_LOCK_INFORMATION
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ unsigned short Type;
  /* 0x000a */ unsigned short CreatorBackTraceIndex;
  /* 0x000c */ long Padding_402;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ long LockCount;
  /* 0x001c */ unsigned long ContentionCount;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ long RecursionCount;
  /* 0x0028 */ unsigned long NumberOfWaitingShared;
  /* 0x002c */ unsigned long NumberOfWaitingExclusive;
} RTL_PROCESS_LOCK_INFORMATION, *PRTL_PROCESS_LOCK_INFORMATION; /* size: 0x0030 */

typedef struct _TRUSTED_DOMAIN_NAME_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} TRUSTED_DOMAIN_NAME_INFO, *PTRUSTED_DOMAIN_NAME_INFO; /* size: 0x0010 */

typedef struct _OSVERSIONINFOA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
} OSVERSIONINFOA, *POSVERSIONINFOA; /* size: 0x0094 */

typedef struct _SECTIONBASICINFO
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long AllocationAttributes;
  /* 0x000c */ long Padding_403;
  /* 0x0010 */ union _LARGE_INTEGER MaximumSize;
} SECTIONBASICINFO, *PSECTIONBASICINFO; /* size: 0x0018 */

typedef struct _NLS_DATA_BLOCK
{
  /* 0x0000 */ void* AnsiCodePageData;
  /* 0x0008 */ void* OemCodePageData;
  /* 0x0010 */ void* UnicodeCaseTableData;
} NLS_DATA_BLOCK, *PNLS_DATA_BLOCK; /* size: 0x0018 */

typedef struct _WHEA_X86_REGISTER_STATE
{
  /* 0x0000 */ unsigned long Eax;
  /* 0x0004 */ unsigned long Ebx;
  /* 0x0008 */ unsigned long Ecx;
  /* 0x000c */ unsigned long Edx;
  /* 0x0010 */ unsigned long Esi;
  /* 0x0014 */ unsigned long Edi;
  /* 0x0018 */ unsigned long Ebp;
  /* 0x001c */ unsigned long Esp;
  /* 0x0020 */ unsigned short Cs;
  /* 0x0022 */ unsigned short Ds;
  /* 0x0024 */ unsigned short Ss;
  /* 0x0026 */ unsigned short Es;
  /* 0x0028 */ unsigned short Fs;
  /* 0x002a */ unsigned short Gs;
  /* 0x002c */ unsigned long Eflags;
  /* 0x0030 */ unsigned long Eip;
  /* 0x0034 */ unsigned long Cr0;
  /* 0x0038 */ unsigned long Cr1;
  /* 0x003c */ unsigned long Cr2;
  /* 0x0040 */ unsigned long Cr3;
  /* 0x0044 */ unsigned long Cr4;
  /* 0x0048 */ unsigned __int64 Gdtr;
  /* 0x0050 */ unsigned __int64 Idtr;
  /* 0x0058 */ unsigned short Ldtr;
  /* 0x005a */ unsigned short Tr;
} WHEA_X86_REGISTER_STATE, *PWHEA_X86_REGISTER_STATE; /* size: 0x005c */

typedef struct _PROFILE_PARAMETER_BLOCK
{
  /* 0x0000 */ unsigned short Status;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short DockingState;
  /* 0x0006 */ unsigned short Capabilities;
  /* 0x0008 */ unsigned long DockID;
  /* 0x000c */ unsigned long SerialNumber;
} PROFILE_PARAMETER_BLOCK, *PPROFILE_PARAMETER_BLOCK; /* size: 0x0010 */

typedef struct _TPM_BOOT_ENTROPY_LDR_RESULT
{
  /* 0x0000 */ unsigned __int64 Policy;
  /* 0x0008 */ enum _TPM_BOOT_ENTROPY_RESULT_CODE ResultCode;
  /* 0x000c */ long ResultStatus;
  /* 0x0010 */ unsigned __int64 Time;
  /* 0x0018 */ unsigned long EntropyLength;
  /* 0x001c */ unsigned char EntropyData[40];
  /* 0x0044 */ long __PADDING__[1];
} TPM_BOOT_ENTROPY_LDR_RESULT, *PTPM_BOOT_ENTROPY_LDR_RESULT; /* size: 0x0048 */

typedef struct _LOADER_PARAMETER_EXTENSION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct _PROFILE_PARAMETER_BLOCK Profile;
  /* 0x0014 */ long Padding_404;
  /* 0x0018 */ void* EmInfFileImage;
  /* 0x0020 */ unsigned long EmInfFileSize;
  /* 0x0024 */ long Padding_405;
  /* 0x0028 */ void* TriageDumpBlock;
  /* 0x0030 */ unsigned __int64 LoaderPagesSpanned;
  /* 0x0038 */ struct _HEADLESS_LOADER_BLOCK* HeadlessLoaderBlock;
  /* 0x0040 */ struct _SMBIOS_TABLE_HEADER* SMBiosEPSHeader;
  /* 0x0048 */ void* DrvDBImage;
  /* 0x0050 */ unsigned long DrvDBSize;
  /* 0x0054 */ long Padding_406;
  /* 0x0058 */ struct _NETWORK_LOADER_BLOCK* NetworkLoaderBlock;
  /* 0x0060 */ struct _LIST_ENTRY FirmwareDescriptorListHead;
  /* 0x0070 */ void* AcpiTable;
  /* 0x0078 */ unsigned long AcpiTableSize;
  struct /* bitfield */
  {
    /* 0x007c */ unsigned long LastBootSucceeded : 1; /* bit position: 0 */
    /* 0x007c */ unsigned long LastBootShutdown : 1; /* bit position: 1 */
    /* 0x007c */ unsigned long IoPortAccessSupported : 1; /* bit position: 2 */
    /* 0x007c */ unsigned long Reserved : 29; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0080 */ struct _LOADER_PERFORMANCE_DATA* LoaderPerformanceData;
  /* 0x0088 */ struct _LIST_ENTRY BootApplicationPersistentData;
  /* 0x0098 */ void* WmdTestResult;
  /* 0x00a0 */ struct _GUID BootIdentifier;
  /* 0x00b0 */ unsigned long ResumePages;
  /* 0x00b4 */ long Padding_407;
  /* 0x00b8 */ void* DumpHeader;
  /* 0x00c0 */ void* BgContext;
  /* 0x00c8 */ void* NumaLocalityInfo;
  /* 0x00d0 */ void* NumaGroupAssignment;
  /* 0x00d8 */ struct _LIST_ENTRY AttachedHives;
  /* 0x00e8 */ unsigned long MemoryCachingRequirementsCount;
  /* 0x00ec */ long Padding_408;
  /* 0x00f0 */ void* MemoryCachingRequirements;
  /* 0x00f8 */ struct _TPM_BOOT_ENTROPY_LDR_RESULT TpmBootEntropyResult;
  /* 0x0140 */ unsigned __int64 ProcessorCounterFrequency;
} LOADER_PARAMETER_EXTENSION, *PLOADER_PARAMETER_EXTENSION; /* size: 0x0148 */

typedef struct _REG_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ enum _REG_ACTION Action;
  /* 0x0008 */ unsigned long KeyLength;
  /* 0x000c */ wchar_t Key[1];
  /* 0x000e */ char __PADDING__[2];
} REG_NOTIFY_INFORMATION, *PREG_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef union _WHEA_ERROR_PACKET_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long PreviousError : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long HypervisorError : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Simulated : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long PlatformPfaControl : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long PlatformDirectedOffline : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Reserved2 : 26; /* bit position: 6 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_ERROR_PACKET_FLAGS, *PWHEA_ERROR_PACKET_FLAGS; /* size: 0x0004 */

typedef struct _MIPS32_CONTEXT
{
  union
  {
    /* 0x0000 */ unsigned long Argument[4];
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned __int64 FltF0;
  /* 0x0018 */ unsigned __int64 FltF2;
  /* 0x0020 */ unsigned __int64 FltF4;
  /* 0x0028 */ unsigned __int64 FltF6;
  /* 0x0030 */ unsigned __int64 FltF8;
  /* 0x0038 */ unsigned __int64 FltF10;
  /* 0x0040 */ unsigned __int64 FltF12;
  /* 0x0048 */ unsigned __int64 FltF14;
  /* 0x0050 */ unsigned __int64 FltF16;
  /* 0x0058 */ unsigned __int64 FltF18;
  /* 0x0060 */ unsigned __int64 FltF20;
  /* 0x0068 */ unsigned __int64 FltF22;
  /* 0x0070 */ unsigned __int64 FltF24;
  /* 0x0078 */ unsigned __int64 FltF26;
  /* 0x0080 */ unsigned __int64 FltF28;
  /* 0x0088 */ unsigned __int64 FltF30;
  /* 0x0090 */ unsigned long IntZero;
  /* 0x0094 */ unsigned long IntAt;
  /* 0x0098 */ unsigned long IntV0;
  /* 0x009c */ unsigned long IntV1;
  /* 0x00a0 */ unsigned long IntA0;
  /* 0x00a4 */ unsigned long IntA1;
  /* 0x00a8 */ unsigned long IntA2;
  /* 0x00ac */ unsigned long IntA3;
  /* 0x00b0 */ unsigned long IntT0;
  /* 0x00b4 */ unsigned long IntT1;
  /* 0x00b8 */ unsigned long IntT2;
  /* 0x00bc */ unsigned long IntT3;
  /* 0x00c0 */ unsigned long IntT4;
  /* 0x00c4 */ unsigned long IntT5;
  /* 0x00c8 */ unsigned long IntT6;
  /* 0x00cc */ unsigned long IntT7;
  /* 0x00d0 */ unsigned long IntS0;
  /* 0x00d4 */ unsigned long IntS1;
  /* 0x00d8 */ unsigned long IntS2;
  /* 0x00dc */ unsigned long IntS3;
  /* 0x00e0 */ unsigned long IntS4;
  /* 0x00e4 */ unsigned long IntS5;
  /* 0x00e8 */ unsigned long IntS6;
  /* 0x00ec */ unsigned long IntS7;
  /* 0x00f0 */ unsigned long IntT8;
  /* 0x00f4 */ unsigned long IntT9;
  /* 0x00f8 */ unsigned long IntK0;
  /* 0x00fc */ unsigned long IntK1;
  /* 0x0100 */ unsigned long IntGp;
  /* 0x0104 */ unsigned long IntSp;
  /* 0x0108 */ unsigned long IntS8;
  /* 0x010c */ unsigned long IntRa;
  /* 0x0110 */ unsigned long IntLo;
  /* 0x0114 */ unsigned long IntHi;
  /* 0x0118 */ unsigned long Fsr;
  /* 0x011c */ unsigned long Fir;
  /* 0x0120 */ unsigned long Psr;
  /* 0x0124 */ unsigned long ContextFlags;
} MIPS32_CONTEXT, *PMIPS32_CONTEXT; /* size: 0x0128 */

typedef struct _DBGKD_PRINT_TRACE
{
  /* 0x0000 */ unsigned long LengthOfData;
} DBGKD_PRINT_TRACE, *PDBGKD_PRINT_TRACE; /* size: 0x0004 */

typedef struct _DBGKD_TRACE_IO
{
  /* 0x0000 */ unsigned long ApiNumber;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  union
  {
    union
    {
      /* 0x0008 */ unsigned __int64 ReserveSpace[7];
      /* 0x0008 */ struct _DBGKD_PRINT_TRACE PrintTrace;
    }; /* size: 0x0038 */
  } /* size: 0x0038 */ u;
} DBGKD_TRACE_IO, *PDBGKD_TRACE_IO; /* size: 0x0040 */

typedef struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AvailablePages;
  /* 0x0008 */ unsigned __int64 CommittedPages;
  /* 0x0010 */ unsigned __int64 CommitLimit;
  /* 0x0018 */ unsigned __int64 PeakCommitment;
} SYSTEM_BASIC_PERFORMANCE_INFORMATION, *PSYSTEM_BASIC_PERFORMANCE_INFORMATION; /* size: 0x0020 */

struct SYSTEM_BATTERY_STATE
{
  /* 0x0000 */ unsigned char AcOnLine;
  /* 0x0001 */ unsigned char BatteryPresent;
  /* 0x0002 */ unsigned char Charging;
  /* 0x0003 */ unsigned char Discharging;
  /* 0x0004 */ unsigned char Spare1[4];
  /* 0x0008 */ unsigned long MaxCapacity;
  /* 0x000c */ unsigned long RemainingCapacity;
  /* 0x0010 */ unsigned long Rate;
  /* 0x0014 */ unsigned long EstimatedTime;
  /* 0x0018 */ unsigned long DefaultAlert1;
  /* 0x001c */ unsigned long DefaultAlert2;
}; /* size: 0x0020 */

typedef struct _INITIAL_TEB
{
  struct
  {
    /* 0x0000 */ void* OldStackBase;
    /* 0x0008 */ void* OldStackLimit;
  } /* size: 0x0010 */ OldInitialTeb;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* StackAllocationBase;
} INITIAL_TEB, *PINITIAL_TEB; /* size: 0x0028 */

typedef struct _WHEA128A
{
  /* 0x0000 */ unsigned __int64 Low;
  /* 0x0008 */ __int64 High;
} WHEA128A, *PWHEA128A; /* size: 0x0010 */

typedef struct _WHEA_X64_REGISTER_STATE
{
  /* 0x0000 */ unsigned __int64 Rax;
  /* 0x0008 */ unsigned __int64 Rbx;
  /* 0x0010 */ unsigned __int64 Rcx;
  /* 0x0018 */ unsigned __int64 Rdx;
  /* 0x0020 */ unsigned __int64 Rsi;
  /* 0x0028 */ unsigned __int64 Rdi;
  /* 0x0030 */ unsigned __int64 Rbp;
  /* 0x0038 */ unsigned __int64 Rsp;
  /* 0x0040 */ unsigned __int64 R8;
  /* 0x0048 */ unsigned __int64 R9;
  /* 0x0050 */ unsigned __int64 R10;
  /* 0x0058 */ unsigned __int64 R11;
  /* 0x0060 */ unsigned __int64 R12;
  /* 0x0068 */ unsigned __int64 R13;
  /* 0x0070 */ unsigned __int64 R14;
  /* 0x0078 */ unsigned __int64 R15;
  /* 0x0080 */ unsigned short Cs;
  /* 0x0082 */ unsigned short Ds;
  /* 0x0084 */ unsigned short Ss;
  /* 0x0086 */ unsigned short Es;
  /* 0x0088 */ unsigned short Fs;
  /* 0x008a */ unsigned short Gs;
  /* 0x008c */ unsigned long Reserved;
  /* 0x0090 */ unsigned __int64 Rflags;
  /* 0x0098 */ unsigned __int64 Eip;
  /* 0x00a0 */ unsigned __int64 Cr0;
  /* 0x00a8 */ unsigned __int64 Cr1;
  /* 0x00b0 */ unsigned __int64 Cr2;
  /* 0x00b8 */ unsigned __int64 Cr3;
  /* 0x00c0 */ unsigned __int64 Cr4;
  /* 0x00c8 */ unsigned __int64 Cr8;
  /* 0x00d0 */ struct _WHEA128A Gdtr;
  /* 0x00e0 */ struct _WHEA128A Idtr;
  /* 0x00f0 */ unsigned short Ldtr;
  /* 0x00f2 */ unsigned short Tr;
  /* 0x00f4 */ long __PADDING__[3];
} WHEA_X64_REGISTER_STATE, *PWHEA_X64_REGISTER_STATE; /* size: 0x0100 */

typedef struct _IMAGE_FILE_HEADER
{
  /* 0x0000 */ unsigned short Machine;
  /* 0x0002 */ unsigned short NumberOfSections;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long PointerToSymbolTable;
  /* 0x000c */ unsigned long NumberOfSymbols;
  /* 0x0010 */ unsigned short SizeOfOptionalHeader;
  /* 0x0012 */ unsigned short Characteristics;
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER; /* size: 0x0014 */

typedef struct _IMAGE_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned long SizeOfStackReserve;
  /* 0x004c */ unsigned long SizeOfStackCommit;
  /* 0x0050 */ unsigned long SizeOfHeapReserve;
  /* 0x0054 */ unsigned long SizeOfHeapCommit;
  /* 0x0058 */ unsigned long LoaderFlags;
  /* 0x005c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0060 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER; /* size: 0x00e0 */

typedef struct _IMAGE_NT_HEADERS
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
} IMAGE_NT_HEADERS, *PIMAGE_NT_HEADERS; /* size: 0x00f8 */

typedef struct _EISA_PORT_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char NumberPorts : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_PORT_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_PORT_DESCRIPTOR Configuration;
  /* 0x0001 */ unsigned short PortAddress;
} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION; /* size: 0x0003 */

typedef struct _PERFINFO_SAMPLED_PROFILE_CONFIG
{
  /* 0x0000 */ unsigned long Source;
  /* 0x0004 */ unsigned long NewInterval;
  /* 0x0008 */ unsigned long OldInterval;
} PERFINFO_SAMPLED_PROFILE_CONFIG, *PPERFINFO_SAMPLED_PROFILE_CONFIG; /* size: 0x000c */

typedef struct _WMI_SPLITIO_NOTIFY_ROUTINES
{
  /* 0x0000 */ void* InitiationNotifyRoutine /* function */;
} WMI_SPLITIO_NOTIFY_ROUTINES, *PWMI_SPLITIO_NOTIFY_ROUTINES; /* size: 0x0008 */

typedef struct _KCRM_PROP_REQUEST
{
  /* 0x0000 */ unsigned long cookie;
  /* 0x0004 */ unsigned long RmCookie;
  /* 0x0008 */ long RefCount;
  /* 0x000c */ long Padding_409;
  /* 0x0010 */ struct _LIST_ENTRY NextSameRm;
  /* 0x0020 */ struct _LIST_ENTRY AllPropReqListEntry;
  /* 0x0030 */ unsigned long NextProtocolOffset;
  /* 0x0034 */ long Padding_410;
  /* 0x0038 */ struct _KRESOURCEMANAGER* PendingResourceManager;
  /* 0x0040 */ struct _KTRANSACTION* Transaction;
  /* 0x0048 */ struct _GUID TransactionUow;
  /* 0x0058 */ unsigned long Notification;
  /* 0x005c */ long Status;
  /* 0x0060 */ void* CompletedRoutine /* function */;
  /* 0x0068 */ void* CompletedRoutineData;
  /* 0x0070 */ struct _KMUTANT Mutex;
  /* 0x00a8 */ struct _WORK_QUEUE_ITEM DelayedWorkItem;
  /* 0x00c8 */ struct _KDPC AbandonRequestDpc;
  /* 0x0108 */ struct _KTIMER AbandonRequestTimer;
  /* 0x0148 */ union _LARGE_INTEGER LastPropScheduleCall;
  /* 0x0150 */ unsigned long NumberOfProtocols;
  /* 0x0154 */ long Padding_411;
  /* 0x0158 */ struct _GUID* ProtocolArray;
  /* 0x0160 */ unsigned long BufferLength;
  /* 0x0164 */ long Padding_412;
  /* 0x0168 */ void* Buffer;
  /* 0x0170 */ unsigned long ResultLength;
  /* 0x0174 */ long Padding_413;
  /* 0x0178 */ void* ResultBuffer;
  /* 0x0180 */ unsigned char Complete;
  /* 0x0181 */ char __PADDING__[7];
} KCRM_PROP_REQUEST, *PKCRM_PROP_REQUEST; /* size: 0x0188 */

struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  /* 0x0000 */ unsigned char bAuxType;
  /* 0x0001 */ unsigned char bReserved;
  /* 0x0002 */ unsigned long SymbolTableIndex;
  /* 0x0006 */ unsigned char rgbReserved[12];
}; /* size: 0x0012 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT
{
  /* 0x0000 */ unsigned long Hits;
  /* 0x0004 */ unsigned char PercentFrequency;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT, *PSYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT; /* size: 0x0008 */

typedef struct _ACCESS_DENIED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_ACE, *PACCESS_DENIED_ACE; /* size: 0x000c */

typedef struct _TOKEN_MANDATORY_LABEL
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES Label;
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL; /* size: 0x0010 */

typedef struct _MCA_DRIVER_INFO
{
  /* 0x0000 */ void* ExceptionCallback /* function */;
  /* 0x0008 */ void* DpcCallback /* function */;
  /* 0x0010 */ void* DeviceContext;
} MCA_DRIVER_INFO, *PMCA_DRIVER_INFO; /* size: 0x0018 */

typedef struct _READCONTROLSPACE
{
  /* 0x0000 */ unsigned short Processor;
  /* 0x0002 */ char Padding_414[2];
  /* 0x0004 */ unsigned long Address;
  /* 0x0008 */ unsigned long BufLen;
  /* 0x000c */ unsigned char Buf[1];
  /* 0x000d */ char __PADDING__[3];
} READCONTROLSPACE, *PREADCONTROLSPACE; /* size: 0x0010 */

struct EXT_API_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Reserved;
}; /* size: 0x0008 */

typedef struct _LPC_UNREGISTER_PROCESS_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ void* UniqueProcessId;
} LPC_UNREGISTER_PROCESS_MSG, *PLPC_UNREGISTER_PROCESS_MSG; /* size: 0x0030 */

typedef struct _EX_PUSH_LOCK_CACHE_AWARE_PADDED
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  union
  {
    /* 0x0008 */ unsigned char Pad[120];
    struct
    {
      /* 0x0008 */ unsigned char Single;
      /* 0x0009 */ char __PADDING__[119];
    }; /* size: 0x0078 */
  }; /* size: 0x0078 */
} EX_PUSH_LOCK_CACHE_AWARE_PADDED, *PEX_PUSH_LOCK_CACHE_AWARE_PADDED; /* size: 0x0080 */

typedef struct _WHEA_PCIXDEVICE_ID
{
  /* 0x0000 */ unsigned short VendorId;
  /* 0x0002 */ unsigned short DeviceId;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long ClassCode : 24; /* bit position: 0 */
    /* 0x0004 */ unsigned long FunctionNumber : 8; /* bit position: 24 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DeviceNumber : 8; /* bit position: 0 */
    /* 0x0008 */ unsigned long BusNumber : 8; /* bit position: 8 */
    /* 0x0008 */ unsigned long SegmentNumber : 8; /* bit position: 16 */
    /* 0x0008 */ unsigned long Reserved1 : 8; /* bit position: 24 */
  }; /* bitfield */
  /* 0x000c */ unsigned long Reserved2;
} WHEA_PCIXDEVICE_ID, *PWHEA_PCIXDEVICE_ID; /* size: 0x0010 */

typedef struct _WHEA_PCIXDEVICE_ERROR_SECTION
{
  /* 0x0000 */ union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS ValidBits;
  /* 0x0008 */ union _WHEA_ERROR_STATUS ErrorStatus;
  /* 0x0010 */ struct _WHEA_PCIXDEVICE_ID IdInfo;
  /* 0x0020 */ unsigned long MemoryNumber;
  /* 0x0024 */ unsigned long IoNumber;
  /* 0x0028 */ struct WHEA_PCIXDEVICE_REGISTER_PAIR RegisterDataPairs[1];
} WHEA_PCIXDEVICE_ERROR_SECTION, *PWHEA_PCIXDEVICE_ERROR_SECTION; /* size: 0x0038 */

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS
{
  /* 0x0000 */ void* PristineRoutine /* function */;
  /* 0x0008 */ void* NewRoutine /* function */;
} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS; /* size: 0x0010 */

typedef struct _DEBUG_TYPED_DATA
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ unsigned __int64 EngineHandle;
  /* 0x0018 */ unsigned __int64 Data;
  /* 0x0020 */ unsigned long Size;
  /* 0x0024 */ unsigned long Flags;
  /* 0x0028 */ unsigned long TypeId;
  /* 0x002c */ unsigned long BaseTypeId;
  /* 0x0030 */ unsigned long Tag;
  /* 0x0034 */ unsigned long Register;
  /* 0x0038 */ unsigned __int64 Internal[9];
} DEBUG_TYPED_DATA, *PDEBUG_TYPED_DATA; /* size: 0x0080 */

typedef struct _EXT_TYPED_DATA
{
  /* 0x0000 */ enum _EXT_TDOP Operation;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _DEBUG_TYPED_DATA InData;
  /* 0x0088 */ struct _DEBUG_TYPED_DATA OutData;
  /* 0x0108 */ unsigned long InStrIndex;
  /* 0x010c */ unsigned long In32;
  /* 0x0110 */ unsigned long Out32;
  /* 0x0114 */ long Padding_415;
  /* 0x0118 */ unsigned __int64 In64;
  /* 0x0120 */ unsigned __int64 Out64;
  /* 0x0128 */ unsigned long StrBufferIndex;
  /* 0x012c */ unsigned long StrBufferChars;
  /* 0x0130 */ unsigned long StrCharsNeeded;
  /* 0x0134 */ unsigned long DataBufferIndex;
  /* 0x0138 */ unsigned long DataBufferBytes;
  /* 0x013c */ unsigned long DataBytesNeeded;
  /* 0x0140 */ HRESULT Status;
  /* 0x0144 */ long Padding_416;
  /* 0x0148 */ unsigned __int64 Reserved[8];
} EXT_TYPED_DATA, *PEXT_TYPED_DATA; /* size: 0x0188 */

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION
{
  /* 0x0000 */ unsigned long ActionTaken;
  /* 0x0004 */ long Padding_417;
  /* 0x0008 */ unsigned __int64 CrashData[5];
  /* 0x0030 */ unsigned long VerifierMode;
  /* 0x0034 */ unsigned long VerifierFlags;
  /* 0x0038 */ wchar_t VerifierTargets[256];
} SYSTEM_VERIFIER_TRIAGE_INFORMATION, *PSYSTEM_VERIFIER_TRIAGE_INFORMATION; /* size: 0x0238 */

typedef union _HV_X64_MSR_REFERENCE_TSC_CONTENTS
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Enable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ReservedP : 11; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 GpaPageNumber : 52; /* bit position: 12 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} HV_X64_MSR_REFERENCE_TSC_CONTENTS, *PHV_X64_MSR_REFERENCE_TSC_CONTENTS; /* size: 0x0008 */

typedef struct _HAL_BUS_INFORMATION
{
  /* 0x0000 */ enum _INTERFACE_TYPE BusType;
  /* 0x0004 */ enum _BUS_DATA_TYPE ConfigurationType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long Reserved;
} HAL_BUS_INFORMATION, *PHAL_BUS_INFORMATION; /* size: 0x0010 */

typedef struct _DBGKM_EXCEPTION64
{
  /* 0x0000 */ struct _EXCEPTION_RECORD64 ExceptionRecord;
  /* 0x0098 */ unsigned long FirstChance;
  /* 0x009c */ long __PADDING__[1];
} DBGKM_EXCEPTION64, *PDBGKM_EXCEPTION64; /* size: 0x00a0 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
{
  /* 0x0000 */ void* pValue;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ long __PADDING__[1];
} TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE, *PTOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE; /* size: 0x0010 */

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_SESSION_POOLTAG_INFORMATION, *PSYSTEM_SESSION_POOLTAG_INFORMATION; /* size: 0x0038 */

typedef struct _IA64_LOADER_BLOCK
{
  /* 0x0000 */ unsigned long PlaceHolder;
} IA64_LOADER_BLOCK, *PIA64_LOADER_BLOCK; /* size: 0x0004 */

typedef struct _LSA_TRANSLATED_SID2
{
  /* 0x0000 */ enum _SID_NAME_USE Use;
  /* 0x0004 */ long Padding_418;
  /* 0x0008 */ void* Sid;
  /* 0x0010 */ long DomainIndex;
  /* 0x0014 */ unsigned long Flags;
} LSA_TRANSLATED_SID2, *PLSA_TRANSLATED_SID2; /* size: 0x0018 */

typedef struct _ALPC_LOG_ENTRY_RECEIVE_MESSAGE
{
  /* 0x0000 */ unsigned long MessageId;
} ALPC_LOG_ENTRY_RECEIVE_MESSAGE, *PALPC_LOG_ENTRY_RECEIVE_MESSAGE; /* size: 0x0004 */

typedef struct _PCI_HEADER_TYPE_1
{
  /* 0x0000 */ unsigned long BaseAddresses[2];
  /* 0x0008 */ unsigned char PrimaryBus;
  /* 0x0009 */ unsigned char SecondaryBus;
  /* 0x000a */ unsigned char SubordinateBus;
  /* 0x000b */ unsigned char SecondaryLatency;
  /* 0x000c */ unsigned char IOBase;
  /* 0x000d */ unsigned char IOLimit;
  /* 0x000e */ unsigned short SecondaryStatus;
  /* 0x0010 */ unsigned short MemoryBase;
  /* 0x0012 */ unsigned short MemoryLimit;
  /* 0x0014 */ unsigned short PrefetchBase;
  /* 0x0016 */ unsigned short PrefetchLimit;
  /* 0x0018 */ unsigned long PrefetchBaseUpper32;
  /* 0x001c */ unsigned long PrefetchLimitUpper32;
  /* 0x0020 */ unsigned short IOBaseUpper16;
  /* 0x0022 */ unsigned short IOLimitUpper16;
  /* 0x0024 */ unsigned char CapabilitiesPtr;
  /* 0x0025 */ unsigned char Reserved1[3];
  /* 0x0028 */ unsigned long ROMBaseAddress;
  /* 0x002c */ unsigned char InterruptLine;
  /* 0x002d */ unsigned char InterruptPin;
  /* 0x002e */ unsigned short BridgeControl;
} PCI_HEADER_TYPE_1, *PPCI_HEADER_TYPE_1; /* size: 0x0030 */

typedef struct _EVENT_INSTANCE_GUID_HEADER
{
  /* 0x0000 */ unsigned short Size;
  union
  {
    /* 0x0002 */ unsigned short FieldTypeFlags;
    struct
    {
      /* 0x0002 */ unsigned char HeaderType;
      /* 0x0003 */ unsigned char MarkerFlags;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0004 */ unsigned long Version;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Level;
      /* 0x0006 */ unsigned short Version;
    } /* size: 0x0004 */ Class;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  union
  {
    /* 0x0018 */ struct _GUID Guid;
    /* 0x0018 */ unsigned __int64 GuidPtr;
  }; /* size: 0x0010 */
  union
  {
    struct
    {
      /* 0x0028 */ unsigned long ClientContext;
      /* 0x002c */ unsigned long Flags;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0028 */ unsigned long KernelTime;
      /* 0x002c */ unsigned long UserTime;
    }; /* size: 0x0008 */
    /* 0x0028 */ unsigned __int64 ProcessorTime;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned long InstanceId;
  /* 0x0034 */ unsigned long ParentInstanceId;
  /* 0x0038 */ struct _GUID ParentGuid;
} EVENT_INSTANCE_GUID_HEADER, *PEVENT_INSTANCE_GUID_HEADER; /* size: 0x0048 */

typedef struct _PCI_HEADER_TYPE_0
{
  /* 0x0000 */ unsigned long BaseAddresses[6];
  /* 0x0018 */ unsigned long CIS;
  /* 0x001c */ unsigned short SubVendorID;
  /* 0x001e */ unsigned short SubSystemID;
  /* 0x0020 */ unsigned long ROMBaseAddress;
  /* 0x0024 */ unsigned char CapabilitiesPtr;
  /* 0x0025 */ unsigned char Reserved1[3];
  /* 0x0028 */ unsigned long Reserved2;
  /* 0x002c */ unsigned char InterruptLine;
  /* 0x002d */ unsigned char InterruptPin;
  /* 0x002e */ unsigned char MinimumGrant;
  /* 0x002f */ unsigned char MaximumLatency;
} PCI_HEADER_TYPE_0, *PPCI_HEADER_TYPE_0; /* size: 0x0030 */

typedef struct _PCI_COMMON_CONFIG
{
  /* 0x0000 */ unsigned short VendorID;
  /* 0x0002 */ unsigned short DeviceID;
  /* 0x0004 */ unsigned short Command;
  /* 0x0006 */ unsigned short Status;
  /* 0x0008 */ unsigned char RevisionID;
  /* 0x0009 */ unsigned char ProgIf;
  /* 0x000a */ unsigned char SubClass;
  /* 0x000b */ unsigned char BaseClass;
  /* 0x000c */ unsigned char CacheLineSize;
  /* 0x000d */ unsigned char LatencyTimer;
  /* 0x000e */ unsigned char HeaderType;
  /* 0x000f */ unsigned char BIST;
  union
  {
    union
    {
      /* 0x0010 */ struct _PCI_HEADER_TYPE_0 type0;
      /* 0x0010 */ struct _PCI_HEADER_TYPE_1 type1;
      /* 0x0010 */ struct _PCI_HEADER_TYPE_2 type2;
    }; /* size: 0x0030 */
  } /* size: 0x0030 */ u;
  /* 0x0040 */ unsigned char DeviceSpecific[192];
} PCI_COMMON_CONFIG, *PPCI_COMMON_CONFIG; /* size: 0x0100 */

typedef struct _DMA_CONFIGURATION_BYTE0
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Channel : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 3; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE0, *PDMA_CONFIGURATION_BYTE0; /* size: 0x0001 */

typedef union _IMAGE_AUX_SYMBOL
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long TagIndex;
      union
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Linenumber;
            /* 0x0006 */ unsigned short Size;
          } /* size: 0x0004 */ LnSz;
          /* 0x0004 */ unsigned long TotalSize;
        }; /* size: 0x0004 */
      } /* size: 0x0004 */ Misc;
      union
      {
        union
        {
          struct
          {
            /* 0x0008 */ unsigned long PointerToLinenumber;
            /* 0x000c */ unsigned long PointerToNextFunction;
          } /* size: 0x0008 */ Function;
          struct
          {
            /* 0x0008 */ unsigned short Dimension[4];
          } /* size: 0x0008 */ Array;
        }; /* size: 0x0008 */
      } /* size: 0x0008 */ FcnAry;
      /* 0x0010 */ unsigned short TvIndex;
    } /* size: 0x0012 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[18];
    } /* size: 0x0012 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ unsigned char bReserved;
      /* 0x0010 */ short HighNumber;
    } /* size: 0x0012 */ Section;
    /* 0x0000 */ struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    struct
    {
      /* 0x0000 */ unsigned long crc;
      /* 0x0004 */ unsigned char rgbReserved[14];
    } /* size: 0x0012 */ CRC;
  }; /* size: 0x0012 */
} IMAGE_AUX_SYMBOL, *PIMAGE_AUX_SYMBOL; /* size: 0x0012 */

typedef struct _DBGKD_LOAD_SYMBOLS32
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ unsigned long BaseOfDll;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ unsigned long CheckSum;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned char UnloadSymbols;
  /* 0x0015 */ char __PADDING__[3];
} DBGKD_LOAD_SYMBOLS32, *PDBGKD_LOAD_SYMBOLS32; /* size: 0x0018 */

typedef struct _FILE_PIPE_LOCAL_INFORMATION
{
  /* 0x0000 */ unsigned long NamedPipeType;
  /* 0x0004 */ unsigned long NamedPipeConfiguration;
  /* 0x0008 */ unsigned long MaximumInstances;
  /* 0x000c */ unsigned long CurrentInstances;
  /* 0x0010 */ unsigned long InboundQuota;
  /* 0x0014 */ unsigned long ReadDataAvailable;
  /* 0x0018 */ unsigned long OutboundQuota;
  /* 0x001c */ unsigned long WriteQuotaAvailable;
  /* 0x0020 */ unsigned long NamedPipeState;
  /* 0x0024 */ unsigned long NamedPipeEnd;
} FILE_PIPE_LOCAL_INFORMATION, *PFILE_PIPE_LOCAL_INFORMATION; /* size: 0x0028 */

typedef union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long AttentionButtonPresent : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long PowerControllerPresent : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long MRLSensorPresent : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AttentionIndicatorPresent : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long PowerIndicatorPresent : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long HotPlugSurprise : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long HotPlugCapable : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long SlotPowerLimit : 8; /* bit position: 7 */
      /* 0x0000 */ unsigned long SlotPowerLimitScale : 2; /* bit position: 15 */
      /* 0x0000 */ unsigned long ElectromechanicalLockPresent : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long NoCommandCompletedSupport : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long PhysicalSlotNumber : 13; /* bit position: 19 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER, *PPCI_EXPRESS_SLOT_CAPABILITIES_REGISTER; /* size: 0x0004 */

typedef struct _MUILANGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ unsigned char bUseUseMachineConfigList;
  /* 0x0009 */ char Padding_419[7];
  /* 0x0010 */ struct _MUIREGISTRYINFO* RegInfo;
  /* 0x0018 */ struct _MUILANGLISTNODE* Languages;
  /* 0x0020 */ unsigned __int64 ullMask;
  /* 0x0028 */ unsigned int uConsoleFlag;
  /* 0x002c */ wchar_t Checksum[10];
} MUILANGLIST, *PMUILANGLIST; /* size: 0x0040 */

typedef struct _MMPFN_MEMSNAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 InitialPageFrameIndex;
  /* 0x0008 */ unsigned __int64 Count;
} MMPFN_MEMSNAP_INFORMATION, *PMMPFN_MEMSNAP_INFORMATION; /* size: 0x0010 */

typedef struct _MUIREGISTRYINFO
{
  /* 0x0000 */ unsigned int Owned;
  /* 0x0004 */ unsigned short InstallLanguageFallback[4];
  /* 0x000c */ unsigned long Generation;
  /* 0x0010 */ unsigned long ProcessGeneration;
  /* 0x0014 */ long Padding_420;
  /* 0x0018 */ struct _MUILANGUAGES* Installed;
  /* 0x0020 */ struct _MUISTRINGPOOL* Strings;
  /* 0x0028 */ struct _MUILANGCFGLIST* MachineConfig;
  /* 0x0030 */ struct _MUILANGCFGLIST* UserConfig;
  /* 0x0038 */ struct _MUILANGLIST* MachinePreferred;
  /* 0x0040 */ struct _MUILANGLIST* UserPreferred;
  /* 0x0048 */ struct _MUILANGLIST* ProcessPreferred;
  /* 0x0050 */ struct _MUILANGLIST* MergedUser;
  /* 0x0058 */ struct _MUILANGLIST* MergedMachine;
  /* 0x0060 */ struct _MUILANGLIST* MergedFallback;
  /* 0x0068 */ struct _MUIREGISTRYINFO* PrevRegInfo;
  /* 0x0070 */ unsigned long MUI_Locked;
  /* 0x0074 */ unsigned long MUI_SE;
  /* 0x0078 */ unsigned long MUI_NumberAllowed;
  /* 0x007c */ long Padding_421;
  /* 0x0080 */ unsigned short* MUI_AllowedLanguage;
  /* 0x0088 */ unsigned short* MUI_InstalledSKU;
  /* 0x0090 */ unsigned long cbInstalledSKU;
  /* 0x0094 */ unsigned long cbAllowedLanguage;
  /* 0x0098 */ unsigned short* MUI_DisallowedLanguage;
  /* 0x00a0 */ unsigned long cbDisallowedLanguage;
  /* 0x00a4 */ long __PADDING__[1];
} MUIREGISTRYINFO, *PMUIREGISTRYINFO; /* size: 0x00a8 */

typedef struct _DEVICE_MEDIA_INFO
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ union _LARGE_INTEGER Cylinders;
        /* 0x0008 */ enum _STORAGE_MEDIA_TYPE MediaType;
        /* 0x000c */ unsigned long TracksPerCylinder;
        /* 0x0010 */ unsigned long SectorsPerTrack;
        /* 0x0014 */ unsigned long BytesPerSector;
        /* 0x0018 */ unsigned long NumberMediaSides;
        /* 0x001c */ unsigned long MediaCharacteristics;
      } /* size: 0x0020 */ DiskInfo;
      struct
      {
        /* 0x0000 */ union _LARGE_INTEGER Cylinders;
        /* 0x0008 */ enum _STORAGE_MEDIA_TYPE MediaType;
        /* 0x000c */ unsigned long TracksPerCylinder;
        /* 0x0010 */ unsigned long SectorsPerTrack;
        /* 0x0014 */ unsigned long BytesPerSector;
        /* 0x0018 */ unsigned long NumberMediaSides;
        /* 0x001c */ unsigned long MediaCharacteristics;
      } /* size: 0x0020 */ RemovableDiskInfo;
      struct
      {
        /* 0x0000 */ enum _STORAGE_MEDIA_TYPE MediaType;
        /* 0x0004 */ unsigned long MediaCharacteristics;
        /* 0x0008 */ unsigned long CurrentBlockSize;
        /* 0x000c */ enum _STORAGE_BUS_TYPE BusType;
        union
        {
          struct
          {
            /* 0x0010 */ unsigned char MediumType;
            /* 0x0011 */ unsigned char DensityCode;
          } /* size: 0x0002 */ ScsiInformation;
        } /* size: 0x0002 */ BusSpecificData;
        /* 0x0012 */ char __PADDING__[2];
      } /* size: 0x0014 */ TapeInfo;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ DeviceSpecific;
} DEVICE_MEDIA_INFO, *PDEVICE_MEDIA_INFO; /* size: 0x0020 */

typedef struct _UNLOADED_DRIVERS
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ void* StartAddress;
  /* 0x0018 */ void* EndAddress;
  /* 0x0020 */ union _LARGE_INTEGER CurrentTime;
} UNLOADED_DRIVERS, *PUNLOADED_DRIVERS; /* size: 0x0028 */

typedef struct _MUISTRINGPOOL
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumStrings;
  /* 0x0006 */ unsigned short NumStrings;
  /* 0x0008 */ unsigned short MaxNumCharsInPool;
  /* 0x000a */ unsigned short NumCharsInPool;
  /* 0x000c */ long Padding_422;
  /* 0x0010 */ short* Strings;
  /* 0x0018 */ unsigned short* Pool;
} MUISTRINGPOOL, *PMUISTRINGPOOL; /* size: 0x0020 */

typedef union _HV_STATS_OBJECT_IDENTITY
{
  struct
  {
    /* 0x0000 */ unsigned int LogicalProcessorIndex;
    /* 0x0004 */ unsigned int ReservedZ0;
    /* 0x0008 */ unsigned int ReservedZ1;
    /* 0x000c */ unsigned short ReservedZ2;
    /* 0x000e */ unsigned char ReservedZ3;
    /* 0x000f */ unsigned char ReservedZ4;
  } /* size: 0x0010 */ LogicalProcessor;
} HV_STATS_OBJECT_IDENTITY, *PHV_STATS_OBJECT_IDENTITY; /* size: 0x0010 */

typedef struct _DBGKD_REQUEST_BREAKPOINT
{
  /* 0x0000 */ unsigned long HardwareBreakPointNumber;
  /* 0x0004 */ unsigned long Available;
} DBGKD_REQUEST_BREAKPOINT, *PDBGKD_REQUEST_BREAKPOINT; /* size: 0x0008 */

typedef struct _DBGKD_CONTROL_REQUEST
{
  /* 0x0000 */ unsigned long ApiNumber;
  union
  {
    union
    {
      /* 0x0004 */ struct _DBGKD_REQUEST_BREAKPOINT RequestBreakpoint;
      /* 0x0004 */ struct _DBGKD_RELEASE_BREAKPOINT ReleaseBreakpoint;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} DBGKD_CONTROL_REQUEST, *PDBGKD_CONTROL_REQUEST; /* size: 0x000c */

typedef struct _MUILANGCFGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ struct _MUILANGCFGNODE* LanguageConfigs;
} MUILANGCFGLIST, *PMUILANGCFGLIST; /* size: 0x0010 */

typedef union _WHEA_NMI_ERROR_SECTION_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long HypervisorError : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_NMI_ERROR_SECTION_FLAGS, *PWHEA_NMI_ERROR_SECTION_FLAGS; /* size: 0x0004 */

typedef struct _MUILANGCFGNODE
{
  /* 0x0000 */ short LangSpec;
  /* 0x0002 */ unsigned short FallbackTypes;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ short FallbackSpecs[3];
} MUILANGCFGNODE, *PMUILANGCFGNODE; /* size: 0x000c */

typedef struct _WMI_SPINLOCK
{
  /* 0x0000 */ void* SpinLockAddress;
  /* 0x0008 */ void* CallerAddress;
  /* 0x0010 */ unsigned __int64 AcquireTime;
  /* 0x0018 */ unsigned __int64 ReleaseTime;
  /* 0x0020 */ unsigned long WaitTimeInCycles;
  /* 0x0024 */ unsigned long SpinCount;
  /* 0x0028 */ unsigned long ThreadId;
  /* 0x002c */ unsigned long InterruptCount;
  /* 0x0030 */ unsigned char Irql;
  /* 0x0031 */ unsigned char AcquireDepth;
  union
  {
    struct /* bitfield */
    {
      /* 0x0032 */ unsigned char AcquireMode : 6; /* bit position: 0 */
      /* 0x0032 */ unsigned char ExecuteDpc : 1; /* bit position: 6 */
      /* 0x0032 */ unsigned char ExecuteIsr : 1; /* bit position: 7 */
    }; /* bitfield */
    /* 0x0032 */ unsigned char Flags;
  }; /* size: 0x0001 */
  /* 0x0033 */ char __PADDING__[5];
} WMI_SPINLOCK, *PWMI_SPINLOCK; /* size: 0x0038 */

typedef struct _MUILANGLISTNODE
{
  /* 0x0000 */ unsigned short LanguageType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ short LanguageSpec;
} MUILANGLISTNODE, *PMUILANGLISTNODE; /* size: 0x0006 */

typedef struct _PCI_AGP_APERTURE_PAGE_SIZE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short PageSizeMask : 11; /* bit position: 0 */
    /* 0x0000 */ unsigned short Rsvd1 : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short PageSizeSelect : 4; /* bit position: 12 */
  }; /* bitfield */
} PCI_AGP_APERTURE_PAGE_SIZE, *PPCI_AGP_APERTURE_PAGE_SIZE; /* size: 0x0002 */

typedef struct _ZONE_SEGMENT_HEADER
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY SegmentList;
  /* 0x0008 */ void* Reserved;
} ZONE_SEGMENT_HEADER, *PZONE_SEGMENT_HEADER; /* size: 0x0010 */

typedef struct _PLUGPLAY_NOTIFICATION_HEADER
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} PLUGPLAY_NOTIFICATION_HEADER, *PPLUGPLAY_NOTIFICATION_HEADER; /* size: 0x0014 */

typedef struct _WIN32_POWERINFO_USERPRESENT
{
  /* 0x0000 */ unsigned char Virtual;
} WIN32_POWERINFO_USERPRESENT, *PWIN32_POWERINFO_USERPRESENT; /* size: 0x0001 */

typedef struct _LSA_TOKEN_INFORMATION_NULL
{
  /* 0x0000 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0008 */ struct _TOKEN_GROUPS* Groups;
} LSA_TOKEN_INFORMATION_NULL, *PLSA_TOKEN_INFORMATION_NULL; /* size: 0x0010 */

typedef struct _STRING32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ unsigned long Buffer;
} STRING32, *PSTRING32; /* size: 0x0008 */

typedef struct _PEB32
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SkipPatchingUser32Forwarders : 1; /* bit position: 4 */
      /* 0x0003 */ unsigned char SpareBits : 3; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ unsigned long Mutant;
  /* 0x0008 */ unsigned long ImageBaseAddress;
  /* 0x000c */ unsigned long Ldr;
  /* 0x0010 */ unsigned long ProcessParameters;
  /* 0x0014 */ unsigned long SubSystemData;
  /* 0x0018 */ unsigned long ProcessHeap;
  /* 0x001c */ unsigned long FastPebLock;
  /* 0x0020 */ unsigned long AtlThunkSListPtr;
  /* 0x0024 */ unsigned long IFEOKey;
  union
  {
    /* 0x0028 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0028 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0028 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0028 */ unsigned long ProcessUsingVEH : 1; /* bit position: 2 */
      /* 0x0028 */ unsigned long ProcessUsingVCH : 1; /* bit position: 3 */
      /* 0x0028 */ unsigned long ProcessUsingFTH : 1; /* bit position: 4 */
      /* 0x0028 */ unsigned long ReservedBits0 : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    /* 0x002c */ unsigned long KernelCallbackTable;
    /* 0x002c */ unsigned long UserSharedInfoPtr;
  }; /* size: 0x0004 */
  /* 0x0030 */ unsigned long SystemReserved[1];
  /* 0x0034 */ unsigned long AtlThunkSListPtr32;
  /* 0x0038 */ unsigned long ApiSetMap;
  /* 0x003c */ unsigned long TlsExpansionCounter;
  /* 0x0040 */ unsigned long TlsBitmap;
  /* 0x0044 */ unsigned long TlsBitmapBits[2];
  /* 0x004c */ unsigned long ReadOnlySharedMemoryBase;
  /* 0x0050 */ unsigned long HotpatchInformation;
  /* 0x0054 */ unsigned long ReadOnlyStaticServerData;
  /* 0x0058 */ unsigned long AnsiCodePageData;
  /* 0x005c */ unsigned long OemCodePageData;
  /* 0x0060 */ unsigned long UnicodeCaseTableData;
  /* 0x0064 */ unsigned long NumberOfProcessors;
  /* 0x0068 */ unsigned long NtGlobalFlag;
  /* 0x006c */ long Padding_423;
  /* 0x0070 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x0078 */ unsigned long HeapSegmentReserve;
  /* 0x007c */ unsigned long HeapSegmentCommit;
  /* 0x0080 */ unsigned long HeapDeCommitTotalFreeThreshold;
  /* 0x0084 */ unsigned long HeapDeCommitFreeBlockThreshold;
  /* 0x0088 */ unsigned long NumberOfHeaps;
  /* 0x008c */ unsigned long MaximumNumberOfHeaps;
  /* 0x0090 */ unsigned long ProcessHeaps;
  /* 0x0094 */ unsigned long GdiSharedHandleTable;
  /* 0x0098 */ unsigned long ProcessStarterHelper;
  /* 0x009c */ unsigned long GdiDCAttributeList;
  /* 0x00a0 */ unsigned long LoaderLock;
  /* 0x00a4 */ unsigned long OSMajorVersion;
  /* 0x00a8 */ unsigned long OSMinorVersion;
  /* 0x00ac */ unsigned short OSBuildNumber;
  /* 0x00ae */ unsigned short OSCSDVersion;
  /* 0x00b0 */ unsigned long OSPlatformId;
  /* 0x00b4 */ unsigned long ImageSubsystem;
  /* 0x00b8 */ unsigned long ImageSubsystemMajorVersion;
  /* 0x00bc */ unsigned long ImageSubsystemMinorVersion;
  /* 0x00c0 */ unsigned long ActiveProcessAffinityMask;
  /* 0x00c4 */ unsigned long GdiHandleBuffer[34];
  /* 0x014c */ unsigned long PostProcessInitRoutine;
  /* 0x0150 */ unsigned long TlsExpansionBitmap;
  /* 0x0154 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x01d4 */ unsigned long SessionId;
  /* 0x01d8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x01e0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x01e8 */ unsigned long pShimData;
  /* 0x01ec */ unsigned long AppCompatInfo;
  /* 0x01f0 */ struct _STRING32 CSDVersion;
  /* 0x01f8 */ unsigned long ActivationContextData;
  /* 0x01fc */ unsigned long ProcessAssemblyStorageMap;
  /* 0x0200 */ unsigned long SystemDefaultActivationContextData;
  /* 0x0204 */ unsigned long SystemAssemblyStorageMap;
  /* 0x0208 */ unsigned long MinimumStackCommit;
  /* 0x020c */ unsigned long FlsCallback;
  /* 0x0210 */ struct LIST_ENTRY32 FlsListHead;
  /* 0x0218 */ unsigned long FlsBitmap;
  /* 0x021c */ unsigned long FlsBitmapBits[4];
  /* 0x022c */ unsigned long FlsHighIndex;
  /* 0x0230 */ unsigned long WerRegistrationData;
  /* 0x0234 */ unsigned long WerShipAssertPtr;
  /* 0x0238 */ unsigned long pContextData;
  /* 0x023c */ unsigned long pImageHeaderHash;
  union
  {
    /* 0x0240 */ unsigned long TracingFlags;
    struct /* bitfield */
    {
      /* 0x0240 */ unsigned long HeapTracingEnabled : 1; /* bit position: 0 */
      /* 0x0240 */ unsigned long CritSecTracingEnabled : 1; /* bit position: 1 */
      /* 0x0240 */ unsigned long SpareTracingBits : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0244 */ long __PADDING__[1];
} PEB32, *PPEB32; /* size: 0x0248 */

typedef struct _DBGKD_SET_INTERNAL_BREAKPOINT32
{
  /* 0x0000 */ unsigned long BreakpointAddress;
  /* 0x0004 */ unsigned long Flags;
} DBGKD_SET_INTERNAL_BREAKPOINT32, *PDBGKD_SET_INTERNAL_BREAKPOINT32; /* size: 0x0008 */

typedef struct _SD_GLOBAL_CHANGE_OUTPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ChangeType;
  /* 0x0008 */ struct _SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
} SD_GLOBAL_CHANGE_OUTPUT, *PSD_GLOBAL_CHANGE_OUTPUT; /* size: 0x0040 */

typedef struct _PROCESSOR_IDLE_DOMAIN
{
  /* 0x0000 */ struct _KAFFINITY_EX Members;
} PROCESSOR_IDLE_DOMAIN, *PPROCESSOR_IDLE_DOMAIN; /* size: 0x0028 */

typedef struct _PROCESSOR_IDLE_DOMAINS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_424;
  /* 0x0008 */ struct _KAFFINITY_EX TargetProcessors;
  /* 0x0030 */ struct _PROCESSOR_IDLE_DOMAIN State[1];
} PROCESSOR_IDLE_DOMAINS, *PPROCESSOR_IDLE_DOMAINS; /* size: 0x0058 */

typedef struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER
{
  /* 0x0000 */ unsigned short CapabilityID;
  struct /* bitfield */
  {
    /* 0x0002 */ unsigned short Version : 4; /* bit position: 0 */
    /* 0x0002 */ unsigned short Next : 12; /* bit position: 4 */
  }; /* bitfield */
} PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER, *PPCI_EXPRESS_ENHANCED_CAPABILITY_HEADER; /* size: 0x0004 */

typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Undefined : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned long DataLinkProtocolError : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long SurpriseDownError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Reserved2 : 6; /* bit position: 6 */
      /* 0x0000 */ unsigned long PoisonedTLP : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long FlowControlProtocolError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long CompletionTimeout : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned long CompleterAbort : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long UnexpectedCompletion : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long ReceiverOverflow : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long MalformedTLP : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long ECRCError : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long UnsupportedRequestError : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long Reserved3 : 11; /* bit position: 21 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS, *PPCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS; /* size: 0x0004 */

typedef union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ReceiverError : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 5; /* bit position: 1 */
      /* 0x0000 */ unsigned long BadTLP : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long BadDLLP : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long ReplayNumRollover : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long Reserved2 : 3; /* bit position: 9 */
      /* 0x0000 */ unsigned long ReplayTimerTimeout : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long AdvisoryNonFatalError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved3 : 18; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_CORRECTABLE_ERROR_MASK, *PPCI_EXPRESS_CORRECTABLE_ERROR_MASK; /* size: 0x0004 */

typedef union _PCI_EXPRESS_AER_CAPABILITIES
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long FirstErrorPointer : 5; /* bit position: 0 */
      /* 0x0000 */ unsigned long ECRCGenerationCapable : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long ECRCGenerationEnable : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long ECRCCheckCapable : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long ECRCCheckEnable : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long Reserved : 23; /* bit position: 9 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_AER_CAPABILITIES, *PPCI_EXPRESS_AER_CAPABILITIES; /* size: 0x0004 */

typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TargetAbortOnSplitCompletion : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long MasterAbortOnSplitCompletion : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReceivedTargetAbort : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReceivedMasterAbort : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long RsvdZ : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long UnexpectedSplitCompletionError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long UncorrectableSplitCompletion : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long UncorrectableDataError : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long UncorrectableAttributeError : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long UncorrectableAddressError : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long DelayedTransactionDiscardTimerExpired : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long PERRAsserted : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long SERRAsserted : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long InternalBridgeError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved : 18; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS, *PPCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS; /* size: 0x0004 */

typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TargetAbortOnSplitCompletion : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long MasterAbortOnSplitCompletion : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReceivedTargetAbort : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReceivedMasterAbort : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long RsvdZ : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long UnexpectedSplitCompletionError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long UncorrectableSplitCompletion : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long UncorrectableDataError : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long UncorrectableAttributeError : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long UncorrectableAddressError : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long DelayedTransactionDiscardTimerExpired : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long PERRAsserted : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long SERRAsserted : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long InternalBridgeError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved : 18; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK, *PPCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK; /* size: 0x0004 */

typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TargetAbortOnSplitCompletion : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long MasterAbortOnSplitCompletion : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReceivedTargetAbort : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReceivedMasterAbort : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long RsvdZ : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long UnexpectedSplitCompletionError : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long UncorrectableSplitCompletion : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long UncorrectableDataError : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long UncorrectableAttributeError : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long UncorrectableAddressError : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long DelayedTransactionDiscardTimerExpired : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long PERRAsserted : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long SERRAsserted : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long InternalBridgeError : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved : 18; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY, *PPCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY; /* size: 0x0004 */

typedef union _PCI_EXPRESS_SEC_AER_CAPABILITIES
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long SecondaryUncorrectableFirstErrorPtr : 5; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SEC_AER_CAPABILITIES, *PPCI_EXPRESS_SEC_AER_CAPABILITIES; /* size: 0x0004 */

typedef struct _PCI_EXPRESS_BRIDGE_AER_CAPABILITY
{
  /* 0x0000 */ struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;
  /* 0x0004 */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS UncorrectableErrorStatus;
  /* 0x0008 */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK UncorrectableErrorMask;
  /* 0x000c */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY UncorrectableErrorSeverity;
  /* 0x0010 */ union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS CorrectableErrorStatus;
  /* 0x0014 */ union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK CorrectableErrorMask;
  /* 0x0018 */ union _PCI_EXPRESS_AER_CAPABILITIES CapabilitiesAndControl;
  /* 0x001c */ unsigned long HeaderLog[4];
  /* 0x002c */ union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS SecUncorrectableErrorStatus;
  /* 0x0030 */ union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK SecUncorrectableErrorMask;
  /* 0x0034 */ union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY SecUncorrectableErrorSeverity;
  /* 0x0038 */ union _PCI_EXPRESS_SEC_AER_CAPABILITIES SecCapabilitiesAndControl;
  /* 0x003c */ unsigned long SecHeaderLog[4];
} PCI_EXPRESS_BRIDGE_AER_CAPABILITY, *PPCI_EXPRESS_BRIDGE_AER_CAPABILITY; /* size: 0x004c */

typedef struct _SYSDBG_IO_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long AddressSpace;
} SYSDBG_IO_SPACE, *PSYSDBG_IO_SPACE; /* size: 0x0020 */

typedef struct _VIDEO_RECORD
{
  /* 0x0000 */ unsigned long MemorySize;
  /* 0x0004 */ unsigned long XResolution;
  /* 0x0008 */ unsigned long YResolution;
  /* 0x000c */ unsigned long BitsPerPixel;
  /* 0x0010 */ unsigned long VRefresh;
  /* 0x0014 */ wchar_t ChipType[256];
  /* 0x0214 */ wchar_t DACType[256];
  /* 0x0414 */ wchar_t AdapterString[256];
  /* 0x0614 */ wchar_t BiosString[256];
  /* 0x0814 */ wchar_t DeviceId[256];
  /* 0x0a14 */ unsigned long StateFlags;
} VIDEO_RECORD, *PVIDEO_RECORD; /* size: 0x0a18 */

typedef struct _PERFINFO_CONTIGUOUS_PAGE_GENERATE
{
  /* 0x0000 */ unsigned __int64 ThreadId;
  /* 0x0008 */ unsigned __int64 NumberOfBytes;
} PERFINFO_CONTIGUOUS_PAGE_GENERATE, *PPERFINFO_CONTIGUOUS_PAGE_GENERATE; /* size: 0x0010 */

typedef struct _IO_CSQ_IRP_CONTEXT
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ long Padding_425;
  /* 0x0008 */ struct _IRP* Irp;
  /* 0x0010 */ struct _IO_CSQ* Csq;
} IO_CSQ_IRP_CONTEXT, *PIO_CSQ_IRP_CONTEXT; /* size: 0x0018 */

struct PROCESSOR_IDLE_TIMES
{
  /* 0x0000 */ unsigned __int64 StartTime;
  /* 0x0008 */ unsigned __int64 EndTime;
  /* 0x0010 */ unsigned long Reserved[4];
}; /* size: 0x0020 */

typedef struct _EVENTLOGRECORD
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long RecordNumber;
  /* 0x000c */ unsigned long TimeGenerated;
  /* 0x0010 */ unsigned long TimeWritten;
  /* 0x0014 */ unsigned long EventID;
  /* 0x0018 */ unsigned short EventType;
  /* 0x001a */ unsigned short NumStrings;
  /* 0x001c */ unsigned short EventCategory;
  /* 0x001e */ unsigned short ReservedFlags;
  /* 0x0020 */ unsigned long ClosingRecordNumber;
  /* 0x0024 */ unsigned long StringOffset;
  /* 0x0028 */ unsigned long UserSidLength;
  /* 0x002c */ unsigned long UserSidOffset;
  /* 0x0030 */ unsigned long DataLength;
  /* 0x0034 */ unsigned long DataOffset;
} EVENTLOGRECORD, *PEVENTLOGRECORD; /* size: 0x0038 */

typedef struct _PLUGPLAY_NOTIFY_HDR
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} PLUGPLAY_NOTIFY_HDR, *PPLUGPLAY_NOTIFY_HDR; /* size: 0x0014 */

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION
{
  /* 0x0000 */ struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
  /* 0x0014 */ long Padding_426;
  /* 0x0018 */ void* FileObject;
  /* 0x0020 */ long NameBufferOffset;
  /* 0x0024 */ unsigned char CustomDataBuffer[1];
  /* 0x0025 */ char __PADDING__[3];
} PLUGPLAY_CUSTOM_NOTIFICATION, *PPLUGPLAY_CUSTOM_NOTIFICATION; /* size: 0x0028 */

typedef struct _VHD_DISK_SIGNATURE
{
  /* 0x0000 */ unsigned long ParentPartitionNumber;
  /* 0x0004 */ unsigned char BootDevice[1];
  /* 0x0005 */ char __PADDING__[3];
} VHD_DISK_SIGNATURE, *PVHD_DISK_SIGNATURE; /* size: 0x0008 */

typedef struct _UNICODE_PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_427;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* CaseMatch;
  /* 0x0018 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0030 */ struct _UNICODE_STRING* Prefix;
} UNICODE_PREFIX_TABLE_ENTRY, *PUNICODE_PREFIX_TABLE_ENTRY; /* size: 0x0038 */

typedef struct _RTL_BITMAP_EX
{
  /* 0x0000 */ unsigned __int64 SizeOfBitMap;
  /* 0x0008 */ unsigned __int64* Buffer;
} RTL_BITMAP_EX, *PRTL_BITMAP_EX; /* size: 0x0010 */

struct PPM_IDLE_STATE_BUCKET_EX
{
  /* 0x0000 */ unsigned __int64 TotalTimeUs;
  /* 0x0008 */ unsigned long MinTimeUs;
  /* 0x000c */ unsigned long MaxTimeUs;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _DMA_CONFIGURATION_BYTE1
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Reserved0 : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned char TransferSize : 2; /* bit position: 2 */
    /* 0x0000 */ unsigned char Timing : 2; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 2; /* bit position: 6 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE1, *PDMA_CONFIGURATION_BYTE1; /* size: 0x0001 */

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION
{
  /* 0x0000 */ unsigned long PoolTag;
  /* 0x0004 */ unsigned long Flags;
} SYSTEM_SPECIAL_POOL_INFORMATION, *PSYSTEM_SPECIAL_POOL_INFORMATION; /* size: 0x0008 */

typedef struct _COVERAGE_MODULE_REQUEST
{
  /* 0x0000 */ enum _COVERAGE_REQUEST_CODES RequestType;
  /* 0x0004 */ long Padding_428;
  union
  {
    union
    {
      /* 0x0008 */ unsigned char MD5Hash[16];
      /* 0x0008 */ struct _UNICODE_STRING ModuleName;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ SearchInfo;
} COVERAGE_MODULE_REQUEST, *PCOVERAGE_MODULE_REQUEST; /* size: 0x0018 */

typedef struct _ETW_HEAP_EVENT_REALLOC
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ void* NewAddress;
  /* 0x0030 */ void* OldAddress;
  /* 0x0038 */ unsigned __int64 NewSize;
  /* 0x0040 */ unsigned __int64 OldSize;
  /* 0x0048 */ unsigned long Source;
} ETW_HEAP_EVENT_REALLOC, *PETW_HEAP_EVENT_REALLOC; /* size: 0x004c */

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS
{
  /* 0x0000 */ unsigned long SizeStruct;
  /* 0x0004 */ unsigned long Option;
  /* 0x0008 */ unsigned char OptionData[1];
  /* 0x0009 */ char __PADDING__[3];
} RTL_PROCESS_VERIFIER_OPTIONS, *PRTL_PROCESS_VERIFIER_OPTIONS; /* size: 0x000c */

typedef struct _WMI_IMAGEID_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 ImageBase64;
  /* 0x0008 */ unsigned __int64 ImageSize64;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ wchar_t OriginalFileName[1];
  /* 0x001a */ char __PADDING__[6];
} WMI_IMAGEID_INFORMATION64, *PWMI_IMAGEID_INFORMATION64; /* size: 0x0020 */

typedef struct _EVENT_TRACE_SESSION_SECURITY_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ unsigned long SecurityInformation;
  /* 0x0008 */ unsigned __int64 TraceHandle;
  /* 0x0010 */ unsigned char SecurityDescriptor[1];
  /* 0x0011 */ char __PADDING__[7];
} EVENT_TRACE_SESSION_SECURITY_INFORMATION, *PEVENT_TRACE_SESSION_SECURITY_INFORMATION; /* size: 0x0018 */

typedef struct _LOADER_PARTITION_INFORMATION_EX
{
  /* 0x0000 */ unsigned long PartitionStyle;
  /* 0x0004 */ unsigned long PartitionNumber;
  union
  {
    /* 0x0008 */ unsigned long Signature;
    /* 0x0008 */ struct _GUID DeviceId;
  }; /* size: 0x0010 */
  /* 0x0018 */ unsigned long Flags;
} LOADER_PARTITION_INFORMATION_EX, *PLOADER_PARTITION_INFORMATION_EX; /* size: 0x001c */

typedef struct _CI_LOG_MMCSS_STOP
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
} CI_LOG_MMCSS_STOP, *PCI_LOG_MMCSS_STOP; /* size: 0x0030 */

typedef struct _SEP_LSA_WORK_ITEM
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0010 */ enum _SEP_RM_LSA_MEMORY_TYPE CommandParamsMemoryType;
  /* 0x0014 */ enum _SEP_LSA_WORK_ITEM_TAG Tag;
  union
  {
    union
    {
      /* 0x0018 */ void* BaseAddress;
      /* 0x0018 */ struct _LUID LogonId;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ CommandParams;
  /* 0x0020 */ enum _LSA_COMMAND_NUMBER CommandNumber;
  /* 0x0024 */ unsigned long CommandParamsLength;
  /* 0x0028 */ void* ReplyBuffer;
  /* 0x0030 */ unsigned long ReplyBufferLength;
  /* 0x0034 */ unsigned long ListOrderCounter;
} SEP_LSA_WORK_ITEM, *PSEP_LSA_WORK_ITEM; /* size: 0x0038 */

typedef struct _EVENT_TRACE_STACK_TRACING_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ long Padding_429;
  /* 0x0008 */ unsigned __int64 TraceHandle;
  /* 0x0010 */ unsigned long HookId[1];
  /* 0x0014 */ long __PADDING__[1];
} EVENT_TRACE_STACK_TRACING_INFORMATION, *PEVENT_TRACE_STACK_TRACING_INFORMATION; /* size: 0x0018 */

typedef struct _EVENT_TRACE_POOLTAG_FILTER_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ long Padding_430;
  /* 0x0008 */ unsigned __int64 TraceHandle;
  /* 0x0010 */ unsigned long Filter[1];
  /* 0x0014 */ long __PADDING__[1];
} EVENT_TRACE_POOLTAG_FILTER_INFORMATION, *PEVENT_TRACE_POOLTAG_FILTER_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_VERIFIER_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Level;
  /* 0x0008 */ struct _UNICODE_STRING DriverName;
  /* 0x0018 */ unsigned long RaiseIrqls;
  /* 0x001c */ unsigned long AcquireSpinLocks;
  /* 0x0020 */ unsigned long SynchronizeExecutions;
  /* 0x0024 */ unsigned long AllocationsAttempted;
  /* 0x0028 */ unsigned long AllocationsSucceeded;
  /* 0x002c */ unsigned long AllocationsSucceededSpecialPool;
  /* 0x0030 */ unsigned long AllocationsWithNoTag;
  /* 0x0034 */ unsigned long TrimRequests;
  /* 0x0038 */ unsigned long Trims;
  /* 0x003c */ unsigned long AllocationsFailed;
  /* 0x0040 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0044 */ unsigned long Loads;
  /* 0x0048 */ unsigned long Unloads;
  /* 0x004c */ unsigned long UnTrackedPool;
  /* 0x0050 */ unsigned long CurrentPagedPoolAllocations;
  /* 0x0054 */ unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0058 */ unsigned long PeakPagedPoolAllocations;
  /* 0x005c */ unsigned long PeakNonPagedPoolAllocations;
  /* 0x0060 */ unsigned __int64 PagedPoolUsageInBytes;
  /* 0x0068 */ unsigned __int64 NonPagedPoolUsageInBytes;
  /* 0x0070 */ unsigned __int64 PeakPagedPoolUsageInBytes;
  /* 0x0078 */ unsigned __int64 PeakNonPagedPoolUsageInBytes;
} SYSTEM_VERIFIER_INFORMATION, *PSYSTEM_VERIFIER_INFORMATION; /* size: 0x0080 */

typedef union _PCI_EXPRESS_SRIOV_CAPS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long VFMigrationCapable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved1 : 20; /* bit position: 1 */
      /* 0x0000 */ unsigned long VFMigrationInterruptNumber : 11; /* bit position: 21 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SRIOV_CAPS, *PPCI_EXPRESS_SRIOV_CAPS; /* size: 0x0004 */

typedef union _PCI_EXPRESS_SRIOV_CONTROL
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short VFEnable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short VFMigrationEnable : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short VFMigrationInterruptEnable : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short VFMemorySpaceEnable : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short ARICapableHierarchy : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short Reserved1 : 11; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_SRIOV_CONTROL, *PPCI_EXPRESS_SRIOV_CONTROL; /* size: 0x0002 */

typedef union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long VFMigrationStateBIR : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned long VFMigrationStateOffset : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY, *PPCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY; /* size: 0x0004 */

typedef struct _PCI_EXPRESS_SRIOV_CAPABILITY
{
  /* 0x0000 */ struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;
  /* 0x0004 */ union _PCI_EXPRESS_SRIOV_CAPS SRIOVCapabilities;
  /* 0x0008 */ union _PCI_EXPRESS_SRIOV_CONTROL SRIOVControl;
  /* 0x000a */ union _PCI_EXPRESS_SRIOV_STATUS SRIOVStatus;
  /* 0x000c */ unsigned short InitialVFs;
  /* 0x000e */ unsigned short TotalVFs;
  /* 0x0010 */ unsigned short NumVFs;
  /* 0x0012 */ unsigned char FunctionDependencyLink;
  /* 0x0013 */ unsigned char RsvdP1;
  /* 0x0014 */ unsigned short FirstVFOffset;
  /* 0x0016 */ unsigned short VFStride;
  /* 0x0018 */ unsigned short RsvdP2;
  /* 0x001a */ unsigned short VFDeviceId;
  /* 0x001c */ unsigned long SupportedPageSizes;
  /* 0x0020 */ unsigned long SystemPageSize;
  /* 0x0024 */ unsigned long BaseAddresses[6];
  /* 0x003c */ union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY VFMigrationStateArrayOffset;
} PCI_EXPRESS_SRIOV_CAPABILITY, *PPCI_EXPRESS_SRIOV_CAPABILITY; /* size: 0x0040 */

typedef struct _ARM_KSWITCH_FRAME
{
  /* 0x0000 */ unsigned char ApcBypass;
  /* 0x0001 */ unsigned char Fill[3];
  /* 0x0004 */ unsigned long R4;
  /* 0x0008 */ unsigned long R5;
  /* 0x000c */ unsigned long R6;
  /* 0x0010 */ unsigned long R11;
  /* 0x0014 */ unsigned long Return;
} ARM_KSWITCH_FRAME, *PARM_KSWITCH_FRAME; /* size: 0x0018 */

typedef struct _CM_SCSI_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char HostIdentifier;
  /* 0x0005 */ char __PADDING__[1];
} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA; /* size: 0x0006 */

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long SizeOfBuf;
  /* 0x0008 */ void* Buffer;
} SYSTEM_SESSION_PROCESS_INFORMATION, *PSYSTEM_SESSION_PROCESS_INFORMATION; /* size: 0x0010 */

struct _TP_CALLBACK_INSTANCE;

typedef struct _CACHE_UNINITIALIZE_EVENT
{
  /* 0x0000 */ struct _CACHE_UNINITIALIZE_EVENT* Next;
  /* 0x0008 */ struct _KEVENT Event;
} CACHE_UNINITIALIZE_EVENT, *PCACHE_UNINITIALIZE_EVENT; /* size: 0x0020 */

typedef struct _TRIAGE_PNP_DEVICE_COMPLETION_REQUEST
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _TRIAGE_DEVICE_NODE* DeviceNode;
} TRIAGE_PNP_DEVICE_COMPLETION_REQUEST, *PTRIAGE_PNP_DEVICE_COMPLETION_REQUEST; /* size: 0x0018 */

typedef struct _TP_TASK
{
  /* 0x0000 */ const struct _TP_TASK_CALLBACKS* Callbacks;
  /* 0x0008 */ unsigned long NumaNode;
  /* 0x000c */ unsigned char IdealProcessor;
  /* 0x000d */ char Padding_431[3];
  /* 0x0010 */ struct _TP_NBQ_GUARD PostGuard;
  /* 0x0030 */ void* NBQNode;
} TP_TASK, *PTP_TASK; /* size: 0x0038 */

typedef struct _POOLED_USAGE_AND_LIMITS
{
  /* 0x0000 */ unsigned __int64 PeakPagedPoolUsage;
  /* 0x0008 */ unsigned __int64 PagedPoolUsage;
  /* 0x0010 */ unsigned __int64 PagedPoolLimit;
  /* 0x0018 */ unsigned __int64 PeakNonPagedPoolUsage;
  /* 0x0020 */ unsigned __int64 NonPagedPoolUsage;
  /* 0x0028 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0030 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0038 */ unsigned __int64 PagefileUsage;
  /* 0x0040 */ unsigned __int64 PagefileLimit;
} POOLED_USAGE_AND_LIMITS, *PPOOLED_USAGE_AND_LIMITS; /* size: 0x0048 */

typedef struct _IMAGE_BASE_RELOCATION
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long SizeOfBlock;
} IMAGE_BASE_RELOCATION, *PIMAGE_BASE_RELOCATION; /* size: 0x0008 */

typedef struct _READCONTROLSPACE32
{
  /* 0x0000 */ unsigned short Processor;
  /* 0x0002 */ char Padding_432[2];
  /* 0x0004 */ unsigned long Address;
  /* 0x0008 */ unsigned long BufLen;
  /* 0x000c */ unsigned char Buf[1];
  /* 0x000d */ char __PADDING__[3];
} READCONTROLSPACE32, *PREADCONTROLSPACE32; /* size: 0x0010 */

typedef struct _PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_433;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
} PREFIX_TABLE, *PPREFIX_TABLE; /* size: 0x0010 */

typedef struct _WMI_REGISTRY
{
  /* 0x0000 */ __int64 InitialTime;
  /* 0x0008 */ unsigned long Status;
  union
  {
    /* 0x000c */ unsigned long Index;
    /* 0x000c */ unsigned long InfoClass;
  }; /* size: 0x0004 */
  /* 0x0010 */ void* Kcb;
  /* 0x0018 */ wchar_t Name[1];
  /* 0x001a */ char __PADDING__[6];
} WMI_REGISTRY, *PWMI_REGISTRY; /* size: 0x0020 */

typedef struct _DBGKD_READ_MEMORY64
{
  /* 0x0000 */ unsigned __int64 TargetBaseAddress;
  /* 0x0008 */ unsigned long TransferCount;
  /* 0x000c */ unsigned long ActualBytesRead;
} DBGKD_READ_MEMORY64, *PDBGKD_READ_MEMORY64; /* size: 0x0010 */

typedef struct _FILE_MAILSLOT_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long ReadDataAvailable;
  /* 0x0004 */ unsigned long NumberOfMessages;
  /* 0x0008 */ unsigned long MessageLength;
} FILE_MAILSLOT_PEEK_BUFFER, *PFILE_MAILSLOT_PEEK_BUFFER; /* size: 0x000c */

typedef struct _FILE_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFORMATION, *PFILE_FULL_DIR_INFORMATION; /* size: 0x0048 */

typedef struct _FILE_REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned long Tag;
  /* 0x000c */ long __PADDING__[1];
} FILE_REPARSE_POINT_INFORMATION, *PFILE_REPARSE_POINT_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_STACK_CONTEXT_ENTRY
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Data;
} RTL_STACK_CONTEXT_ENTRY, *PRTL_STACK_CONTEXT_ENTRY; /* size: 0x0010 */

typedef struct _CM_SONIC_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short DataConfigurationRegister;
  /* 0x0006 */ unsigned char EthernetAddress[8];
} CM_SONIC_DEVICE_DATA, *PCM_SONIC_DEVICE_DATA; /* size: 0x000e */

typedef struct _IMAGE_DEBUG_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long SizeOfData;
  /* 0x0014 */ unsigned long AddressOfRawData;
  /* 0x0018 */ unsigned long PointerToRawData;
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY; /* size: 0x001c */

typedef struct _TRIPLE_LIST_ITERATOR
{
  /* 0x0000 */ struct _TRIPLE_LIST* List;
  /* 0x0008 */ struct _TRIPLE_LIST_ENTRY* NextEntry;
  /* 0x0010 */ unsigned char ActiveList;
  /* 0x0011 */ unsigned char ProbeReads;
  /* 0x0012 */ unsigned char ReturnDataOffset;
  /* 0x0013 */ unsigned char Wow64List;
  /* 0x0014 */ long __PADDING__[1];
} TRIPLE_LIST_ITERATOR, *PTRIPLE_LIST_ITERATOR; /* size: 0x0018 */

typedef struct _PPM_LOCK
{
  /* 0x0000 */ struct _KTHREAD* Owner;
  /* 0x0008 */ struct _KEVENT Event;
} PPM_LOCK, *PPPM_LOCK; /* size: 0x0020 */

typedef union _WHEA_XPF_TLB_CHECK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 TransactionTypeValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 OperationValid : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 LevelValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorruptValid : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 UncorrectedValid : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 PreciseIPValid : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 RestartableIPValid : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 OverflowValid : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 ReservedValid : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 TransactionType : 2; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Operation : 4; /* bit position: 18 */
      /* 0x0000 */ unsigned __int64 Level : 3; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorrupt : 1; /* bit position: 25 */
      /* 0x0000 */ unsigned __int64 Uncorrected : 1; /* bit position: 26 */
      /* 0x0000 */ unsigned __int64 PreciseIP : 1; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 RestartableIP : 1; /* bit position: 28 */
      /* 0x0000 */ unsigned __int64 Overflow : 1; /* bit position: 29 */
      /* 0x0000 */ unsigned __int64 Reserved : 34; /* bit position: 30 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 XpfTLBCheck;
  }; /* size: 0x0008 */
} WHEA_XPF_TLB_CHECK, *PWHEA_XPF_TLB_CHECK; /* size: 0x0008 */

typedef union _WHEA_XPF_MS_CHECK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 ErrorTypeValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorruptValid : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 UncorrectedValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 PreciseIPValid : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 RestartableIPValid : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 OverflowValid : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 ReservedValue : 10; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 ErrorType : 3; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 ProcessorContextCorrupt : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned __int64 Uncorrected : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned __int64 PreciseIP : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned __int64 RestartableIP : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 Overflow : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned __int64 Reserved : 40; /* bit position: 24 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 XpfMsCheck;
  }; /* size: 0x0008 */
} WHEA_XPF_MS_CHECK, *PWHEA_XPF_MS_CHECK; /* size: 0x0008 */

typedef struct _STORAGE_WRITE_CACHE_PROPERTY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _WRITE_CACHE_TYPE WriteCacheType;
  /* 0x000c */ enum _WRITE_CACHE_ENABLE WriteCacheEnabled;
  /* 0x0010 */ enum _WRITE_CACHE_CHANGE WriteCacheChangeable;
  /* 0x0014 */ enum _WRITE_THROUGH WriteThroughSupported;
  /* 0x0018 */ unsigned char FlushCacheSupported;
  /* 0x0019 */ unsigned char UserDefinedPowerProtection;
  /* 0x001a */ unsigned char NVCacheEnabled;
  /* 0x001b */ char __PADDING__[1];
} STORAGE_WRITE_CACHE_PROPERTY, *PSTORAGE_WRITE_CACHE_PROPERTY; /* size: 0x001c */

typedef struct _EVENT_TRACE_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ long Padding_434;
  /* 0x0008 */ union _LARGE_INTEGER LogfileBytesWritten;
} EVENT_TRACE_PERFORMANCE_INFORMATION, *PEVENT_TRACE_PERFORMANCE_INFORMATION; /* size: 0x0010 */

typedef struct _IMAGE_THUNK_DATA64
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 ForwarderString;
      /* 0x0000 */ unsigned __int64 Function;
      /* 0x0000 */ unsigned __int64 Ordinal;
      /* 0x0000 */ unsigned __int64 AddressOfData;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} IMAGE_THUNK_DATA64, *PIMAGE_THUNK_DATA64; /* size: 0x0008 */

typedef struct _GET_INPUT_LINE
{
  /* 0x0000 */ const char* Prompt;
  /* 0x0008 */ char* Buffer;
  /* 0x0010 */ unsigned long BufferSize;
  /* 0x0014 */ unsigned long InputSize;
} GET_INPUT_LINE, *PGET_INPUT_LINE; /* size: 0x0018 */

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY
{
  /* 0x0000 */ struct _RUNTIME_FUNCTION* FunctionTable;
  /* 0x0008 */ void* ImageBase;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long SizeOfTable;
} INVERTED_FUNCTION_TABLE_ENTRY, *PINVERTED_FUNCTION_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _INVERTED_FUNCTION_TABLE
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long MaximumSize;
  /* 0x0008 */ unsigned char Overflow;
  /* 0x0009 */ char Padding_435[7];
  /* 0x0010 */ struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
} INVERTED_FUNCTION_TABLE, *PINVERTED_FUNCTION_TABLE; /* size: 0x3010 */

typedef struct _TRIAGE_9F_POWER
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ long Padding_436;
  /* 0x0008 */ struct _LIST_ENTRY* IrpList;
  /* 0x0010 */ struct _LIST_ENTRY* ThreadList;
  /* 0x0018 */ struct _TRIAGE_EX_WORK_QUEUE* DelayedWorkQueue;
} TRIAGE_9F_POWER, *PTRIAGE_9F_POWER; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ unsigned short* InterfaceList;
  /* 0x0020 */ unsigned long InterfaceListSize;
  /* 0x0024 */ unsigned long Flags;
} PLUGPLAY_CONTROL_INTERFACE_LIST_DATA, *PPLUGPLAY_CONTROL_INTERFACE_LIST_DATA; /* size: 0x0028 */

typedef struct _TRIAGE_EX_WORK_QUEUE
{
  /* 0x0000 */ struct _KQUEUE WorkerQueue;
} TRIAGE_EX_WORK_QUEUE, *PTRIAGE_EX_WORK_QUEUE; /* size: 0x0040 */

typedef struct _PO_WAKE_SOURCE_TIMER
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ struct _DIAGNOSTIC_BUFFER Reason;
} PO_WAKE_SOURCE_TIMER, *PPO_WAKE_SOURCE_TIMER; /* size: 0x0030 */

struct PPM_WMI_IDLE_STATE
{
  /* 0x0000 */ unsigned long Latency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned char PromotePercent;
  /* 0x000d */ unsigned char DemotePercent;
  /* 0x000e */ unsigned char StateType;
  /* 0x000f */ unsigned char Reserved;
  /* 0x0010 */ unsigned long StateFlags;
  /* 0x0014 */ unsigned long Context;
  /* 0x0018 */ unsigned long IdleHandler;
  /* 0x001c */ unsigned long Reserved1;
}; /* size: 0x0020 */

struct PPM_WMI_IDLE_STATES_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ void* TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

typedef struct _LSA_FOREST_TRUST_BINARY_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_437;
  /* 0x0008 */ unsigned char* Buffer;
} LSA_FOREST_TRUST_BINARY_DATA, *PLSA_FOREST_TRUST_BINARY_DATA; /* size: 0x0010 */

typedef struct _WIN32_DELETEMETHOD_PARAMETERS
{
  /* 0x0000 */ void* Object;
} WIN32_DELETEMETHOD_PARAMETERS, *PWIN32_DELETEMETHOD_PARAMETERS; /* size: 0x0008 */

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK
{
  /* 0x0000 */ unsigned char Signature[4];
  /* 0x0004 */ unsigned char Revision;
  /* 0x0005 */ unsigned char Length;
  /* 0x0006 */ unsigned short ControlField;
  /* 0x0008 */ unsigned char Checksum;
  /* 0x0009 */ unsigned long EventFlagAddress;
  /* 0x000d */ unsigned short RealModeEntryOffset;
  /* 0x000f */ unsigned short RealModeEntrySegment;
  /* 0x0011 */ unsigned short ProtectedModeEntryOffset;
  /* 0x0013 */ unsigned long ProtectedModeCodeBaseAddress;
  /* 0x0017 */ unsigned long OemDeviceId;
  /* 0x001b */ unsigned short RealModeDataBaseAddress;
  /* 0x001d */ unsigned long ProtectedModeDataBaseAddress;
} CM_PNP_BIOS_INSTALLATION_CHECK, *PCM_PNP_BIOS_INSTALLATION_CHECK; /* size: 0x0021 */

typedef struct _SYSTEM_POWER_LOGGING_ENTRY
{
  /* 0x0000 */ unsigned long LoggingType;
  /* 0x0004 */ long Padding_438;
  /* 0x0008 */ void* LoggingEntry;
} SYSTEM_POWER_LOGGING_ENTRY, *PSYSTEM_POWER_LOGGING_ENTRY; /* size: 0x0010 */

typedef struct _PERFINFO_PROCESS_PERFCTR32
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long PageFaultCount;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned int PeakVirtualSize;
  /* 0x0014 */ unsigned int PeakWorkingSetSize;
  /* 0x0018 */ unsigned int PeakPagefileUsage;
  /* 0x001c */ unsigned int QuotaPeakPagedPoolUsage;
  /* 0x0020 */ unsigned int QuotaPeakNonPagedPoolUsage;
  /* 0x0024 */ unsigned int VirtualSize;
  /* 0x0028 */ unsigned int WorkingSetSize;
  /* 0x002c */ unsigned int PagefileUsage;
  /* 0x0030 */ unsigned int QuotaPagedPoolUsage;
  /* 0x0034 */ unsigned int QuotaNonPagedPoolUsage;
  /* 0x0038 */ unsigned int PrivatePageCount;
} PERFINFO_PROCESS_PERFCTR32, *PPERFINFO_PROCESS_PERFCTR32; /* size: 0x003c */

typedef union _MM_STORE_SUB_KEY_DESCRIPTOR
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long KeyType : 2; /* bit position: 0 */
        /* 0x0000 */ unsigned long Spare : 10; /* bit position: 2 */
      }; /* bitfield */
    } /* size: 0x0004 */ Flags;
    /* 0x0000 */ void* VirtualAddress;
  }; /* size: 0x0008 */
} MM_STORE_SUB_KEY_DESCRIPTOR, *PMM_STORE_SUB_KEY_DESCRIPTOR; /* size: 0x0008 */

typedef struct _PCIBUSDATA
{
  /* 0x0000 */ unsigned long Tag;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ void* ReadConfig /* function */;
  /* 0x0010 */ void* WriteConfig /* function */;
  /* 0x0018 */ void* Pin2Line /* function */;
  /* 0x0020 */ void* Line2Pin /* function */;
  /* 0x0028 */ struct _PCI_SLOT_NUMBER ParentSlot;
  /* 0x002c */ long Padding_439;
  /* 0x0030 */ void* Reserved[4];
} PCIBUSDATA, *PPCIBUSDATA; /* size: 0x0050 */

typedef struct _WINDBG_EXTENSION_APIS
{
  /* 0x0000 */ unsigned long nSize;
  /* 0x0004 */ long Padding_440;
  /* 0x0008 */ void* lpOutputRoutine /* function */;
  /* 0x0010 */ void* lpGetExpressionRoutine /* function */;
  /* 0x0018 */ void* lpGetSymbolRoutine /* function */;
  /* 0x0020 */ void* lpDisasmRoutine /* function */;
  /* 0x0028 */ void* lpCheckControlCRoutine /* function */;
  /* 0x0030 */ void* lpReadProcessMemoryRoutine /* function */;
  /* 0x0038 */ void* lpWriteProcessMemoryRoutine /* function */;
  /* 0x0040 */ void* lpGetThreadContextRoutine /* function */;
  /* 0x0048 */ void* lpSetThreadContextRoutine /* function */;
  /* 0x0050 */ void* lpIoctlRoutine /* function */;
  /* 0x0058 */ void* lpStackTraceRoutine /* function */;
} WINDBG_EXTENSION_APIS, *PWINDBG_EXTENSION_APIS; /* size: 0x0060 */

typedef struct _PO_MEMORY_RANGE
{
  /* 0x0000 */ unsigned __int64 StartPage;
  /* 0x0008 */ unsigned __int64 EndPage;
} PO_MEMORY_RANGE, *PPO_MEMORY_RANGE; /* size: 0x0010 */

struct DEBUG_DEVICE_ADDRESS
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Valid;
  /* 0x0002 */ unsigned char Reserved[2];
  /* 0x0004 */ long Padding_441;
  /* 0x0008 */ unsigned char* TranslatedAddress;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct DEBUG_MEMORY_REQUIREMENTS
{
  /* 0x0000 */ union _LARGE_INTEGER Start;
  /* 0x0008 */ union _LARGE_INTEGER MaxEnd;
  /* 0x0010 */ void* VirtualAddress;
  /* 0x0018 */ unsigned long Length;
  /* 0x001c */ unsigned char Cached;
  /* 0x001d */ unsigned char Aligned;
  /* 0x001e */ char __PADDING__[2];
}; /* size: 0x0020 */

struct DEBUG_DEVICE_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Bus;
  /* 0x0004 */ unsigned short Segment;
  /* 0x0006 */ char Padding_442[2];
  /* 0x0008 */ unsigned long Slot;
  /* 0x000c */ unsigned short VendorID;
  /* 0x000e */ unsigned short DeviceID;
  /* 0x0010 */ unsigned char BaseClass;
  /* 0x0011 */ unsigned char SubClass;
  /* 0x0012 */ unsigned char ProgIf;
  /* 0x0013 */ unsigned char Initialized;
  /* 0x0014 */ unsigned char Configured;
  /* 0x0015 */ char Padding_443[3];
  /* 0x0018 */ struct DEBUG_DEVICE_ADDRESS BaseAddress[6];
  /* 0x00a8 */ struct DEBUG_MEMORY_REQUIREMENTS Memory;
}; /* size: 0x00c8 */

typedef struct _KD_SYMBOLS_INFO
{
  /* 0x0000 */ void* BaseOfDll;
  /* 0x0008 */ unsigned __int64 ProcessId;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long SizeOfImage;
} KD_SYMBOLS_INFO, *PKD_SYMBOLS_INFO; /* size: 0x0018 */

typedef struct _HEAP_EVENT_COMMIT_DECOMMIT
{
  /* 0x0000 */ void* HeapHandle;
  /* 0x0008 */ void* Block;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ unsigned long Caller;
  /* 0x001c */ long __PADDING__[1];
} HEAP_EVENT_COMMIT_DECOMMIT, *PHEAP_EVENT_COMMIT_DECOMMIT; /* size: 0x0020 */

typedef struct _REG_PRE_CREATE_KEY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING* CompleteName;
} REG_PRE_CREATE_KEY_INFORMATION, *PREG_PRE_CREATE_KEY_INFORMATION; /* size: 0x0008 */

typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY
{
  /* 0x0000 */ enum _SE_ADT_PARAMETER_TYPE Type;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned __int64 Data[2];
  /* 0x0018 */ void* Address;
} SE_ADT_PARAMETER_ARRAY_ENTRY, *PSE_ADT_PARAMETER_ARRAY_ENTRY; /* size: 0x0020 */

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned long SecurityLimitFlags;
  /* 0x0004 */ long Padding_444;
  /* 0x0008 */ void* JobToken;
  /* 0x0010 */ struct _TOKEN_GROUPS* SidsToDisable;
  /* 0x0018 */ struct _TOKEN_PRIVILEGES* PrivilegesToDelete;
  /* 0x0020 */ struct _TOKEN_GROUPS* RestrictedSids;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION; /* size: 0x0028 */

typedef struct _FAR_JMP_16
{
  /* 0x0000 */ unsigned char OpCode;
  /* 0x0001 */ char Padding_445;
  /* 0x0002 */ unsigned short Offset;
} FAR_JMP_16, *PFAR_JMP_16; /* size: 0x0004 */

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX
{
  /* 0x0000 */ unsigned long VerifyMode;
  /* 0x0004 */ unsigned long OptionChanges;
  /* 0x0008 */ struct _UNICODE_STRING PreviousBucketName;
  /* 0x0018 */ unsigned long IrpCancelTimeoutMsec;
  /* 0x001c */ unsigned long Reserved[1];
} SYSTEM_VERIFIER_INFORMATION_EX, *PSYSTEM_VERIFIER_INFORMATION_EX; /* size: 0x0020 */

typedef struct _Wx86ThreadState32
{
  /* 0x0000 */ unsigned long CallBx86Eip;
  /* 0x0004 */ unsigned long DeallocationCpu;
  /* 0x0008 */ unsigned char UseKnownWx86Dll;
  /* 0x0009 */ char OleStubInvoked;
  /* 0x000a */ char __PADDING__[2];
} Wx86ThreadState32, *PWx86ThreadState32; /* size: 0x000c */

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long ViewFailures;
  /* 0x0010 */ unsigned __int64 NumberOfBytesAvailable;
  /* 0x0018 */ unsigned __int64 NumberOfBytesAvailableContiguous;
} SYSTEM_SESSION_MAPPED_VIEW_INFORMATION, *PSYSTEM_SESSION_MAPPED_VIEW_INFORMATION; /* size: 0x0020 */

typedef struct _FILE_OBJECTID_BUFFER
{
  /* 0x0000 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char BirthVolumeId[16];
      /* 0x0020 */ unsigned char BirthObjectId[16];
      /* 0x0030 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0010 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_BUFFER, *PFILE_OBJECTID_BUFFER; /* size: 0x0040 */

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT
{
  /* 0x0000 */ struct _GUID Id;
  /* 0x0010 */ enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
} COMPATIBILITY_CONTEXT_ELEMENT, *PCOMPATIBILITY_CONTEXT_ELEMENT; /* size: 0x0014 */

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
{
  /* 0x0000 */ unsigned long ElementCount;
  /* 0x0004 */ struct _COMPATIBILITY_CONTEXT_ELEMENT* Elements /* zero-length array */;
} ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION, *PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION; /* size: 0x0004 */

typedef struct _IO_COUNTERS
{
  /* 0x0000 */ unsigned __int64 ReadOperationCount;
  /* 0x0008 */ unsigned __int64 WriteOperationCount;
  /* 0x0010 */ unsigned __int64 OtherOperationCount;
  /* 0x0018 */ unsigned __int64 ReadTransferCount;
  /* 0x0020 */ unsigned __int64 WriteTransferCount;
  /* 0x0028 */ unsigned __int64 OtherTransferCount;
} IO_COUNTERS, *PIO_COUNTERS; /* size: 0x0030 */

typedef struct _PO_WAKE_SOURCE_FIXED
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
} PO_WAKE_SOURCE_FIXED, *PPO_WAKE_SOURCE_FIXED; /* size: 0x000c */

typedef struct _DBGKD_READ_MEMORY32
{
  /* 0x0000 */ unsigned long TargetBaseAddress;
  /* 0x0004 */ unsigned long TransferCount;
  /* 0x0008 */ unsigned long ActualBytesRead;
} DBGKD_READ_MEMORY32, *PDBGKD_READ_MEMORY32; /* size: 0x000c */

typedef struct _WIN32_OPENMETHOD_PARAMETERS
{
  /* 0x0000 */ enum _OB_OPEN_REASON OpenReason;
  /* 0x0004 */ long Padding_446;
  /* 0x0008 */ struct _EPROCESS* Process;
  /* 0x0010 */ void* Object;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned long HandleCount;
} WIN32_OPENMETHOD_PARAMETERS, *PWIN32_OPENMETHOD_PARAMETERS; /* size: 0x0020 */

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ unsigned long Flags;
} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT; /* size: 0x0014 */

typedef struct _EXTSTACKTRACE
{
  /* 0x0000 */ unsigned long FramePointer;
  /* 0x0004 */ unsigned long ProgramCounter;
  /* 0x0008 */ unsigned long ReturnAddress;
  /* 0x000c */ unsigned long Args[4];
} EXTSTACKTRACE, *PEXTSTACKTRACE; /* size: 0x001c */

typedef struct _PO_APP_TRACE
{
  /* 0x0000 */ void* ProcessId;
} PO_APP_TRACE, *PPO_APP_TRACE; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long ProcessorFeatureBits;
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION; /* size: 0x000c */

struct POP_POWER_REQUEST_ATTRIBUTE
{
  /* 0x0000 */ long Count;
  /* 0x0004 */ long Padding_447;
  /* 0x0008 */ void* Callback /* function */;
}; /* size: 0x0010 */

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  /* 0x0000 */ unsigned char First0x24BytesOfBootSector[36];
} FSCTL_QUERY_FAT_BPB_BUFFER, *PFSCTL_QUERY_FAT_BPB_BUFFER; /* size: 0x0024 */

typedef struct _DBGKD_READ_WRITE_IO32
{
  /* 0x0000 */ unsigned long DataSize;
  /* 0x0004 */ unsigned long IoAddress;
  /* 0x0008 */ unsigned long DataValue;
} DBGKD_READ_WRITE_IO32, *PDBGKD_READ_WRITE_IO32; /* size: 0x000c */

struct localeinfo_struct
{
  /* 0x0000 */ struct threadlocaleinfostruct* locinfo;
  /* 0x0008 */ struct threadmbcinfostruct* mbcinfo;
}; /* size: 0x0010 */

typedef struct _OB_POST_DUPLICATE_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long GrantedAccess;
} OB_POST_DUPLICATE_HANDLE_INFORMATION, *POB_POST_DUPLICATE_HANDLE_INFORMATION; /* size: 0x0004 */

typedef struct _GDI_TEB_BATCH32
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long HDC;
  /* 0x0008 */ unsigned long Buffer[310];
} GDI_TEB_BATCH32, *PGDI_TEB_BATCH32; /* size: 0x04e0 */

typedef struct _IO_REMOVE_LOCK_TRACKING_BLOCK
{
  /* 0x0000 */ struct _IO_REMOVE_LOCK_TRACKING_BLOCK* Link;
  /* 0x0008 */ void* Tag;
  /* 0x0010 */ union _LARGE_INTEGER TimeLocked;
  /* 0x0018 */ const char* File;
  /* 0x0020 */ unsigned long Line;
  /* 0x0024 */ long __PADDING__[1];
} IO_REMOVE_LOCK_TRACKING_BLOCK, *PIO_REMOVE_LOCK_TRACKING_BLOCK; /* size: 0x0028 */

struct lconv
{
  /* 0x0000 */ char* decimal_point;
  /* 0x0008 */ char* thousands_sep;
  /* 0x0010 */ char* grouping;
  /* 0x0018 */ char* int_curr_symbol;
  /* 0x0020 */ char* currency_symbol;
  /* 0x0028 */ char* mon_decimal_point;
  /* 0x0030 */ char* mon_thousands_sep;
  /* 0x0038 */ char* mon_grouping;
  /* 0x0040 */ char* positive_sign;
  /* 0x0048 */ char* negative_sign;
  /* 0x0050 */ char int_frac_digits;
  /* 0x0051 */ char frac_digits;
  /* 0x0052 */ char p_cs_precedes;
  /* 0x0053 */ char p_sep_by_space;
  /* 0x0054 */ char n_cs_precedes;
  /* 0x0055 */ char n_sep_by_space;
  /* 0x0056 */ char p_sign_posn;
  /* 0x0057 */ char n_sign_posn;
}; /* size: 0x0058 */

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* IoCompletionPortHandle;
  /* 0x0008 */ unsigned __int64 CompletionKey;
} RESOURCEMANAGER_COMPLETION_INFORMATION, *PRESOURCEMANAGER_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef struct _IOP_PROCESS_LOCK
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListEntry;
  /* 0x0008 */ struct _EPROCESS* Process;
} IOP_PROCESS_LOCK, *PIOP_PROCESS_LOCK; /* size: 0x0010 */

typedef struct _RTL_DYNAMIC_HASH_TABLE
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Shift;
  /* 0x0008 */ unsigned long TableSize;
  /* 0x000c */ unsigned long Pivot;
  /* 0x0010 */ unsigned long DivisorMask;
  /* 0x0014 */ unsigned long NumEntries;
  /* 0x0018 */ unsigned long NonEmptyBuckets;
  /* 0x001c */ unsigned long NumEnumerators;
  /* 0x0020 */ void* Directory;
} RTL_DYNAMIC_HASH_TABLE, *PRTL_DYNAMIC_HASH_TABLE; /* size: 0x0028 */

typedef struct __lc_time_data
{
  /* 0x0000 */ char* wday_abbr[7];
  /* 0x0038 */ char* wday[7];
  /* 0x0070 */ char* month_abbr[12];
  /* 0x00d0 */ char* month[12];
  /* 0x0130 */ char* ampm[2];
  /* 0x0140 */ char* ww_sdatefmt;
  /* 0x0148 */ char* ww_ldatefmt;
  /* 0x0150 */ char* ww_timefmt;
  /* 0x0158 */ unsigned long ww_lcid;
  /* 0x015c */ int ww_caltype;
  /* 0x0160 */ int refcount;
  /* 0x0164 */ long __PADDING__[1];
} _lc_time_data, *P_lc_time_data; /* size: 0x0168 */

struct _TP_CLEANUP_GROUP;

typedef struct _KCRM_PROTOCOL_BLOB
{
  /* 0x0000 */ struct _GUID ProtocolId;
  /* 0x0010 */ unsigned long StaticInfoLength;
  /* 0x0014 */ unsigned long TransactionIdInfoLength;
  /* 0x0018 */ unsigned long Unused1;
  /* 0x001c */ unsigned long Unused2;
} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB; /* size: 0x0020 */

struct threadmbcinfostruct
{
  /* 0x0000 */ int refcount;
  /* 0x0004 */ int mbcodepage;
  /* 0x0008 */ int ismbcodepage;
  /* 0x000c */ int mblcid;
  /* 0x0010 */ unsigned short mbulinfo[6];
  /* 0x001c */ unsigned char mbctype[257];
  /* 0x011d */ unsigned char mbcasemap[256];
  /* 0x021d */ char __PADDING__[3];
}; /* size: 0x0220 */

typedef struct _THREAD_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_448;
  union
  {
    /* 0x0008 */ void* NewTlsData;
    /* 0x0008 */ void* OldTlsData;
  }; /* size: 0x0008 */
  /* 0x0010 */ void* ThreadId;
} THREAD_TLS_INFORMATION, *PTHREAD_TLS_INFORMATION; /* size: 0x0018 */

typedef struct _PROCESS_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long OperationType;
  /* 0x0008 */ unsigned long ThreadDataCount;
  union
  {
    /* 0x000c */ unsigned long TlsIndex;
    /* 0x000c */ unsigned long PreviousCount;
  }; /* size: 0x0004 */
  /* 0x0010 */ struct _THREAD_TLS_INFORMATION ThreadData[1];
} PROCESS_TLS_INFORMATION, *PPROCESS_TLS_INFORMATION; /* size: 0x0028 */

typedef struct _REG_CREATE_KEY_INFORMATION_V1
{
  /* 0x0000 */ struct _UNICODE_STRING* CompleteName;
  /* 0x0008 */ void* RootObject;
  /* 0x0010 */ void* ObjectType;
  /* 0x0018 */ unsigned long Options;
  /* 0x001c */ long Padding_449;
  /* 0x0020 */ struct _UNICODE_STRING* Class;
  /* 0x0028 */ void* SecurityDescriptor;
  /* 0x0030 */ void* SecurityQualityOfService;
  /* 0x0038 */ unsigned long DesiredAccess;
  /* 0x003c */ unsigned long GrantedAccess;
  /* 0x0040 */ unsigned long* Disposition;
  /* 0x0048 */ void** ResultObject;
  /* 0x0050 */ void* CallContext;
  /* 0x0058 */ void* RootObjectContext;
  /* 0x0060 */ void* Transaction;
  /* 0x0068 */ unsigned __int64 Version;
  /* 0x0070 */ struct _UNICODE_STRING* RemainingName;
  /* 0x0078 */ unsigned long Wow64Flags;
  /* 0x007c */ unsigned long Attributes;
  /* 0x0080 */ char CheckAccessMode;
  /* 0x0081 */ char __PADDING__[7];
} REG_CREATE_KEY_INFORMATION_V1, *PREG_CREATE_KEY_INFORMATION_V1; /* size: 0x0088 */

typedef struct _IA64_UNWIND_INFO
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long DataLength;
} IA64_UNWIND_INFO, *PIA64_UNWIND_INFO; /* size: 0x0008 */

typedef struct _LPCP_NONPAGED_PORT_QUEUE
{
  /* 0x0000 */ struct _KSEMAPHORE Semaphore;
  /* 0x0020 */ struct _LPCP_PORT_OBJECT* BackPointer;
} LPCP_NONPAGED_PORT_QUEUE, *PLPCP_NONPAGED_PORT_QUEUE; /* size: 0x0028 */

typedef struct _LPCP_PORT_QUEUE
{
  /* 0x0000 */ struct _LPCP_NONPAGED_PORT_QUEUE* NonPagedPortQueue;
  /* 0x0008 */ struct _KSEMAPHORE* Semaphore;
  /* 0x0010 */ struct _LIST_ENTRY ReceiveHead;
} LPCP_PORT_QUEUE, *PLPCP_PORT_QUEUE; /* size: 0x0020 */

typedef struct _LPCP_PORT_OBJECT
{
  /* 0x0000 */ struct _LPCP_PORT_OBJECT* ConnectionPort;
  /* 0x0008 */ struct _LPCP_PORT_OBJECT* ConnectedPort;
  /* 0x0010 */ struct _LPCP_PORT_QUEUE MsgQueue;
  /* 0x0030 */ struct _CLIENT_ID Creator;
  /* 0x0040 */ void* ClientSectionBase;
  /* 0x0048 */ void* ServerSectionBase;
  /* 0x0050 */ void* PortContext;
  /* 0x0058 */ struct _ETHREAD* ClientThread;
  /* 0x0060 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x006c */ long Padding_450;
  /* 0x0070 */ struct _SECURITY_CLIENT_CONTEXT StaticSecurity;
  /* 0x00b8 */ struct _LIST_ENTRY LpcReplyChainHead;
  /* 0x00c8 */ struct _LIST_ENTRY LpcDataInfoChainHead;
  union
  {
    /* 0x00d8 */ struct _EPROCESS* ServerProcess;
    /* 0x00d8 */ struct _EPROCESS* MappingProcess;
  }; /* size: 0x0008 */
  /* 0x00e0 */ unsigned short MaxMessageLength;
  /* 0x00e2 */ unsigned short MaxConnectionInfoLength;
  /* 0x00e4 */ unsigned long Flags;
  /* 0x00e8 */ struct _KEVENT WaitEvent;
} LPCP_PORT_OBJECT, *PLPCP_PORT_OBJECT; /* size: 0x0100 */

typedef union _VIA_L2_CACHE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct
    {
      /* 0x0000 */ unsigned char LineSize;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char LinesPerTag : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char Associativity : 4; /* bit position: 4 */
      }; /* bitfield */
      /* 0x0002 */ unsigned short Size;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} VIA_L2_CACHE_INFO, *PVIA_L2_CACHE_INFO; /* size: 0x0004 */

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION
{
  /* 0x0000 */ enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
  /* 0x0004 */ unsigned long DataValue;
} SYSTEM_WATCHDOG_TIMER_INFORMATION, *PSYSTEM_WATCHDOG_TIMER_INFORMATION; /* size: 0x0008 */

typedef struct _POP_TRIGGER_WAIT
{
  /* 0x0000 */ struct _KEVENT Event;
  /* 0x0018 */ long Status;
  /* 0x001c */ long Padding_451;
  /* 0x0020 */ struct _LIST_ENTRY Link;
  /* 0x0030 */ struct _POP_ACTION_TRIGGER* Trigger;
} POP_TRIGGER_WAIT, *PPOP_TRIGGER_WAIT; /* size: 0x0038 */

typedef struct _PERFINFO_BATTERY_LIFE_INFO
{
  /* 0x0000 */ unsigned long RemainingCapacity;
  /* 0x0004 */ unsigned long Rate;
} PERFINFO_BATTERY_LIFE_INFO, *PPERFINFO_BATTERY_LIFE_INFO; /* size: 0x0008 */

typedef struct _SHRINK_VOLUME_INFORMATION
{
  /* 0x0000 */ enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
  /* 0x0004 */ long Padding_452;
  /* 0x0008 */ unsigned __int64 Flags;
  /* 0x0010 */ __int64 NewNumberOfSectors;
} SHRINK_VOLUME_INFORMATION, *PSHRINK_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _ARBITER_CONFLICT_INFO
{
  /* 0x0000 */ struct _DEVICE_OBJECT* OwningObject;
  /* 0x0008 */ unsigned __int64 Start;
  /* 0x0010 */ unsigned __int64 End;
} ARBITER_CONFLICT_INFO, *PARBITER_CONFLICT_INFO; /* size: 0x0018 */

typedef struct _STORAGE_BUS_RESET_REQUEST
{
  /* 0x0000 */ unsigned char PathId;
} STORAGE_BUS_RESET_REQUEST, *PSTORAGE_BUS_RESET_REQUEST; /* size: 0x0001 */

typedef struct _ATOM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned short UsageCount;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short NameLength;
  /* 0x0006 */ wchar_t Name[1];
} ATOM_BASIC_INFORMATION, *PATOM_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _EVENT_DATA_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved;
} EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR; /* size: 0x0010 */

typedef struct _MESSAGE_RESOURCE_BLOCK
{
  /* 0x0000 */ unsigned long LowId;
  /* 0x0004 */ unsigned long HighId;
  /* 0x0008 */ unsigned long OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK; /* size: 0x000c */

typedef struct _RC_CONFIG
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwLength;
  /* 0x0008 */ unsigned long dwRCConfigVersion;
  /* 0x000c */ unsigned long dwFilePathType;
  /* 0x0010 */ unsigned long dwFileType;
  /* 0x0014 */ unsigned long dwSystemAttributes;
  /* 0x0018 */ unsigned long dwUltimateFallbackLocation;
  /* 0x001c */ unsigned long dwServiceCheckSum[4];
  /* 0x002c */ unsigned long dwChecksum[4];
  /* 0x003c */ unsigned long dwReserved1;
  /* 0x0040 */ unsigned long dwReserved2;
  /* 0x0044 */ unsigned long dwMUIFileNameOffset;
  /* 0x0048 */ unsigned long dwMUIFileNameLength;
  /* 0x004c */ unsigned long dwMUIFilePathOffset;
  /* 0x0050 */ unsigned long dwMUIFilePathLength;
  /* 0x0054 */ unsigned long dwMainResNameTypesOffset;
  /* 0x0058 */ unsigned long dwMainResNameTypesLength;
  /* 0x005c */ unsigned long dwMainResIDTypesOffset;
  /* 0x0060 */ unsigned long dwMainResIDTypesLength;
  /* 0x0064 */ unsigned long dwMUIResNameTypesOffset;
  /* 0x0068 */ unsigned long dwMUIResNameTypesLength;
  /* 0x006c */ unsigned long dwMUIResIDTypesOffset;
  /* 0x0070 */ unsigned long dwMUIResIDTypesLength;
  /* 0x0074 */ unsigned long dwLanguageOffset;
  /* 0x0078 */ unsigned long dwLanguageLength;
  /* 0x007c */ unsigned long dwUltimateFallbackLanguageOffset;
  /* 0x0080 */ unsigned long dwUltimateFallbackLanguageLength;
} RC_CONFIG, *PRC_CONFIG; /* size: 0x0084 */

typedef struct _MOF_FIELD
{
  /* 0x0000 */ unsigned __int64 DataPtr;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long DataType;
} MOF_FIELD, *PMOF_FIELD; /* size: 0x0010 */

typedef struct _CPE_DRIVER_INFO
{
  /* 0x0000 */ void* ExceptionCallback /* function */;
  /* 0x0008 */ void* DpcCallback /* function */;
  /* 0x0010 */ void* DeviceContext;
} CPE_DRIVER_INFO, *PCPE_DRIVER_INFO; /* size: 0x0018 */

typedef struct _AMD64_OBSOLETE_CONTEXT_2
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  /* 0x0100 */ struct _AMD64_M128 Xmm0;
  /* 0x0110 */ struct _AMD64_M128 Xmm1;
  /* 0x0120 */ struct _AMD64_M128 Xmm2;
  /* 0x0130 */ struct _AMD64_M128 Xmm3;
  /* 0x0140 */ struct _AMD64_M128 Xmm4;
  /* 0x0150 */ struct _AMD64_M128 Xmm5;
  /* 0x0160 */ struct _AMD64_M128 Xmm6;
  /* 0x0170 */ struct _AMD64_M128 Xmm7;
  /* 0x0180 */ struct _AMD64_M128 Xmm8;
  /* 0x0190 */ struct _AMD64_M128 Xmm9;
  /* 0x01a0 */ struct _AMD64_M128 Xmm10;
  /* 0x01b0 */ struct _AMD64_M128 Xmm11;
  /* 0x01c0 */ struct _AMD64_M128 Xmm12;
  /* 0x01d0 */ struct _AMD64_M128 Xmm13;
  /* 0x01e0 */ struct _AMD64_M128 Xmm14;
  /* 0x01f0 */ struct _AMD64_M128 Xmm15;
  /* 0x0200 */ struct _AMD64_XMM_SAVE_AREA32_2 FltSave;
  /* 0x0480 */ struct _AMD64_M128 VectorRegister[2];
  /* 0x04a0 */ unsigned __int64 VectorControl;
  /* 0x04a8 */ unsigned __int64 DebugControl;
  /* 0x04b0 */ unsigned __int64 LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 LastExceptionFromRip;
} AMD64_OBSOLETE_CONTEXT_2, *PAMD64_OBSOLETE_CONTEXT_2; /* size: 0x04d0 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NameOffset : 31; /* bit position: 0 */
      /* 0x0000 */ unsigned long NameIsString : 1; /* bit position: 31 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Name;
    /* 0x0000 */ unsigned short Id;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long OffsetToData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long OffsetToDirectory : 31; /* bit position: 0 */
      /* 0x0004 */ unsigned long DataIsDirectory : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY; /* size: 0x0008 */

typedef struct _ENLISTMENT_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID TransactionId;
  /* 0x0020 */ struct _GUID ResourceManagerId;
} ENLISTMENT_BASIC_INFORMATION, *PENLISTMENT_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _ACTIVATION_CONTEXT_STACK64
{
  /* 0x0000 */ unsigned __int64 ActiveFrame;
  /* 0x0008 */ struct LIST_ENTRY64 FrameListCache;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long NextCookieSequenceNumber;
  /* 0x0020 */ unsigned long StackId;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_STACK64, *PACTIVATION_CONTEXT_STACK64; /* size: 0x0028 */

typedef struct _IMAGE_NT_HEADERS64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64; /* size: 0x0108 */

typedef struct _POLICY_PRIMARY_DOMAIN_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ void* Sid;
} POLICY_PRIMARY_DOMAIN_INFO, *PPOLICY_PRIMARY_DOMAIN_INFO; /* size: 0x0018 */

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long RequestedOplockLevel;
  /* 0x0008 */ unsigned long Flags;
} REQUEST_OPLOCK_INPUT_BUFFER, *PREQUEST_OPLOCK_INPUT_BUFFER; /* size: 0x000c */

typedef struct _POLICY_DNS_DOMAIN_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING DnsDomainName;
  /* 0x0020 */ struct _UNICODE_STRING DnsForestName;
  /* 0x0030 */ struct _GUID DomainGuid;
  /* 0x0040 */ void* Sid;
} POLICY_DNS_DOMAIN_INFO, *PPOLICY_DNS_DOMAIN_INFO; /* size: 0x0048 */

typedef struct _IMAGE_TLS_DIRECTORY32
{
  /* 0x0000 */ unsigned long StartAddressOfRawData;
  /* 0x0004 */ unsigned long EndAddressOfRawData;
  /* 0x0008 */ unsigned long AddressOfIndex;
  /* 0x000c */ unsigned long AddressOfCallBacks;
  /* 0x0010 */ unsigned long SizeOfZeroFill;
  /* 0x0014 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY32, *PIMAGE_TLS_DIRECTORY32; /* size: 0x0018 */

typedef struct _ETW_HEAP_EVENT_RUNDOWN_RANGE
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ unsigned __int64 Size;
} ETW_HEAP_EVENT_RUNDOWN_RANGE, *PETW_HEAP_EVENT_RUNDOWN_RANGE; /* size: 0x0010 */

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER
{
  /* 0x0000 */ unsigned char CloseDisc;
} FILE_MAKE_COMPATIBLE_BUFFER, *PFILE_MAKE_COMPATIBLE_BUFFER; /* size: 0x0001 */

typedef struct _OBJECT_HANDLE_COUNT_ENTRY
{
  /* 0x0000 */ struct _EPROCESS* Process;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long HandleCount : 24; /* bit position: 0 */
    /* 0x0008 */ unsigned long LockCount : 8; /* bit position: 24 */
  }; /* bitfield */
  /* 0x000c */ long __PADDING__[1];
} OBJECT_HANDLE_COUNT_ENTRY, *POBJECT_HANDLE_COUNT_ENTRY; /* size: 0x0010 */

typedef struct _OBJECT_HANDLE_COUNT_DATABASE
{
  /* 0x0000 */ unsigned long CountEntries;
  /* 0x0004 */ long Padding_453;
  /* 0x0008 */ struct _OBJECT_HANDLE_COUNT_ENTRY HandleCountEntries[1];
} OBJECT_HANDLE_COUNT_DATABASE, *POBJECT_HANDLE_COUNT_DATABASE; /* size: 0x0018 */

typedef struct _POP_ACTION_TRIGGER
{
  /* 0x0000 */ enum POWER_POLICY_DEVICE_TYPE Type;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _POP_TRIGGER_WAIT* Wait;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned long Level;
    } /* size: 0x0004 */ Battery;
    struct
    {
      /* 0x0010 */ unsigned long Type;
    } /* size: 0x0004 */ Button;
  }; /* size: 0x0004 */
  /* 0x0014 */ long __PADDING__[1];
} POP_ACTION_TRIGGER, *PPOP_ACTION_TRIGGER; /* size: 0x0018 */

typedef struct _ETW_PER_SESSION_QUOTA
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long CpuShareWeight;
  /* 0x0008 */ __int64 CapturedWeightData;
  /* 0x0010 */ unsigned __int64 CyclesAccumulated;
} ETW_PER_SESSION_QUOTA, *PETW_PER_SESSION_QUOTA; /* size: 0x0018 */

typedef struct _STORAGE_DEVICE_NUMBER
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long DeviceNumber;
  /* 0x0008 */ unsigned long PartitionNumber;
} STORAGE_DEVICE_NUMBER, *PSTORAGE_DEVICE_NUMBER; /* size: 0x000c */

typedef struct _IA64_KSPECIAL_REGISTERS
{
  /* 0x0000 */ unsigned __int64 KernelDbI0;
  /* 0x0008 */ unsigned __int64 KernelDbI1;
  /* 0x0010 */ unsigned __int64 KernelDbI2;
  /* 0x0018 */ unsigned __int64 KernelDbI3;
  /* 0x0020 */ unsigned __int64 KernelDbI4;
  /* 0x0028 */ unsigned __int64 KernelDbI5;
  /* 0x0030 */ unsigned __int64 KernelDbI6;
  /* 0x0038 */ unsigned __int64 KernelDbI7;
  /* 0x0040 */ unsigned __int64 KernelDbD0;
  /* 0x0048 */ unsigned __int64 KernelDbD1;
  /* 0x0050 */ unsigned __int64 KernelDbD2;
  /* 0x0058 */ unsigned __int64 KernelDbD3;
  /* 0x0060 */ unsigned __int64 KernelDbD4;
  /* 0x0068 */ unsigned __int64 KernelDbD5;
  /* 0x0070 */ unsigned __int64 KernelDbD6;
  /* 0x0078 */ unsigned __int64 KernelDbD7;
  /* 0x0080 */ unsigned __int64 KernelPfC0;
  /* 0x0088 */ unsigned __int64 KernelPfC1;
  /* 0x0090 */ unsigned __int64 KernelPfC2;
  /* 0x0098 */ unsigned __int64 KernelPfC3;
  /* 0x00a0 */ unsigned __int64 KernelPfC4;
  /* 0x00a8 */ unsigned __int64 KernelPfC5;
  /* 0x00b0 */ unsigned __int64 KernelPfC6;
  /* 0x00b8 */ unsigned __int64 KernelPfC7;
  /* 0x00c0 */ unsigned __int64 KernelPfD0;
  /* 0x00c8 */ unsigned __int64 KernelPfD1;
  /* 0x00d0 */ unsigned __int64 KernelPfD2;
  /* 0x00d8 */ unsigned __int64 KernelPfD3;
  /* 0x00e0 */ unsigned __int64 KernelPfD4;
  /* 0x00e8 */ unsigned __int64 KernelPfD5;
  /* 0x00f0 */ unsigned __int64 KernelPfD6;
  /* 0x00f8 */ unsigned __int64 KernelPfD7;
  /* 0x0100 */ unsigned __int64 IntH16;
  /* 0x0108 */ unsigned __int64 IntH17;
  /* 0x0110 */ unsigned __int64 IntH18;
  /* 0x0118 */ unsigned __int64 IntH19;
  /* 0x0120 */ unsigned __int64 IntH20;
  /* 0x0128 */ unsigned __int64 IntH21;
  /* 0x0130 */ unsigned __int64 IntH22;
  /* 0x0138 */ unsigned __int64 IntH23;
  /* 0x0140 */ unsigned __int64 IntH24;
  /* 0x0148 */ unsigned __int64 IntH25;
  /* 0x0150 */ unsigned __int64 IntH26;
  /* 0x0158 */ unsigned __int64 IntH27;
  /* 0x0160 */ unsigned __int64 IntH28;
  /* 0x0168 */ unsigned __int64 IntH29;
  /* 0x0170 */ unsigned __int64 IntH30;
  /* 0x0178 */ unsigned __int64 IntH31;
  /* 0x0180 */ unsigned __int64 ApCPUID0;
  /* 0x0188 */ unsigned __int64 ApCPUID1;
  /* 0x0190 */ unsigned __int64 ApCPUID2;
  /* 0x0198 */ unsigned __int64 ApCPUID3;
  /* 0x01a0 */ unsigned __int64 ApCPUID4;
  /* 0x01a8 */ unsigned __int64 ApCPUID5;
  /* 0x01b0 */ unsigned __int64 ApCPUID6;
  /* 0x01b8 */ unsigned __int64 ApCPUID7;
  /* 0x01c0 */ unsigned __int64 ApKR0;
  /* 0x01c8 */ unsigned __int64 ApKR1;
  /* 0x01d0 */ unsigned __int64 ApKR2;
  /* 0x01d8 */ unsigned __int64 ApKR3;
  /* 0x01e0 */ unsigned __int64 ApKR4;
  /* 0x01e8 */ unsigned __int64 ApKR5;
  /* 0x01f0 */ unsigned __int64 ApKR6;
  /* 0x01f8 */ unsigned __int64 ApKR7;
  /* 0x0200 */ unsigned __int64 ApITC;
  /* 0x0208 */ unsigned __int64 ApITM;
  /* 0x0210 */ unsigned __int64 ApIVA;
  /* 0x0218 */ unsigned __int64 ApPTA;
  /* 0x0220 */ unsigned __int64 ApGPTA;
  /* 0x0228 */ unsigned __int64 StISR;
  /* 0x0230 */ unsigned __int64 StIFA;
  /* 0x0238 */ unsigned __int64 StITIR;
  /* 0x0240 */ unsigned __int64 StIIPA;
  /* 0x0248 */ unsigned __int64 StIIM;
  /* 0x0250 */ unsigned __int64 StIHA;
  /* 0x0258 */ unsigned __int64 SaLID;
  /* 0x0260 */ unsigned __int64 SaIVR;
  /* 0x0268 */ unsigned __int64 SaTPR;
  /* 0x0270 */ unsigned __int64 SaEOI;
  /* 0x0278 */ unsigned __int64 SaIRR0;
  /* 0x0280 */ unsigned __int64 SaIRR1;
  /* 0x0288 */ unsigned __int64 SaIRR2;
  /* 0x0290 */ unsigned __int64 SaIRR3;
  /* 0x0298 */ unsigned __int64 SaITV;
  /* 0x02a0 */ unsigned __int64 SaPMV;
  /* 0x02a8 */ unsigned __int64 SaCMCV;
  /* 0x02b0 */ unsigned __int64 SaLRR0;
  /* 0x02b8 */ unsigned __int64 SaLRR1;
  /* 0x02c0 */ unsigned __int64 Rr0;
  /* 0x02c8 */ unsigned __int64 Rr1;
  /* 0x02d0 */ unsigned __int64 Rr2;
  /* 0x02d8 */ unsigned __int64 Rr3;
  /* 0x02e0 */ unsigned __int64 Rr4;
  /* 0x02e8 */ unsigned __int64 Rr5;
  /* 0x02f0 */ unsigned __int64 Rr6;
  /* 0x02f8 */ unsigned __int64 Rr7;
  /* 0x0300 */ unsigned __int64 Pkr0;
  /* 0x0308 */ unsigned __int64 Pkr1;
  /* 0x0310 */ unsigned __int64 Pkr2;
  /* 0x0318 */ unsigned __int64 Pkr3;
  /* 0x0320 */ unsigned __int64 Pkr4;
  /* 0x0328 */ unsigned __int64 Pkr5;
  /* 0x0330 */ unsigned __int64 Pkr6;
  /* 0x0338 */ unsigned __int64 Pkr7;
  /* 0x0340 */ unsigned __int64 Pkr8;
  /* 0x0348 */ unsigned __int64 Pkr9;
  /* 0x0350 */ unsigned __int64 Pkr10;
  /* 0x0358 */ unsigned __int64 Pkr11;
  /* 0x0360 */ unsigned __int64 Pkr12;
  /* 0x0368 */ unsigned __int64 Pkr13;
  /* 0x0370 */ unsigned __int64 Pkr14;
  /* 0x0378 */ unsigned __int64 Pkr15;
  /* 0x0380 */ unsigned __int64 TrI0;
  /* 0x0388 */ unsigned __int64 TrI1;
  /* 0x0390 */ unsigned __int64 TrI2;
  /* 0x0398 */ unsigned __int64 TrI3;
  /* 0x03a0 */ unsigned __int64 TrI4;
  /* 0x03a8 */ unsigned __int64 TrI5;
  /* 0x03b0 */ unsigned __int64 TrI6;
  /* 0x03b8 */ unsigned __int64 TrI7;
  /* 0x03c0 */ unsigned __int64 TrD0;
  /* 0x03c8 */ unsigned __int64 TrD1;
  /* 0x03d0 */ unsigned __int64 TrD2;
  /* 0x03d8 */ unsigned __int64 TrD3;
  /* 0x03e0 */ unsigned __int64 TrD4;
  /* 0x03e8 */ unsigned __int64 TrD5;
  /* 0x03f0 */ unsigned __int64 TrD6;
  /* 0x03f8 */ unsigned __int64 TrD7;
  /* 0x0400 */ unsigned __int64 SrMSR0;
  /* 0x0408 */ unsigned __int64 SrMSR1;
  /* 0x0410 */ unsigned __int64 SrMSR2;
  /* 0x0418 */ unsigned __int64 SrMSR3;
  /* 0x0420 */ unsigned __int64 SrMSR4;
  /* 0x0428 */ unsigned __int64 SrMSR5;
  /* 0x0430 */ unsigned __int64 SrMSR6;
  /* 0x0438 */ unsigned __int64 SrMSR7;
} IA64_KSPECIAL_REGISTERS, *PIA64_KSPECIAL_REGISTERS; /* size: 0x0440 */

typedef struct _ETW_UMGL_KEY
{
  /* 0x0000 */ unsigned char LoggerId;
  /* 0x0001 */ unsigned char Flags;
} ETW_UMGL_KEY, *PETW_UMGL_KEY; /* size: 0x0002 */

typedef struct _DBGKD_WRITE_MEMORY64
{
  /* 0x0000 */ unsigned __int64 TargetBaseAddress;
  /* 0x0008 */ unsigned long TransferCount;
  /* 0x000c */ unsigned long ActualBytesWritten;
} DBGKD_WRITE_MEMORY64, *PDBGKD_WRITE_MEMORY64; /* size: 0x0010 */

typedef struct _DBGKD_GET_CONTEXT
{
  /* 0x0000 */ unsigned long Unused;
} DBGKD_GET_CONTEXT, *PDBGKD_GET_CONTEXT; /* size: 0x0004 */

typedef struct _DBGKD_SET_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
} DBGKD_SET_CONTEXT, *PDBGKD_SET_CONTEXT; /* size: 0x0004 */

typedef struct _AMD64_DBGKD_CONTROL_SET
{
  /* 0x0000 */ unsigned long TraceFlag;
  /* 0x0004 */ unsigned __int64 Dr7;
  /* 0x000c */ unsigned __int64 CurrentSymbolStart;
  /* 0x0014 */ unsigned __int64 CurrentSymbolEnd;
} AMD64_DBGKD_CONTROL_SET, *PAMD64_DBGKD_CONTROL_SET; /* size: 0x001c */

typedef struct _X86_DBGKD_CONTROL_SET
{
  /* 0x0000 */ unsigned long TraceFlag;
  /* 0x0004 */ unsigned long Dr7;
  /* 0x0008 */ unsigned long CurrentSymbolStart;
  /* 0x000c */ unsigned long CurrentSymbolEnd;
} X86_DBGKD_CONTROL_SET, *PX86_DBGKD_CONTROL_SET; /* size: 0x0010 */

typedef struct _PPC_DBGKD_CONTROL_SET
{
  /* 0x0000 */ unsigned long Continue;
  /* 0x0004 */ unsigned long CurrentSymbolStart;
  /* 0x0008 */ unsigned long CurrentSymbolEnd;
} PPC_DBGKD_CONTROL_SET, *PPPC_DBGKD_CONTROL_SET; /* size: 0x000c */

typedef struct _DBGKD_ANY_CONTROL_SET
{
  union
  {
    /* 0x0000 */ struct _X86_DBGKD_CONTROL_SET X86ControlSet;
    /* 0x0000 */ unsigned long AlphaControlSet;
    /* 0x0000 */ struct _IA64_DBGKD_CONTROL_SET IA64ControlSet;
    /* 0x0000 */ struct _AMD64_DBGKD_CONTROL_SET Amd64ControlSet;
    /* 0x0000 */ struct _ARM_DBGKD_CONTROL_SET ArmControlSet;
    struct
    {
      /* 0x0000 */ struct _PPC_DBGKD_CONTROL_SET PpcControlSet;
      /* 0x000c */ long __PADDING__[4];
    }; /* size: 0x001c */
  }; /* size: 0x001c */
} DBGKD_ANY_CONTROL_SET, *PDBGKD_ANY_CONTROL_SET; /* size: 0x001c */

typedef struct _DBGKD_CONTINUE2
{
  /* 0x0000 */ long ContinueStatus;
  union
  {
    /* 0x0004 */ struct _AMD64_DBGKD_CONTROL_SET ControlSet;
    /* 0x0004 */ struct _DBGKD_ANY_CONTROL_SET AnyControlSet;
  }; /* size: 0x001c */
} DBGKD_CONTINUE2, *PDBGKD_CONTINUE2; /* size: 0x0020 */

typedef struct _DBGKD_READ_WRITE_IO_EXTENDED64
{
  /* 0x0000 */ unsigned long DataSize;
  /* 0x0004 */ unsigned long InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long AddressSpace;
  /* 0x0010 */ unsigned __int64 IoAddress;
  /* 0x0018 */ unsigned long DataValue;
  /* 0x001c */ long __PADDING__[1];
} DBGKD_READ_WRITE_IO_EXTENDED64, *PDBGKD_READ_WRITE_IO_EXTENDED64; /* size: 0x0020 */

typedef struct _DBGKD_QUERY_SPECIAL_CALLS
{
  /* 0x0000 */ unsigned long NumberOfSpecialCalls;
} DBGKD_QUERY_SPECIAL_CALLS, *PDBGKD_QUERY_SPECIAL_CALLS; /* size: 0x0004 */

typedef struct _DBGKD_SET_SPECIAL_CALL64
{
  /* 0x0000 */ unsigned __int64 SpecialCall;
} DBGKD_SET_SPECIAL_CALL64, *PDBGKD_SET_SPECIAL_CALL64; /* size: 0x0008 */

typedef struct _DBGKD_SET_INTERNAL_BREAKPOINT64
{
  /* 0x0000 */ unsigned __int64 BreakpointAddress;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long __PADDING__[1];
} DBGKD_SET_INTERNAL_BREAKPOINT64, *PDBGKD_SET_INTERNAL_BREAKPOINT64; /* size: 0x0010 */

typedef struct _DBGKD_GET_INTERNAL_BREAKPOINT64
{
  /* 0x0000 */ unsigned __int64 BreakpointAddress;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Calls;
  /* 0x0010 */ unsigned long MaxCallsPerPeriod;
  /* 0x0014 */ unsigned long MinInstructions;
  /* 0x0018 */ unsigned long MaxInstructions;
  /* 0x001c */ unsigned long TotalInstructions;
} DBGKD_GET_INTERNAL_BREAKPOINT64, *PDBGKD_GET_INTERNAL_BREAKPOINT64; /* size: 0x0020 */

typedef struct _DBGKD_GET_VERSION64
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned char ProtocolVersion;
  /* 0x0005 */ unsigned char KdSecondaryVersion;
  /* 0x0006 */ unsigned short Flags;
  /* 0x0008 */ unsigned short MachineType;
  /* 0x000a */ unsigned char MaxPacketType;
  /* 0x000b */ unsigned char MaxStateChange;
  /* 0x000c */ unsigned char MaxManipulate;
  /* 0x000d */ unsigned char Simulation;
  /* 0x000e */ unsigned short Unused[1];
  /* 0x0010 */ unsigned __int64 KernBase;
  /* 0x0018 */ unsigned __int64 PsLoadedModuleList;
  /* 0x0020 */ unsigned __int64 DebuggerDataList;
} DBGKD_GET_VERSION64, *PDBGKD_GET_VERSION64; /* size: 0x0028 */

typedef struct _DBGKD_BREAKPOINTEX
{
  /* 0x0000 */ unsigned long BreakPointCount;
  /* 0x0004 */ long ContinueStatus;
} DBGKD_BREAKPOINTEX, *PDBGKD_BREAKPOINTEX; /* size: 0x0008 */

typedef struct _DBGKD_FILL_MEMORY
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned short Flags;
  /* 0x000e */ unsigned short PatternLength;
} DBGKD_FILL_MEMORY, *PDBGKD_FILL_MEMORY; /* size: 0x0010 */

typedef struct _DBGKD_QUERY_MEMORY
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ unsigned long AddressSpace;
  /* 0x0014 */ unsigned long Flags;
} DBGKD_QUERY_MEMORY, *PDBGKD_QUERY_MEMORY; /* size: 0x0018 */

typedef struct _DBGKD_SWITCH_PARTITION
{
  /* 0x0000 */ unsigned long Partition;
} DBGKD_SWITCH_PARTITION, *PDBGKD_SWITCH_PARTITION; /* size: 0x0004 */

typedef struct _PNP_LOCATION_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_454;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* GetLocationString /* function */;
} PNP_LOCATION_INTERFACE, *PPNP_LOCATION_INTERFACE; /* size: 0x0028 */

typedef struct _IO_CSQ
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ long Padding_455;
  /* 0x0008 */ void* CsqInsertIrp /* function */;
  /* 0x0010 */ void* CsqRemoveIrp /* function */;
  /* 0x0018 */ void* CsqPeekNextIrp /* function */;
  /* 0x0020 */ void* CsqAcquireLock /* function */;
  /* 0x0028 */ void* CsqReleaseLock /* function */;
  /* 0x0030 */ void* CsqCompleteCanceledIrp /* function */;
  /* 0x0038 */ void* ReservePointer;
} IO_CSQ, *PIO_CSQ; /* size: 0x0040 */

typedef struct _IO_COMPLETION_BASIC_INFORMATION
{
  /* 0x0000 */ long Depth;
} IO_COMPLETION_BASIC_INFORMATION, *PIO_COMPLETION_BASIC_INFORMATION; /* size: 0x0004 */

typedef struct _WMI_TXR
{
  /* 0x0000 */ __int64 InitialTime;
  /* 0x0008 */ struct _GUID TxRGUID;
  /* 0x0018 */ unsigned long Status;
  /* 0x001c */ unsigned long UowCount;
  /* 0x0020 */ wchar_t Hive[1];
  /* 0x0022 */ char __PADDING__[6];
} WMI_TXR, *PWMI_TXR; /* size: 0x0028 */

typedef struct _BATTERY_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long BatteryTag;
  /* 0x0004 */ enum BATTERY_QUERY_INFORMATION_LEVEL InformationLevel;
  /* 0x0008 */ unsigned long AtRate;
} BATTERY_QUERY_INFORMATION, *PBATTERY_QUERY_INFORMATION; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ struct _UNICODE_STRING Reference;
  /* 0x0028 */ unsigned char Register;
  /* 0x0029 */ char Padding_456[7];
  /* 0x0030 */ unsigned short* SymLink;
  /* 0x0038 */ unsigned long SymLinkLength;
  /* 0x003c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA, *PPLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA; /* size: 0x0040 */

typedef struct _DBGKD_MANIPULATE_STATE64
{
  /* 0x0000 */ unsigned long ApiNumber;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  /* 0x0008 */ long ReturnStatus;
  /* 0x000c */ long Padding_457;
  union
  {
    union
    {
      /* 0x0010 */ struct _DBGKD_READ_MEMORY64 ReadMemory;
      /* 0x0010 */ struct _DBGKD_WRITE_MEMORY64 WriteMemory;
      /* 0x0010 */ struct _DBGKD_GET_CONTEXT GetContext;
      /* 0x0010 */ struct _DBGKD_SET_CONTEXT SetContext;
      /* 0x0010 */ struct _DBGKD_WRITE_BREAKPOINT64 WriteBreakPoint;
      /* 0x0010 */ struct _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint;
      /* 0x0010 */ struct _DBGKD_CONTINUE Continue;
      /* 0x0010 */ struct _DBGKD_CONTINUE2 Continue2;
      /* 0x0010 */ struct _DBGKD_READ_WRITE_IO64 ReadWriteIo;
      /* 0x0010 */ struct _DBGKD_READ_WRITE_IO_EXTENDED64 ReadWriteIoExtended;
      /* 0x0010 */ struct _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls;
      /* 0x0010 */ struct _DBGKD_SET_SPECIAL_CALL64 SetSpecialCall;
      /* 0x0010 */ struct _DBGKD_SET_INTERNAL_BREAKPOINT64 SetInternalBreakpoint;
      /* 0x0010 */ struct _DBGKD_GET_INTERNAL_BREAKPOINT64 GetInternalBreakpoint;
      /* 0x0010 */ struct _DBGKD_GET_VERSION64 GetVersion64;
      /* 0x0010 */ struct _DBGKD_BREAKPOINTEX BreakPointEx;
      /* 0x0010 */ struct _DBGKD_READ_WRITE_MSR ReadWriteMsr;
      /* 0x0010 */ struct _DBGKD_SEARCH_MEMORY SearchMemory;
      /* 0x0010 */ struct _DBGKD_GET_SET_BUS_DATA GetSetBusData;
      /* 0x0010 */ struct _DBGKD_FILL_MEMORY FillMemory;
      /* 0x0010 */ struct _DBGKD_QUERY_MEMORY QueryMemory;
      /* 0x0010 */ struct _DBGKD_SWITCH_PARTITION SwitchPartition;
    }; /* size: 0x0028 */
  } /* size: 0x0028 */ u;
} DBGKD_MANIPULATE_STATE64, *PDBGKD_MANIPULATE_STATE64; /* size: 0x0038 */

typedef struct _DBGKD_LOAD_SYMBOLS64
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ long Padding_458;
  /* 0x0008 */ unsigned __int64 BaseOfDll;
  /* 0x0010 */ unsigned __int64 ProcessId;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long SizeOfImage;
  /* 0x0020 */ unsigned char UnloadSymbols;
  /* 0x0021 */ char __PADDING__[7];
} DBGKD_LOAD_SYMBOLS64, *PDBGKD_LOAD_SYMBOLS64; /* size: 0x0028 */

typedef struct _DBGKD_WAIT_STATE_CHANGE64
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  /* 0x0008 */ unsigned long NumberProcessors;
  /* 0x000c */ long Padding_459;
  /* 0x0010 */ unsigned __int64 Thread;
  /* 0x0018 */ unsigned __int64 ProgramCounter;
  union
  {
    union
    {
      /* 0x0020 */ struct _DBGKM_EXCEPTION64 Exception;
      /* 0x0020 */ struct _DBGKD_LOAD_SYMBOLS64 LoadSymbols;
    }; /* size: 0x00a0 */
  } /* size: 0x00a0 */ u;
} DBGKD_WAIT_STATE_CHANGE64, *PDBGKD_WAIT_STATE_CHANGE64; /* size: 0x00c0 */

union INTEL_CACHE_INFO_EAX
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct /* bitfield */
    {
      /* 0x0000 */ enum _INTEL_CACHE_TYPE Type : 5; /* bit position: 0 */
      /* 0x0000 */ unsigned long Level : 3; /* bit position: 5 */
      /* 0x0000 */ unsigned long SelfInitializing : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long FullyAssociative : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long Reserved : 4; /* bit position: 10 */
      /* 0x0000 */ unsigned long ThreadsSharing : 12; /* bit position: 14 */
      /* 0x0000 */ unsigned long ProcessorCores : 6; /* bit position: 26 */
    }; /* bitfield */
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _DBGKM_EXCEPTION
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ unsigned long FirstChance;
  /* 0x009c */ long __PADDING__[1];
} DBGKM_EXCEPTION, *PDBGKM_EXCEPTION; /* size: 0x00a0 */

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA
{
  /* 0x0000 */ unsigned long Response;
  /* 0x0004 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0008 */ unsigned short* VetoName;
  /* 0x0010 */ unsigned long VetoNameLength;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_USER_RESPONSE_DATA, *PPLUGPLAY_CONTROL_USER_RESPONSE_DATA; /* size: 0x0018 */

typedef struct _IMAGE_FUNCTION_ENTRY64
{
  /* 0x0000 */ unsigned __int64 StartingAddress;
  /* 0x0008 */ unsigned __int64 EndingAddress;
  union
  {
    /* 0x0010 */ unsigned __int64 EndOfPrologue;
    /* 0x0010 */ unsigned __int64 UnwindInfoAddress;
  }; /* size: 0x0008 */
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64; /* size: 0x0018 */

typedef struct _KTHREAD_VALUES
{
  /* 0x0000 */ unsigned long WaitTime;
  /* 0x0004 */ unsigned char State;
  /* 0x0005 */ unsigned char WaitReason;
  /* 0x0006 */ char Priority;
  /* 0x0007 */ char BasePriority;
} KTHREAD_VALUES, *PKTHREAD_VALUES; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IdleTime;
  /* 0x0008 */ unsigned __int64 C1Time;
  /* 0x0010 */ unsigned __int64 C2Time;
  /* 0x0018 */ unsigned __int64 C3Time;
  /* 0x0020 */ unsigned long C1Transitions;
  /* 0x0024 */ unsigned long C2Transitions;
  /* 0x0028 */ unsigned long C3Transitions;
  /* 0x002c */ unsigned long Padding;
} SYSTEM_PROCESSOR_IDLE_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_INFORMATION; /* size: 0x0030 */

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _FILE_ZERO_DATA_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER BeyondFinalZero;
} FILE_ZERO_DATA_INFORMATION, *PFILE_ZERO_DATA_INFORMATION; /* size: 0x0010 */

struct STARTING_VCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingVcn;
}; /* size: 0x0008 */

typedef struct _LDR_SERVICE_TAG_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ unsigned long ServiceTag;
  /* 0x0014 */ unsigned long Count;
} LDR_SERVICE_TAG_RECORD, *PLDR_SERVICE_TAG_RECORD; /* size: 0x0018 */

typedef struct _PROCESSOR_LOAD
{
  /* 0x0000 */ struct _PROCESSOR_NUMBER ProcessorNumber;
  /* 0x0004 */ unsigned char BusyPercentage;
  /* 0x0005 */ unsigned char FrequencyPercentage;
} PROCESSOR_LOAD, *PPROCESSOR_LOAD; /* size: 0x0006 */

typedef struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ enum _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE Type;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    union
    {
      /* 0x0008 */ unsigned long CounterIndex;
      /* 0x0008 */ unsigned long ExtendedRegisterAddress;
      struct
      {
        /* 0x0008 */ unsigned long Begin;
        /* 0x000c */ unsigned long End;
      } /* size: 0x0008 */ Range;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR, *PPHYSICAL_COUNTER_RESOURCE_DESCRIPTOR; /* size: 0x0010 */

typedef struct _DBGKD_PRINT_STRING
{
  /* 0x0000 */ unsigned long LengthOfString;
} DBGKD_PRINT_STRING, *PDBGKD_PRINT_STRING; /* size: 0x0004 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT64
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_460;
  /* 0x0008 */ unsigned __int64 FrameName;
} TEB_ACTIVE_FRAME_CONTEXT64, *PTEB_ACTIVE_FRAME_CONTEXT64; /* size: 0x0010 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX64
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT64 BasicContext;
  /* 0x0010 */ unsigned __int64 SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX64, *PTEB_ACTIVE_FRAME_CONTEXT_EX64; /* size: 0x0018 */

typedef struct _IO_INTERRUPT_MESSAGE_INFO
{
  /* 0x0000 */ unsigned char UnifiedIrql;
  /* 0x0001 */ char Padding_461[3];
  /* 0x0004 */ unsigned long MessageCount;
  /* 0x0008 */ struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY MessageInfo[1];
} IO_INTERRUPT_MESSAGE_INFO, *PIO_INTERRUPT_MESSAGE_INFO; /* size: 0x0038 */

typedef struct _GET_EXPRESSION_EX
{
  /* 0x0000 */ const char* Expression;
  /* 0x0008 */ const char* Remainder;
  /* 0x0010 */ unsigned __int64 Value;
} GET_EXPRESSION_EX, *PGET_EXPRESSION_EX; /* size: 0x0018 */

typedef union _DBGKD_TRACE_DATA
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char SymbolNumber;
      /* 0x0001 */ char LevelChange;
      /* 0x0002 */ unsigned short Instructions;
    } /* size: 0x0004 */ s;
    /* 0x0000 */ unsigned long LongNumber;
  }; /* size: 0x0004 */
} DBGKD_TRACE_DATA, *PDBGKD_TRACE_DATA; /* size: 0x0004 */

typedef struct _REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ void* ObjectContext;
  /* 0x0010 */ void* Reserved;
} REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION, *PREG_CALLBACK_CONTEXT_CLEANUP_INFORMATION; /* size: 0x0018 */

typedef struct _KBUGCHECK_REASON_CALLBACK_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* CallbackRoutine /* function */;
  /* 0x0018 */ unsigned char* Component;
  /* 0x0020 */ unsigned __int64 Checksum;
  /* 0x0028 */ enum _KBUGCHECK_CALLBACK_REASON Reason;
  /* 0x002c */ unsigned char State;
  /* 0x002d */ char __PADDING__[3];
} KBUGCHECK_REASON_CALLBACK_RECORD, *PKBUGCHECK_REASON_CALLBACK_RECORD; /* size: 0x0030 */

typedef struct _PCAT_FIRMWARE_INFORMATION
{
  /* 0x0000 */ unsigned long PlaceHolder;
} PCAT_FIRMWARE_INFORMATION, *PPCAT_FIRMWARE_INFORMATION; /* size: 0x0004 */

typedef struct _MUICCHEADER
{
  /* 0x0000 */ unsigned int ulMaxStringsSize;
  /* 0x0004 */ unsigned int ulSizeStrings;
  /* 0x0008 */ unsigned int ulMaxNumInstalledCultures;
  /* 0x000c */ unsigned int ulNumInstalledCultures;
  /* 0x0010 */ unsigned int ulMaxNumUnverifiedCultures;
  /* 0x0014 */ unsigned int ulNumUnverifiedCultures;
} MUICCHEADER, *PMUICCHEADER; /* size: 0x0018 */

typedef struct _LSA_FOREST_TRUST_COLLISION_INFORMATION
{
  /* 0x0000 */ unsigned long RecordCount;
  /* 0x0004 */ long Padding_462;
  /* 0x0008 */ struct _LSA_FOREST_TRUST_COLLISION_RECORD** Entries;
} LSA_FOREST_TRUST_COLLISION_INFORMATION, *PLSA_FOREST_TRUST_COLLISION_INFORMATION; /* size: 0x0010 */

typedef struct _PPMWMIGUIDREGINFO
{
  /* 0x0000 */ const struct _GUID* Guid;
  /* 0x0008 */ unsigned long InstanceCount;
  /* 0x000c */ unsigned long Flags;
} PPMWMIGUIDREGINFO, *PPPMWMIGUIDREGINFO; /* size: 0x0010 */

typedef struct _EXTSTACKTRACE64
{
  /* 0x0000 */ unsigned __int64 FramePointer;
  /* 0x0008 */ unsigned __int64 ProgramCounter;
  /* 0x0010 */ unsigned __int64 ReturnAddress;
  /* 0x0018 */ unsigned __int64 Args[4];
} EXTSTACKTRACE64, *PEXTSTACKTRACE64; /* size: 0x0038 */

typedef struct _PERFINFO_SYSCALL_EXIT_DATA
{
  /* 0x0000 */ long ReturnValue;
} PERFINFO_SYSCALL_EXIT_DATA, *PPERFINFO_SYSCALL_EXIT_DATA; /* size: 0x0004 */

typedef struct _LSA_SID_NAME_MAPPING_OPERATION_REMOVE_INPUT
{
  /* 0x0000 */ struct _UNICODE_STRING DomainName;
  /* 0x0010 */ struct _UNICODE_STRING AccountName;
} LSA_SID_NAME_MAPPING_OPERATION_REMOVE_INPUT, *PLSA_SID_NAME_MAPPING_OPERATION_REMOVE_INPUT; /* size: 0x0020 */

typedef struct _IO_DISCONNECT_INTERRUPT_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_463;
  union
  {
    union
    {
      /* 0x0008 */ void* Generic;
      /* 0x0008 */ struct _KINTERRUPT* InterruptObject;
      /* 0x0008 */ struct _IO_INTERRUPT_MESSAGE_INFO* InterruptMessageTable;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ ConnectionContext;
} IO_DISCONNECT_INTERRUPT_PARAMETERS, *PIO_DISCONNECT_INTERRUPT_PARAMETERS; /* size: 0x0010 */

typedef struct _XSAVE_VENDORS
{
  /* 0x0000 */ unsigned long NumberOfVendors;
  /* 0x0004 */ long Padding_464;
  /* 0x0008 */ struct _XSAVE_VENDOR Vendor[1];
} XSAVE_VENDORS, *PXSAVE_VENDORS; /* size: 0x0040 */

typedef struct _SYSTEM_PREFETCH_STATS
{
  /* 0x0000 */ unsigned long DemandFilePageCount;
  /* 0x0004 */ unsigned long DemandFileIOCount;
  /* 0x0008 */ unsigned long TrickleFilePageCount;
  /* 0x000c */ unsigned long TrickleFileIOCount;
  /* 0x0010 */ unsigned long DemandPrivatePageCount;
  /* 0x0014 */ unsigned long DemandPrivateIOCount;
  /* 0x0018 */ unsigned long TricklePrivatePageCount;
  /* 0x001c */ unsigned long TricklePrivateIOCount;
} SYSTEM_PREFETCH_STATS, *PSYSTEM_PREFETCH_STATS; /* size: 0x0020 */

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING FlatName;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned long TrustDirection;
  /* 0x002c */ unsigned long TrustType;
  /* 0x0030 */ unsigned long TrustAttributes;
  /* 0x0034 */ long __PADDING__[1];
} TRUSTED_DOMAIN_INFORMATION_EX, *PTRUSTED_DOMAIN_INFORMATION_EX; /* size: 0x0038 */

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION
{
  /* 0x0000 */ struct _TRUSTED_DOMAIN_INFORMATION_EX Information;
  /* 0x0038 */ struct _TRUSTED_POSIX_OFFSET_INFO PosixOffset;
  /* 0x003c */ long Padding_465;
  /* 0x0040 */ struct _TRUSTED_DOMAIN_AUTH_INFORMATION AuthInformation;
} TRUSTED_DOMAIN_FULL_INFORMATION, *PTRUSTED_DOMAIN_FULL_INFORMATION; /* size: 0x0070 */

typedef struct _OB_OPERATION_REGISTRATION
{
  /* 0x0000 */ struct _OBJECT_TYPE** ObjectType;
  /* 0x0008 */ unsigned long Operations;
  /* 0x000c */ long Padding_466;
  /* 0x0010 */ void* PreOperation /* function */;
  /* 0x0018 */ void* PostOperation /* function */;
} OB_OPERATION_REGISTRATION, *POB_OPERATION_REGISTRATION; /* size: 0x0020 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_467;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_468;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_469;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600; /* size: 0x0048 */

typedef struct _OBJECT_HEADER_NAME_INFO
{
  /* 0x0000 */ struct _OBJECT_DIRECTORY* Directory;
  /* 0x0008 */ struct _UNICODE_STRING Name;
  /* 0x0018 */ long ReferenceCount;
  /* 0x001c */ long __PADDING__[1];
} OBJECT_HEADER_NAME_INFO, *POBJECT_HEADER_NAME_INFO; /* size: 0x0020 */

typedef struct _MEMORY_BASIC_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ void* AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ long Padding_470;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ long __PADDING__[1];
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _PCI_TYPE0_CFG_CYCLE_BITS
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long Reserved1 : 2; /* bit position: 0 */
          /* 0x0000 */ unsigned long RegisterNumber : 6; /* bit position: 2 */
          /* 0x0000 */ unsigned long FunctionNumber : 3; /* bit position: 8 */
          /* 0x0000 */ unsigned long Reserved2 : 21; /* bit position: 11 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} PCI_TYPE0_CFG_CYCLE_BITS, *PPCI_TYPE0_CFG_CYCLE_BITS; /* size: 0x0004 */

typedef struct _OBJECT_DIRECTORY_ENTRY
{
  /* 0x0000 */ struct _OBJECT_DIRECTORY_ENTRY* ChainLink;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long HashValue;
  /* 0x0014 */ long __PADDING__[1];
} OBJECT_DIRECTORY_ENTRY, *POBJECT_DIRECTORY_ENTRY; /* size: 0x0018 */

typedef struct _OB_PRE_CREATE_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long OriginalDesiredAccess;
} OB_PRE_CREATE_HANDLE_INFORMATION, *POB_PRE_CREATE_HANDLE_INFORMATION; /* size: 0x0008 */

typedef union _OB_PRE_OPERATION_PARAMETERS
{
  union
  {
    /* 0x0000 */ struct _OB_PRE_CREATE_HANDLE_INFORMATION CreateHandleInformation;
    /* 0x0000 */ struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION DuplicateHandleInformation;
  }; /* size: 0x0018 */
} OB_PRE_OPERATION_PARAMETERS, *POB_PRE_OPERATION_PARAMETERS; /* size: 0x0018 */

typedef struct _ETW_TP_EVENT_CALLBACK_CANCEL
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
  /* 0x0028 */ void* TaskId;
  /* 0x0030 */ void* Callback;
  /* 0x0038 */ void* Context;
  /* 0x0040 */ void* SubProcessTag;
  /* 0x0048 */ unsigned long CancelCount;
  /* 0x004c */ long __PADDING__[1];
} ETW_TP_EVENT_CALLBACK_CANCEL, *PETW_TP_EVENT_CALLBACK_CANCEL; /* size: 0x0050 */

typedef union _OB_POST_OPERATION_PARAMETERS
{
  union
  {
    /* 0x0000 */ struct _OB_POST_CREATE_HANDLE_INFORMATION CreateHandleInformation;
    /* 0x0000 */ struct _OB_POST_DUPLICATE_HANDLE_INFORMATION DuplicateHandleInformation;
  }; /* size: 0x0004 */
} OB_POST_OPERATION_PARAMETERS, *POB_POST_OPERATION_PARAMETERS; /* size: 0x0004 */

typedef struct _WHEA_PCIEXPRESS_ERROR_SECTION
{
  /* 0x0000 */ union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS ValidBits;
  /* 0x0008 */ enum _WHEA_PCIEXPRESS_DEVICE_TYPE PortType;
  /* 0x000c */ union _WHEA_PCIEXPRESS_VERSION Version;
  /* 0x0010 */ union _WHEA_PCIEXPRESS_COMMAND_STATUS CommandStatus;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ struct _WHEA_PCIEXPRESS_DEVICE_ID DeviceId;
  /* 0x0028 */ unsigned __int64 DeviceSerialNumber;
  /* 0x0030 */ union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS BridgeControlStatus;
  /* 0x0034 */ unsigned char ExpressCapability[60];
  /* 0x0070 */ unsigned char AerInfo[96];
} WHEA_PCIEXPRESS_ERROR_SECTION, *PWHEA_PCIEXPRESS_ERROR_SECTION; /* size: 0x00d0 */

typedef struct _OB_POST_OPERATION_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
  union
  {
    /* 0x0004 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long KernelHandle : 1; /* bit position: 0 */
      /* 0x0004 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0008 */ void* Object;
  /* 0x0010 */ struct _OBJECT_TYPE* ObjectType;
  /* 0x0018 */ void* CallContext;
  /* 0x0020 */ long ReturnStatus;
  /* 0x0024 */ long Padding_471;
  /* 0x0028 */ union _OB_POST_OPERATION_PARAMETERS* Parameters;
} OB_POST_OPERATION_INFORMATION, *POB_POST_OPERATION_INFORMATION; /* size: 0x0030 */

typedef struct _FILE_ATTRIBUTE_CACHE_VALUE
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned short Size;
  /* 0x0006 */ unsigned short RequiredSize;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_ATTRIBUTE_CACHE_VALUE, *PFILE_ATTRIBUTE_CACHE_VALUE; /* size: 0x000c */

typedef struct _FILE_ATTRIBUTE_CACHE_PAIR
{
  /* 0x0000 */ wchar_t Name[100];
  /* 0x00c8 */ struct _FILE_ATTRIBUTE_CACHE_VALUE Value;
} FILE_ATTRIBUTE_CACHE_PAIR, *PFILE_ATTRIBUTE_CACHE_PAIR; /* size: 0x00d4 */

typedef union _AMD64_UNWIND_CODE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char CodeOffset;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OpInfo : 4; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0002 */
    /* 0x0000 */ unsigned short FrameOffset;
  }; /* size: 0x0002 */
} AMD64_UNWIND_CODE, *PAMD64_UNWIND_CODE; /* size: 0x0002 */

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeFlags;
  /* 0x0004 */ unsigned long FlagMask;
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Reserved;
} FILE_FS_PERSISTENT_VOLUME_INFORMATION, *PFILE_FS_PERSISTENT_VOLUME_INFORMATION; /* size: 0x0010 */

typedef struct _PROCESSOR_RELATIONSHIP
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char Reserved[21];
  /* 0x0016 */ unsigned short GroupCount;
  /* 0x0018 */ struct _GROUP_AFFINITY GroupMask[1];
} PROCESSOR_RELATIONSHIP, *PPROCESSOR_RELATIONSHIP; /* size: 0x0028 */

typedef struct _IMAGE_TLS_DIRECTORY64
{
  /* 0x0000 */ unsigned __int64 StartAddressOfRawData;
  /* 0x0008 */ unsigned __int64 EndAddressOfRawData;
  /* 0x0010 */ unsigned __int64 AddressOfIndex;
  /* 0x0018 */ unsigned __int64 AddressOfCallBacks;
  /* 0x0020 */ unsigned long SizeOfZeroFill;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY64, *PIMAGE_TLS_DIRECTORY64; /* size: 0x0028 */

typedef struct _RTL_BITMAP_RUN
{
  /* 0x0000 */ unsigned long StartingIndex;
  /* 0x0004 */ unsigned long NumberOfBits;
} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN; /* size: 0x0008 */

typedef struct _VI_FAULT_TRACE
{
  /* 0x0000 */ struct _ETHREAD* Thread;
  /* 0x0008 */ void* StackTrace[8];
} VI_FAULT_TRACE, *PVI_FAULT_TRACE; /* size: 0x0048 */

typedef struct _PO_DEVICE_NOTIFY_ORDER
{
  /* 0x0000 */ unsigned char Locked;
  /* 0x0001 */ char Padding_472[7];
  /* 0x0008 */ struct _DEVICE_OBJECT** WarmEjectPdoPointer;
  /* 0x0010 */ struct _PO_NOTIFY_ORDER_LEVEL OrderLevel[9];
} PO_DEVICE_NOTIFY_ORDER, *PPO_DEVICE_NOTIFY_ORDER; /* size: 0x0298 */

typedef struct _POP_DEVICE_SYS_STATE
{
  /* 0x0000 */ unsigned char IrpMinor;
  /* 0x0001 */ char Padding_473[3];
  /* 0x0004 */ enum _SYSTEM_POWER_STATE SystemState;
  /* 0x0008 */ unsigned __int64 SpinLock;
  /* 0x0010 */ struct _KTHREAD* Thread;
  /* 0x0018 */ struct _KEVENT* AbortEvent;
  /* 0x0020 */ struct _KSEMAPHORE* ReadySemaphore;
  /* 0x0028 */ struct _KSEMAPHORE* FinishedSemaphore;
  /* 0x0030 */ unsigned char GetNewDeviceList;
  /* 0x0031 */ char Padding_474[7];
  /* 0x0038 */ struct _PO_DEVICE_NOTIFY_ORDER Order;
  /* 0x02d0 */ struct _LIST_ENTRY Pending;
  /* 0x02e0 */ long Status;
  /* 0x02e4 */ long Padding_475;
  /* 0x02e8 */ struct _DEVICE_OBJECT* FailedDevice;
  /* 0x02f0 */ unsigned char Waking;
  /* 0x02f1 */ unsigned char Cancelled;
  /* 0x02f2 */ unsigned char IgnoreErrors;
  /* 0x02f3 */ unsigned char IgnoreNotImplemented;
  /* 0x02f4 */ unsigned char TimeRefreshLockAcquired;
  /* 0x02f5 */ char __PADDING__[3];
} POP_DEVICE_SYS_STATE, *PPOP_DEVICE_SYS_STATE; /* size: 0x02f8 */

typedef struct _MMPFNLIST
{
  /* 0x0000 */ volatile unsigned __int64 Total;
  /* 0x0008 */ enum _MMLISTS ListName;
  /* 0x000c */ long Padding_476;
  /* 0x0010 */ unsigned __int64 Flink;
  /* 0x0018 */ unsigned __int64 Blink;
  /* 0x0020 */ unsigned __int64 Lock;
} MMPFNLIST, *PMMPFNLIST; /* size: 0x0028 */

typedef struct _IA64_KNONVOLATILE_CONTEXT_POINTERS
{
  /* 0x0000 */ struct _FLOAT128* FltS0;
  /* 0x0008 */ struct _FLOAT128* FltS1;
  /* 0x0010 */ struct _FLOAT128* FltS2;
  /* 0x0018 */ struct _FLOAT128* FltS3;
  /* 0x0020 */ struct _FLOAT128* HighFloatingContext[10];
  /* 0x0070 */ struct _FLOAT128* FltS4;
  /* 0x0078 */ struct _FLOAT128* FltS5;
  /* 0x0080 */ struct _FLOAT128* FltS6;
  /* 0x0088 */ struct _FLOAT128* FltS7;
  /* 0x0090 */ struct _FLOAT128* FltS8;
  /* 0x0098 */ struct _FLOAT128* FltS9;
  /* 0x00a0 */ struct _FLOAT128* FltS10;
  /* 0x00a8 */ struct _FLOAT128* FltS11;
  /* 0x00b0 */ struct _FLOAT128* FltS12;
  /* 0x00b8 */ struct _FLOAT128* FltS13;
  /* 0x00c0 */ struct _FLOAT128* FltS14;
  /* 0x00c8 */ struct _FLOAT128* FltS15;
  /* 0x00d0 */ struct _FLOAT128* FltS16;
  /* 0x00d8 */ struct _FLOAT128* FltS17;
  /* 0x00e0 */ struct _FLOAT128* FltS18;
  /* 0x00e8 */ struct _FLOAT128* FltS19;
  /* 0x00f0 */ unsigned __int64* IntS0;
  /* 0x00f8 */ unsigned __int64* IntS1;
  /* 0x0100 */ unsigned __int64* IntS2;
  /* 0x0108 */ unsigned __int64* IntS3;
  /* 0x0110 */ unsigned __int64* IntSp;
  /* 0x0118 */ unsigned __int64* IntS0Nat;
  /* 0x0120 */ unsigned __int64* IntS1Nat;
  /* 0x0128 */ unsigned __int64* IntS2Nat;
  /* 0x0130 */ unsigned __int64* IntS3Nat;
  /* 0x0138 */ unsigned __int64* IntSpNat;
  /* 0x0140 */ unsigned __int64* Preds;
  /* 0x0148 */ unsigned __int64* BrRp;
  /* 0x0150 */ unsigned __int64* BrS0;
  /* 0x0158 */ unsigned __int64* BrS1;
  /* 0x0160 */ unsigned __int64* BrS2;
  /* 0x0168 */ unsigned __int64* BrS3;
  /* 0x0170 */ unsigned __int64* BrS4;
  /* 0x0178 */ unsigned __int64* ApUNAT;
  /* 0x0180 */ unsigned __int64* ApLC;
  /* 0x0188 */ unsigned __int64* ApEC;
  /* 0x0190 */ unsigned __int64* RsPFS;
  /* 0x0198 */ unsigned __int64* StFSR;
  /* 0x01a0 */ unsigned __int64* StFIR;
  /* 0x01a8 */ unsigned __int64* StFDR;
  /* 0x01b0 */ unsigned __int64* Cflag;
} IA64_KNONVOLATILE_CONTEXT_POINTERS, *PIA64_KNONVOLATILE_CONTEXT_POINTERS; /* size: 0x01b8 */

struct BATTERY_REPORTING_SCALE
{
  /* 0x0000 */ unsigned long Granularity;
  /* 0x0004 */ unsigned long Capacity;
}; /* size: 0x0008 */

struct SYSTEM_POWER_CAPABILITIES
{
  /* 0x0000 */ unsigned char PowerButtonPresent;
  /* 0x0001 */ unsigned char SleepButtonPresent;
  /* 0x0002 */ unsigned char LidPresent;
  /* 0x0003 */ unsigned char SystemS1;
  /* 0x0004 */ unsigned char SystemS2;
  /* 0x0005 */ unsigned char SystemS3;
  /* 0x0006 */ unsigned char SystemS4;
  /* 0x0007 */ unsigned char SystemS5;
  /* 0x0008 */ unsigned char HiberFilePresent;
  /* 0x0009 */ unsigned char FullWake;
  /* 0x000a */ unsigned char VideoDimPresent;
  /* 0x000b */ unsigned char ApmPresent;
  /* 0x000c */ unsigned char UpsPresent;
  /* 0x000d */ unsigned char ThermalControl;
  /* 0x000e */ unsigned char ProcessorThrottle;
  /* 0x000f */ unsigned char ProcessorMinThrottle;
  /* 0x0010 */ unsigned char ProcessorMaxThrottle;
  /* 0x0011 */ unsigned char FastSystemS4;
  /* 0x0012 */ unsigned char spare2[3];
  /* 0x0015 */ unsigned char DiskSpinDown;
  /* 0x0016 */ unsigned char spare3[8];
  /* 0x001e */ unsigned char SystemBatteriesPresent;
  /* 0x001f */ unsigned char BatteriesAreShortTerm;
  /* 0x0020 */ struct BATTERY_REPORTING_SCALE BatteryScale[3];
  /* 0x0038 */ enum _SYSTEM_POWER_STATE AcOnLineWake;
  /* 0x003c */ enum _SYSTEM_POWER_STATE SoftLidWake;
  /* 0x0040 */ enum _SYSTEM_POWER_STATE RtcWake;
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinDeviceWakeState;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
}; /* size: 0x004c */

typedef struct _POP_POWER_ACTION
{
  /* 0x0000 */ unsigned char Updates;
  /* 0x0001 */ unsigned char State;
  /* 0x0002 */ unsigned char Shutdown;
  /* 0x0003 */ char Padding_477;
  /* 0x0004 */ enum POWER_ACTION Action;
  /* 0x0008 */ enum _SYSTEM_POWER_STATE LightestState;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ long Status;
  /* 0x0014 */ enum POWER_POLICY_DEVICE_TYPE DeviceType;
  /* 0x0018 */ unsigned long DeviceTypeFlags;
  /* 0x001c */ unsigned char IrpMinor;
  /* 0x001d */ unsigned char Waking;
  /* 0x001e */ char Padding_478[2];
  /* 0x0020 */ enum _SYSTEM_POWER_STATE SystemState;
  /* 0x0024 */ enum _SYSTEM_POWER_STATE NextSystemState;
  /* 0x0028 */ enum _SYSTEM_POWER_STATE EffectiveSystemState;
  /* 0x002c */ enum _SYSTEM_POWER_STATE CurrentSystemState;
  /* 0x0030 */ struct _POP_SHUTDOWN_BUG_CHECK* ShutdownBugCode;
  /* 0x0038 */ struct _POP_DEVICE_SYS_STATE* DevState;
  /* 0x0040 */ struct _POP_HIBER_CONTEXT* HiberContext;
  /* 0x0048 */ unsigned __int64 WakeTime;
  /* 0x0050 */ unsigned __int64 SleepTime;
  /* 0x0058 */ unsigned __int64 ProgrammedRTCTime;
  /* 0x0060 */ unsigned char WakeOnRTC;
  /* 0x0061 */ char Padding_479[7];
  /* 0x0068 */ struct _DIAGNOSTIC_BUFFER* WakeTimerInfo;
  /* 0x0070 */ struct SYSTEM_POWER_CAPABILITIES FilteredCapabilities;
  /* 0x00bc */ long __PADDING__[1];
} POP_POWER_ACTION, *PPOP_POWER_ACTION; /* size: 0x00c0 */

typedef struct _POP_SHUTDOWN_BUG_CHECK
{
  /* 0x0000 */ void* ThreadHandle;
  /* 0x0008 */ void* ThreadId;
  /* 0x0010 */ void* ProcessId;
  /* 0x0018 */ unsigned long Code;
  /* 0x001c */ long Padding_480;
  /* 0x0020 */ unsigned __int64 Parameter1;
  /* 0x0028 */ unsigned __int64 Parameter2;
  /* 0x0030 */ unsigned __int64 Parameter3;
  /* 0x0038 */ unsigned __int64 Parameter4;
} POP_SHUTDOWN_BUG_CHECK, *PPOP_SHUTDOWN_BUG_CHECK; /* size: 0x0040 */

typedef struct _RTL_UNLOAD_EVENT_TRACE32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long SizeOfImage;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ wchar_t ImageName[32];
  /* 0x0054 */ unsigned long Version[2];
} RTL_UNLOAD_EVENT_TRACE32, *PRTL_UNLOAD_EVENT_TRACE32; /* size: 0x005c */

struct OFFSETINSTANCEDATAANDLENGTH
{
  /* 0x0000 */ unsigned long OffsetInstanceData;
  /* 0x0004 */ unsigned long LengthInstanceData;
}; /* size: 0x0008 */

typedef struct _MM_STORE_KEY_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 ContainerKey;
  /* 0x0008 */ union _MM_STORE_SUB_KEY_DESCRIPTOR SubKey;
} MM_STORE_KEY_DESCRIPTOR, *PMM_STORE_KEY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _ACL
{
  /* 0x0000 */ unsigned char AclRevision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short AclSize;
  /* 0x0004 */ unsigned short AceCount;
  /* 0x0006 */ unsigned short Sbz2;
} ACL, *PACL; /* size: 0x0008 */

struct IMPORT_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long SizeOfData;
  union
  {
    /* 0x0010 */ unsigned short Ordinal;
    /* 0x0010 */ unsigned short Hint;
  }; /* size: 0x0002 */
  struct /* bitfield */
  {
    /* 0x0012 */ unsigned short Type : 2; /* bit position: 0 */
    /* 0x0012 */ unsigned short NameType : 3; /* bit position: 2 */
    /* 0x0012 */ unsigned short Reserved : 11; /* bit position: 5 */
  }; /* bitfield */
}; /* size: 0x0014 */

typedef struct _FILE_FS_CONTROL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FreeSpaceStartFiltering;
  /* 0x0008 */ union _LARGE_INTEGER FreeSpaceThreshold;
  /* 0x0010 */ union _LARGE_INTEGER FreeSpaceStopFiltering;
  /* 0x0018 */ union _LARGE_INTEGER DefaultQuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER DefaultQuotaLimit;
  /* 0x0028 */ unsigned long FileSystemControlFlags;
  /* 0x002c */ long __PADDING__[1];
} FILE_FS_CONTROL_INFORMATION, *PFILE_FS_CONTROL_INFORMATION; /* size: 0x0030 */

typedef struct _KTSS64
{
  /* 0x0000 */ unsigned long Reserved0;
  /* 0x0004 */ unsigned __int64 Rsp0;
  /* 0x000c */ unsigned __int64 Rsp1;
  /* 0x0014 */ unsigned __int64 Rsp2;
  /* 0x001c */ unsigned __int64 Ist[8];
  /* 0x005c */ unsigned __int64 Reserved1;
  /* 0x0064 */ unsigned short Reserved2;
  /* 0x0066 */ unsigned short IoMapBase;
} KTSS64, *PKTSS64; /* size: 0x0068 */

typedef struct _CLIENT_ID64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} CLIENT_ID64, *PCLIENT_ID64; /* size: 0x0010 */

typedef struct _MEMORY_RESERVE_HEADER
{
  /* 0x0000 */ volatile long InUse;
} MEMORY_RESERVE_HEADER, *PMEMORY_RESERVE_HEADER; /* size: 0x0004 */

typedef struct _HAL_PROCESSOR_SPEED_INFO
{
  /* 0x0000 */ unsigned long ProcessorSpeed;
} HAL_PROCESSOR_SPEED_INFO, *PHAL_PROCESSOR_SPEED_INFO; /* size: 0x0004 */

typedef struct _KBUGCHECK_CALLBACK_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* CallbackRoutine /* function */;
  /* 0x0018 */ void* Buffer;
  /* 0x0020 */ unsigned long Length;
  /* 0x0024 */ long Padding_481;
  /* 0x0028 */ unsigned char* Component;
  /* 0x0030 */ unsigned __int64 Checksum;
  /* 0x0038 */ unsigned char State;
  /* 0x0039 */ char __PADDING__[7];
} KBUGCHECK_CALLBACK_RECORD, *PKBUGCHECK_CALLBACK_RECORD; /* size: 0x0040 */

typedef struct _TXFS_GET_METADATA_INFO_OUT
{
  struct
  {
    /* 0x0000 */ __int64 LowPart;
    /* 0x0008 */ __int64 HighPart;
  } /* size: 0x0010 */ TxfFileId;
  /* 0x0010 */ struct _GUID LockingTransaction;
  /* 0x0020 */ unsigned __int64 LastLsn;
  /* 0x0028 */ unsigned long TransactionState;
  /* 0x002c */ long __PADDING__[1];
} TXFS_GET_METADATA_INFO_OUT, *PTXFS_GET_METADATA_INFO_OUT; /* size: 0x0030 */

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  /* 0x0040 */ struct _IO_COUNTERS IoInfo;
  /* 0x0070 */ unsigned __int64 ProcessMemoryLimit;
  /* 0x0078 */ unsigned __int64 JobMemoryLimit;
  /* 0x0080 */ unsigned __int64 PeakProcessMemoryUsed;
  /* 0x0088 */ unsigned __int64 PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION; /* size: 0x0090 */

typedef struct _CONTEXT32_RECORD_ENTRY
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long Value;
} CONTEXT32_RECORD_ENTRY, *PCONTEXT32_RECORD_ENTRY; /* size: 0x0008 */

typedef struct _CROSS_PLATFORM_KSPECIAL_REGISTERS
{
  union
  {
    /* 0x0000 */ struct _X86_KSPECIAL_REGISTERS X86Special;
    /* 0x0000 */ struct _IA64_KSPECIAL_REGISTERS IA64Special;
    /* 0x0000 */ struct _AMD64_KSPECIAL_REGISTERS Amd64Special;
    /* 0x0000 */ struct _ARM_KSPECIAL_REGISTERS ArmSpecial;
    struct
    {
      /* 0x0000 */ struct _PPC_KSPECIAL_REGISTERS PpcSpecial;
      /* 0x0020 */ long __PADDING__[264];
    }; /* size: 0x0440 */
  }; /* size: 0x0440 */
} CROSS_PLATFORM_KSPECIAL_REGISTERS, *PCROSS_PLATFORM_KSPECIAL_REGISTERS; /* size: 0x0440 */

typedef struct _DUMP_POINTERS_VERSION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
} DUMP_POINTERS_VERSION, *PDUMP_POINTERS_VERSION; /* size: 0x0008 */

typedef struct _DUMP_POINTERS_EX
{
  /* 0x0000 */ struct _DUMP_POINTERS_VERSION Header;
  /* 0x0008 */ void* DumpData;
  /* 0x0010 */ void* CommonBufferVa;
  /* 0x0018 */ unsigned long CommonBufferSize;
  /* 0x001c */ unsigned char AllocateCommonBuffers;
  /* 0x001d */ char Padding_482[3];
  /* 0x0020 */ void* DeviceObject;
  /* 0x0028 */ void* DriverList;
} DUMP_POINTERS_EX, *PDUMP_POINTERS_EX; /* size: 0x0030 */

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemPartition;
} SYSTEM_SYSTEM_PARTITION_INFORMATION, *PSYSTEM_SYSTEM_PARTITION_INFORMATION; /* size: 0x0010 */

typedef struct _TRUSTED_CONTROLLERS_INFO
{
  /* 0x0000 */ unsigned long Entries;
  /* 0x0004 */ long Padding_483;
  /* 0x0008 */ struct _UNICODE_STRING* Names;
} TRUSTED_CONTROLLERS_INFO, *PTRUSTED_CONTROLLERS_INFO; /* size: 0x0010 */

typedef struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO
{
  /* 0x0000 */ unsigned long AuthenticationOptions;
  /* 0x0004 */ long Padding_484;
  /* 0x0008 */ union _LARGE_INTEGER MaxServiceTicketAge;
  /* 0x0010 */ union _LARGE_INTEGER MaxTicketAge;
  /* 0x0018 */ union _LARGE_INTEGER MaxRenewAge;
  /* 0x0020 */ union _LARGE_INTEGER MaxClockSkew;
  /* 0x0028 */ union _LARGE_INTEGER Reserved;
} POLICY_DOMAIN_KERBEROS_TICKET_INFO, *PPOLICY_DOMAIN_KERBEROS_TICKET_INFO; /* size: 0x0030 */

typedef struct _THERMAL_INFORMATION_EX
{
  /* 0x0000 */ unsigned long ThermalStamp;
  /* 0x0004 */ unsigned long ThermalConstant1;
  /* 0x0008 */ unsigned long ThermalConstant2;
  /* 0x000c */ long Padding_485;
  /* 0x0010 */ struct _KAFFINITY_EX Processors;
  /* 0x0038 */ unsigned long SamplingPeriod;
  /* 0x003c */ unsigned long CurrentTemperature;
  /* 0x0040 */ unsigned long PassiveTripPoint;
  /* 0x0044 */ unsigned long CriticalTripPoint;
  /* 0x0048 */ unsigned char ActiveTripPointCount;
  /* 0x0049 */ char Padding_486[3];
  /* 0x004c */ unsigned long ActiveTripPoint[10];
  /* 0x0074 */ unsigned long S4TransitionTripPoint;
} THERMAL_INFORMATION_EX, *PTHERMAL_INFORMATION_EX; /* size: 0x0078 */

typedef struct _POOL_TRACKER_TABLE
{
  /* 0x0000 */ volatile long Key;
  /* 0x0004 */ volatile long NonPagedAllocs;
  /* 0x0008 */ volatile long NonPagedFrees;
  /* 0x000c */ long Padding_487;
  /* 0x0010 */ unsigned __int64 NonPagedBytes;
  /* 0x0018 */ unsigned long PagedAllocs;
  /* 0x001c */ unsigned long PagedFrees;
  /* 0x0020 */ unsigned __int64 PagedBytes;
} POOL_TRACKER_TABLE, *PPOOL_TRACKER_TABLE; /* size: 0x0028 */

typedef struct _KLDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ unsigned __int64 __Undefined1;
  /* 0x0018 */ unsigned __int64 __Undefined2;
  /* 0x0020 */ unsigned __int64 __Undefined3;
  /* 0x0028 */ unsigned __int64 NonPagedDebugInfo;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_488;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Undefined5;
  /* 0x0070 */ unsigned __int64 __Undefined6;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long __padding1;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ unsigned long __padding2;
} KLDR_DATA_TABLE_ENTRY64, *PKLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _POP_MEMORY_RANGE
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned long Tag;
  /* 0x0014 */ long Padding_489;
  /* 0x0018 */ unsigned __int64 StartPage;
  /* 0x0020 */ unsigned __int64 EndPage;
  /* 0x0028 */ void* CloneVa;
} POP_MEMORY_RANGE, *PPOP_MEMORY_RANGE; /* size: 0x0030 */

typedef struct _FILE_MOVE_CLUSTER_INFORMATION
{
  /* 0x0000 */ unsigned long ClusterCount;
  /* 0x0004 */ long Padding_490;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_MOVE_CLUSTER_INFORMATION, *PFILE_MOVE_CLUSTER_INFORMATION; /* size: 0x0018 */

typedef struct _SECTION_IMAGE_INFORMATION
{
  /* 0x0000 */ void* TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_491;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlusNativeReady : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ComPlusILOnly : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 2 */
      /* 0x0033 */ unsigned char ImageMappedFlat : 1; /* bit position: 3 */
      /* 0x0033 */ unsigned char Reserved : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION; /* size: 0x0040 */

typedef struct _RTL_USER_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_492;
  /* 0x0008 */ void* Process;
  /* 0x0010 */ void* Thread;
  /* 0x0018 */ struct _CLIENT_ID ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION ImageInformation;
} RTL_USER_PROCESS_INFORMATION, *PRTL_USER_PROCESS_INFORMATION; /* size: 0x0068 */

typedef struct _IOSPACE_EX32
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Data;
  /* 0x000c */ unsigned long InterfaceType;
  /* 0x0010 */ unsigned long BusNumber;
  /* 0x0014 */ unsigned long AddressSpace;
} IOSPACE_EX32, *PIOSPACE_EX32; /* size: 0x0018 */

typedef struct _WMI_TRACE_MESSAGE_PACKET
{
  /* 0x0000 */ unsigned short MessageNumber;
  /* 0x0002 */ unsigned short OptionFlags;
} WMI_TRACE_MESSAGE_PACKET, *PWMI_TRACE_MESSAGE_PACKET; /* size: 0x0004 */

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION; /* size: 0x0014 */

typedef struct _WDBGEXTS_DISASSEMBLE_BUFFER
{
  /* 0x0000 */ unsigned __int64 InOffset;
  /* 0x0008 */ unsigned __int64 OutOffset;
  /* 0x0010 */ unsigned long AddrFlags;
  /* 0x0014 */ unsigned long FormatFlags;
  /* 0x0018 */ unsigned long DataBufferBytes;
  /* 0x001c */ unsigned long DisasmBufferChars;
  /* 0x0020 */ void* DataBuffer;
  /* 0x0028 */ unsigned short* DisasmBuffer;
  /* 0x0030 */ unsigned __int64 Reserved0[3];
} WDBGEXTS_DISASSEMBLE_BUFFER, *PWDBGEXTS_DISASSEMBLE_BUFFER; /* size: 0x0048 */

typedef struct _CLFS_NODE_ID
{
  /* 0x0000 */ unsigned long cType;
  /* 0x0004 */ unsigned long cbNode;
} CLFS_NODE_ID, *PCLFS_NODE_ID; /* size: 0x0008 */

typedef struct _POP_SYSTEM_IDLE
{
  /* 0x0000 */ long AverageIdleness;
  /* 0x0004 */ long LowestIdleness;
  /* 0x0008 */ unsigned long Time;
  /* 0x000c */ unsigned long Timeout;
  /* 0x0010 */ unsigned long LastUserInput;
  /* 0x0014 */ struct POWER_ACTION_POLICY Action;
  /* 0x0020 */ enum _SYSTEM_POWER_STATE MinState;
  /* 0x0024 */ unsigned char SystemRequired;
  /* 0x0025 */ unsigned char IdleWorker;
  /* 0x0026 */ unsigned char Sampling;
  /* 0x0027 */ char Padding_493;
  /* 0x0028 */ unsigned __int64 LastTick;
  /* 0x0030 */ unsigned long LastSystemRequiredTime;
  /* 0x0034 */ long __PADDING__[1];
} POP_SYSTEM_IDLE, *PPOP_SYSTEM_IDLE; /* size: 0x0038 */

typedef struct _SYSTEM_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleProcessTime;
  /* 0x0008 */ union _LARGE_INTEGER IoReadTransferCount;
  /* 0x0010 */ union _LARGE_INTEGER IoWriteTransferCount;
  /* 0x0018 */ union _LARGE_INTEGER IoOtherTransferCount;
  /* 0x0020 */ unsigned long IoReadOperationCount;
  /* 0x0024 */ unsigned long IoWriteOperationCount;
  /* 0x0028 */ unsigned long IoOtherOperationCount;
  /* 0x002c */ unsigned long AvailablePages;
  /* 0x0030 */ unsigned long CommittedPages;
  /* 0x0034 */ unsigned long CommitLimit;
  /* 0x0038 */ unsigned long PeakCommitment;
  /* 0x003c */ unsigned long PageFaultCount;
  /* 0x0040 */ unsigned long CopyOnWriteCount;
  /* 0x0044 */ unsigned long TransitionCount;
  /* 0x0048 */ unsigned long CacheTransitionCount;
  /* 0x004c */ unsigned long DemandZeroCount;
  /* 0x0050 */ unsigned long PageReadCount;
  /* 0x0054 */ unsigned long PageReadIoCount;
  /* 0x0058 */ unsigned long CacheReadCount;
  /* 0x005c */ unsigned long CacheIoCount;
  /* 0x0060 */ unsigned long DirtyPagesWriteCount;
  /* 0x0064 */ unsigned long DirtyWriteIoCount;
  /* 0x0068 */ unsigned long MappedPagesWriteCount;
  /* 0x006c */ unsigned long MappedWriteIoCount;
  /* 0x0070 */ unsigned long PagedPoolPages;
  /* 0x0074 */ unsigned long NonPagedPoolPages;
  /* 0x0078 */ unsigned long PagedPoolAllocs;
  /* 0x007c */ unsigned long PagedPoolFrees;
  /* 0x0080 */ unsigned long NonPagedPoolAllocs;
  /* 0x0084 */ unsigned long NonPagedPoolFrees;
  /* 0x0088 */ unsigned long FreeSystemPtes;
  /* 0x008c */ unsigned long ResidentSystemCodePage;
  /* 0x0090 */ unsigned long TotalSystemDriverPages;
  /* 0x0094 */ unsigned long TotalSystemCodePages;
  /* 0x0098 */ unsigned long NonPagedPoolLookasideHits;
  /* 0x009c */ unsigned long PagedPoolLookasideHits;
  /* 0x00a0 */ unsigned long AvailablePagedPoolPages;
  /* 0x00a4 */ unsigned long ResidentSystemCachePage;
  /* 0x00a8 */ unsigned long ResidentPagedPoolPage;
  /* 0x00ac */ unsigned long ResidentSystemDriverPage;
  /* 0x00b0 */ unsigned long CcFastReadNoWait;
  /* 0x00b4 */ unsigned long CcFastReadWait;
  /* 0x00b8 */ unsigned long CcFastReadResourceMiss;
  /* 0x00bc */ unsigned long CcFastReadNotPossible;
  /* 0x00c0 */ unsigned long CcFastMdlReadNoWait;
  /* 0x00c4 */ unsigned long CcFastMdlReadWait;
  /* 0x00c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x00cc */ unsigned long CcFastMdlReadNotPossible;
  /* 0x00d0 */ unsigned long CcMapDataNoWait;
  /* 0x00d4 */ unsigned long CcMapDataWait;
  /* 0x00d8 */ unsigned long CcMapDataNoWaitMiss;
  /* 0x00dc */ unsigned long CcMapDataWaitMiss;
  /* 0x00e0 */ unsigned long CcPinMappedDataCount;
  /* 0x00e4 */ unsigned long CcPinReadNoWait;
  /* 0x00e8 */ unsigned long CcPinReadWait;
  /* 0x00ec */ unsigned long CcPinReadNoWaitMiss;
  /* 0x00f0 */ unsigned long CcPinReadWaitMiss;
  /* 0x00f4 */ unsigned long CcCopyReadNoWait;
  /* 0x00f8 */ unsigned long CcCopyReadWait;
  /* 0x00fc */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x0100 */ unsigned long CcCopyReadWaitMiss;
  /* 0x0104 */ unsigned long CcMdlReadNoWait;
  /* 0x0108 */ unsigned long CcMdlReadWait;
  /* 0x010c */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x0110 */ unsigned long CcMdlReadWaitMiss;
  /* 0x0114 */ unsigned long CcReadAheadIos;
  /* 0x0118 */ unsigned long CcLazyWriteIos;
  /* 0x011c */ unsigned long CcLazyWritePages;
  /* 0x0120 */ unsigned long CcDataFlushes;
  /* 0x0124 */ unsigned long CcDataPages;
  /* 0x0128 */ unsigned long ContextSwitches;
  /* 0x012c */ unsigned long FirstLevelTbFills;
  /* 0x0130 */ unsigned long SecondLevelTbFills;
  /* 0x0134 */ unsigned long SystemCalls;
  /* 0x0138 */ unsigned __int64 CcTotalDirtyPages;
  /* 0x0140 */ unsigned __int64 CcDirtyPageThreshold;
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION; /* size: 0x0148 */

struct VOLUME_BITMAP_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0008 */ union _LARGE_INTEGER BitmapSize;
  /* 0x0010 */ unsigned char Buffer[1];
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalSlots;
} PROCESS_HANDLE_TRACING_ENABLE_EX, *PPROCESS_HANDLE_TRACING_ENABLE_EX; /* size: 0x0008 */

typedef struct _KEVENT_PAIR
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_494;
  /* 0x0008 */ struct _KEVENT EventLow;
  /* 0x0020 */ struct _KEVENT EventHigh;
} KEVENT_PAIR, *PKEVENT_PAIR; /* size: 0x0038 */

typedef struct _NUMA_NODE_RELATIONSHIP
{
  /* 0x0000 */ unsigned long NodeNumber;
  /* 0x0004 */ unsigned char Reserved[20];
  /* 0x0018 */ struct _GROUP_AFFINITY GroupMask;
} NUMA_NODE_RELATIONSHIP, *PNUMA_NODE_RELATIONSHIP; /* size: 0x0028 */

typedef struct _CACHE_RELATIONSHIP
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long CacheSize;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
  /* 0x000c */ unsigned char Reserved[20];
  /* 0x0020 */ struct _GROUP_AFFINITY GroupMask;
} CACHE_RELATIONSHIP, *PCACHE_RELATIONSHIP; /* size: 0x0030 */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
{
  /* 0x0000 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ struct _PROCESSOR_RELATIONSHIP Processor;
    /* 0x0008 */ struct _NUMA_NODE_RELATIONSHIP NumaNode;
    /* 0x0008 */ struct _CACHE_RELATIONSHIP Cache;
    /* 0x0008 */ struct _GROUP_RELATIONSHIP Group;
  }; /* size: 0x0048 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX; /* size: 0x0050 */

typedef struct _ALPHA_NT5_CONTEXT
{
  /* 0x0000 */ unsigned __int64 FltF0;
  /* 0x0008 */ unsigned __int64 FltF1;
  /* 0x0010 */ unsigned __int64 FltF2;
  /* 0x0018 */ unsigned __int64 FltF3;
  /* 0x0020 */ unsigned __int64 FltF4;
  /* 0x0028 */ unsigned __int64 FltF5;
  /* 0x0030 */ unsigned __int64 FltF6;
  /* 0x0038 */ unsigned __int64 FltF7;
  /* 0x0040 */ unsigned __int64 FltF8;
  /* 0x0048 */ unsigned __int64 FltF9;
  /* 0x0050 */ unsigned __int64 FltF10;
  /* 0x0058 */ unsigned __int64 FltF11;
  /* 0x0060 */ unsigned __int64 FltF12;
  /* 0x0068 */ unsigned __int64 FltF13;
  /* 0x0070 */ unsigned __int64 FltF14;
  /* 0x0078 */ unsigned __int64 FltF15;
  /* 0x0080 */ unsigned __int64 FltF16;
  /* 0x0088 */ unsigned __int64 FltF17;
  /* 0x0090 */ unsigned __int64 FltF18;
  /* 0x0098 */ unsigned __int64 FltF19;
  /* 0x00a0 */ unsigned __int64 FltF20;
  /* 0x00a8 */ unsigned __int64 FltF21;
  /* 0x00b0 */ unsigned __int64 FltF22;
  /* 0x00b8 */ unsigned __int64 FltF23;
  /* 0x00c0 */ unsigned __int64 FltF24;
  /* 0x00c8 */ unsigned __int64 FltF25;
  /* 0x00d0 */ unsigned __int64 FltF26;
  /* 0x00d8 */ unsigned __int64 FltF27;
  /* 0x00e0 */ unsigned __int64 FltF28;
  /* 0x00e8 */ unsigned __int64 FltF29;
  /* 0x00f0 */ unsigned __int64 FltF30;
  /* 0x00f8 */ unsigned __int64 FltF31;
  /* 0x0100 */ unsigned __int64 IntV0;
  /* 0x0108 */ unsigned __int64 IntT0;
  /* 0x0110 */ unsigned __int64 IntT1;
  /* 0x0118 */ unsigned __int64 IntT2;
  /* 0x0120 */ unsigned __int64 IntT3;
  /* 0x0128 */ unsigned __int64 IntT4;
  /* 0x0130 */ unsigned __int64 IntT5;
  /* 0x0138 */ unsigned __int64 IntT6;
  /* 0x0140 */ unsigned __int64 IntT7;
  /* 0x0148 */ unsigned __int64 IntS0;
  /* 0x0150 */ unsigned __int64 IntS1;
  /* 0x0158 */ unsigned __int64 IntS2;
  /* 0x0160 */ unsigned __int64 IntS3;
  /* 0x0168 */ unsigned __int64 IntS4;
  /* 0x0170 */ unsigned __int64 IntS5;
  /* 0x0178 */ unsigned __int64 IntFp;
  /* 0x0180 */ unsigned __int64 IntA0;
  /* 0x0188 */ unsigned __int64 IntA1;
  /* 0x0190 */ unsigned __int64 IntA2;
  /* 0x0198 */ unsigned __int64 IntA3;
  /* 0x01a0 */ unsigned __int64 IntA4;
  /* 0x01a8 */ unsigned __int64 IntA5;
  /* 0x01b0 */ unsigned __int64 IntT8;
  /* 0x01b8 */ unsigned __int64 IntT9;
  /* 0x01c0 */ unsigned __int64 IntT10;
  /* 0x01c8 */ unsigned __int64 IntT11;
  /* 0x01d0 */ unsigned __int64 IntRa;
  /* 0x01d8 */ unsigned __int64 IntT12;
  /* 0x01e0 */ unsigned __int64 IntAt;
  /* 0x01e8 */ unsigned __int64 IntGp;
  /* 0x01f0 */ unsigned __int64 IntSp;
  /* 0x01f8 */ unsigned __int64 IntZero;
  /* 0x0200 */ unsigned __int64 Fpcr;
  /* 0x0208 */ unsigned __int64 SoftFpcr;
  /* 0x0210 */ unsigned __int64 Fir;
  /* 0x0218 */ unsigned long Psr;
  /* 0x021c */ unsigned long ContextFlags;
  /* 0x0220 */ unsigned long Fill[4];
} ALPHA_NT5_CONTEXT, *PALPHA_NT5_CONTEXT; /* size: 0x0230 */

typedef struct _PCI_COMMON_HEADER
{
  /* 0x0000 */ unsigned short VendorID;
  /* 0x0002 */ unsigned short DeviceID;
  /* 0x0004 */ unsigned short Command;
  /* 0x0006 */ unsigned short Status;
  /* 0x0008 */ unsigned char RevisionID;
  /* 0x0009 */ unsigned char ProgIf;
  /* 0x000a */ unsigned char SubClass;
  /* 0x000b */ unsigned char BaseClass;
  /* 0x000c */ unsigned char CacheLineSize;
  /* 0x000d */ unsigned char LatencyTimer;
  /* 0x000e */ unsigned char HeaderType;
  /* 0x000f */ unsigned char BIST;
  union
  {
    union
    {
      /* 0x0010 */ struct _PCI_HEADER_TYPE_0 type0;
      /* 0x0010 */ struct _PCI_HEADER_TYPE_1 type1;
      /* 0x0010 */ struct _PCI_HEADER_TYPE_2 type2;
    }; /* size: 0x0030 */
  } /* size: 0x0030 */ u;
} PCI_COMMON_HEADER, *PPCI_COMMON_HEADER; /* size: 0x0040 */

typedef struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT
{
  /* 0x0000 */ enum KE_PROCESSOR_CHANGE_NOTIFY_STATE State;
  /* 0x0004 */ unsigned long NtNumber;
  /* 0x0008 */ long Status;
  /* 0x000c */ struct _PROCESSOR_NUMBER ProcNumber;
  /* 0x0010 */ unsigned long ProcessorId;
} KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT, *PKE_PROCESSOR_CHANGE_NOTIFY_CONTEXT; /* size: 0x0014 */

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _PRIVATE_CACHE_MAP_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DontUse : 16; /* bit position: 0 */
    /* 0x0000 */ unsigned long ReadAheadActive : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long ReadAheadEnabled : 1; /* bit position: 17 */
    /* 0x0000 */ unsigned long PagePriority : 3; /* bit position: 18 */
    /* 0x0000 */ unsigned long Available : 11; /* bit position: 21 */
  }; /* bitfield */
} PRIVATE_CACHE_MAP_FLAGS, *PPRIVATE_CACHE_MAP_FLAGS; /* size: 0x0004 */

typedef struct _PRIVATE_CACHE_MAP
{
  union
  {
    /* 0x0000 */ short NodeTypeCode;
    /* 0x0000 */ struct _PRIVATE_CACHE_MAP_FLAGS Flags;
    /* 0x0000 */ unsigned long UlongFlags;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long ReadAheadMask;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ union _LARGE_INTEGER FileOffset1;
  /* 0x0018 */ union _LARGE_INTEGER BeyondLastByte1;
  /* 0x0020 */ union _LARGE_INTEGER FileOffset2;
  /* 0x0028 */ union _LARGE_INTEGER BeyondLastByte2;
  /* 0x0030 */ unsigned long SequentialReadCount;
  /* 0x0034 */ unsigned long ReadAheadLength;
  /* 0x0038 */ union _LARGE_INTEGER ReadAheadOffset;
  /* 0x0040 */ union _LARGE_INTEGER ReadAheadBeyondLastByte;
  /* 0x0048 */ unsigned __int64 ReadAheadSpinLock;
  /* 0x0050 */ struct _LIST_ENTRY PrivateLinks;
  /* 0x0060 */ void* ReadAheadWorkItem;
} PRIVATE_CACHE_MAP, *PPRIVATE_CACHE_MAP; /* size: 0x0068 */

typedef struct _SHARED_CACHE_MAP
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteSize;
  /* 0x0004 */ unsigned long OpenCount;
  /* 0x0008 */ union _LARGE_INTEGER FileSize;
  /* 0x0010 */ struct _LIST_ENTRY BcbList;
  /* 0x0020 */ union _LARGE_INTEGER SectionSize;
  /* 0x0028 */ union _LARGE_INTEGER ValidDataLength;
  /* 0x0030 */ union _LARGE_INTEGER ValidDataGoal;
  /* 0x0038 */ struct _VACB* InitialVacbs[4];
  /* 0x0058 */ struct _VACB** Vacbs;
  /* 0x0060 */ struct _EX_FAST_REF FileObjectFastRef;
  /* 0x0068 */ struct _EX_PUSH_LOCK VacbLock;
  /* 0x0070 */ unsigned long DirtyPages;
  /* 0x0074 */ long Padding_495;
  /* 0x0078 */ struct _LIST_ENTRY LoggedStreamLinks;
  /* 0x0088 */ struct _LIST_ENTRY SharedCacheMapLinks;
  /* 0x0098 */ unsigned long Flags;
  /* 0x009c */ long Status;
  /* 0x00a0 */ struct _MBCB* Mbcb;
  /* 0x00a8 */ void* Section;
  /* 0x00b0 */ struct _KEVENT* CreateEvent;
  /* 0x00b8 */ struct _KEVENT* WaitOnActiveCount;
  /* 0x00c0 */ unsigned long PagesToWrite;
  /* 0x00c4 */ long Padding_496;
  /* 0x00c8 */ __int64 BeyondLastFlush;
  /* 0x00d0 */ struct _CACHE_MANAGER_CALLBACKS* Callbacks;
  /* 0x00d8 */ void* LazyWriteContext;
  /* 0x00e0 */ struct _LIST_ENTRY PrivateList;
  /* 0x00f0 */ void* LogHandle;
  /* 0x00f8 */ void* FlushToLsnRoutine /* function */;
  /* 0x0100 */ unsigned long DirtyPageThreshold;
  /* 0x0104 */ unsigned long LazyWritePassCount;
  /* 0x0108 */ struct _CACHE_UNINITIALIZE_EVENT* UninitializeEvent;
  /* 0x0110 */ struct _KGUARDED_MUTEX BcbLock;
  /* 0x0148 */ union _LARGE_INTEGER LastUnmapBehindOffset;
  /* 0x0150 */ struct _KEVENT Event;
  /* 0x0168 */ union _LARGE_INTEGER HighWaterMappingOffset;
  /* 0x0170 */ struct _PRIVATE_CACHE_MAP PrivateCacheMap;
  /* 0x01d8 */ void* WriteBehindWorkQueueEntry;
  /* 0x01e0 */ struct _VOLUME_CACHE_MAP* VolumeCacheMap;
  /* 0x01e8 */ unsigned long ProcImagePathHash;
  /* 0x01ec */ unsigned long WritesInProgress;
} SHARED_CACHE_MAP, *PSHARED_CACHE_MAP; /* size: 0x01f0 */

typedef struct _DISPATCHER_HEADER64
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Absolute;
  /* 0x0002 */ unsigned char Size;
  /* 0x0003 */ unsigned char Inserted;
  /* 0x0004 */ long SignalState;
  /* 0x0008 */ struct LIST_ENTRY64 WaitListHead;
} DISPATCHER_HEADER64, *PDISPATCHER_HEADER64; /* size: 0x0018 */

typedef struct _SYSTEM_HIBERFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfMcbPairs;
  /* 0x0004 */ long Padding_497;
  /* 0x0008 */ union _LARGE_INTEGER Mcb[1];
} SYSTEM_HIBERFILE_INFORMATION, *PSYSTEM_HIBERFILE_INFORMATION; /* size: 0x0010 */

typedef struct _IMAGE_IMPORT_DESCRIPTOR
{
  union
  {
    /* 0x0000 */ unsigned long Characteristics;
    /* 0x0000 */ unsigned long OriginalFirstThunk;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long ForwarderChain;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long FirstThunk;
} IMAGE_IMPORT_DESCRIPTOR, *PIMAGE_IMPORT_DESCRIPTOR; /* size: 0x0014 */

typedef struct _QUOTA_LIMITS
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS; /* size: 0x0030 */

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX
{
  /* 0x0000 */ struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
  /* 0x0010 */ unsigned __int64 FaultingThreadId;
  /* 0x0018 */ unsigned __int64 Flags;
} PROCESS_WS_WATCH_INFORMATION_EX, *PPROCESS_WS_WATCH_INFORMATION_EX; /* size: 0x0020 */

typedef struct _EXT_FIND_FILE
{
  /* 0x0000 */ const wchar_t* FileName;
  /* 0x0008 */ unsigned __int64 IndexedSize;
  /* 0x0010 */ unsigned long ImageTimeDateStamp;
  /* 0x0014 */ unsigned long ImageCheckSum;
  /* 0x0018 */ void* ExtraInfo;
  /* 0x0020 */ unsigned long ExtraInfoSize;
  /* 0x0024 */ unsigned long Flags;
  /* 0x0028 */ void* FileMapping;
  /* 0x0030 */ unsigned __int64 FileMappingSize;
  /* 0x0038 */ void* FileHandle;
  /* 0x0040 */ unsigned short* FoundFileName;
  /* 0x0048 */ unsigned long FoundFileNameChars;
  /* 0x004c */ long __PADDING__[1];
} EXT_FIND_FILE, *PEXT_FIND_FILE; /* size: 0x0050 */

typedef struct _PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_498;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ unsigned long SectionOffset;
  /* 0x0014 */ long Padding_499;
  /* 0x0018 */ unsigned __int64 ViewSize;
  /* 0x0020 */ void* ViewBase;
  /* 0x0028 */ void* ViewRemoteBase;
} PORT_VIEW, *PPORT_VIEW; /* size: 0x0030 */

typedef struct _PROCESS_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} PROCESS_CYCLE_TIME_INFORMATION, *PPROCESS_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

struct PROCESSOR_OBJECT_INFO_EX
{
  /* 0x0000 */ unsigned long PhysicalID;
  /* 0x0004 */ unsigned long PBlkAddress;
  /* 0x0008 */ unsigned char PBlkLength;
  /* 0x0009 */ char Padding_500[3];
  /* 0x000c */ unsigned long InitialApicId;
}; /* size: 0x0010 */

typedef struct _PROCESS_PRIORITY_CLASS
{
  /* 0x0000 */ unsigned char Foreground;
  /* 0x0001 */ unsigned char PriorityClass;
} PROCESS_PRIORITY_CLASS, *PPROCESS_PRIORITY_CLASS; /* size: 0x0002 */

typedef struct _DBGKM_APIMSG32
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ enum _DBGKM_APINUMBER ApiNumber;
  /* 0x002c */ long ReturnedStatus;
  union
  {
    union
    {
      /* 0x0030 */ struct _DBGKM_EXCEPTION32 Exception;
      /* 0x0030 */ struct _DBGKM_CREATE_THREAD32 CreateThread;
      /* 0x0030 */ struct _DBGKM_CREATE_PROCESS32 CreateProcessInfo;
      /* 0x0030 */ struct _DBGKM_EXIT_THREAD ExitThread;
      /* 0x0030 */ struct _DBGKM_EXIT_PROCESS ExitProcess;
      /* 0x0030 */ struct _DBGKM_LOAD_DLL32 LoadDll;
      /* 0x0030 */ struct _DBGKM_UNLOAD_DLL32 UnloadDll;
      /* 0x0030 */ struct _DBGKM_ERROR_MSG32 ErrorMsg;
    }; /* size: 0x0084 */
  } /* size: 0x0084 */ u;
  /* 0x00b4 */ long __PADDING__[1];
} DBGKM_APIMSG32, *PDBGKM_APIMSG32; /* size: 0x00b8 */

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION
{
  /* 0x0000 */ unsigned char KernelDebuggerEnabled;
  /* 0x0001 */ unsigned char KernelDebuggerNotPresent;
} SYSTEM_KERNEL_DEBUGGER_INFORMATION, *PSYSTEM_KERNEL_DEBUGGER_INFORMATION; /* size: 0x0002 */

typedef struct _DISK_PARTITION
{
  /* 0x0000 */ enum FT_TYPE FtType;
  /* 0x0004 */ enum _FT_PARTITION_STATE FtState;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ union _LARGE_INTEGER Length;
  /* 0x0018 */ union _LARGE_INTEGER FtLength;
  /* 0x0020 */ unsigned long ReservedTwoLongs[2];
  /* 0x0028 */ unsigned char DriveLetter;
  /* 0x0029 */ unsigned char AssignDriveLetter;
  /* 0x002a */ unsigned short LogicalNumber;
  /* 0x002c */ unsigned short FtGroup;
  /* 0x002e */ unsigned short FtMember;
  /* 0x0030 */ unsigned char Modified;
  /* 0x0031 */ unsigned char ReservedChars[3];
} DISK_PARTITION, *PDISK_PARTITION; /* size: 0x0034 */

typedef union _PROCESS_AFFINITY_UPDATE_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableAutoUpdate : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Permanent : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_AFFINITY_UPDATE_MODE, *PPROCESS_AFFINITY_UPDATE_MODE; /* size: 0x0004 */

typedef struct _KI_LOCAL_ARRAY1
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY1, *PKI_LOCAL_ARRAY1; /* size: 0x005a */

typedef struct _IA64_KTRAP_FRAME
{
  /* 0x0000 */ unsigned __int64 Reserved[10];
  /* 0x0050 */ struct _FLOAT128 FltT0;
  /* 0x0060 */ struct _FLOAT128 FltT1;
  /* 0x0070 */ struct _FLOAT128 FltT2;
  /* 0x0080 */ struct _FLOAT128 FltT3;
  /* 0x0090 */ struct _FLOAT128 FltT4;
  /* 0x00a0 */ struct _FLOAT128 FltT5;
  /* 0x00b0 */ struct _FLOAT128 FltT6;
  /* 0x00c0 */ struct _FLOAT128 FltT7;
  /* 0x00d0 */ struct _FLOAT128 FltT8;
  /* 0x00e0 */ struct _FLOAT128 FltT9;
  /* 0x00f0 */ unsigned __int64 IntGp;
  /* 0x00f8 */ unsigned __int64 IntT0;
  /* 0x0100 */ unsigned __int64 IntT1;
  /* 0x0108 */ unsigned __int64 ApUNAT;
  /* 0x0110 */ unsigned __int64 ApCCV;
  /* 0x0118 */ unsigned __int64 ApDCR;
  /* 0x0120 */ unsigned __int64 Preds;
  /* 0x0128 */ unsigned __int64 IntV0;
  /* 0x0130 */ unsigned __int64 IntT2;
  /* 0x0138 */ unsigned __int64 IntT3;
  /* 0x0140 */ unsigned __int64 IntT4;
  /* 0x0148 */ unsigned __int64 IntSp;
  /* 0x0150 */ unsigned __int64 IntTeb;
  /* 0x0158 */ unsigned __int64 IntT5;
  /* 0x0160 */ unsigned __int64 IntT6;
  /* 0x0168 */ unsigned __int64 IntT7;
  /* 0x0170 */ unsigned __int64 IntT8;
  /* 0x0178 */ unsigned __int64 IntT9;
  /* 0x0180 */ unsigned __int64 IntT10;
  /* 0x0188 */ unsigned __int64 IntT11;
  /* 0x0190 */ unsigned __int64 IntT12;
  /* 0x0198 */ unsigned __int64 IntT13;
  /* 0x01a0 */ unsigned __int64 IntT14;
  /* 0x01a8 */ unsigned __int64 IntT15;
  /* 0x01b0 */ unsigned __int64 IntT16;
  /* 0x01b8 */ unsigned __int64 IntT17;
  /* 0x01c0 */ unsigned __int64 IntT18;
  /* 0x01c8 */ unsigned __int64 IntT19;
  /* 0x01d0 */ unsigned __int64 IntT20;
  /* 0x01d8 */ unsigned __int64 IntT21;
  /* 0x01e0 */ unsigned __int64 IntT22;
  /* 0x01e8 */ unsigned __int64 IntNats;
  /* 0x01f0 */ unsigned __int64 BrRp;
  /* 0x01f8 */ unsigned __int64 BrT0;
  /* 0x0200 */ unsigned __int64 BrT1;
  /* 0x0208 */ unsigned __int64 RsRSC;
  /* 0x0210 */ unsigned __int64 RsBSP;
  /* 0x0218 */ unsigned __int64 RsBSPSTORE;
  /* 0x0220 */ unsigned __int64 RsRNAT;
  /* 0x0228 */ unsigned __int64 RsPFS;
  /* 0x0230 */ unsigned __int64 StIPSR;
  /* 0x0238 */ unsigned __int64 StIIP;
  /* 0x0240 */ unsigned __int64 StIFS;
  /* 0x0248 */ unsigned __int64 StFPSR;
  /* 0x0250 */ unsigned __int64 StISR;
  /* 0x0258 */ unsigned __int64 StIFA;
  /* 0x0260 */ unsigned __int64 StIIPA;
  /* 0x0268 */ unsigned __int64 StIIM;
  /* 0x0270 */ unsigned __int64 StIHA;
  /* 0x0278 */ unsigned long OldIrql;
  /* 0x027c */ unsigned long PreviousMode;
  /* 0x0280 */ unsigned __int64 TrapFrame;
  /* 0x0288 */ unsigned char ExceptionRecord[160];
  /* 0x0328 */ unsigned __int64 Handler;
  /* 0x0330 */ unsigned __int64 EOFMarker;
} IA64_KTRAP_FRAME, *PIA64_KTRAP_FRAME; /* size: 0x0338 */

struct BATTERY_NOTIFY
{
  /* 0x0000 */ unsigned long PowerState;
  /* 0x0004 */ unsigned long LowCapacity;
  /* 0x0008 */ unsigned long HighCapacity;
}; /* size: 0x000c */

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Machine;
  /* 0x0006 */ unsigned short Characteristics;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long CheckSum;
  /* 0x0010 */ unsigned long ImageBase;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned long NumberOfSections;
  /* 0x001c */ unsigned long ExportedNamesSize;
  /* 0x0020 */ unsigned long DebugDirectorySize;
  /* 0x0024 */ unsigned long SectionAlignment;
  /* 0x0028 */ unsigned long Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER; /* size: 0x0030 */

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Sids;
  /* 0x0010 */ unsigned long RestrictedSidCount;
  /* 0x0014 */ unsigned long RestrictedSidLength;
  /* 0x0018 */ struct _SID_AND_ATTRIBUTES* RestrictedSids;
  /* 0x0020 */ unsigned long PrivilegeCount;
  /* 0x0024 */ unsigned long PrivilegeLength;
  /* 0x0028 */ struct _LUID_AND_ATTRIBUTES* Privileges;
  /* 0x0030 */ struct _LUID AuthenticationId;
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES; /* size: 0x0038 */

typedef struct _FT_MEMBER_DESCRIPTION
{
  /* 0x0000 */ unsigned short State;
  /* 0x0002 */ unsigned short ReservedShort;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ unsigned long OffsetToPartitionInfo;
  /* 0x000c */ unsigned long LogicalNumber;
} FT_MEMBER_DESCRIPTION, *PFT_MEMBER_DESCRIPTION; /* size: 0x0010 */

typedef struct _FT_DESCRIPTION
{
  /* 0x0000 */ unsigned short NumberOfMembers;
  /* 0x0002 */ unsigned short Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ enum _FT_STATE FtVolumeState;
  /* 0x000c */ struct _FT_MEMBER_DESCRIPTION FtMemberDescription[1];
} FT_DESCRIPTION, *PFT_DESCRIPTION; /* size: 0x001c */

typedef struct _PROCESS_EXCEPTION_PORT
{
  /* 0x0000 */ void* ExceptionPortHandle;
  /* 0x0008 */ unsigned long StateFlags;
  /* 0x000c */ long __PADDING__[1];
} PROCESS_EXCEPTION_PORT, *PPROCESS_EXCEPTION_PORT; /* size: 0x0010 */

typedef struct _CM_EISA_SLOT_INFORMATION
{
  /* 0x0000 */ unsigned char ReturnCode;
  /* 0x0001 */ unsigned char ReturnFlags;
  /* 0x0002 */ unsigned char MajorRevision;
  /* 0x0003 */ unsigned char MinorRevision;
  /* 0x0004 */ unsigned short Checksum;
  /* 0x0006 */ unsigned char NumberFunctions;
  /* 0x0007 */ unsigned char FunctionInformation;
  /* 0x0008 */ unsigned long CompressedId;
} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION; /* size: 0x000c */

typedef struct _WIN32_JOBCALLOUT_PARAMETERS
{
  /* 0x0000 */ void* Job;
  /* 0x0008 */ enum _PSW32JOBCALLOUTTYPE CalloutType;
  /* 0x000c */ long Padding_501;
  /* 0x0010 */ void* Data;
} WIN32_JOBCALLOUT_PARAMETERS, *PWIN32_JOBCALLOUT_PARAMETERS; /* size: 0x0018 */

typedef struct _PERFINFO_DRIVER_MAJORFUNCTION
{
  /* 0x0000 */ unsigned long MajorFunction;
  /* 0x0004 */ unsigned long MinorFunction;
  /* 0x0008 */ void* RoutineAddr;
  /* 0x0010 */ void* FileNamePointer;
  /* 0x0018 */ void* Irp;
  /* 0x0020 */ unsigned long UniqMatchId;
} PERFINFO_DRIVER_MAJORFUNCTION, *PPERFINFO_DRIVER_MAJORFUNCTION; /* size: 0x0024 */

typedef struct _PHYSICAL
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long BufLen;
  /* 0x000c */ unsigned char Buf[1];
  /* 0x000d */ char __PADDING__[3];
} PHYSICAL, *PPHYSICAL; /* size: 0x0010 */

typedef struct _PERFINFO_DRIVER_COMPLETE_REQUEST_RET
{
  /* 0x0000 */ void* Irp;
  /* 0x0008 */ unsigned long UniqMatchId;
} PERFINFO_DRIVER_COMPLETE_REQUEST_RET, *PPERFINFO_DRIVER_COMPLETE_REQUEST_RET; /* size: 0x000c */

typedef struct _HV_REFERENCE_TSC_PAGE
{
  /* 0x0000 */ volatile unsigned int TscSequence;
  /* 0x0004 */ unsigned int Reserved1;
  /* 0x0008 */ volatile unsigned __int64 TscScale;
  /* 0x0010 */ volatile __int64 TscOffset;
  /* 0x0018 */ unsigned __int64 Reserved2[509];
} HV_REFERENCE_TSC_PAGE, *PHV_REFERENCE_TSC_PAGE; /* size: 0x1000 */

typedef struct _KDPC_WATCHDOG_INFORMATION
{
  /* 0x0000 */ unsigned long DpcTimeLimit;
  /* 0x0004 */ unsigned long DpcTimeCount;
  /* 0x0008 */ unsigned long DpcWatchdogLimit;
  /* 0x000c */ unsigned long DpcWatchdogCount;
  /* 0x0010 */ unsigned long Reserved;
} KDPC_WATCHDOG_INFORMATION, *PKDPC_WATCHDOG_INFORMATION; /* size: 0x0014 */

typedef struct _KEY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long NameLength;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[6];
} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _TRACE_ENABLE_FLAG_EXT_ITEM
{
  /* 0x0000 */ unsigned short Offset;
  /* 0x0002 */ unsigned short Type;
} TRACE_ENABLE_FLAG_EXT_ITEM, *PTRACE_ENABLE_FLAG_EXT_ITEM; /* size: 0x0004 */

typedef struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD
{
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long ExpressNativeHotPlug : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long ShpcNativeHotPlug : 1; /* bit position: 1 */
        /* 0x0000 */ unsigned long ExpressNativePME : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned long ExpressAdvancedErrorReporting : 1; /* bit position: 3 */
        /* 0x0000 */ unsigned long ExpressCapabilityStructure : 1; /* bit position: 4 */
        /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
      }; /* bitfield */
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} PCI_ROOT_BUS_OSC_CONTROL_FIELD, *PPCI_ROOT_BUS_OSC_CONTROL_FIELD; /* size: 0x0004 */

typedef struct _COVERAGE_MODULES
{
  /* 0x0000 */ unsigned long ListAndReset;
  /* 0x0004 */ unsigned long NumberOfModules;
  /* 0x0008 */ struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
  /* 0x0020 */ struct _COVERAGE_MODULE_INFO Modules[1];
} COVERAGE_MODULES, *PCOVERAGE_MODULES; /* size: 0x0040 */

typedef struct _REG_UNLOAD_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ void* UserEvent;
  /* 0x0010 */ void* CallContext;
  /* 0x0018 */ void* ObjectContext;
  /* 0x0020 */ void* Reserved;
} REG_UNLOAD_KEY_INFORMATION, *PREG_UNLOAD_KEY_INFORMATION; /* size: 0x0028 */

typedef struct _TXFS_SAVEPOINT_INFORMATION
{
  /* 0x0000 */ void* KtmTransaction;
  /* 0x0008 */ unsigned long ActionCode;
  /* 0x000c */ unsigned long SavepointId;
} TXFS_SAVEPOINT_INFORMATION, *PTXFS_SAVEPOINT_INFORMATION; /* size: 0x0010 */

typedef struct _HAL_ERROR_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long InitMaxSize;
  /* 0x0008 */ unsigned long McaMaxSize;
  /* 0x000c */ unsigned long McaPreviousEventsCount;
  /* 0x0010 */ unsigned long McaCorrectedEventsCount;
  /* 0x0014 */ unsigned long McaKernelDeliveryFails;
  /* 0x0018 */ unsigned long McaDriverDpcQueueFails;
  /* 0x001c */ unsigned long McaReserved;
  /* 0x0020 */ unsigned long CmcMaxSize;
  /* 0x0024 */ unsigned long CmcPollingInterval;
  /* 0x0028 */ unsigned long CmcInterruptsCount;
  /* 0x002c */ unsigned long CmcKernelDeliveryFails;
  /* 0x0030 */ unsigned long CmcDriverDpcQueueFails;
  /* 0x0034 */ unsigned long CmcGetStateFails;
  /* 0x0038 */ unsigned long CmcClearStateFails;
  /* 0x003c */ unsigned long CmcReserved;
  /* 0x0040 */ unsigned __int64 CmcLogId;
  /* 0x0048 */ unsigned long CpeMaxSize;
  /* 0x004c */ unsigned long CpePollingInterval;
  /* 0x0050 */ unsigned long CpeInterruptsCount;
  /* 0x0054 */ unsigned long CpeKernelDeliveryFails;
  /* 0x0058 */ unsigned long CpeDriverDpcQueueFails;
  /* 0x005c */ unsigned long CpeGetStateFails;
  /* 0x0060 */ unsigned long CpeClearStateFails;
  /* 0x0064 */ unsigned long CpeInterruptSources;
  /* 0x0068 */ unsigned __int64 CpeLogId;
  /* 0x0070 */ unsigned __int64 KernelReserved[4];
} HAL_ERROR_INFO, *PHAL_ERROR_INFO; /* size: 0x0090 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST
{
  /* 0x0000 */ unsigned long RequestLevel;
  /* 0x0004 */ unsigned long RequestFlags;
} STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST, *PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
  /* 0x0010 */ const char* SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX, *PTEB_ACTIVE_FRAME_CONTEXT_EX; /* size: 0x0018 */

typedef struct _REG_DELETE_VALUE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _UNICODE_STRING* ValueName;
  /* 0x0010 */ void* CallContext;
  /* 0x0018 */ void* ObjectContext;
  /* 0x0020 */ void* Reserved;
} REG_DELETE_VALUE_KEY_INFORMATION, *PREG_DELETE_VALUE_KEY_INFORMATION; /* size: 0x0028 */

typedef struct _KI_LOCAL_ARRAY0
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY0, *PKI_LOCAL_ARRAY0; /* size: 0x0059 */

typedef struct _PF_KERNEL_GLOBALS
{
  /* 0x0000 */ unsigned __int64 AccessBufferAgeThreshold;
  /* 0x0008 */ struct _EX_RUNDOWN_REF AccessBufferRef;
  /* 0x0010 */ struct _KEVENT AccessBufferExistsEvent;
  /* 0x0028 */ unsigned long AccessBufferMax;
  /* 0x002c */ long Padding_502[5];
  /* 0x0040 */ union _SLIST_HEADER AccessBufferList;
  /* 0x0050 */ long StreamSequenceNumber;
  /* 0x0054 */ unsigned long Flags;
  /* 0x0058 */ long ScenarioPrefetchCount;
  /* 0x005c */ long __PADDING__[1];
} PF_KERNEL_GLOBALS, *PPF_KERNEL_GLOBALS; /* size: 0x0060 */

typedef struct _TRACE_ENABLE_FLAG_EXT_HEADER
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Items;
} TRACE_ENABLE_FLAG_EXT_HEADER, *PTRACE_ENABLE_FLAG_EXT_HEADER; /* size: 0x0004 */

typedef struct _CLS_CONTAINER_INFORMATION
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ long Padding_503;
  /* 0x0008 */ unsigned __int64 CreationTime;
  /* 0x0010 */ unsigned __int64 LastAccessTime;
  /* 0x0018 */ unsigned __int64 LastWriteTime;
  /* 0x0020 */ __int64 ContainerSize;
  /* 0x0028 */ unsigned long FileNameActualLength;
  /* 0x002c */ unsigned long FileNameLength;
  /* 0x0030 */ wchar_t FileName[256];
  /* 0x0230 */ unsigned int State;
  /* 0x0234 */ unsigned long PhysicalContainerId;
  /* 0x0238 */ unsigned long LogicalContainerId;
  /* 0x023c */ long __PADDING__[1];
} CLS_CONTAINER_INFORMATION, *PCLS_CONTAINER_INFORMATION; /* size: 0x0240 */

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT
{
  /* 0x0000 */ struct _GUID DiskId;
  /* 0x0010 */ union _LARGE_INTEGER StartingUsableOffset;
  /* 0x0018 */ union _LARGE_INTEGER UsableLength;
  /* 0x0020 */ unsigned long MaxPartitionCount;
  /* 0x0024 */ long __PADDING__[1];
} DRIVE_LAYOUT_INFORMATION_GPT, *PDRIVE_LAYOUT_INFORMATION_GPT; /* size: 0x0028 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE
{
  /* 0x0000 */ unsigned long Flags;
} PROCESS_HANDLE_TRACING_ENABLE, *PPROCESS_HANDLE_TRACING_ENABLE; /* size: 0x0004 */

typedef struct _SE_AUDIT_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ enum _AUDIT_EVENT_TYPE AuditType;
  /* 0x0008 */ enum _SE_AUDIT_OPERATION AuditOperation;
  /* 0x000c */ unsigned long AuditFlags;
  /* 0x0010 */ struct _UNICODE_STRING SubsystemName;
  /* 0x0020 */ struct _UNICODE_STRING ObjectTypeName;
  /* 0x0030 */ struct _UNICODE_STRING ObjectName;
  /* 0x0040 */ void* HandleId;
  /* 0x0048 */ struct _GUID* TransactionId;
  /* 0x0050 */ struct _LUID* OperationId;
  /* 0x0058 */ unsigned char ObjectCreation;
  /* 0x0059 */ unsigned char GenerateOnClose;
  /* 0x005a */ char __PADDING__[6];
} SE_AUDIT_INFO, *PSE_AUDIT_INFO; /* size: 0x0060 */

typedef struct _PNP_REPLACE_PARAMETERS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned __int64 Target;
  /* 0x0010 */ unsigned __int64 Spare;
  /* 0x0018 */ struct _PNP_REPLACE_PROCESSOR_LIST* TargetProcessors;
  /* 0x0020 */ struct _PNP_REPLACE_PROCESSOR_LIST* SpareProcessors;
  /* 0x0028 */ struct _PNP_REPLACE_MEMORY_LIST* TargetMemory;
  /* 0x0030 */ struct _PNP_REPLACE_MEMORY_LIST* SpareMemory;
  /* 0x0038 */ void* MapMemory /* function */;
} PNP_REPLACE_PARAMETERS, *PPNP_REPLACE_PARAMETERS; /* size: 0x0040 */

typedef struct _POLICY_PD_ACCOUNT_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} POLICY_PD_ACCOUNT_INFO, *PPOLICY_PD_ACCOUNT_INFO; /* size: 0x0010 */

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
{
  /* 0x0000 */ unsigned long MarshalCookie;
  /* 0x0004 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT; /* size: 0x0014 */

typedef union _PS_EXCEPTION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ProcessUsingVEH : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ProcessUsingVCH : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PS_EXCEPTION_FLAGS, *PPS_EXCEPTION_FLAGS; /* size: 0x0004 */

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long Reserved[10];
} PUBLIC_OBJECT_BASIC_INFORMATION, *PPUBLIC_OBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _IMAGE_RELOCATION
{
  union
  {
    /* 0x0000 */ unsigned long VirtualAddress;
    /* 0x0000 */ unsigned long RelocCount;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SymbolTableIndex;
  /* 0x0008 */ unsigned short Type;
} IMAGE_RELOCATION, *PIMAGE_RELOCATION; /* size: 0x000a */

typedef union _KGDT_BASE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short BaseLow;
      /* 0x0002 */ unsigned char BaseMiddle;
      /* 0x0003 */ unsigned char BaseHigh;
      /* 0x0004 */ unsigned long BaseUpper;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 Base;
  }; /* size: 0x0008 */
} KGDT_BASE, *PKGDT_BASE; /* size: 0x0008 */

typedef struct _STORAGE_DEVICE_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char DeviceType;
  /* 0x0009 */ unsigned char DeviceTypeModifier;
  /* 0x000a */ unsigned char RemovableMedia;
  /* 0x000b */ unsigned char CommandQueueing;
  /* 0x000c */ unsigned long VendorIdOffset;
  /* 0x0010 */ unsigned long ProductIdOffset;
  /* 0x0014 */ unsigned long ProductRevisionOffset;
  /* 0x0018 */ unsigned long SerialNumberOffset;
  /* 0x001c */ enum _STORAGE_BUS_TYPE BusType;
  /* 0x0020 */ unsigned long RawPropertiesLength;
  /* 0x0024 */ unsigned char RawDeviceProperties[1];
  /* 0x0025 */ char __PADDING__[3];
} STORAGE_DEVICE_DESCRIPTOR, *PSTORAGE_DEVICE_DESCRIPTOR; /* size: 0x0028 */

typedef struct _KIPI_COUNTS
{
  /* 0x0000 */ unsigned long Freeze;
  /* 0x0004 */ unsigned long Packet;
  /* 0x0008 */ unsigned long DPC;
  /* 0x000c */ unsigned long APC;
  /* 0x0010 */ unsigned long FlushSingleTb;
  /* 0x0014 */ unsigned long FlushMultipleTb;
  /* 0x0018 */ unsigned long FlushEntireTb;
  /* 0x001c */ unsigned long GenericCall;
  /* 0x0020 */ unsigned long ChangeColor;
  /* 0x0024 */ unsigned long SweepDcache;
  /* 0x0028 */ unsigned long SweepIcache;
  /* 0x002c */ unsigned long SweepIcacheRange;
  /* 0x0030 */ unsigned long FlushIoBuffers;
  /* 0x0034 */ unsigned long GratuitousDPC;
} KIPI_COUNTS, *PKIPI_COUNTS; /* size: 0x0038 */

typedef struct _FILE_SYMLINK_SUPPORT_INFORMATION
{
  /* 0x0000 */ unsigned char LocalToLocal;
  /* 0x0001 */ unsigned char LocalToRemote;
  /* 0x0002 */ unsigned char RemoteToLocal;
  /* 0x0003 */ unsigned char RemoteToRemote;
} FILE_SYMLINK_SUPPORT_INFORMATION, *PFILE_SYMLINK_SUPPORT_INFORMATION; /* size: 0x0004 */

typedef struct _EVENT_FILTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Type;
} EVENT_FILTER_DESCRIPTOR, *PEVENT_FILTER_DESCRIPTOR; /* size: 0x0010 */

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE; /* size: 0x000c */

typedef struct _KERNEL_USER_TIMES
{
  /* 0x0000 */ union _LARGE_INTEGER CreateTime;
  /* 0x0008 */ union _LARGE_INTEGER ExitTime;
  /* 0x0010 */ union _LARGE_INTEGER KernelTime;
  /* 0x0018 */ union _LARGE_INTEGER UserTime;
} KERNEL_USER_TIMES, *PKERNEL_USER_TIMES; /* size: 0x0020 */

typedef struct _LDR_IMPORT_CALLBACK_INFO
{
  /* 0x0000 */ void* ImportCallbackRoutine /* function */;
  /* 0x0008 */ void* ImportCallbackParameter;
} LDR_IMPORT_CALLBACK_INFO, *PLDR_IMPORT_CALLBACK_INFO; /* size: 0x0010 */

typedef struct _DECRYPTION_STATUS_BUFFER
{
  /* 0x0000 */ unsigned char NoEncryptedStreams;
} DECRYPTION_STATUS_BUFFER, *PDECRYPTION_STATUS_BUFFER; /* size: 0x0001 */

typedef struct _UCALLOUT_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ void* Buffer;
  /* 0x0028 */ unsigned long Length;
  /* 0x002c */ unsigned long ApiNumber;
  /* 0x0030 */ struct _MACHINE_FRAME MachineFrame;
} UCALLOUT_FRAME, *PUCALLOUT_FRAME; /* size: 0x0058 */

typedef struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _KEY_VALUE_ENTRY* ValueEntries;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ long Padding_504;
  /* 0x0018 */ void* ValueBuffer;
  /* 0x0020 */ unsigned long* BufferLength;
  /* 0x0028 */ unsigned long* RequiredBufferLength;
  /* 0x0030 */ void* CallContext;
  /* 0x0038 */ void* ObjectContext;
  /* 0x0040 */ void* Reserved;
} REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION, *PREG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION; /* size: 0x0048 */

typedef struct _ARC_DISK_SIGNATURE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long Signature;
  /* 0x0014 */ long Padding_505;
  /* 0x0018 */ char* ArcName;
  /* 0x0020 */ unsigned long CheckSum;
  /* 0x0024 */ unsigned char ValidPartitionTable;
  /* 0x0025 */ unsigned char xInt13;
  /* 0x0026 */ unsigned char IsGpt;
  /* 0x0027 */ unsigned char Reserved;
  /* 0x0028 */ unsigned char GptSignature[16];
  /* 0x0038 */ struct _VHD_DISK_SIGNATURE* VhdSignature;
} ARC_DISK_SIGNATURE, *PARC_DISK_SIGNATURE; /* size: 0x0040 */

typedef struct _IOP_ARC_TABLE_ENTRY
{
  /* 0x0000 */ struct _ARC_DISK_SIGNATURE ArcInformation;
  /* 0x0040 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0048 */ unsigned char BlockSymbolicLinkCreation;
  /* 0x0049 */ char Padding_506[3];
  union
  {
    struct
    {
      /* 0x004c */ unsigned long Reserved;
    } /* size: 0x0004 */ Efi;
    struct
    {
      struct
      {
        /* 0x004c */ unsigned char IsRdiskZero;
      } /* size: 0x0001 */ Pcat;
      /* 0x004d */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} IOP_ARC_TABLE_ENTRY, *PIOP_ARC_TABLE_ENTRY; /* size: 0x0050 */

typedef struct _KEY_VALUE_ENTRY
{
  /* 0x0000 */ struct _UNICODE_STRING* ValueName;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned long DataOffset;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ long __PADDING__[1];
} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY; /* size: 0x0018 */

typedef struct _THERMAL_INFORMATION
{
  /* 0x0000 */ unsigned long ThermalStamp;
  /* 0x0004 */ unsigned long ThermalConstant1;
  /* 0x0008 */ unsigned long ThermalConstant2;
  /* 0x000c */ long Padding_507;
  /* 0x0010 */ unsigned __int64 Processors;
  /* 0x0018 */ unsigned long SamplingPeriod;
  /* 0x001c */ unsigned long CurrentTemperature;
  /* 0x0020 */ unsigned long PassiveTripPoint;
  /* 0x0024 */ unsigned long CriticalTripPoint;
  /* 0x0028 */ unsigned char ActiveTripPointCount;
  /* 0x0029 */ char Padding_508[3];
  /* 0x002c */ unsigned long ActiveTripPoint[10];
  /* 0x0054 */ long __PADDING__[1];
} THERMAL_INFORMATION, *PTHERMAL_INFORMATION; /* size: 0x0058 */

typedef struct _SYSTEM_HANDLE_INFORMATION_EX
{
  /* 0x0000 */ unsigned __int64 NumberOfHandles;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX; /* size: 0x0038 */

typedef struct _NEGOTIATE_PACKAGE_PREFIX
{
  /* 0x0000 */ unsigned __int64 PackageId;
  /* 0x0008 */ void* PackageDataA;
  /* 0x0010 */ void* PackageDataW;
  /* 0x0018 */ unsigned __int64 PrefixLen;
  /* 0x0020 */ unsigned char Prefix[32];
} NEGOTIATE_PACKAGE_PREFIX, *PNEGOTIATE_PACKAGE_PREFIX; /* size: 0x0040 */

typedef struct _WHEA_FIRMWARE_ERROR_RECORD_REFERENCE
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Reserved[7];
  /* 0x0008 */ unsigned __int64 FirmwareRecordId;
} WHEA_FIRMWARE_ERROR_RECORD_REFERENCE, *PWHEA_FIRMWARE_ERROR_RECORD_REFERENCE; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS
{
  /* 0x0000 */ unsigned long NullDeviceInstance;
  /* 0x0004 */ wchar_t DeviceInstanceStrings[1];
  /* 0x0006 */ char __PADDING__[2];
} PLUGPLAY_CONTROL_CONFLICT_STRINGS, *PPLUGPLAY_CONTROL_CONFLICT_STRINGS; /* size: 0x0008 */

typedef struct _SCSI_INQUIRY_DATA
{
  /* 0x0000 */ unsigned char PathId;
  /* 0x0001 */ unsigned char TargetId;
  /* 0x0002 */ unsigned char Lun;
  /* 0x0003 */ unsigned char DeviceClaimed;
  /* 0x0004 */ unsigned long InquiryDataLength;
  /* 0x0008 */ unsigned long NextInquiryDataOffset;
  /* 0x000c */ unsigned char InquiryData[1];
  /* 0x000d */ char __PADDING__[3];
} SCSI_INQUIRY_DATA, *PSCSI_INQUIRY_DATA; /* size: 0x0010 */

typedef struct _MAP_REGISTER_ENTRY
{
  /* 0x0000 */ void* MapRegister;
  /* 0x0008 */ unsigned char WriteToDevice;
  /* 0x0009 */ char __PADDING__[7];
} MAP_REGISTER_ENTRY, *PMAP_REGISTER_ENTRY; /* size: 0x0010 */

typedef struct _FILE_SFIO_RESERVE_INFORMATION
{
  /* 0x0000 */ unsigned long RequestsPerPeriod;
  /* 0x0004 */ unsigned long Period;
  /* 0x0008 */ unsigned char RetryFailures;
  /* 0x0009 */ unsigned char Discardable;
  /* 0x000a */ char Padding_509[2];
  /* 0x000c */ unsigned long RequestSize;
  /* 0x0010 */ unsigned long NumOutstandingRequests;
} FILE_SFIO_RESERVE_INFORMATION, *PFILE_SFIO_RESERVE_INFORMATION; /* size: 0x0014 */

typedef struct _WHEA_XPF_CONTEXT_INFO
{
  /* 0x0000 */ unsigned short RegisterContextType;
  /* 0x0002 */ unsigned short RegisterDataSize;
  /* 0x0004 */ unsigned long MSRAddress;
  /* 0x0008 */ unsigned __int64 MmRegisterAddress;
} WHEA_XPF_CONTEXT_INFO, *PWHEA_XPF_CONTEXT_INFO; /* size: 0x0010 */

typedef struct _TRANSACTION_BIND_INFORMATION
{
  /* 0x0000 */ void* TmHandle;
} TRANSACTION_BIND_INFORMATION, *PTRANSACTION_BIND_INFORMATION; /* size: 0x0008 */

typedef struct _EM_ENTRY_DATA
{
  /* 0x0000 */ void* Data;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ long __PADDING__[1];
} EM_ENTRY_DATA, *PEM_ENTRY_DATA; /* size: 0x0010 */

typedef union _RTL_ELEVATION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ElevationEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long InstallerDetectEnabled : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReservedBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RTL_ELEVATION_FLAGS, *PRTL_ELEVATION_FLAGS; /* size: 0x0004 */

typedef struct _EX_ATTRIBUTE_INFORMATION_REGISTRATION
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0008 */ void* SetRoutine /* function */;
} EX_ATTRIBUTE_INFORMATION_REGISTRATION, *PEX_ATTRIBUTE_INFORMATION_REGISTRATION; /* size: 0x0010 */

typedef union _WHEA_ERROR_RECORD_HEADER_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Recovered : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long PreviousError : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Simulated : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_ERROR_RECORD_HEADER_FLAGS, *PWHEA_ERROR_RECORD_HEADER_FLAGS; /* size: 0x0004 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ long __PADDING__[1];
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION; /* size: 0x0030 */

typedef struct _CLS_INFORMATION
{
  /* 0x0000 */ __int64 TotalAvailable;
  /* 0x0008 */ __int64 CurrentAvailable;
  /* 0x0010 */ __int64 TotalReservation;
  /* 0x0018 */ unsigned __int64 BaseFileSize;
  /* 0x0020 */ unsigned __int64 ContainerSize;
  /* 0x0028 */ unsigned long TotalContainers;
  /* 0x002c */ unsigned long FreeContainers;
  /* 0x0030 */ unsigned long TotalClients;
  /* 0x0034 */ unsigned long Attributes;
  /* 0x0038 */ unsigned long FlushThreshold;
  /* 0x003c */ unsigned long SectorSize;
  /* 0x0040 */ union _CLS_LSN MinArchiveTailLsn;
  /* 0x0048 */ union _CLS_LSN BaseLsn;
  /* 0x0050 */ union _CLS_LSN LastFlushedLsn;
  /* 0x0058 */ union _CLS_LSN LastLsn;
  /* 0x0060 */ union _CLS_LSN RestartLsn;
  /* 0x0068 */ struct _GUID Identity;
} CLS_INFORMATION, *PCLS_INFORMATION; /* size: 0x0078 */

typedef struct _WMI_QUEUE
{
  /* 0x0000 */ void* Queue;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned char Action;
  /* 0x000d */ char __PADDING__[3];
} WMI_QUEUE, *PWMI_QUEUE; /* size: 0x0010 */

typedef struct _NETWORK_OPEN_ECP_CONTEXT_V0
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Reserved;
  struct
  {
    /* 0x0004 */ enum NETWORK_OPEN_LOCATION_QUALIFIER Location;
    /* 0x0008 */ enum NETWORK_OPEN_INTEGRITY_QUALIFIER Integrity;
  } /* size: 0x0008 */ in;
  struct
  {
    /* 0x000c */ enum NETWORK_OPEN_LOCATION_QUALIFIER Location;
    /* 0x0010 */ enum NETWORK_OPEN_INTEGRITY_QUALIFIER Integrity;
  } /* size: 0x0008 */ out;
} NETWORK_OPEN_ECP_CONTEXT_V0, *PNETWORK_OPEN_ECP_CONTEXT_V0; /* size: 0x0014 */

typedef struct _NEGOTIATE_CALLER_NAME_RESPONSE
{
  /* 0x0000 */ unsigned long MessageType;
  /* 0x0004 */ long Padding_510;
  /* 0x0008 */ unsigned short* CallerName;
} NEGOTIATE_CALLER_NAME_RESPONSE, *PNEGOTIATE_CALLER_NAME_RESPONSE; /* size: 0x0010 */

typedef struct _TP_DIRECT
{
  /* 0x0000 */ void* Callback /* function */;
  /* 0x0008 */ unsigned long NumaNode;
  /* 0x000c */ unsigned char IdealProcessor;
  /* 0x000d */ char __PADDING__[3];
} TP_DIRECT, *PTP_DIRECT; /* size: 0x0010 */

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_511;
  union
  {
    /* 0x0008 */ struct _RTL_UMS_CONTEXT* RtlUmsContext;
    /* 0x0008 */ void* UmsContext;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ struct _RTL_UMS_COMPLETION_LIST* RtlUmsCompletionList;
    /* 0x0010 */ void* UmsCompletionList;
  }; /* size: 0x0008 */
} UMS_CREATE_THREAD_ATTRIBUTES, *PUMS_CREATE_THREAD_ATTRIBUTES; /* size: 0x0018 */

typedef struct _LPCP_CONNECTION_MESSAGE
{
  /* 0x0000 */ struct _PORT_VIEW ClientView;
  /* 0x0030 */ struct _LPCP_PORT_OBJECT* ClientPort;
  /* 0x0038 */ void* SectionToMap;
  /* 0x0040 */ struct _REMOTE_PORT_VIEW ServerView;
} LPCP_CONNECTION_MESSAGE, *PLPCP_CONNECTION_MESSAGE; /* size: 0x0058 */

typedef struct _KTMOBJECT_CURSOR
{
  /* 0x0000 */ struct _GUID LastQuery;
  /* 0x0010 */ unsigned long ObjectIdCount;
  /* 0x0014 */ struct _GUID ObjectIds[1];
} KTMOBJECT_CURSOR, *PKTMOBJECT_CURSOR; /* size: 0x0024 */

typedef struct _RTL_QUERY_REGISTRY_TABLE
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_512;
  /* 0x0010 */ unsigned short* Name;
  /* 0x0018 */ void* EntryContext;
  /* 0x0020 */ unsigned long DefaultType;
  /* 0x0024 */ long Padding_513;
  /* 0x0028 */ void* DefaultData;
  /* 0x0030 */ unsigned long DefaultLength;
  /* 0x0034 */ long __PADDING__[1];
} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE; /* size: 0x0038 */

typedef struct _HAL_PROFILE_SOURCE_LIST
{
  /* 0x0000 */ enum _KPROFILE_SOURCE Source;
  /* 0x0004 */ long Padding_514;
  /* 0x0008 */ unsigned short* Description;
} HAL_PROFILE_SOURCE_LIST, *PHAL_PROFILE_SOURCE_LIST; /* size: 0x0010 */

typedef union _WHEA_XPF_PROCINFO_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 CheckInfo : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 TargetId : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 RequesterId : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 ResponderId : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 InstructionPointer : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Reserved : 59; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_XPF_PROCINFO_VALIDBITS, *PWHEA_XPF_PROCINFO_VALIDBITS; /* size: 0x0008 */

typedef struct _WHEA_XPF_PROCINFO
{
  /* 0x0000 */ struct _GUID CheckInfoId;
  /* 0x0010 */ union _WHEA_XPF_PROCINFO_VALIDBITS ValidBits;
  union
  {
    union
    {
      /* 0x0018 */ union _WHEA_XPF_CACHE_CHECK CacheCheck;
      /* 0x0018 */ union _WHEA_XPF_TLB_CHECK TlbCheck;
      /* 0x0018 */ union _WHEA_XPF_BUS_CHECK BusCheck;
      /* 0x0018 */ union _WHEA_XPF_MS_CHECK MsCheck;
      /* 0x0018 */ unsigned __int64 AsULONGLONG;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ CheckInfo;
  /* 0x0020 */ unsigned __int64 TargetId;
  /* 0x0028 */ unsigned __int64 RequesterId;
  /* 0x0030 */ unsigned __int64 ResponderId;
  /* 0x0038 */ unsigned __int64 InstructionPointer;
} WHEA_XPF_PROCINFO, *PWHEA_XPF_PROCINFO; /* size: 0x0040 */

typedef struct _LSA_AUTH_CALLBACKS
{
  /* 0x0000 */ void* LsaCallAuthPkgFn /* function */;
  /* 0x0008 */ void* LsaDeregisterProcFn /* function */;
  /* 0x0010 */ void* LsaFreeReturnBufferFn /* function */;
  /* 0x0018 */ void* LsaLogonUserFn /* function */;
  /* 0x0020 */ void* LsaLookupAuthPkgFn /* function */;
  /* 0x0028 */ void* LsaRegisterProcFn /* function */;
} LSA_AUTH_CALLBACKS, *PLSA_AUTH_CALLBACKS; /* size: 0x0030 */

typedef struct _EISA_MEMORY_TYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ReadWrite : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Cached : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved0 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Type : 2; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE; /* size: 0x0001 */

struct PCI_HT_INTERRUPT_INDEX_N
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long Mask : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned long Polarity : 1; /* bit position: 1 */
          /* 0x0000 */ unsigned long MessageType : 3; /* bit position: 2 */
          /* 0x0000 */ unsigned long RequestEOI : 1; /* bit position: 5 */
          /* 0x0000 */ unsigned long DestinationMode : 1; /* bit position: 6 */
          /* 0x0000 */ unsigned long MessageType3 : 1; /* bit position: 7 */
          /* 0x0000 */ unsigned long Destination : 8; /* bit position: 8 */
          /* 0x0000 */ unsigned long Vector : 8; /* bit position: 16 */
          /* 0x0000 */ unsigned long ExtendedAddress : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ LowPart;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long ExtendedDestination : 24; /* bit position: 0 */
          /* 0x0004 */ unsigned long Reserved : 6; /* bit position: 24 */
          /* 0x0004 */ unsigned long PassPW : 1; /* bit position: 30 */
          /* 0x0004 */ unsigned long WaitingForEOI : 1; /* bit position: 31 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0004 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighPart;
}; /* size: 0x0008 */

typedef struct _RTL_TRACE_SEGMENT
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ long Padding_515;
  /* 0x0008 */ struct _RTL_TRACE_DATABASE* Database;
  /* 0x0010 */ struct _RTL_TRACE_SEGMENT* NextSegment;
  /* 0x0018 */ unsigned __int64 TotalSize;
  /* 0x0020 */ char* SegmentStart;
  /* 0x0028 */ char* SegmentEnd;
  /* 0x0030 */ char* SegmentFree;
} RTL_TRACE_SEGMENT, *PRTL_TRACE_SEGMENT; /* size: 0x0038 */

typedef struct _XSTATE_FEATURE
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long Size;
} XSTATE_FEATURE, *PXSTATE_FEATURE; /* size: 0x0008 */

typedef struct _FSRTL_PER_STREAM_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ void* OwnerId;
  /* 0x0018 */ void* InstanceId;
  /* 0x0020 */ void* FreeCallback /* function */;
} FSRTL_PER_STREAM_CONTEXT, *PFSRTL_PER_STREAM_CONTEXT; /* size: 0x0028 */

typedef struct _PEB64
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SkipPatchingUser32Forwarders : 1; /* bit position: 4 */
      /* 0x0003 */ unsigned char SpareBits : 3; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ long Padding_516;
  /* 0x0008 */ unsigned __int64 Mutant;
  /* 0x0010 */ unsigned __int64 ImageBaseAddress;
  /* 0x0018 */ unsigned __int64 Ldr;
  /* 0x0020 */ unsigned __int64 ProcessParameters;
  /* 0x0028 */ unsigned __int64 SubSystemData;
  /* 0x0030 */ unsigned __int64 ProcessHeap;
  /* 0x0038 */ unsigned __int64 FastPebLock;
  /* 0x0040 */ unsigned __int64 AtlThunkSListPtr;
  /* 0x0048 */ unsigned __int64 IFEOKey;
  union
  {
    /* 0x0050 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0050 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0050 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0050 */ unsigned long ProcessUsingVEH : 1; /* bit position: 2 */
      /* 0x0050 */ unsigned long ProcessUsingVCH : 1; /* bit position: 3 */
      /* 0x0050 */ unsigned long ProcessUsingFTH : 1; /* bit position: 4 */
      /* 0x0050 */ unsigned long ReservedBits0 : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0054 */ long Padding_517;
  union
  {
    /* 0x0058 */ unsigned __int64 KernelCallbackTable;
    /* 0x0058 */ unsigned __int64 UserSharedInfoPtr;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long SystemReserved[1];
  /* 0x0064 */ unsigned long AtlThunkSListPtr32;
  /* 0x0068 */ unsigned __int64 ApiSetMap;
  /* 0x0070 */ unsigned long TlsExpansionCounter;
  /* 0x0074 */ long Padding_518;
  /* 0x0078 */ unsigned __int64 TlsBitmap;
  /* 0x0080 */ unsigned long TlsBitmapBits[2];
  /* 0x0088 */ unsigned __int64 ReadOnlySharedMemoryBase;
  /* 0x0090 */ unsigned __int64 HotpatchInformation;
  /* 0x0098 */ unsigned __int64 ReadOnlyStaticServerData;
  /* 0x00a0 */ unsigned __int64 AnsiCodePageData;
  /* 0x00a8 */ unsigned __int64 OemCodePageData;
  /* 0x00b0 */ unsigned __int64 UnicodeCaseTableData;
  /* 0x00b8 */ unsigned long NumberOfProcessors;
  /* 0x00bc */ unsigned long NtGlobalFlag;
  /* 0x00c0 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x00c8 */ unsigned __int64 HeapSegmentReserve;
  /* 0x00d0 */ unsigned __int64 HeapSegmentCommit;
  /* 0x00d8 */ unsigned __int64 HeapDeCommitTotalFreeThreshold;
  /* 0x00e0 */ unsigned __int64 HeapDeCommitFreeBlockThreshold;
  /* 0x00e8 */ unsigned long NumberOfHeaps;
  /* 0x00ec */ unsigned long MaximumNumberOfHeaps;
  /* 0x00f0 */ unsigned __int64 ProcessHeaps;
  /* 0x00f8 */ unsigned __int64 GdiSharedHandleTable;
  /* 0x0100 */ unsigned __int64 ProcessStarterHelper;
  /* 0x0108 */ unsigned long GdiDCAttributeList;
  /* 0x010c */ long Padding_519;
  /* 0x0110 */ unsigned __int64 LoaderLock;
  /* 0x0118 */ unsigned long OSMajorVersion;
  /* 0x011c */ unsigned long OSMinorVersion;
  /* 0x0120 */ unsigned short OSBuildNumber;
  /* 0x0122 */ unsigned short OSCSDVersion;
  /* 0x0124 */ unsigned long OSPlatformId;
  /* 0x0128 */ unsigned long ImageSubsystem;
  /* 0x012c */ unsigned long ImageSubsystemMajorVersion;
  /* 0x0130 */ unsigned long ImageSubsystemMinorVersion;
  /* 0x0134 */ long Padding_520;
  /* 0x0138 */ unsigned __int64 ActiveProcessAffinityMask;
  /* 0x0140 */ unsigned long GdiHandleBuffer[60];
  /* 0x0230 */ unsigned __int64 PostProcessInitRoutine;
  /* 0x0238 */ unsigned __int64 TlsExpansionBitmap;
  /* 0x0240 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x02c0 */ unsigned long SessionId;
  /* 0x02c4 */ long Padding_521;
  /* 0x02c8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x02d0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x02d8 */ unsigned __int64 pShimData;
  /* 0x02e0 */ unsigned __int64 AppCompatInfo;
  /* 0x02e8 */ struct _STRING64 CSDVersion;
  /* 0x02f8 */ unsigned __int64 ActivationContextData;
  /* 0x0300 */ unsigned __int64 ProcessAssemblyStorageMap;
  /* 0x0308 */ unsigned __int64 SystemDefaultActivationContextData;
  /* 0x0310 */ unsigned __int64 SystemAssemblyStorageMap;
  /* 0x0318 */ unsigned __int64 MinimumStackCommit;
  /* 0x0320 */ unsigned __int64 FlsCallback;
  /* 0x0328 */ struct LIST_ENTRY64 FlsListHead;
  /* 0x0338 */ unsigned __int64 FlsBitmap;
  /* 0x0340 */ unsigned long FlsBitmapBits[4];
  /* 0x0350 */ unsigned long FlsHighIndex;
  /* 0x0354 */ long Padding_522;
  /* 0x0358 */ unsigned __int64 WerRegistrationData;
  /* 0x0360 */ unsigned __int64 WerShipAssertPtr;
  /* 0x0368 */ unsigned __int64 pContextData;
  /* 0x0370 */ unsigned __int64 pImageHeaderHash;
  union
  {
    /* 0x0378 */ unsigned long TracingFlags;
    struct /* bitfield */
    {
      /* 0x0378 */ unsigned long HeapTracingEnabled : 1; /* bit position: 0 */
      /* 0x0378 */ unsigned long CritSecTracingEnabled : 1; /* bit position: 1 */
      /* 0x0378 */ unsigned long SpareTracingBits : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x037c */ long __PADDING__[1];
} PEB64, *PPEB64; /* size: 0x0380 */

typedef struct _RTL_BUFFER
{
  /* 0x0000 */ unsigned char* Buffer;
  /* 0x0008 */ unsigned char* StaticBuffer;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ unsigned __int64 StaticSize;
  /* 0x0020 */ unsigned __int64 ReservedForAllocatedSize;
  /* 0x0028 */ void* ReservedForIMalloc;
} RTL_BUFFER, *PRTL_BUFFER; /* size: 0x0030 */

typedef struct _RTL_ANSI_STRING_BUFFER
{
  /* 0x0000 */ struct _STRING String;
  /* 0x0010 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0040 */ unsigned char MinimumStaticBufferForTerminalNul[1];
  /* 0x0041 */ char __PADDING__[7];
} RTL_ANSI_STRING_BUFFER, *PRTL_ANSI_STRING_BUFFER; /* size: 0x0048 */

typedef struct _WMI_DISKIO_NOTIFY_ROUTINES
{
  /* 0x0000 */ void* CompletionNotifyRoutine /* function */;
  /* 0x0008 */ void* InitiationNotifyRoutine /* function */;
} WMI_DISKIO_NOTIFY_ROUTINES, *PWMI_DISKIO_NOTIFY_ROUTINES; /* size: 0x0010 */

typedef struct _PO_MEMORY_RANGE_TABLE
{
  /* 0x0000 */ unsigned __int64 NextTable;
  /* 0x0008 */ unsigned long EntryCount;
  /* 0x000c */ long Padding_523;
  /* 0x0010 */ struct _PO_MEMORY_RANGE Range[1];
} PO_MEMORY_RANGE_TABLE, *PPO_MEMORY_RANGE_TABLE; /* size: 0x0020 */

typedef union _MCI_STATUS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short McaErrorCode;
      /* 0x0002 */ unsigned short ModelErrorCode;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OtherInformation : 23; /* bit position: 0 */
        /* 0x0004 */ unsigned long ActionRequired : 1; /* bit position: 23 */
        /* 0x0004 */ unsigned long Signalling : 1; /* bit position: 24 */
        /* 0x0004 */ unsigned long ContextCorrupt : 1; /* bit position: 25 */
        /* 0x0004 */ unsigned long AddressValid : 1; /* bit position: 26 */
        /* 0x0004 */ unsigned long MiscValid : 1; /* bit position: 27 */
        /* 0x0004 */ unsigned long ErrorEnabled : 1; /* bit position: 28 */
        /* 0x0004 */ unsigned long UncorrectedError : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long StatusOverFlow : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Valid : 1; /* bit position: 31 */
      }; /* bitfield */
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_STATUS, *PMCI_STATUS; /* size: 0x0008 */

typedef struct _FILE_QUERY_SPARING_BUFFER
{
  /* 0x0000 */ unsigned long SparingUnitBytes;
  /* 0x0004 */ unsigned char SoftwareSparing;
  /* 0x0005 */ char Padding_524[3];
  /* 0x0008 */ unsigned long TotalSpareBlocks;
  /* 0x000c */ unsigned long FreeSpareBlocks;
} FILE_QUERY_SPARING_BUFFER, *PFILE_QUERY_SPARING_BUFFER; /* size: 0x0010 */

typedef struct _TRUSTED_PASSWORD_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING Password;
  /* 0x0010 */ struct _UNICODE_STRING OldPassword;
} TRUSTED_PASSWORD_INFO, *PTRUSTED_PASSWORD_INFO; /* size: 0x0020 */

typedef struct _POP_POLICY_NOTIFY_CONTEXT
{
  /* 0x0000 */ struct _UNICODE_STRING SymbolicLinkName;
  /* 0x0010 */ void* NotifyEntry;
} POP_POLICY_NOTIFY_CONTEXT, *PPOP_POLICY_NOTIFY_CONTEXT; /* size: 0x0018 */

typedef struct _WMI_DISKIO_READWRITE_INIT
{
  /* 0x0000 */ void* Irp;
} WMI_DISKIO_READWRITE_INIT, *PWMI_DISKIO_READWRITE_INIT; /* size: 0x0008 */

typedef struct _LDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ struct LIST_ENTRY32 InMemoryOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY32 InInitializationOrderLinks;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short TlsIndex;
  union
  {
    /* 0x003c */ struct LIST_ENTRY32 HashLinks;
    struct
    {
      /* 0x003c */ unsigned long SectionPointer;
      /* 0x0040 */ unsigned long CheckSum;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0044 */ unsigned long TimeDateStamp;
    /* 0x0044 */ unsigned long LoadedImports;
  }; /* size: 0x0004 */
} LDR_DATA_TABLE_ENTRY32, *PLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

typedef struct _FILE_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0010 */ union _LARGE_INTEGER QuotaUsed;
  /* 0x0018 */ union _LARGE_INTEGER QuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER QuotaLimit;
  /* 0x0028 */ struct _SID Sid;
  /* 0x0034 */ long __PADDING__[1];
} FILE_QUOTA_INFORMATION, *PFILE_QUOTA_INFORMATION; /* size: 0x0038 */

typedef struct _POLICY_MODIFICATION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER ModifiedId;
  /* 0x0008 */ union _LARGE_INTEGER DatabaseCreationTime;
} POLICY_MODIFICATION_INFO, *PPOLICY_MODIFICATION_INFO; /* size: 0x0010 */

typedef struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD
{
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long ExtendedConfigOpRegions : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long ActiveStatePowerManagement : 1; /* bit position: 1 */
        /* 0x0000 */ unsigned long ClockPowerManagement : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned long SegmentGroups : 1; /* bit position: 3 */
        /* 0x0000 */ unsigned long MessageSignaledInterrupts : 1; /* bit position: 4 */
        /* 0x0000 */ unsigned long WindowsHardwareErrorArchitecture : 1; /* bit position: 5 */
        /* 0x0000 */ unsigned long Reserved : 26; /* bit position: 6 */
      }; /* bitfield */
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} PCI_ROOT_BUS_OSC_SUPPORT_FIELD, *PPCI_ROOT_BUS_OSC_SUPPORT_FIELD; /* size: 0x0004 */

typedef struct _IA64_FIBER
{
  /* 0x0000 */ unsigned __int64 FiberData;
  /* 0x0008 */ unsigned __int64 ExceptionList;
  /* 0x0010 */ unsigned __int64 StackBase;
  /* 0x0018 */ unsigned __int64 StackLimit;
  /* 0x0020 */ unsigned __int64 DeallocationStack;
  /* 0x0028 */ struct _IA64_CONTEXT FiberContext;
  /* 0x0a98 */ unsigned __int64 Wx86Tib;
  /* 0x0aa0 */ unsigned __int64 DeallocationBStore;
  /* 0x0aa8 */ unsigned __int64 BStoreLimit;
} IA64_FIBER, *PIA64_FIBER; /* size: 0x0ab0 */

struct PPM_PERFSTATE_DOMAIN_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Latency;
  /* 0x0008 */ unsigned long Speed;
  /* 0x000c */ long Padding_525;
  /* 0x0010 */ unsigned __int64 Processors;
}; /* size: 0x0018 */

typedef struct _CM_HARDWARE_PROFILE_ACPI_ALIAS
{
  /* 0x0000 */ unsigned long ProfileNumber;
  /* 0x0004 */ unsigned long DockState;
  /* 0x0008 */ unsigned long SerialLength;
  /* 0x000c */ long Padding_526;
  /* 0x0010 */ char* SerialNumber;
} CM_HARDWARE_PROFILE_ACPI_ALIAS, *PCM_HARDWARE_PROFILE_ACPI_ALIAS; /* size: 0x0018 */

typedef struct _MUICCENTRY
{
  /* 0x0000 */ unsigned int lCultureNameOffset;
  /* 0x0004 */ unsigned int ulCultureID;
  /* 0x0008 */ unsigned long ulLanguageType;
  /* 0x000c */ long Padding_527;
  /* 0x0010 */ struct _MUICCENTRY* pNeutralCulture;
  /* 0x0018 */ struct _MUICCENTRY* lBaseLanguageIndices[4];
  /* 0x0038 */ int lParentLanguageIndices[4];
} MUICCENTRY, *PMUICCENTRY; /* size: 0x0048 */

typedef struct _LOGICAL_DISK_EXTENTS
{
  /* 0x0000 */ unsigned __int64 StartingOffset;
  /* 0x0008 */ unsigned __int64 PartitionSize;
  /* 0x0010 */ unsigned long DiskNumber;
  /* 0x0014 */ unsigned long Size;
  /* 0x0018 */ unsigned long DriveType;
  /* 0x001c */ wchar_t DriveLetterString[4];
  /* 0x0024 */ unsigned long Pad;
  /* 0x0028 */ unsigned long PartitionNumber;
  /* 0x002c */ unsigned long SectorsPerCluster;
  /* 0x0030 */ unsigned long BytesPerSector;
  /* 0x0034 */ long Padding_528;
  /* 0x0038 */ __int64 NumberOfFreeClusters;
  /* 0x0040 */ __int64 TotalNumberOfClusters;
  /* 0x0048 */ wchar_t FileSystemType[16];
  /* 0x0068 */ unsigned long VolumeExt;
  /* 0x006c */ long __PADDING__[1];
} LOGICAL_DISK_EXTENTS, *PLOGICAL_DISK_EXTENTS; /* size: 0x0070 */

typedef union _PROCESS_MEMORY_ALLOCATION_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TopDown : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MEMORY_ALLOCATION_MODE, *PPROCESS_MEMORY_ALLOCATION_MODE; /* size: 0x0004 */

typedef struct _SYSTEM_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfHandles;
  /* 0x0004 */ long Padding_529;
  /* 0x0008 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION; /* size: 0x0020 */

typedef struct _POWER_REQUEST_ACTION
{
  /* 0x0000 */ void* PowerRequestHandle;
  /* 0x0008 */ enum _POWER_REQUEST_TYPE RequestType;
  /* 0x000c */ unsigned char SetAction;
  /* 0x000d */ char __PADDING__[3];
} POWER_REQUEST_ACTION, *PPOWER_REQUEST_ACTION; /* size: 0x0010 */

typedef struct _DEVICE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Failed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long ReadOnly : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long Removable : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ConsoleIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long ConsoleOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Input : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Output : 1; /* bit position: 6 */
  }; /* bitfield */
} DEVICE_FLAGS, *PDEVICE_FLAGS; /* size: 0x0004 */

typedef struct _CONFIGURATION_COMPONENT
{
  /* 0x0000 */ enum _CONFIGURATION_CLASS Class;
  /* 0x0004 */ enum _CONFIGURATION_TYPE Type;
  /* 0x0008 */ struct _DEVICE_FLAGS Flags;
  /* 0x000c */ unsigned short Version;
  /* 0x000e */ unsigned short Revision;
  /* 0x0010 */ unsigned long Key;
  union
  {
    /* 0x0014 */ unsigned long AffinityMask;
    struct
    {
      /* 0x0014 */ unsigned short Group;
      /* 0x0016 */ unsigned short GroupIndex;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned long ConfigurationDataLength;
  /* 0x001c */ unsigned long IdentifierLength;
  /* 0x0020 */ char* Identifier;
} CONFIGURATION_COMPONENT, *PCONFIGURATION_COMPONENT; /* size: 0x0028 */

typedef struct _IOP_MINI_COMPLETION_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  union
  {
    /* 0x0010 */ struct _IO_STACK_LOCATION* CurrentStackLocation;
    /* 0x0010 */ unsigned long PacketType;
  }; /* size: 0x0008 */
  /* 0x0018 */ void* KeyContext;
  /* 0x0020 */ void* ApcContext;
  /* 0x0028 */ long IoStatus;
  /* 0x002c */ long Padding_530;
  /* 0x0030 */ unsigned __int64 IoStatusInformation;
} IOP_MINI_COMPLETION_PACKET, *PIOP_MINI_COMPLETION_PACKET; /* size: 0x0038 */

typedef struct _IMAGE_THUNK_DATA32
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long ForwarderString;
      /* 0x0000 */ unsigned long Function;
      /* 0x0000 */ unsigned long Ordinal;
      /* 0x0000 */ unsigned long AddressOfData;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
} IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32; /* size: 0x0004 */

typedef struct _LINK_TRACKING_PACKET
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkQueueItem;
  /* 0x0020 */ struct _KEVENT Event;
  /* 0x0038 */ long FinalStatus;
  /* 0x003c */ long __PADDING__[1];
} LINK_TRACKING_PACKET, *PLINK_TRACKING_PACKET; /* size: 0x0040 */

typedef struct _GDI_TEB_BATCH64
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ long Padding_531;
  /* 0x0008 */ unsigned __int64 HDC;
  /* 0x0010 */ unsigned long Buffer[310];
} GDI_TEB_BATCH64, *PGDI_TEB_BATCH64; /* size: 0x04e8 */

typedef struct _POP_SWITCH_DEVICE
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned char GotCaps;
  /* 0x0011 */ unsigned char IsInitializing;
  /* 0x0012 */ unsigned char IsFailed;
  /* 0x0013 */ unsigned char TriggerState;
  /* 0x0014 */ unsigned long IrpBuffer;
  /* 0x0018 */ unsigned long Caps;
  /* 0x001c */ unsigned char OpenState;
  /* 0x001d */ char Padding_532[3];
  /* 0x0020 */ struct _IRP* Irp;
  /* 0x0028 */ struct _UNICODE_STRING SymbolicLinkName;
} POP_SWITCH_DEVICE, *PPOP_SWITCH_DEVICE; /* size: 0x0038 */

typedef struct _KLDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ void* ExceptionTable;
  /* 0x0018 */ unsigned long ExceptionTableSize;
  /* 0x001c */ long Padding_533;
  /* 0x0020 */ void* GpValue;
  /* 0x0028 */ struct _NON_PAGED_DEBUG_INFO* NonPagedDebugInfo;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_534;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Unused5;
  /* 0x0070 */ void* SectionPointer;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long CoverageSectionSize;
  /* 0x0080 */ void* CoverageSection;
  /* 0x0088 */ void* LoadedImports;
  /* 0x0090 */ void* PatchInformation;
  /* 0x0098 */ unsigned long SizeOfImageNotRounded;
  /* 0x009c */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY, *PKLDR_DATA_TABLE_ENTRY; /* size: 0x00a0 */

struct USN_RECORD
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned __int64 FileReferenceNumber;
  /* 0x0010 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0018 */ __int64 Usn;
  /* 0x0020 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0028 */ unsigned long Reason;
  /* 0x002c */ unsigned long SourceInfo;
  /* 0x0030 */ unsigned long SecurityId;
  /* 0x0034 */ unsigned long FileAttributes;
  /* 0x0038 */ unsigned short FileNameLength;
  /* 0x003a */ unsigned short FileNameOffset;
  /* 0x003c */ wchar_t FileName[1];
  /* 0x003e */ char __PADDING__[2];
}; /* size: 0x0040 */

typedef struct _IO_ERROR_LOG_PACKET
{
  /* 0x0000 */ unsigned char MajorFunctionCode;
  /* 0x0001 */ unsigned char RetryCount;
  /* 0x0002 */ unsigned short DumpDataSize;
  /* 0x0004 */ unsigned short NumberOfStrings;
  /* 0x0006 */ unsigned short StringOffset;
  /* 0x0008 */ unsigned short EventCategory;
  /* 0x000a */ char Padding_535[2];
  /* 0x000c */ long ErrorCode;
  /* 0x0010 */ unsigned long UniqueErrorValue;
  /* 0x0014 */ long FinalStatus;
  /* 0x0018 */ unsigned long SequenceNumber;
  /* 0x001c */ unsigned long IoControlCode;
  /* 0x0020 */ union _LARGE_INTEGER DeviceOffset;
  /* 0x0028 */ unsigned long DumpData[1];
  /* 0x002c */ long __PADDING__[1];
} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; /* size: 0x0030 */

typedef struct _IO_ERROR_LOG_MESSAGE
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned short DriverNameLength;
  /* 0x0006 */ char Padding_536[2];
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long DriverNameOffset;
  /* 0x0014 */ long Padding_537;
  /* 0x0018 */ struct _IO_ERROR_LOG_PACKET EntryData;
} IO_ERROR_LOG_MESSAGE, *PIO_ERROR_LOG_MESSAGE; /* size: 0x0048 */

typedef struct _GET_SET_SYMPATH
{
  /* 0x0000 */ const char* Args;
  /* 0x0008 */ char* Result;
  /* 0x0010 */ int Length;
  /* 0x0014 */ long __PADDING__[1];
} GET_SET_SYMPATH, *PGET_SET_SYMPATH; /* size: 0x0018 */

typedef struct _POWER_REQUEST
{
  /* 0x0000 */ unsigned long SupportedRequestMask;
  /* 0x0004 */ long PowerRequestCount[3];
  /* 0x0010 */ struct _DIAGNOSTIC_BUFFER DiagnosticBuffer;
} POWER_REQUEST, *PPOWER_REQUEST; /* size: 0x0038 */

typedef struct _RTL_BARRIER
{
  /* 0x0000 */ volatile long Barrier;
  /* 0x0004 */ long LeftBarrier;
  /* 0x0008 */ void* WaitEvent[2];
  /* 0x0018 */ long TotalProcessors;
  /* 0x001c */ unsigned long Spins;
} RTL_BARRIER, *PRTL_BARRIER; /* size: 0x0020 */

typedef struct _EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID
{
  /* 0x0000 */ struct _GUID RelatedActivityId;
} EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID, *PEVENT_EXTENDED_ITEM_RELATED_ACTIVITYID; /* size: 0x0010 */

typedef struct _WMI_PAGE_FAULT
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ void* ProgramCounter;
} WMI_PAGE_FAULT, *PWMI_PAGE_FAULT; /* size: 0x0010 */

typedef struct _PERFINFO_CCSWAP_IDLE_SHORT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short DataType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned short TimeDelta : 14; /* bit position: 2 */
  }; /* bitfield */
} PERFINFO_CCSWAP_IDLE_SHORT, *PPERFINFO_CCSWAP_IDLE_SHORT; /* size: 0x0002 */

typedef struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY
{
  /* 0x0000 */ enum _PCI_HARDWARE_INTERFACE SecondaryInterface;
  /* 0x0004 */ unsigned char BusCapabilitiesFound;
  /* 0x0005 */ char Padding_538[3];
  /* 0x0008 */ unsigned long CurrentSpeedAndMode;
  /* 0x000c */ unsigned long SupportedSpeedsAndModes;
  /* 0x0010 */ unsigned char DeviceIDMessagingCapable;
  /* 0x0011 */ char Padding_539[3];
  /* 0x0014 */ enum PCI_BUS_WIDTH SecondaryBusWidth;
  /* 0x0018 */ struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD OscFeatureSupport;
  /* 0x001c */ struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD OscControlRequest;
  /* 0x0020 */ struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD OscControlGranted;
} PCI_ROOT_BUS_HARDWARE_CAPABILITY, *PPCI_ROOT_BUS_HARDWARE_CAPABILITY; /* size: 0x0024 */

typedef struct _SCSI_PASS_THROUGH_DIRECT
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned char ScsiStatus;
  /* 0x0003 */ unsigned char PathId;
  /* 0x0004 */ unsigned char TargetId;
  /* 0x0005 */ unsigned char Lun;
  /* 0x0006 */ unsigned char CdbLength;
  /* 0x0007 */ unsigned char SenseInfoLength;
  /* 0x0008 */ unsigned char DataIn;
  /* 0x0009 */ char Padding_540[3];
  /* 0x000c */ unsigned long DataTransferLength;
  /* 0x0010 */ unsigned long TimeOutValue;
  /* 0x0014 */ long Padding_541;
  /* 0x0018 */ void* DataBuffer;
  /* 0x0020 */ unsigned long SenseInfoOffset;
  /* 0x0024 */ unsigned char Cdb[16];
  /* 0x0034 */ long __PADDING__[1];
} SCSI_PASS_THROUGH_DIRECT, *PSCSI_PASS_THROUGH_DIRECT; /* size: 0x0038 */

typedef struct _MPIO_PASS_THROUGH_PATH_DIRECT
{
  /* 0x0000 */ struct _SCSI_PASS_THROUGH_DIRECT PassThrough;
  /* 0x0038 */ unsigned long Version;
  /* 0x003c */ unsigned short Length;
  /* 0x003e */ unsigned char Flags;
  /* 0x003f */ unsigned char PortNumber;
  /* 0x0040 */ unsigned __int64 MpioPathId;
} MPIO_PASS_THROUGH_PATH_DIRECT, *PMPIO_PASS_THROUGH_PATH_DIRECT; /* size: 0x0048 */

typedef struct _WHEA_NMI_ERROR_SECTION
{
  /* 0x0000 */ unsigned char Data[8];
  /* 0x0008 */ union _WHEA_NMI_ERROR_SECTION_FLAGS Flags;
} WHEA_NMI_ERROR_SECTION, *PWHEA_NMI_ERROR_SECTION; /* size: 0x000c */

typedef struct _IMAGE_ROM_HEADERS
{
  /* 0x0000 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0014 */ struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS; /* size: 0x004c */

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ char NameString[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING; /* size: 0x0004 */

typedef struct _LDR_ENUM_RESOURCE_ENTRY
{
  /* 0x0000 */ union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 NameOrId;
      /* 0x0000 */ struct _IMAGE_RESOURCE_DIRECTORY_STRING* Name;
      struct
      {
        /* 0x0000 */ unsigned short Id;
        /* 0x0002 */ unsigned short NameIsPresent;
      }; /* size: 0x0004 */
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Path[3];
  /* 0x0018 */ void* Data;
  /* 0x0020 */ unsigned long Size;
  /* 0x0024 */ unsigned long Reserved;
} LDR_ENUM_RESOURCE_ENTRY, *PLDR_ENUM_RESOURCE_ENTRY; /* size: 0x0028 */

typedef struct _IOP_FOEXT_STREAM_ID
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ void* StreamContext;
  /* 0x0018 */ void* Signature;
} IOP_FOEXT_STREAM_ID, *PIOP_FOEXT_STREAM_ID; /* size: 0x0020 */

typedef struct _SYSTEM_PROCESS_ID_INFORMATION
{
  /* 0x0000 */ void* ProcessId;
  /* 0x0008 */ struct _UNICODE_STRING ImageName;
} SYSTEM_PROCESS_ID_INFORMATION, *PSYSTEM_PROCESS_ID_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
} SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION, *PSYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION; /* size: 0x0004 */

typedef struct _IMAGE_VXD_HEADER
{
  /* 0x0000 */ unsigned short e32_magic;
  /* 0x0002 */ unsigned char e32_border;
  /* 0x0003 */ unsigned char e32_worder;
  /* 0x0004 */ unsigned long e32_level;
  /* 0x0008 */ unsigned short e32_cpu;
  /* 0x000a */ unsigned short e32_os;
  /* 0x000c */ unsigned long e32_ver;
  /* 0x0010 */ unsigned long e32_mflags;
  /* 0x0014 */ unsigned long e32_mpages;
  /* 0x0018 */ unsigned long e32_startobj;
  /* 0x001c */ unsigned long e32_eip;
  /* 0x0020 */ unsigned long e32_stackobj;
  /* 0x0024 */ unsigned long e32_esp;
  /* 0x0028 */ unsigned long e32_pagesize;
  /* 0x002c */ unsigned long e32_lastpagesize;
  /* 0x0030 */ unsigned long e32_fixupsize;
  /* 0x0034 */ unsigned long e32_fixupsum;
  /* 0x0038 */ unsigned long e32_ldrsize;
  /* 0x003c */ unsigned long e32_ldrsum;
  /* 0x0040 */ unsigned long e32_objtab;
  /* 0x0044 */ unsigned long e32_objcnt;
  /* 0x0048 */ unsigned long e32_objmap;
  /* 0x004c */ unsigned long e32_itermap;
  /* 0x0050 */ unsigned long e32_rsrctab;
  /* 0x0054 */ unsigned long e32_rsrccnt;
  /* 0x0058 */ unsigned long e32_restab;
  /* 0x005c */ unsigned long e32_enttab;
  /* 0x0060 */ unsigned long e32_dirtab;
  /* 0x0064 */ unsigned long e32_dircnt;
  /* 0x0068 */ unsigned long e32_fpagetab;
  /* 0x006c */ unsigned long e32_frectab;
  /* 0x0070 */ unsigned long e32_impmod;
  /* 0x0074 */ unsigned long e32_impmodcnt;
  /* 0x0078 */ unsigned long e32_impproc;
  /* 0x007c */ unsigned long e32_pagesum;
  /* 0x0080 */ unsigned long e32_datapage;
  /* 0x0084 */ unsigned long e32_preload;
  /* 0x0088 */ unsigned long e32_nrestab;
  /* 0x008c */ unsigned long e32_cbnrestab;
  /* 0x0090 */ unsigned long e32_nressum;
  /* 0x0094 */ unsigned long e32_autodata;
  /* 0x0098 */ unsigned long e32_debuginfo;
  /* 0x009c */ unsigned long e32_debuglen;
  /* 0x00a0 */ unsigned long e32_instpreload;
  /* 0x00a4 */ unsigned long e32_instdemand;
  /* 0x00a8 */ unsigned long e32_heapsize;
  /* 0x00ac */ unsigned char e32_res3[12];
  /* 0x00b8 */ unsigned long e32_winresoff;
  /* 0x00bc */ unsigned long e32_winreslen;
  /* 0x00c0 */ unsigned short e32_devid;
  /* 0x00c2 */ unsigned short e32_ddkver;
} IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER; /* size: 0x00c4 */

typedef struct _POWER_REQUEST_LIST
{
  /* 0x0000 */ unsigned __int64 Count;
  /* 0x0008 */ unsigned __int64 PowerRequestOffsets[1];
} POWER_REQUEST_LIST, *PPOWER_REQUEST_LIST; /* size: 0x0010 */

typedef struct _POLICY_AUDIT_EVENTS_INFO
{
  /* 0x0000 */ unsigned char AuditingMode;
  /* 0x0001 */ char Padding_542[7];
  /* 0x0008 */ unsigned long* EventAuditingOptions;
  /* 0x0010 */ unsigned long MaximumAuditEventCount;
  /* 0x0014 */ long __PADDING__[1];
} POLICY_AUDIT_EVENTS_INFO, *PPOLICY_AUDIT_EVENTS_INFO; /* size: 0x0018 */

typedef union _PCI_EXPRESS_SLOT_CONTROL_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short AttentionButtonEnable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short PowerFaultDetectEnable : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short MRLSensorEnable : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short PresenceDetectEnable : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short CommandCompletedEnable : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short HotPlugInterruptEnable : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned short AttentionIndicatorControl : 2; /* bit position: 6 */
      /* 0x0000 */ unsigned short PowerIndicatorControl : 2; /* bit position: 8 */
      /* 0x0000 */ unsigned short PowerControllerControl : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned short ElectromechanicalLockControl : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned short DataLinkStateChangeEnable : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned short Rsvd : 3; /* bit position: 13 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_SLOT_CONTROL_REGISTER, *PPCI_EXPRESS_SLOT_CONTROL_REGISTER; /* size: 0x0002 */

typedef struct _GET_CURRENT_THREAD_ADDRESS
{
  /* 0x0000 */ unsigned long Processor;
  /* 0x0004 */ long Padding_543;
  /* 0x0008 */ unsigned __int64 Address;
} GET_CURRENT_THREAD_ADDRESS, *PGET_CURRENT_THREAD_ADDRESS; /* size: 0x0010 */

typedef union _WHEA_ERROR_RECORD_HEADER_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long PlatformId : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Timestamp : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long PartitionId : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_ERROR_RECORD_HEADER_VALIDBITS, *PWHEA_ERROR_RECORD_HEADER_VALIDBITS; /* size: 0x0004 */

typedef struct _WHEA_ERROR_RECORD_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ union _WHEA_REVISION Revision;
  /* 0x0006 */ unsigned long SignatureEnd;
  /* 0x000a */ unsigned short SectionCount;
  /* 0x000c */ enum _WHEA_ERROR_SEVERITY Severity;
  /* 0x0010 */ union _WHEA_ERROR_RECORD_HEADER_VALIDBITS ValidBits;
  /* 0x0014 */ unsigned long Length;
  /* 0x0018 */ union _WHEA_TIMESTAMP Timestamp;
  /* 0x0020 */ struct _GUID PlatformId;
  /* 0x0030 */ struct _GUID PartitionId;
  /* 0x0040 */ struct _GUID CreatorId;
  /* 0x0050 */ struct _GUID NotifyType;
  /* 0x0060 */ unsigned __int64 RecordId;
  /* 0x0068 */ union _WHEA_ERROR_RECORD_HEADER_FLAGS Flags;
  /* 0x006c */ union _WHEA_PERSISTENCE_INFO PersistenceInfo;
  /* 0x0074 */ unsigned char Reserved[12];
} WHEA_ERROR_RECORD_HEADER, *PWHEA_ERROR_RECORD_HEADER; /* size: 0x0080 */

typedef struct _IOSPACE
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Data;
} IOSPACE, *PIOSPACE; /* size: 0x000c */

typedef struct _CI_LOG_SCHEDULER_WAKEUP
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
  /* 0x0030 */ unsigned long Reason;
  /* 0x0034 */ long __PADDING__[1];
} CI_LOG_SCHEDULER_WAKEUP, *PCI_LOG_SCHEDULER_WAKEUP; /* size: 0x0038 */

typedef struct _LSA_COMMAND_MESSAGE
{
  /* 0x0000 */ struct _PORT_MESSAGE MessageHeader;
  /* 0x0028 */ enum _LSA_COMMAND_NUMBER CommandNumber;
  /* 0x002c */ enum _SEP_RM_LSA_MEMORY_TYPE CommandParamsMemoryType;
  /* 0x0030 */ unsigned char CommandParams[464];
} LSA_COMMAND_MESSAGE, *PLSA_COMMAND_MESSAGE; /* size: 0x0200 */

typedef struct _KSTACK_AREA
{
  /* 0x0000 */ struct _KERNEL_STACK_CONTROL StackControl;
  /* 0x0050 */ struct _XSAVE_FORMAT NpxFrame;
} KSTACK_AREA, *PKSTACK_AREA; /* size: 0x0250 */

typedef struct _VM_COUNTERS
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_544;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
} VM_COUNTERS, *PVM_COUNTERS; /* size: 0x0058 */

typedef struct _SL_KMEM_CACHE
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long SizeOfData;
  /* 0x0008 */ unsigned long SignatureSize;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long Version;
  /* 0x0014 */ struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_KMEM_CACHE, *PSL_KMEM_CACHE; /* size: 0x0028 */

typedef struct _PERFINFO_PPM_THERMAL_CONSTRAINT
{
  /* 0x0000 */ unsigned long Constraint;
  /* 0x0004 */ long Padding_545;
  /* 0x0008 */ unsigned __int64 Processors;
} PERFINFO_PPM_THERMAL_CONSTRAINT, *PPERFINFO_PPM_THERMAL_CONSTRAINT; /* size: 0x0010 */

typedef struct _FILE_PIPE_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long ReadDataAvailable;
  /* 0x0008 */ unsigned long NumberOfMessages;
  /* 0x000c */ unsigned long MessageLength;
  /* 0x0010 */ char Data[1];
  /* 0x0011 */ char __PADDING__[3];
} FILE_PIPE_PEEK_BUFFER, *PFILE_PIPE_PEEK_BUFFER; /* size: 0x0014 */

typedef struct _POP_SLEEP_STATS
{
  /* 0x0000 */ union _LARGE_INTEGER SleepStart;
  /* 0x0008 */ union _LARGE_INTEGER SleepEnd;
  /* 0x0010 */ union _LARGE_INTEGER ResumeStart;
  /* 0x0018 */ union _LARGE_INTEGER ResumeEnd;
  /* 0x0020 */ union _LARGE_INTEGER DriverWakeStart;
  /* 0x0028 */ union _LARGE_INTEGER DriverWakeEnd;
  /* 0x0030 */ union _LARGE_INTEGER BiosInitTime;
  /* 0x0038 */ struct _PO_HIBER_PERF HiberPerf;
} POP_SLEEP_STATS, *PPOP_SLEEP_STATS; /* size: 0x0090 */

typedef struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE_HEADER
{
  /* 0x0000 */ unsigned __int64 AddressSpace;
  /* 0x0008 */ unsigned __int64 Flags;
  /* 0x0010 */ unsigned __int64 ProcessorMask;
} HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE_HEADER, *PHV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE_HEADER; /* size: 0x0018 */

typedef struct _OBJECT_SYMBOLIC_LINK
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ struct _UNICODE_STRING LinkTarget;
  /* 0x0018 */ unsigned long DosDeviceDriveIndex;
  /* 0x001c */ long __PADDING__[1];
} OBJECT_SYMBOLIC_LINK, *POBJECT_SYMBOLIC_LINK; /* size: 0x0020 */

struct POP_POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long RefCount;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _FILE_PIPE_EVENT_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long EntryType;
  /* 0x0008 */ unsigned long ByteCount;
  /* 0x000c */ unsigned long KeyValue;
  /* 0x0010 */ unsigned long NumberRequests;
} FILE_PIPE_EVENT_BUFFER, *PFILE_PIPE_EVENT_BUFFER; /* size: 0x0014 */

typedef struct _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned long SecurityAttributeCount;
  /* 0x0004 */ long Padding_546;
  /* 0x0008 */ struct _LIST_ENTRY SecurityAttributesList;
  /* 0x0018 */ unsigned long WorkingSecurityAttributeCount;
  /* 0x001c */ long Padding_547;
  /* 0x0020 */ struct _LIST_ENTRY WorkingSecurityAttributesList;
} AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION, *PAUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION; /* size: 0x0030 */

typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY* ChainHead;
  /* 0x0008 */ struct _LIST_ENTRY* PrevLinkage;
  /* 0x0010 */ unsigned __int64 Signature;
} RTL_DYNAMIC_HASH_TABLE_CONTEXT, *PRTL_DYNAMIC_HASH_TABLE_CONTEXT; /* size: 0x0018 */

typedef struct _IMAGE_LINENUMBER
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long SymbolTableIndex;
      /* 0x0000 */ unsigned long VirtualAddress;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Type;
  /* 0x0004 */ unsigned short Linenumber;
} IMAGE_LINENUMBER, *PIMAGE_LINENUMBER; /* size: 0x0006 */

typedef struct _SE_EXPORTS
{
  /* 0x0000 */ struct _LUID SeCreateTokenPrivilege;
  /* 0x0008 */ struct _LUID SeAssignPrimaryTokenPrivilege;
  /* 0x0010 */ struct _LUID SeLockMemoryPrivilege;
  /* 0x0018 */ struct _LUID SeIncreaseQuotaPrivilege;
  /* 0x0020 */ struct _LUID SeUnsolicitedInputPrivilege;
  /* 0x0028 */ struct _LUID SeTcbPrivilege;
  /* 0x0030 */ struct _LUID SeSecurityPrivilege;
  /* 0x0038 */ struct _LUID SeTakeOwnershipPrivilege;
  /* 0x0040 */ struct _LUID SeLoadDriverPrivilege;
  /* 0x0048 */ struct _LUID SeCreatePagefilePrivilege;
  /* 0x0050 */ struct _LUID SeIncreaseBasePriorityPrivilege;
  /* 0x0058 */ struct _LUID SeSystemProfilePrivilege;
  /* 0x0060 */ struct _LUID SeSystemtimePrivilege;
  /* 0x0068 */ struct _LUID SeProfileSingleProcessPrivilege;
  /* 0x0070 */ struct _LUID SeCreatePermanentPrivilege;
  /* 0x0078 */ struct _LUID SeBackupPrivilege;
  /* 0x0080 */ struct _LUID SeRestorePrivilege;
  /* 0x0088 */ struct _LUID SeShutdownPrivilege;
  /* 0x0090 */ struct _LUID SeDebugPrivilege;
  /* 0x0098 */ struct _LUID SeAuditPrivilege;
  /* 0x00a0 */ struct _LUID SeSystemEnvironmentPrivilege;
  /* 0x00a8 */ struct _LUID SeChangeNotifyPrivilege;
  /* 0x00b0 */ struct _LUID SeRemoteShutdownPrivilege;
  /* 0x00b8 */ void* SeNullSid;
  /* 0x00c0 */ void* SeWorldSid;
  /* 0x00c8 */ void* SeLocalSid;
  /* 0x00d0 */ void* SeCreatorOwnerSid;
  /* 0x00d8 */ void* SeCreatorGroupSid;
  /* 0x00e0 */ void* SeNtAuthoritySid;
  /* 0x00e8 */ void* SeDialupSid;
  /* 0x00f0 */ void* SeNetworkSid;
  /* 0x00f8 */ void* SeBatchSid;
  /* 0x0100 */ void* SeInteractiveSid;
  /* 0x0108 */ void* SeLocalSystemSid;
  /* 0x0110 */ void* SeAliasAdminsSid;
  /* 0x0118 */ void* SeAliasUsersSid;
  /* 0x0120 */ void* SeAliasGuestsSid;
  /* 0x0128 */ void* SeAliasPowerUsersSid;
  /* 0x0130 */ void* SeAliasAccountOpsSid;
  /* 0x0138 */ void* SeAliasSystemOpsSid;
  /* 0x0140 */ void* SeAliasPrintOpsSid;
  /* 0x0148 */ void* SeAliasBackupOpsSid;
  /* 0x0150 */ void* SeAuthenticatedUsersSid;
  /* 0x0158 */ void* SeRestrictedSid;
  /* 0x0160 */ void* SeAnonymousLogonSid;
  /* 0x0168 */ struct _LUID SeUndockPrivilege;
  /* 0x0170 */ struct _LUID SeSyncAgentPrivilege;
  /* 0x0178 */ struct _LUID SeEnableDelegationPrivilege;
  /* 0x0180 */ void* SeLocalServiceSid;
  /* 0x0188 */ void* SeNetworkServiceSid;
  /* 0x0190 */ struct _LUID SeManageVolumePrivilege;
  /* 0x0198 */ struct _LUID SeImpersonatePrivilege;
  /* 0x01a0 */ struct _LUID SeCreateGlobalPrivilege;
  /* 0x01a8 */ struct _LUID SeTrustedCredManAccessPrivilege;
  /* 0x01b0 */ struct _LUID SeRelabelPrivilege;
  /* 0x01b8 */ struct _LUID SeIncreaseWorkingSetPrivilege;
  /* 0x01c0 */ struct _LUID SeTimeZonePrivilege;
  /* 0x01c8 */ struct _LUID SeCreateSymbolicLinkPrivilege;
  /* 0x01d0 */ void* SeIUserSid;
  /* 0x01d8 */ void* SeUntrustedMandatorySid;
  /* 0x01e0 */ void* SeLowMandatorySid;
  /* 0x01e8 */ void* SeMediumMandatorySid;
  /* 0x01f0 */ void* SeHighMandatorySid;
  /* 0x01f8 */ void* SeSystemMandatorySid;
  /* 0x0200 */ void* SeOwnerRightsSid;
} SE_EXPORTS, *PSE_EXPORTS; /* size: 0x0208 */

typedef struct _HV_VIRTUAL_APIC_ASSIST
{
  union
  {
    /* 0x0000 */ long ApicFlags;
    /* 0x0000 */ unsigned long NoEOIRequired : 1; /* bit position: 0 */
  }; /* size: 0x0004 */
} HV_VIRTUAL_APIC_ASSIST, *PHV_VIRTUAL_APIC_ASSIST; /* size: 0x0004 */

typedef struct _THREAD_LAST_SYSCALL_INFORMATION
{
  /* 0x0000 */ void* FirstArgument;
  /* 0x0008 */ unsigned short SystemCallNumber;
  /* 0x000a */ char __PADDING__[6];
} THREAD_LAST_SYSCALL_INFORMATION, *PTHREAD_LAST_SYSCALL_INFORMATION; /* size: 0x0010 */

typedef struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION
{
  /* 0x0000 */ void* ReflectionProcessHandle;
  /* 0x0008 */ void* ReflectionThreadHandle;
  /* 0x0010 */ struct _CLIENT_ID ReflectionClientId;
} RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION, *PRTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION; /* size: 0x0020 */

typedef struct _FP_64
{
  /* 0x0000 */ unsigned long W[2];
} FP_64, *PFP_64; /* size: 0x0008 */

typedef struct _FILESYSTEM_STATISTICS
{
  /* 0x0000 */ unsigned short FileSystemType;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ unsigned long SizeOfCompleteStructure;
  /* 0x0008 */ unsigned long UserFileReads;
  /* 0x000c */ unsigned long UserFileReadBytes;
  /* 0x0010 */ unsigned long UserDiskReads;
  /* 0x0014 */ unsigned long UserFileWrites;
  /* 0x0018 */ unsigned long UserFileWriteBytes;
  /* 0x001c */ unsigned long UserDiskWrites;
  /* 0x0020 */ unsigned long MetaDataReads;
  /* 0x0024 */ unsigned long MetaDataReadBytes;
  /* 0x0028 */ unsigned long MetaDataDiskReads;
  /* 0x002c */ unsigned long MetaDataWrites;
  /* 0x0030 */ unsigned long MetaDataWriteBytes;
  /* 0x0034 */ unsigned long MetaDataDiskWrites;
} FILESYSTEM_STATISTICS, *PFILESYSTEM_STATISTICS; /* size: 0x0038 */

struct _TP_IO;

typedef struct _WMI_CONTEXTSWAP
{
  /* 0x0000 */ unsigned long NewThreadId;
  /* 0x0004 */ unsigned long OldThreadId;
  /* 0x0008 */ char NewThreadPriority;
  /* 0x0009 */ char OldThreadPriority;
  /* 0x000a */ unsigned char PreviousCState;
  union
  {
    /* 0x000b */ char NewThreadPriorityDecrement;
    /* 0x000b */ char SpareByte;
  }; /* size: 0x0001 */
  /* 0x000c */ unsigned char OldThreadWaitReason;
  /* 0x000d */ char OldThreadWaitMode;
  /* 0x000e */ unsigned char OldThreadState;
  /* 0x000f */ unsigned char OldThreadIdealProcessor;
  /* 0x0010 */ unsigned long NewThreadWaitTime;
  /* 0x0014 */ long OldThreadRemainingQuantum;
} WMI_CONTEXTSWAP, *PWMI_CONTEXTSWAP; /* size: 0x0018 */

typedef struct _MEMORY_WORKING_SET_EX_BLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Win32Protection : 11; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned __int64 Node : 6; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 24 */
      /* 0x0000 */ unsigned __int64 Reserved : 5; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Reserved0 : 14; /* bit position: 1 */
        /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
        /* 0x0000 */ unsigned __int64 Reserved1 : 6; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 Location : 2; /* bit position: 22 */
        /* 0x0000 */ unsigned __int64 Reserved2 : 8; /* bit position: 24 */
        /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
      }; /* bitfield */
    } /* size: 0x0008 */ Invalid;
  }; /* size: 0x0008 */
} MEMORY_WORKING_SET_EX_BLOCK, *PMEMORY_WORKING_SET_EX_BLOCK; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION* Information;
  /* 0x0008 */ void* SectionBase;
  /* 0x0010 */ unsigned long SectionLength;
  /* 0x0014 */ long Padding_548;
  /* 0x0018 */ void* SectionGlobalDataBase;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA; /* size: 0x0028 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_549;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_550;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_551;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA; /* size: 0x0070 */

typedef struct _SYSTEM_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfThreads;
  /* 0x0008 */ union _LARGE_INTEGER WorkingSetPrivateSize;
  /* 0x0010 */ unsigned long HardFaultCount;
  /* 0x0014 */ unsigned long NumberOfThreadsHighWatermark;
  /* 0x0018 */ unsigned __int64 CycleTime;
  /* 0x0020 */ union _LARGE_INTEGER CreateTime;
  /* 0x0028 */ union _LARGE_INTEGER UserTime;
  /* 0x0030 */ union _LARGE_INTEGER KernelTime;
  /* 0x0038 */ struct _UNICODE_STRING ImageName;
  /* 0x0048 */ long BasePriority;
  /* 0x004c */ long Padding_552;
  /* 0x0050 */ void* UniqueProcessId;
  /* 0x0058 */ void* InheritedFromUniqueProcessId;
  /* 0x0060 */ unsigned long HandleCount;
  /* 0x0064 */ unsigned long SessionId;
  /* 0x0068 */ unsigned __int64 UniqueProcessKey;
  /* 0x0070 */ unsigned __int64 PeakVirtualSize;
  /* 0x0078 */ unsigned __int64 VirtualSize;
  /* 0x0080 */ unsigned long PageFaultCount;
  /* 0x0084 */ long Padding_553;
  /* 0x0088 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0090 */ unsigned __int64 WorkingSetSize;
  /* 0x0098 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x00a0 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x00a8 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x00b0 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x00b8 */ unsigned __int64 PagefileUsage;
  /* 0x00c0 */ unsigned __int64 PeakPagefileUsage;
  /* 0x00c8 */ unsigned __int64 PrivatePageCount;
  /* 0x00d0 */ union _LARGE_INTEGER ReadOperationCount;
  /* 0x00d8 */ union _LARGE_INTEGER WriteOperationCount;
  /* 0x00e0 */ union _LARGE_INTEGER OtherOperationCount;
  /* 0x00e8 */ union _LARGE_INTEGER ReadTransferCount;
  /* 0x00f0 */ union _LARGE_INTEGER WriteTransferCount;
  /* 0x00f8 */ union _LARGE_INTEGER OtherTransferCount;
} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION; /* size: 0x0100 */

typedef struct _DBGKD_READ_WRITE_IO_EXTENDED32
{
  /* 0x0000 */ unsigned long DataSize;
  /* 0x0004 */ unsigned long InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long AddressSpace;
  /* 0x0010 */ unsigned long IoAddress;
  /* 0x0014 */ unsigned long DataValue;
} DBGKD_READ_WRITE_IO_EXTENDED32, *PDBGKD_READ_WRITE_IO_EXTENDED32; /* size: 0x0018 */

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long ExceptionHandler;
  /* 0x000c */ unsigned long HandlerData;
  /* 0x0010 */ unsigned long PrologEndAddress;
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY; /* size: 0x0014 */

typedef struct _DBGKD_WRITE_BREAKPOINT32
{
  /* 0x0000 */ unsigned long BreakPointAddress;
  /* 0x0004 */ unsigned long BreakPointHandle;
} DBGKD_WRITE_BREAKPOINT32, *PDBGKD_WRITE_BREAKPOINT32; /* size: 0x0008 */

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID ResourceManagerId;
  /* 0x0010 */ unsigned long DescriptionLength;
  /* 0x0014 */ wchar_t Description[1];
  /* 0x0016 */ char __PADDING__[2];
} RESOURCEMANAGER_BASIC_INFORMATION, *PRESOURCEMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

struct _RTLP_CURDIR_REF;

struct FIND_BY_SID_DATA
{
  /* 0x0000 */ unsigned long Restart;
  /* 0x0004 */ struct _SID Sid;
}; /* size: 0x0010 */

typedef struct _X86_DBGKD_CONTROL_REPORT
{
  /* 0x0000 */ unsigned long Dr6;
  /* 0x0004 */ unsigned long Dr7;
  /* 0x0008 */ unsigned short InstructionCount;
  /* 0x000a */ unsigned short ReportFlags;
  /* 0x000c */ unsigned char InstructionStream[16];
  /* 0x001c */ unsigned short SegCs;
  /* 0x001e */ unsigned short SegDs;
  /* 0x0020 */ unsigned short SegEs;
  /* 0x0022 */ unsigned short SegFs;
  /* 0x0024 */ unsigned long EFlags;
} X86_DBGKD_CONTROL_REPORT, *PX86_DBGKD_CONTROL_REPORT; /* size: 0x0028 */

typedef struct _POLICY_PRIVILEGE_DEFINITION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _LUID LocalValue;
} POLICY_PRIVILEGE_DEFINITION, *PPOLICY_PRIVILEGE_DEFINITION; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_STACK32
{
  /* 0x0000 */ unsigned long ActiveFrame;
  /* 0x0004 */ struct LIST_ENTRY32 FrameListCache;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long NextCookieSequenceNumber;
  /* 0x0014 */ unsigned long StackId;
} ACTIVATION_CONTEXT_STACK32, *PACTIVATION_CONTEXT_STACK32; /* size: 0x0018 */

typedef struct _PHYSICAL_WITH_FLAGS
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long BufLen;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned char Buf[1];
  /* 0x0011 */ char __PADDING__[7];
} PHYSICAL_WITH_FLAGS, *PPHYSICAL_WITH_FLAGS; /* size: 0x0018 */

typedef struct _PCI_AGP_ISOCH_COMMAND
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short Rsvd1 : 6; /* bit position: 0 */
    /* 0x0000 */ unsigned short Isoch_Y : 2; /* bit position: 6 */
    /* 0x0000 */ unsigned short Isoch_N : 8; /* bit position: 8 */
  }; /* bitfield */
} PCI_AGP_ISOCH_COMMAND, *PPCI_AGP_ISOCH_COMMAND; /* size: 0x0002 */

typedef struct _IO_DRIVER_CREATE_CONTEXT
{
  /* 0x0000 */ short Size;
  /* 0x0002 */ char Padding_554[6];
  /* 0x0008 */ struct _ECP_LIST* ExtraCreateParameter;
  /* 0x0010 */ void* DeviceObjectHint;
  /* 0x0018 */ struct _TXN_PARAMETER_BLOCK* TxnParameters;
} IO_DRIVER_CREATE_CONTEXT, *PIO_DRIVER_CREATE_CONTEXT; /* size: 0x0020 */

typedef struct _SYSTEM_INTERRUPT_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long DpcCount;
  /* 0x0008 */ unsigned long DpcRate;
  /* 0x000c */ unsigned long TimeIncrement;
  /* 0x0010 */ unsigned long DpcBypassCount;
  /* 0x0014 */ unsigned long ApcBypassCount;
} SYSTEM_INTERRUPT_INFORMATION, *PSYSTEM_INTERRUPT_INFORMATION; /* size: 0x0018 */

typedef struct _PEB32_WITH_WOW64INFO
{
  /* 0x0000 */ struct _PEB32 Peb32;
  /* 0x0248 */ struct _WOW64INFO Wow64Info;
} PEB32_WITH_WOW64INFO, *PPEB32_WITH_WOW64INFO; /* size: 0x0258 */

typedef struct _ECP_LIST
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _LIST_ENTRY EcpList;
} ECP_LIST, *PECP_LIST; /* size: 0x0018 */

typedef struct _PERFINFO_PO_PRESLEEP
{
  /* 0x0000 */ union _LARGE_INTEGER PerformanceCounter;
  /* 0x0008 */ union _LARGE_INTEGER PerformanceFrequency;
} PERFINFO_PO_PRESLEEP, *PPERFINFO_PO_PRESLEEP; /* size: 0x0010 */

typedef struct _SE_SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ void* SecurityDescriptor;
} SE_SECURITY_DESCRIPTOR, *PSE_SECURITY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _OSVERSIONINFOW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
} OSVERSIONINFOW, *POSVERSIONINFOW; /* size: 0x0114 */

typedef struct _IO_TRIAGE_DUMP_DATA_ARRAY
{
  /* 0x0000 */ unsigned long NumBlocksUsed;
  /* 0x0004 */ unsigned long NumBlocksTotal;
  /* 0x0008 */ struct _IO_TRIAGE_PTR_DATA_BLOCK* Blocks;
} IO_TRIAGE_DUMP_DATA_ARRAY, *PIO_TRIAGE_DUMP_DATA_ARRAY; /* size: 0x0010 */

typedef struct _IO_TRIAGE_PTR_DATA_BLOCK
{
  /* 0x0000 */ unsigned char* MinAddress;
  /* 0x0008 */ unsigned char* MaxAddress;
} IO_TRIAGE_PTR_DATA_BLOCK, *PIO_TRIAGE_PTR_DATA_BLOCK; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long ulFormatVersion;
  /* 0x0008 */ unsigned long ulAssemblyCount;
  /* 0x000c */ unsigned long ulRootManifestPathType;
  /* 0x0010 */ unsigned long ulRootManifestPathChars;
  /* 0x0014 */ unsigned long ulRootConfigurationPathType;
  /* 0x0018 */ unsigned long ulRootConfigurationPathChars;
  /* 0x001c */ unsigned long ulAppDirPathType;
  /* 0x0020 */ unsigned long ulAppDirPathChars;
  /* 0x0024 */ long Padding_555;
  /* 0x0028 */ const wchar_t* lpRootManifestPath;
  /* 0x0030 */ const wchar_t* lpRootConfigurationPath;
  /* 0x0038 */ const wchar_t* lpAppDirPath;
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION; /* size: 0x0040 */

typedef struct _SYSTEM_POOL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalSize;
  /* 0x0008 */ void* FirstEntry;
  /* 0x0010 */ unsigned short EntryOverhead;
  /* 0x0012 */ unsigned char PoolTagPresent;
  /* 0x0013 */ unsigned char Spare0;
  /* 0x0014 */ unsigned long NumberOfEntries;
  /* 0x0018 */ struct _SYSTEM_POOL_ENTRY Entries[1];
} SYSTEM_POOL_INFORMATION, *PSYSTEM_POOL_INFORMATION; /* size: 0x0028 */

typedef struct _REG_QUERY_VALUE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _UNICODE_STRING* ValueName;
  /* 0x0010 */ enum _KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass;
  /* 0x0014 */ long Padding_556;
  /* 0x0018 */ void* KeyValueInformation;
  /* 0x0020 */ unsigned long Length;
  /* 0x0024 */ long Padding_557;
  /* 0x0028 */ unsigned long* ResultLength;
  /* 0x0030 */ void* CallContext;
  /* 0x0038 */ void* ObjectContext;
  /* 0x0040 */ void* Reserved;
} REG_QUERY_VALUE_KEY_INFORMATION, *PREG_QUERY_VALUE_KEY_INFORMATION; /* size: 0x0048 */

typedef struct _FIRMWARE_INFORMATION_LOADER_BLOCK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long FirmwareTypeEfi : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_558;
  union
  {
    union
    {
      /* 0x0008 */ struct _EFI_FIRMWARE_INFORMATION EfiInformation;
      /* 0x0008 */ struct _PCAT_FIRMWARE_INFORMATION PcatInformation;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} FIRMWARE_INFORMATION_LOADER_BLOCK, *PFIRMWARE_INFORMATION_LOADER_BLOCK; /* size: 0x0020 */

typedef struct _LOADER_PARAMETER_BLOCK
{
  /* 0x0000 */ unsigned long OsMajorVersion;
  /* 0x0004 */ unsigned long OsMinorVersion;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ struct _LIST_ENTRY LoadOrderListHead;
  /* 0x0020 */ struct _LIST_ENTRY MemoryDescriptorListHead;
  /* 0x0030 */ struct _LIST_ENTRY BootDriverListHead;
  /* 0x0040 */ unsigned __int64 KernelStack;
  /* 0x0048 */ unsigned __int64 Prcb;
  /* 0x0050 */ unsigned __int64 Process;
  /* 0x0058 */ unsigned __int64 Thread;
  /* 0x0060 */ unsigned long RegistryLength;
  /* 0x0064 */ long Padding_559;
  /* 0x0068 */ void* RegistryBase;
  /* 0x0070 */ struct _CONFIGURATION_COMPONENT_DATA* ConfigurationRoot;
  /* 0x0078 */ char* ArcBootDeviceName;
  /* 0x0080 */ char* ArcHalDeviceName;
  /* 0x0088 */ char* NtBootPathName;
  /* 0x0090 */ char* NtHalPathName;
  /* 0x0098 */ char* LoadOptions;
  /* 0x00a0 */ struct _NLS_DATA_BLOCK* NlsData;
  /* 0x00a8 */ struct _ARC_DISK_INFORMATION* ArcDiskInformation;
  /* 0x00b0 */ void* OemFontFile;
  /* 0x00b8 */ struct _LOADER_PARAMETER_EXTENSION* Extension;
  union
  {
    union
    {
      /* 0x00c0 */ struct _I386_LOADER_BLOCK I386;
      /* 0x00c0 */ struct _IA64_LOADER_BLOCK Ia64;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
  /* 0x00d0 */ struct _FIRMWARE_INFORMATION_LOADER_BLOCK FirmwareInformation;
} LOADER_PARAMETER_BLOCK, *PLOADER_PARAMETER_BLOCK; /* size: 0x00f0 */

typedef struct _CONFIGURATION_COMPONENT_DATA
{
  /* 0x0000 */ struct _CONFIGURATION_COMPONENT_DATA* Parent;
  /* 0x0008 */ struct _CONFIGURATION_COMPONENT_DATA* Child;
  /* 0x0010 */ struct _CONFIGURATION_COMPONENT_DATA* Sibling;
  /* 0x0018 */ struct _CONFIGURATION_COMPONENT ComponentEntry;
  /* 0x0040 */ void* ConfigurationData;
} CONFIGURATION_COMPONENT_DATA, *PCONFIGURATION_COMPONENT_DATA; /* size: 0x0048 */

typedef union _PAT_ATTRIBUTES
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char Pat[8];
    } /* size: 0x0008 */ hw;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} PAT_ATTRIBUTES, *PPAT_ATTRIBUTES; /* size: 0x0008 */

typedef struct _NT_TIB64
{
  /* 0x0000 */ unsigned __int64 ExceptionList;
  /* 0x0008 */ unsigned __int64 StackBase;
  /* 0x0010 */ unsigned __int64 StackLimit;
  /* 0x0018 */ unsigned __int64 SubSystemTib;
  union
  {
    /* 0x0020 */ unsigned __int64 FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ unsigned __int64 ArbitraryUserPointer;
  /* 0x0030 */ unsigned __int64 Self;
} NT_TIB64, *PNT_TIB64; /* size: 0x0038 */

typedef struct _VIRTUAL_TO_PHYSICAL
{
  /* 0x0000 */ unsigned long Status;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned __int64 PdeAddress;
  /* 0x0010 */ unsigned __int64 Virtual;
  /* 0x0018 */ unsigned __int64 Physical;
} VIRTUAL_TO_PHYSICAL, *PVIRTUAL_TO_PHYSICAL; /* size: 0x0020 */

typedef struct _NETWORK_LOADER_BLOCK
{
  /* 0x0000 */ unsigned char* DHCPServerACK;
  /* 0x0008 */ unsigned long DHCPServerACKLength;
  /* 0x000c */ long Padding_560;
  /* 0x0010 */ unsigned char* BootServerReplyPacket;
  /* 0x0018 */ unsigned long BootServerReplyPacketLength;
  /* 0x001c */ long __PADDING__[1];
} NETWORK_LOADER_BLOCK, *PNETWORK_LOADER_BLOCK; /* size: 0x0020 */

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION; /* size: 0x0008 */

typedef struct _KAPC_STATE64
{
  /* 0x0000 */ struct LIST_ENTRY64 ApcListHead[2];
  /* 0x0020 */ unsigned __int64 Process;
  /* 0x0028 */ unsigned char KernelApcInProgress;
  /* 0x0029 */ unsigned char KernelApcPending;
  /* 0x002a */ unsigned char UserApcPending;
  /* 0x002b */ char __PADDING__[5];
} KAPC_STATE64, *PKAPC_STATE64; /* size: 0x0030 */

typedef struct _PNP_REPLACE_PROCESSOR_LIST
{
  /* 0x0000 */ unsigned __int64* Affinity;
  /* 0x0008 */ unsigned long GroupCount;
  /* 0x000c */ unsigned long AllocatedCount;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ unsigned long ApicIds[1];
} PNP_REPLACE_PROCESSOR_LIST, *PPNP_REPLACE_PROCESSOR_LIST; /* size: 0x0018 */

typedef struct _LEGACY_BUS_INFORMATION
{
  /* 0x0000 */ struct _GUID BusTypeGuid;
  /* 0x0010 */ enum _INTERFACE_TYPE LegacyBusType;
  /* 0x0014 */ unsigned long BusNumber;
} LEGACY_BUS_INFORMATION, *PLEGACY_BUS_INFORMATION; /* size: 0x0018 */

typedef struct _X86_KTRAP_FRAME
{
  /* 0x0000 */ unsigned long DbgEbp;
  /* 0x0004 */ unsigned long DbgEip;
  /* 0x0008 */ unsigned long DbgArgMark;
  /* 0x000c */ unsigned long DbgArgPointer;
  /* 0x0010 */ unsigned long TempSegCs;
  /* 0x0014 */ unsigned long TempEsp;
  /* 0x0018 */ unsigned long Dr0;
  /* 0x001c */ unsigned long Dr1;
  /* 0x0020 */ unsigned long Dr2;
  /* 0x0024 */ unsigned long Dr3;
  /* 0x0028 */ unsigned long Dr6;
  /* 0x002c */ unsigned long Dr7;
  /* 0x0030 */ unsigned long SegGs;
  /* 0x0034 */ unsigned long SegEs;
  /* 0x0038 */ unsigned long SegDs;
  /* 0x003c */ unsigned long Edx;
  /* 0x0040 */ unsigned long Ecx;
  /* 0x0044 */ unsigned long Eax;
  /* 0x0048 */ unsigned long PreviousPreviousMode;
  /* 0x004c */ unsigned long ExceptionList;
  /* 0x0050 */ unsigned long SegFs;
  /* 0x0054 */ unsigned long Edi;
  /* 0x0058 */ unsigned long Esi;
  /* 0x005c */ unsigned long Ebx;
  /* 0x0060 */ unsigned long Ebp;
  /* 0x0064 */ unsigned long ErrCode;
  /* 0x0068 */ unsigned long Eip;
  /* 0x006c */ unsigned long SegCs;
  /* 0x0070 */ unsigned long EFlags;
  /* 0x0074 */ unsigned long HardwareEsp;
  /* 0x0078 */ unsigned long HardwareSegSs;
  /* 0x007c */ unsigned long V86Es;
  /* 0x0080 */ unsigned long V86Ds;
  /* 0x0084 */ unsigned long V86Fs;
  /* 0x0088 */ unsigned long V86Gs;
} X86_KTRAP_FRAME, *PX86_KTRAP_FRAME; /* size: 0x008c */

typedef struct _IMAGE_SYMBOL_EX
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ long SectionNumber;
  /* 0x0010 */ unsigned short Type;
  /* 0x0012 */ unsigned char StorageClass;
  /* 0x0013 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL_EX, *PIMAGE_SYMBOL_EX; /* size: 0x0014 */

typedef struct _ETW_TP_EVENT_CALLBACK_ENQUEUE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
  /* 0x0028 */ void* TaskId;
  /* 0x0030 */ void* Callback;
  /* 0x0038 */ void* Context;
  /* 0x0040 */ void* SubProcessTag;
} ETW_TP_EVENT_CALLBACK_ENQUEUE, *PETW_TP_EVENT_CALLBACK_ENQUEUE; /* size: 0x0048 */

typedef struct _POP_THERMAL_ZONE
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned char State;
  /* 0x0011 */ unsigned char Flags;
  /* 0x0012 */ unsigned char Mode;
  /* 0x0013 */ unsigned char PendingMode;
  /* 0x0014 */ unsigned char ActivePoint;
  /* 0x0015 */ unsigned char PendingActivePoint;
  /* 0x0016 */ char Padding_561[2];
  /* 0x0018 */ long Throttle;
  /* 0x001c */ long Padding_562;
  /* 0x0020 */ unsigned __int64 LastTime;
  /* 0x0028 */ unsigned long SampleRate;
  /* 0x002c */ unsigned long LastTemp;
  /* 0x0030 */ struct _KTIMER PassiveTimer;
  /* 0x0070 */ struct _KDPC PassiveDpc;
  /* 0x00b0 */ struct _POP_ACTION_TRIGGER OverThrottled;
  /* 0x00c8 */ struct _IRP* Irp;
  /* 0x00d0 */ struct _THERMAL_INFORMATION_EX Info;
  /* 0x0148 */ union _LARGE_INTEGER InfoLastUpdateTime;
  /* 0x0150 */ struct _POP_THERMAL_ZONE_METRICS Metrics;
} POP_THERMAL_ZONE, *PPOP_THERMAL_ZONE; /* size: 0x01e8 */

typedef struct _LOAD_ASDATA_TABLE
{
  /* 0x0000 */ void* Module;
  /* 0x0008 */ unsigned short* FilePath;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ void* Handle;
  /* 0x0020 */ long RefCount;
  /* 0x0024 */ long Padding_563;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
} LOAD_ASDATA_TABLE, *PLOAD_ASDATA_TABLE; /* size: 0x0030 */

typedef struct _PERFINFO_SET_DEVICES_STATE_RET
{
  /* 0x0000 */ long Status;
} PERFINFO_SET_DEVICES_STATE_RET, *PPERFINFO_SET_DEVICES_STATE_RET; /* size: 0x0004 */

typedef struct _LAST_EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ long Padding_564[2];
  /* 0x00a0 */ struct _CONTEXT ContextRecord;
  /* 0x0570 */ unsigned long ControlPc;
  /* 0x0574 */ enum _EXCEPTION_DISPOSITION Disposition;
  /* 0x0578 */ unsigned long HandlerData[5];
  /* 0x058c */ long __PADDING__[1];
} LAST_EXCEPTION_LOG, *PLAST_EXCEPTION_LOG; /* size: 0x0590 */

typedef struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
  /* 0x0014 */ struct _GUID InterfaceClassGuid;
  /* 0x0024 */ long Padding_565;
  /* 0x0028 */ struct _UNICODE_STRING* SymbolicLinkName;
} DEVICE_INTERFACE_CHANGE_NOTIFICATION, *PDEVICE_INTERFACE_CHANGE_NOTIFICATION; /* size: 0x0030 */

typedef struct _EVENT_TRACE_EXECUTIVE_RESOURCE_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ unsigned long ReleaseSamplingRate;
  /* 0x0008 */ unsigned long ContentionSamplingRate;
  /* 0x000c */ unsigned long NumberOfExcessiveTimeouts;
} EVENT_TRACE_EXECUTIVE_RESOURCE_INFORMATION, *PEVENT_TRACE_EXECUTIVE_RESOURCE_INFORMATION; /* size: 0x0010 */

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
{
  /* 0x0000 */ unsigned long PropagationCookie;
  /* 0x0004 */ struct _GUID UOW;
  /* 0x0014 */ struct _GUID TmIdentity;
  /* 0x0024 */ unsigned long BufferLength;
} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT; /* size: 0x0028 */

typedef struct _DISPATCHER_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ControlPc;
  /* 0x0008 */ unsigned __int64 ImageBase;
  /* 0x0010 */ struct _RUNTIME_FUNCTION* FunctionEntry;
  /* 0x0018 */ unsigned __int64 EstablisherFrame;
  /* 0x0020 */ unsigned __int64 TargetIp;
  /* 0x0028 */ struct _CONTEXT* ContextRecord;
  /* 0x0030 */ void* LanguageHandler /* function */;
  /* 0x0038 */ void* HandlerData;
  /* 0x0040 */ struct _UNWIND_HISTORY_TABLE* HistoryTable;
  /* 0x0048 */ unsigned long ScopeIndex;
  /* 0x004c */ unsigned long Fill0;
} DISPATCHER_CONTEXT, *PDISPATCHER_CONTEXT; /* size: 0x0050 */

typedef union _AMD_L3_CACHE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct
    {
      /* 0x0000 */ unsigned char LineSize;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char LinesPerTag : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char Associativity : 4; /* bit position: 4 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short Reserved : 2; /* bit position: 0 */
        /* 0x0002 */ unsigned short Size : 14; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} AMD_L3_CACHE_INFO, *PAMD_L3_CACHE_INFO; /* size: 0x0004 */

typedef struct _IDE_IO_CONTROL
{
  /* 0x0000 */ unsigned long HeaderLength;
  /* 0x0004 */ unsigned char Signature[8];
  /* 0x000c */ unsigned long Timeout;
  /* 0x0010 */ unsigned long ControlCode;
  /* 0x0014 */ unsigned long ReturnStatus;
  /* 0x0018 */ unsigned long DataLength;
} IDE_IO_CONTROL, *PIDE_IO_CONTROL; /* size: 0x001c */

struct tagWNODE_METHOD_ITEM
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
  /* 0x0030 */ unsigned long OffsetInstanceName;
  /* 0x0034 */ unsigned long InstanceIndex;
  /* 0x0038 */ unsigned long MethodId;
  /* 0x003c */ unsigned long DataBlockOffset;
  /* 0x0040 */ unsigned long SizeDataBlock;
  union
  {
    /* 0x0044 */ unsigned char* VariableData /* zero-length array */;
    /* 0x0044 */ long __PADDING__[1];
  }; /* size: 0x0004 */
}; /* size: 0x0048 */

typedef struct _SYSTEM_PROCESSOR_PERF_PARK_INFORMATION
{
  /* 0x0000 */ unsigned long ProcessorStateFlags;
  /* 0x0004 */ unsigned long Frequency;
  /* 0x0008 */ unsigned long PercentFrequency;
  /* 0x000c */ unsigned long Parked;
} SYSTEM_PROCESSOR_PERF_PARK_INFORMATION, *PSYSTEM_PROCESSOR_PERF_PARK_INFORMATION; /* size: 0x0010 */

typedef struct _REASSIGN_BLOCKS
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ unsigned long BlockNumber[1];
} REASSIGN_BLOCKS, *PREASSIGN_BLOCKS; /* size: 0x0008 */

typedef struct _KGROUP
{
  /* 0x0000 */ struct _GROUP_AFFINITY Affinity;
  /* 0x0010 */ unsigned char Capacity;
  /* 0x0011 */ char __PADDING__[7];
} KGROUP, *PKGROUP; /* size: 0x0018 */

typedef struct _NEGOTIATE_PACKAGE_PREFIXES
{
  /* 0x0000 */ unsigned long MessageType;
  /* 0x0004 */ unsigned long PrefixCount;
  /* 0x0008 */ unsigned long Offset;
  /* 0x000c */ unsigned long Pad;
} NEGOTIATE_PACKAGE_PREFIXES, *PNEGOTIATE_PACKAGE_PREFIXES; /* size: 0x0010 */

typedef union _KGDT_LIMIT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short LimitLow;
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short LimitHigh : 4; /* bit position: 0 */
        /* 0x0002 */ unsigned short MustBeZero : 12; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long Limit;
  }; /* size: 0x0004 */
} KGDT_LIMIT, *PKGDT_LIMIT; /* size: 0x0004 */

typedef struct _TEB64
{
  /* 0x0000 */ struct _NT_TIB64 NtTib;
  /* 0x0038 */ unsigned __int64 EnvironmentPointer;
  /* 0x0040 */ struct _CLIENT_ID64 ClientId;
  /* 0x0050 */ unsigned __int64 ActiveRpcHandle;
  /* 0x0058 */ unsigned __int64 ThreadLocalStoragePointer;
  /* 0x0060 */ unsigned __int64 ProcessEnvironmentBlock;
  /* 0x0068 */ unsigned long LastErrorValue;
  /* 0x006c */ unsigned long CountOfOwnedCriticalSections;
  /* 0x0070 */ unsigned __int64 CsrClientThread;
  /* 0x0078 */ unsigned __int64 Win32ThreadInfo;
  /* 0x0080 */ unsigned long User32Reserved[26];
  /* 0x00e8 */ unsigned long UserReserved[5];
  /* 0x00fc */ long Padding_566;
  /* 0x0100 */ unsigned __int64 WOW32Reserved;
  /* 0x0108 */ unsigned long CurrentLocale;
  /* 0x010c */ unsigned long FpSoftwareStatusRegister;
  /* 0x0110 */ unsigned __int64 SystemReserved1[54];
  /* 0x02c0 */ long ExceptionCode;
  /* 0x02c4 */ long Padding_567;
  /* 0x02c8 */ unsigned __int64 ActivationContextStackPointer;
  /* 0x02d0 */ unsigned char SpareBytes[24];
  /* 0x02e8 */ unsigned long TxFsContext;
  /* 0x02ec */ long Padding_568;
  /* 0x02f0 */ struct _GDI_TEB_BATCH64 GdiTebBatch;
  /* 0x07d8 */ struct _CLIENT_ID64 RealClientId;
  /* 0x07e8 */ unsigned __int64 GdiCachedProcessHandle;
  /* 0x07f0 */ unsigned long GdiClientPID;
  /* 0x07f4 */ unsigned long GdiClientTID;
  /* 0x07f8 */ unsigned __int64 GdiThreadLocalInfo;
  /* 0x0800 */ unsigned __int64 Win32ClientInfo[62];
  /* 0x09f0 */ unsigned __int64 glDispatchTable[233];
  /* 0x1138 */ unsigned __int64 glReserved1[29];
  /* 0x1220 */ unsigned __int64 glReserved2;
  /* 0x1228 */ unsigned __int64 glSectionInfo;
  /* 0x1230 */ unsigned __int64 glSection;
  /* 0x1238 */ unsigned __int64 glTable;
  /* 0x1240 */ unsigned __int64 glCurrentRC;
  /* 0x1248 */ unsigned __int64 glContext;
  /* 0x1250 */ unsigned long LastStatusValue;
  /* 0x1254 */ long Padding_569;
  /* 0x1258 */ struct _STRING64 StaticUnicodeString;
  /* 0x1268 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x1472 */ char Padding_570[6];
  /* 0x1478 */ unsigned __int64 DeallocationStack;
  /* 0x1480 */ unsigned __int64 TlsSlots[64];
  /* 0x1680 */ struct LIST_ENTRY64 TlsLinks;
  /* 0x1690 */ unsigned __int64 Vdm;
  /* 0x1698 */ unsigned __int64 ReservedForNtRpc;
  /* 0x16a0 */ unsigned __int64 DbgSsReserved[2];
  /* 0x16b0 */ unsigned long HardErrorMode;
  /* 0x16b4 */ long Padding_571;
  /* 0x16b8 */ unsigned __int64 Instrumentation[11];
  /* 0x1710 */ struct _GUID ActivityId;
  /* 0x1720 */ unsigned __int64 SubProcessTag;
  /* 0x1728 */ unsigned __int64 EtwLocalData;
  /* 0x1730 */ unsigned __int64 EtwTraceData;
  /* 0x1738 */ unsigned __int64 WinSockData;
  /* 0x1740 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x1744 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x1744 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x1744 */ unsigned char ReservedPad0;
      /* 0x1745 */ unsigned char ReservedPad1;
      /* 0x1746 */ unsigned char ReservedPad2;
      /* 0x1747 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x1748 */ unsigned long GuaranteedStackBytes;
  /* 0x174c */ long Padding_572;
  /* 0x1750 */ unsigned __int64 ReservedForPerf;
  /* 0x1758 */ unsigned __int64 ReservedForOle;
  /* 0x1760 */ unsigned long WaitingOnLoaderLock;
  /* 0x1764 */ long Padding_573;
  /* 0x1768 */ unsigned __int64 SavedPriorityState;
  /* 0x1770 */ unsigned __int64 SoftPatchPtr1;
  /* 0x1778 */ unsigned __int64 ThreadPoolData;
  /* 0x1780 */ unsigned __int64 TlsExpansionSlots;
  /* 0x1788 */ unsigned __int64 DeallocationBStore;
  /* 0x1790 */ unsigned __int64 BStoreLimit;
  /* 0x1798 */ unsigned long MuiGeneration;
  /* 0x179c */ unsigned long IsImpersonating;
  /* 0x17a0 */ unsigned __int64 NlsCache;
  /* 0x17a8 */ unsigned __int64 pShimData;
  /* 0x17b0 */ unsigned long HeapVirtualAffinity;
  /* 0x17b4 */ long Padding_574;
  /* 0x17b8 */ unsigned __int64 CurrentTransactionHandle;
  /* 0x17c0 */ unsigned __int64 ActiveFrame;
  /* 0x17c8 */ unsigned __int64 FlsData;
  /* 0x17d0 */ unsigned __int64 PreferredLanguages;
  /* 0x17d8 */ unsigned __int64 UserPrefLanguages;
  /* 0x17e0 */ unsigned __int64 MergedPrefLanguages;
  /* 0x17e8 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x17ec */ volatile unsigned short CrossTebFlags;
    /* 0x17ec */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x17ee */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x17ee */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x17ee */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x17ee */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x17ee */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x17ee */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x17ee */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x17ee */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x17ee */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x17ee */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x17ee */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x17ee */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x17ee */ unsigned short SpareSameTebBits : 5; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x17f0 */ unsigned __int64 TxnScopeEnterCallback;
  /* 0x17f8 */ unsigned __int64 TxnScopeExitCallback;
  /* 0x1800 */ unsigned __int64 TxnScopeContext;
  /* 0x1808 */ unsigned long LockCount;
  /* 0x180c */ unsigned long SpareUlong0;
  /* 0x1810 */ unsigned __int64 ResourceRetValue;
} TEB64, *PTEB64; /* size: 0x1818 */

typedef struct _WHEA_XPF_MCA_SECTION
{
  /* 0x0000 */ unsigned long VersionNumber;
  /* 0x0004 */ enum _WHEA_CPU_VENDOR CpuVendor;
  /* 0x0008 */ union _LARGE_INTEGER Timestamp;
  /* 0x0010 */ unsigned long ProcessorNumber;
  /* 0x0014 */ union _MCG_STATUS GlobalStatus;
  /* 0x001c */ unsigned __int64 InstructionPointer;
  /* 0x0024 */ unsigned long BankNumber;
  /* 0x0028 */ union _MCI_STATUS Status;
  /* 0x0030 */ unsigned __int64 Address;
  /* 0x0038 */ unsigned __int64 Misc;
  /* 0x0040 */ unsigned long ExtendedRegisterCount;
  /* 0x0044 */ unsigned long Reserved2;
  /* 0x0048 */ unsigned __int64 ExtendedRegisters[24];
} WHEA_XPF_MCA_SECTION, *PWHEA_XPF_MCA_SECTION; /* size: 0x0108 */

typedef struct _OBJECT_HEADER
{
  /* 0x0000 */ __int64 PointerCount;
  union
  {
    /* 0x0008 */ __int64 HandleCount;
    /* 0x0008 */ void* NextToFree;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0018 */ unsigned char TypeIndex;
  /* 0x0019 */ unsigned char TraceFlags;
  /* 0x001a */ unsigned char InfoMask;
  /* 0x001b */ unsigned char Flags;
  /* 0x001c */ long Padding_575;
  union
  {
    /* 0x0020 */ struct _OBJECT_CREATE_INFORMATION* ObjectCreateInfo;
    /* 0x0020 */ void* QuotaBlockCharged;
  }; /* size: 0x0008 */
  /* 0x0028 */ void* SecurityDescriptor;
  /* 0x0030 */ struct _QUAD Body;
} OBJECT_HEADER, *POBJECT_HEADER; /* size: 0x0038 */

typedef struct _FILE_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_576;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ wchar_t FileName[1];
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION; /* size: 0x0060 */

typedef struct _OBJECT_TYPE
{
  /* 0x0000 */ struct _LIST_ENTRY TypeList;
  /* 0x0010 */ struct _UNICODE_STRING Name;
  /* 0x0020 */ void* DefaultObject;
  /* 0x0028 */ unsigned char Index;
  /* 0x0029 */ char Padding_577[3];
  /* 0x002c */ unsigned long TotalNumberOfObjects;
  /* 0x0030 */ unsigned long TotalNumberOfHandles;
  /* 0x0034 */ unsigned long HighWaterNumberOfObjects;
  /* 0x0038 */ unsigned long HighWaterNumberOfHandles;
  /* 0x003c */ long Padding_578;
  /* 0x0040 */ struct _OBJECT_TYPE_INITIALIZER TypeInfo;
  /* 0x00b0 */ struct _EX_PUSH_LOCK TypeLock;
  /* 0x00b8 */ unsigned long Key;
  /* 0x00bc */ long Padding_579;
  /* 0x00c0 */ struct _LIST_ENTRY CallbackList;
} OBJECT_TYPE, *POBJECT_TYPE; /* size: 0x00d0 */

typedef struct _SE_CM_VALUE_AUDIT
{
  /* 0x0000 */ struct _SE_CM_VALUE_AUDIT_DATA OldValue;
  /* 0x0010 */ struct _SE_CM_VALUE_AUDIT_DATA NewValue;
} SE_CM_VALUE_AUDIT, *PSE_CM_VALUE_AUDIT; /* size: 0x0020 */

typedef struct _FILEOFFSET_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Offset : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} FILEOFFSET_INFORMATION, *PFILEOFFSET_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned long TimeIncrement;
  /* 0x0008 */ unsigned char Enable;
  /* 0x0009 */ char __PADDING__[3];
} SYSTEM_QUERY_TIME_ADJUST_INFORMATION, *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION; /* size: 0x000c */

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NETWORK_PHYSICAL_NAME_INFORMATION, *PFILE_NETWORK_PHYSICAL_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _KEY_HANDLE_TAGS_INFORMATION
{
  /* 0x0000 */ unsigned long HandleTags;
} KEY_HANDLE_TAGS_INFORMATION, *PKEY_HANDLE_TAGS_INFORMATION; /* size: 0x0004 */

typedef struct _IMAGE_IMPORT_BY_NAME
{
  /* 0x0000 */ unsigned short Hint;
  /* 0x0002 */ unsigned char Name[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME; /* size: 0x0004 */

typedef struct _TEB32
{
  /* 0x0000 */ struct _NT_TIB32 NtTib;
  /* 0x001c */ unsigned long EnvironmentPointer;
  /* 0x0020 */ struct _CLIENT_ID32 ClientId;
  /* 0x0028 */ unsigned long ActiveRpcHandle;
  /* 0x002c */ unsigned long ThreadLocalStoragePointer;
  /* 0x0030 */ unsigned long ProcessEnvironmentBlock;
  /* 0x0034 */ unsigned long LastErrorValue;
  /* 0x0038 */ unsigned long CountOfOwnedCriticalSections;
  /* 0x003c */ unsigned long CsrClientThread;
  /* 0x0040 */ unsigned long Win32ThreadInfo;
  /* 0x0044 */ unsigned long User32Reserved[26];
  /* 0x00ac */ unsigned long UserReserved[5];
  /* 0x00c0 */ unsigned long WOW32Reserved;
  /* 0x00c4 */ unsigned long CurrentLocale;
  /* 0x00c8 */ unsigned long FpSoftwareStatusRegister;
  /* 0x00cc */ unsigned long SystemReserved1[54];
  /* 0x01a4 */ long ExceptionCode;
  /* 0x01a8 */ unsigned long ActivationContextStackPointer;
  /* 0x01ac */ unsigned char SpareBytes[36];
  /* 0x01d0 */ unsigned long TxFsContext;
  /* 0x01d4 */ struct _GDI_TEB_BATCH32 GdiTebBatch;
  /* 0x06b4 */ struct _CLIENT_ID32 RealClientId;
  /* 0x06bc */ unsigned long GdiCachedProcessHandle;
  /* 0x06c0 */ unsigned long GdiClientPID;
  /* 0x06c4 */ unsigned long GdiClientTID;
  /* 0x06c8 */ unsigned long GdiThreadLocalInfo;
  /* 0x06cc */ unsigned long Win32ClientInfo[62];
  /* 0x07c4 */ unsigned long glDispatchTable[233];
  /* 0x0b68 */ unsigned long glReserved1[29];
  /* 0x0bdc */ unsigned long glReserved2;
  /* 0x0be0 */ unsigned long glSectionInfo;
  /* 0x0be4 */ unsigned long glSection;
  /* 0x0be8 */ unsigned long glTable;
  /* 0x0bec */ unsigned long glCurrentRC;
  /* 0x0bf0 */ unsigned long glContext;
  /* 0x0bf4 */ unsigned long LastStatusValue;
  /* 0x0bf8 */ struct _STRING32 StaticUnicodeString;
  /* 0x0c00 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x0e0a */ char Padding_580[2];
  /* 0x0e0c */ unsigned long DeallocationStack;
  /* 0x0e10 */ unsigned long TlsSlots[64];
  /* 0x0f10 */ struct LIST_ENTRY32 TlsLinks;
  /* 0x0f18 */ unsigned long Vdm;
  /* 0x0f1c */ unsigned long ReservedForNtRpc;
  /* 0x0f20 */ unsigned long DbgSsReserved[2];
  /* 0x0f28 */ unsigned long HardErrorMode;
  /* 0x0f2c */ unsigned long Instrumentation[9];
  /* 0x0f50 */ struct _GUID ActivityId;
  /* 0x0f60 */ unsigned long SubProcessTag;
  /* 0x0f64 */ unsigned long EtwLocalData;
  /* 0x0f68 */ unsigned long EtwTraceData;
  /* 0x0f6c */ unsigned long WinSockData;
  /* 0x0f70 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x0f74 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x0f74 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x0f74 */ unsigned char ReservedPad0;
      /* 0x0f75 */ unsigned char ReservedPad1;
      /* 0x0f76 */ unsigned char ReservedPad2;
      /* 0x0f77 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0f78 */ unsigned long GuaranteedStackBytes;
  /* 0x0f7c */ unsigned long ReservedForPerf;
  /* 0x0f80 */ unsigned long ReservedForOle;
  /* 0x0f84 */ unsigned long WaitingOnLoaderLock;
  /* 0x0f88 */ unsigned long SavedPriorityState;
  /* 0x0f8c */ unsigned long SoftPatchPtr1;
  /* 0x0f90 */ unsigned long ThreadPoolData;
  /* 0x0f94 */ unsigned long TlsExpansionSlots;
  /* 0x0f98 */ unsigned long MuiGeneration;
  /* 0x0f9c */ unsigned long IsImpersonating;
  /* 0x0fa0 */ unsigned long NlsCache;
  /* 0x0fa4 */ unsigned long pShimData;
  /* 0x0fa8 */ unsigned long HeapVirtualAffinity;
  /* 0x0fac */ unsigned long CurrentTransactionHandle;
  /* 0x0fb0 */ unsigned long ActiveFrame;
  /* 0x0fb4 */ unsigned long FlsData;
  /* 0x0fb8 */ unsigned long PreferredLanguages;
  /* 0x0fbc */ unsigned long UserPrefLanguages;
  /* 0x0fc0 */ unsigned long MergedPrefLanguages;
  /* 0x0fc4 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x0fc8 */ volatile unsigned short CrossTebFlags;
    /* 0x0fc8 */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0fca */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x0fca */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x0fca */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x0fca */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x0fca */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x0fca */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x0fca */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x0fca */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x0fca */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x0fca */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x0fca */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x0fca */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x0fca */ unsigned short SpareSameTebBits : 5; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x0fcc */ unsigned long TxnScopeEnterCallback;
  /* 0x0fd0 */ unsigned long TxnScopeExitCallback;
  /* 0x0fd4 */ unsigned long TxnScopeContext;
  /* 0x0fd8 */ unsigned long LockCount;
  /* 0x0fdc */ unsigned long SpareUlong0;
  /* 0x0fe0 */ unsigned long ResourceRetValue;
} TEB32, *PTEB32; /* size: 0x0fe4 */

typedef struct _CSTRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_581;
  /* 0x0008 */ const char* Buffer;
} CSTRING, *PCSTRING; /* size: 0x0010 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION
{
  /* 0x0000 */ void* Section;
  /* 0x0008 */ void* MappedBase;
  /* 0x0010 */ void* ImageBase;
  /* 0x0018 */ unsigned long ImageSize;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ unsigned short LoadOrderIndex;
  /* 0x0022 */ unsigned short InitOrderIndex;
  /* 0x0024 */ unsigned short LoadCount;
  /* 0x0026 */ unsigned short OffsetToFileName;
  /* 0x0028 */ unsigned char FullPathName[256];
} RTL_PROCESS_MODULE_INFORMATION, *PRTL_PROCESS_MODULE_INFORMATION; /* size: 0x0128 */

typedef struct _OBJECT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_582;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_583;
  /* 0x0020 */ void* SecurityDescriptor;
  /* 0x0028 */ void* SecurityQualityOfService;
} OBJECT_ATTRIBUTES, *POBJECT_ATTRIBUTES; /* size: 0x0030 */

typedef struct _LINK_TRACKING_INFORMATION
{
  /* 0x0000 */ enum _LINK_TRACKING_INFORMATION_TYPE Type;
  /* 0x0004 */ unsigned char VolumeId[16];
} LINK_TRACKING_INFORMATION, *PLINK_TRACKING_INFORMATION; /* size: 0x0014 */

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_IO_COMPLETION_NOTIFICATION_INFORMATION, *PFILE_IO_COMPLETION_NOTIFICATION_INFORMATION; /* size: 0x0004 */

typedef struct _COUNTED_REASON_CONTEXT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    struct
    {
      /* 0x0008 */ struct _UNICODE_STRING ResourceFileName;
      /* 0x0018 */ unsigned short ResourceReasonId;
      /* 0x001a */ char Padding_584[2];
      /* 0x001c */ unsigned long StringCount;
      /* 0x0020 */ struct _UNICODE_STRING* ReasonStrings;
    }; /* size: 0x001e */
    struct
    {
      /* 0x0008 */ struct _UNICODE_STRING SimpleString;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} COUNTED_REASON_CONTEXT, *PCOUNTED_REASON_CONTEXT; /* size: 0x0028 */

typedef struct _CONFIGURATION_INFORMATION
{
  /* 0x0000 */ unsigned long DiskCount;
  /* 0x0004 */ unsigned long FloppyCount;
  /* 0x0008 */ unsigned long CdRomCount;
  /* 0x000c */ unsigned long TapeCount;
  /* 0x0010 */ unsigned long ScsiPortCount;
  /* 0x0014 */ unsigned long SerialCount;
  /* 0x0018 */ unsigned long ParallelCount;
  /* 0x001c */ unsigned char AtDiskPrimaryAddressClaimed;
  /* 0x001d */ unsigned char AtDiskSecondaryAddressClaimed;
  /* 0x001e */ char Padding_585[2];
  /* 0x0020 */ unsigned long Version;
  /* 0x0024 */ unsigned long MediumChangerCount;
} CONFIGURATION_INFORMATION, *PCONFIGURATION_INFORMATION; /* size: 0x0028 */

typedef struct _BATTERY_STATUS
{
  /* 0x0000 */ unsigned long PowerState;
  /* 0x0004 */ unsigned long Capacity;
  /* 0x0008 */ unsigned long Voltage;
  /* 0x000c */ long Current;
} BATTERY_STATUS, *PBATTERY_STATUS; /* size: 0x0010 */

typedef struct _BATTERY_WAIT_STATUS
{
  /* 0x0000 */ unsigned long BatteryTag;
  /* 0x0004 */ unsigned long Timeout;
  /* 0x0008 */ unsigned long PowerState;
  /* 0x000c */ unsigned long LowCapacity;
  /* 0x0010 */ unsigned long HighCapacity;
} BATTERY_WAIT_STATUS, *PBATTERY_WAIT_STATUS; /* size: 0x0014 */

struct _TP_WORK;

struct STARTING_LCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
}; /* size: 0x0008 */

typedef struct _DBGKD_WRITE_MEMORY32
{
  /* 0x0000 */ unsigned long TargetBaseAddress;
  /* 0x0004 */ unsigned long TransferCount;
  /* 0x0008 */ unsigned long ActualBytesWritten;
} DBGKD_WRITE_MEMORY32, *PDBGKD_WRITE_MEMORY32; /* size: 0x000c */

typedef struct _DBGKD_GET_INTERNAL_BREAKPOINT32
{
  /* 0x0000 */ unsigned long BreakpointAddress;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Calls;
  /* 0x000c */ unsigned long MaxCallsPerPeriod;
  /* 0x0010 */ unsigned long MinInstructions;
  /* 0x0014 */ unsigned long MaxInstructions;
  /* 0x0018 */ unsigned long TotalInstructions;
} DBGKD_GET_INTERNAL_BREAKPOINT32, *PDBGKD_GET_INTERNAL_BREAKPOINT32; /* size: 0x001c */

typedef struct _DBGKD_MANIPULATE_STATE32
{
  /* 0x0000 */ unsigned long ApiNumber;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  /* 0x0008 */ long ReturnStatus;
  union
  {
    union
    {
      /* 0x000c */ struct _DBGKD_READ_MEMORY32 ReadMemory;
      /* 0x000c */ struct _DBGKD_WRITE_MEMORY32 WriteMemory;
      /* 0x000c */ struct _DBGKD_READ_MEMORY64 ReadMemory64;
      /* 0x000c */ struct _DBGKD_WRITE_MEMORY64 WriteMemory64;
      /* 0x000c */ struct _DBGKD_GET_CONTEXT GetContext;
      /* 0x000c */ struct _DBGKD_SET_CONTEXT SetContext;
      /* 0x000c */ struct _DBGKD_WRITE_BREAKPOINT32 WriteBreakPoint;
      /* 0x000c */ struct _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint;
      /* 0x000c */ struct _DBGKD_CONTINUE Continue;
      /* 0x000c */ struct _DBGKD_CONTINUE2 Continue2;
      /* 0x000c */ struct _DBGKD_READ_WRITE_IO32 ReadWriteIo;
      /* 0x000c */ struct _DBGKD_READ_WRITE_IO_EXTENDED32 ReadWriteIoExtended;
      /* 0x000c */ struct _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls;
      /* 0x000c */ struct _DBGKD_SET_SPECIAL_CALL32 SetSpecialCall;
      /* 0x000c */ struct _DBGKD_SET_INTERNAL_BREAKPOINT32 SetInternalBreakpoint;
      /* 0x000c */ struct _DBGKD_GET_INTERNAL_BREAKPOINT32 GetInternalBreakpoint;
      /* 0x000c */ struct _DBGKD_GET_VERSION32 GetVersion32;
      /* 0x000c */ struct _DBGKD_BREAKPOINTEX BreakPointEx;
      /* 0x000c */ struct _DBGKD_READ_WRITE_MSR ReadWriteMsr;
      /* 0x000c */ struct _DBGKD_SEARCH_MEMORY SearchMemory;
    }; /* size: 0x0028 */
  } /* size: 0x0028 */ u;
} DBGKD_MANIPULATE_STATE32, *PDBGKD_MANIPULATE_STATE32; /* size: 0x0034 */

typedef struct _WMI_IMAGELOAD_INFORMATION32
{
  /* 0x0000 */ unsigned int ImageBase32;
  /* 0x0004 */ unsigned int ImageSize32;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ unsigned long ImageChecksum;
  /* 0x0010 */ unsigned long TimeDateStamp;
  /* 0x0014 */ unsigned long Reserved0;
  /* 0x0018 */ unsigned int DefaultBase32;
  /* 0x001c */ unsigned long Reserved1;
  /* 0x0020 */ unsigned long Reserved2;
  /* 0x0024 */ unsigned long Reserved3;
  /* 0x0028 */ unsigned long Reserved4;
  /* 0x002c */ wchar_t FileName[1];
  /* 0x002e */ char __PADDING__[2];
} WMI_IMAGELOAD_INFORMATION32, *PWMI_IMAGELOAD_INFORMATION32; /* size: 0x0030 */

typedef struct _PROCESSOR_IDLE_STATE_EX
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0001 */ char Padding_586[3];
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ void* Context;
  /* 0x0018 */ void* Check /* function */;
  /* 0x0020 */ void* Handler /* function */;
  /* 0x0028 */ unsigned __int64 HvConfig;
} PROCESSOR_IDLE_STATE_EX, *PPROCESSOR_IDLE_STATE_EX; /* size: 0x0030 */

typedef union _WHEA_GENERIC_ERROR_BLOCKSTATUS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long UncorrectableError : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long CorrectableError : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long MultipleUncorrectableErrors : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long MultipleCorrectableErrors : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ErrorDataEntryCount : 10; /* bit position: 4 */
      /* 0x0000 */ unsigned long Reserved : 18; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEA_GENERIC_ERROR_BLOCKSTATUS, *PWHEA_GENERIC_ERROR_BLOCKSTATUS; /* size: 0x0004 */

typedef struct _WHEA_GENERIC_ERROR
{
  /* 0x0000 */ union _WHEA_GENERIC_ERROR_BLOCKSTATUS BlockStatus;
  /* 0x0004 */ unsigned long RawDataOffset;
  /* 0x0008 */ unsigned long RawDataLength;
  /* 0x000c */ unsigned long DataLength;
  /* 0x0010 */ enum _WHEA_ERROR_SEVERITY ErrorSeverity;
  /* 0x0014 */ unsigned char Data[1];
} WHEA_GENERIC_ERROR, *PWHEA_GENERIC_ERROR; /* size: 0x0015 */

typedef struct _HOTPATCH_HOOK_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 TargetAddress;
  /* 0x0008 */ unsigned __int64 MappedAddress;
  /* 0x0010 */ unsigned long CodeOffset;
  /* 0x0014 */ unsigned long CodeSize;
  /* 0x0018 */ unsigned long OrigCodeOffset;
  /* 0x001c */ unsigned long ValidationOffset;
  /* 0x0020 */ unsigned long ValidationSize;
  /* 0x0024 */ long __PADDING__[1];
} HOTPATCH_HOOK_DESCRIPTOR, *PHOTPATCH_HOOK_DESCRIPTOR; /* size: 0x0028 */

typedef struct _ACCESS_DENIED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_FS_VOLUME_FLAGS_INFORMATION, *PFILE_FS_VOLUME_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _SE_ADT_PARAMETER_ARRAY
{
  /* 0x0000 */ unsigned long CategoryId;
  /* 0x0004 */ unsigned long AuditId;
  /* 0x0008 */ unsigned long ParameterCount;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ unsigned short FlatSubCategoryId;
  /* 0x0012 */ unsigned short Type;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ struct _SE_ADT_PARAMETER_ARRAY_ENTRY Parameters[32];
} SE_ADT_PARAMETER_ARRAY, *PSE_ADT_PARAMETER_ARRAY; /* size: 0x0418 */

typedef struct _HAL_DP_REPLACE_PARAMETERS
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_587;
  /* 0x0008 */ struct _PNP_REPLACE_PROCESSOR_LIST* TargetProcessors;
  /* 0x0010 */ struct _PNP_REPLACE_PROCESSOR_LIST* SpareProcessors;
} HAL_DP_REPLACE_PARAMETERS, *PHAL_DP_REPLACE_PARAMETERS; /* size: 0x0018 */

typedef struct _TARGET_DEVICE_CUSTOM_NOTIFICATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
  /* 0x0014 */ long Padding_588;
  /* 0x0018 */ struct _FILE_OBJECT* FileObject;
  /* 0x0020 */ long NameBufferOffset;
  /* 0x0024 */ unsigned char CustomDataBuffer[1];
  /* 0x0025 */ char __PADDING__[3];
} TARGET_DEVICE_CUSTOM_NOTIFICATION, *PTARGET_DEVICE_CUSTOM_NOTIFICATION; /* size: 0x0028 */

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long FuncStart;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long PrologLen : 8; /* bit position: 0 */
    /* 0x0004 */ unsigned long FuncLen : 22; /* bit position: 8 */
    /* 0x0004 */ unsigned long ThirtyTwoBit : 1; /* bit position: 30 */
    /* 0x0004 */ unsigned long ExceptionFlag : 1; /* bit position: 31 */
  }; /* bitfield */
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

typedef struct _POLICY_DOMAIN_EFS_INFO
{
  /* 0x0000 */ unsigned long InfoLength;
  /* 0x0004 */ long Padding_589;
  /* 0x0008 */ unsigned char* EfsBlob;
} POLICY_DOMAIN_EFS_INFO, *PPOLICY_DOMAIN_EFS_INFO; /* size: 0x0010 */

typedef struct _TRANSLATE_VIRTUAL_TO_PHYSICAL
{
  /* 0x0000 */ unsigned __int64 Virtual;
  /* 0x0008 */ unsigned __int64 Physical;
} TRANSLATE_VIRTUAL_TO_PHYSICAL, *PTRANSLATE_VIRTUAL_TO_PHYSICAL; /* size: 0x0010 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_590;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
  /* 0x0028 */ void* Extra1;
  /* 0x0030 */ void* Extra2;
  /* 0x0038 */ void* Extra3;
  /* 0x0040 */ void* Extra4;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED; /* size: 0x0048 */

struct ANON_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
}; /* size: 0x0020 */

typedef struct _MONITOR_MESSAGE
{
  /* 0x0000 */ enum MONITOR_MESSAGE_TYPE Type;
  /* 0x0004 */ unsigned long Value;
} MONITOR_MESSAGE, *PMONITOR_MESSAGE; /* size: 0x0008 */

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastVirtualClock;
  /* 0x0008 */ unsigned __int64 LastRedoLsn;
  /* 0x0010 */ unsigned __int64 HighestRecoveryLsn;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} TXFS_ROLLFORWARD_REDO_INFORMATION, *PTXFS_ROLLFORWARD_REDO_INFORMATION; /* size: 0x0020 */

typedef struct _WMI_IDE_CHANNEL_RECORD
{
  /* 0x0000 */ unsigned long TargetId;
  /* 0x0004 */ unsigned long DeviceType;
  /* 0x0008 */ unsigned long DeviceTimingMode;
  /* 0x000c */ unsigned long LocationInformationLen;
  /* 0x0010 */ wchar_t LocationInformation[1];
  /* 0x0012 */ char __PADDING__[2];
} WMI_IDE_CHANNEL_RECORD, *PWMI_IDE_CHANNEL_RECORD; /* size: 0x0014 */

typedef struct _ETW_HEAP_EVENT_ALLOC
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ unsigned __int64 Size;
  /* 0x0030 */ void* Address;
  /* 0x0038 */ unsigned long Source;
} ETW_HEAP_EVENT_ALLOC, *PETW_HEAP_EVENT_ALLOC; /* size: 0x003c */

typedef struct _KSPIN_LOCK_QUEUE32
{
  /* 0x0000 */ unsigned long Next;
  /* 0x0004 */ unsigned long Lock;
} KSPIN_LOCK_QUEUE32, *PKSPIN_LOCK_QUEUE32; /* size: 0x0008 */

typedef struct _FILE_FS_FULL_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER CallerAvailableAllocationUnits;
  /* 0x0010 */ union _LARGE_INTEGER ActualAvailableAllocationUnits;
  /* 0x0018 */ unsigned long SectorsPerAllocationUnit;
  /* 0x001c */ unsigned long BytesPerSector;
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_PREFETCH_OPTIONS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long LowerPriority : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualOffsets : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long TrickleIOs : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Spare : 5; /* bit position: 3 */
    /* 0x0000 */ unsigned long ScenarioType : 8; /* bit position: 8 */
  }; /* bitfield */
} SYSTEM_PREFETCH_OPTIONS, *PSYSTEM_PREFETCH_OPTIONS; /* size: 0x0004 */

typedef struct _FILE_POSITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CurrentByteOffset;
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION; /* size: 0x0008 */

typedef union _VIA_L1_CACHE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Ulong;
    struct
    {
      /* 0x0000 */ unsigned char LineSize;
      /* 0x0001 */ unsigned char LinesPerTag;
      /* 0x0002 */ unsigned char Associativity;
      /* 0x0003 */ unsigned char Size;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} VIA_L1_CACHE_INFO, *PVIA_L1_CACHE_INFO; /* size: 0x0004 */

typedef struct _X86_LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} X86_LDT_ENTRY, *PX86_LDT_ENTRY; /* size: 0x0008 */

typedef struct _CPU_CONFIG_RECORD
{
  /* 0x0000 */ unsigned long ProcessorSpeed;
  /* 0x0004 */ unsigned long NumberOfProcessors;
  /* 0x0008 */ unsigned long MemorySize;
  /* 0x000c */ unsigned long PageSize;
  /* 0x0010 */ unsigned long AllocationGranularity;
  /* 0x0014 */ wchar_t ComputerName[256];
  /* 0x0214 */ wchar_t DomainName[134];
  /* 0x0320 */ unsigned __int64 HyperThreadingFlag;
} CPU_CONFIG_RECORD, *PCPU_CONFIG_RECORD; /* size: 0x0328 */

typedef struct _REG_POST_OPERATION_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ long Status;
  /* 0x000c */ long Padding_591;
  /* 0x0010 */ void* PreInformation;
  /* 0x0018 */ long ReturnStatus;
  /* 0x001c */ long Padding_592;
  /* 0x0020 */ void* CallContext;
  /* 0x0028 */ void* ObjectContext;
  /* 0x0030 */ void* Reserved;
} REG_POST_OPERATION_INFORMATION, *PREG_POST_OPERATION_INFORMATION; /* size: 0x0038 */

typedef struct _SYSTEM_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfDisks;
  /* 0x0004 */ unsigned long NumberOfFloppies;
  /* 0x0008 */ unsigned long NumberOfCdRoms;
  /* 0x000c */ unsigned long NumberOfTapes;
  /* 0x0010 */ unsigned long NumberOfSerialPorts;
  /* 0x0014 */ unsigned long NumberOfParallelPorts;
} SYSTEM_DEVICE_INFORMATION, *PSYSTEM_DEVICE_INFORMATION; /* size: 0x0018 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToNext;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER Reserved;
  /* 0x0010 */ union _LARGE_INTEGER Cluster;
  /* 0x0018 */ wchar_t FileName[1];
  /* 0x001a */ char __PADDING__[6];
} LOOKUP_STREAM_FROM_CLUSTER_ENTRY, *PLOOKUP_STREAM_FROM_CLUSTER_ENTRY; /* size: 0x0020 */

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ union _LARGE_INTEGER VirtualClock;
} TRANSACTIONMANAGER_BASIC_INFORMATION, *PTRANSACTIONMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _CM_MCA_POS_DATA
{
  /* 0x0000 */ unsigned short AdapterId;
  /* 0x0002 */ unsigned char PosData1;
  /* 0x0003 */ unsigned char PosData2;
  /* 0x0004 */ unsigned char PosData3;
  /* 0x0005 */ unsigned char PosData4;
} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA; /* size: 0x0006 */

typedef struct _KI_LOCAL_ARRAY5
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ unsigned char Fill5;
  /* 0x0005 */ unsigned char Fill6;
  /* 0x0006 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY5, *PKI_LOCAL_ARRAY5; /* size: 0x005e */

typedef struct _WMI_WAIT_SINGLE
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ long Padding_593;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned char ObjectType;
  /* 0x0011 */ char __PADDING__[7];
} WMI_WAIT_SINGLE, *PWMI_WAIT_SINGLE; /* size: 0x0018 */

typedef struct _DBGKM_LOAD_DLL64
{
  /* 0x0000 */ unsigned __int64 FileHandle;
  /* 0x0008 */ unsigned __int64 BaseOfDll;
  /* 0x0010 */ unsigned long DebugInfoFileOffset;
  /* 0x0014 */ unsigned long DebugInfoSize;
  /* 0x0018 */ unsigned __int64 NamePointer;
} DBGKM_LOAD_DLL64, *PDBGKM_LOAD_DLL64; /* size: 0x0020 */

typedef struct _THREAD_PROFILING_INFORMATION
{
  /* 0x0000 */ unsigned __int64 HardwareCounters;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Enable;
  /* 0x0010 */ struct _THREAD_PERFORMANCE_DATA* PerformanceData;
} THREAD_PROFILING_INFORMATION, *PTHREAD_PROFILING_INFORMATION; /* size: 0x0018 */

typedef struct _OSVERSIONINFOEXA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA; /* size: 0x009c */

typedef struct _KEY_WOW64_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long UserFlags;
} KEY_WOW64_FLAGS_INFORMATION, *PKEY_WOW64_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _IMAGE_COFF_SYMBOLS_HEADER
{
  /* 0x0000 */ unsigned long NumberOfSymbols;
  /* 0x0004 */ unsigned long LvaToFirstSymbol;
  /* 0x0008 */ unsigned long NumberOfLinenumbers;
  /* 0x000c */ unsigned long LvaToFirstLinenumber;
  /* 0x0010 */ unsigned long RvaToFirstByteOfCode;
  /* 0x0014 */ unsigned long RvaToLastByteOfCode;
  /* 0x0018 */ unsigned long RvaToFirstByteOfData;
  /* 0x001c */ unsigned long RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER; /* size: 0x0020 */

typedef struct _WAKE_TIMER_INFO
{
  /* 0x0000 */ unsigned __int64 OffsetToNext;
  /* 0x0008 */ union _ULARGE_INTEGER DueTime;
  /* 0x0010 */ unsigned long Period;
  /* 0x0014 */ long Padding_594;
  /* 0x0018 */ struct _DIAGNOSTIC_BUFFER ReasonContext;
} WAKE_TIMER_INFO, *PWAKE_TIMER_INFO; /* size: 0x0040 */

typedef union _PCI_EXPRESS_ERROR_SOURCE_ID
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned short CorrectableSourceIdFun : 3; /* bit position: 0 */
        /* 0x0000 */ unsigned short CorrectableSourceIdDev : 5; /* bit position: 3 */
        /* 0x0000 */ unsigned short CorrectableSourceIdBus : 8; /* bit position: 8 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short UncorrectableSourceIdFun : 3; /* bit position: 0 */
        /* 0x0002 */ unsigned short UncorrectableSourceIdDev : 5; /* bit position: 3 */
        /* 0x0002 */ unsigned short UncorrectableSourceIdBus : 8; /* bit position: 8 */
      }; /* bitfield */
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_ERROR_SOURCE_ID, *PPCI_EXPRESS_ERROR_SOURCE_ID; /* size: 0x0004 */

struct PPM_IDLE_STATE_ACCOUNTING_EX
{
  /* 0x0000 */ unsigned __int64 TotalTime;
  /* 0x0008 */ unsigned long IdleTransitions;
  /* 0x000c */ unsigned long FailedTransitions;
  /* 0x0010 */ unsigned long InvalidBucketIndex;
  /* 0x0014 */ unsigned long MinTimeUs;
  /* 0x0018 */ unsigned long MaxTimeUs;
  /* 0x001c */ long Padding_595;
  /* 0x0020 */ struct PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
}; /* size: 0x01a0 */

typedef struct _PPC_DBGKD_CONTROL_REPORT
{
  /* 0x0000 */ unsigned long InstructionCount;
  /* 0x0004 */ unsigned char InstructionStream[16];
  /* 0x0014 */ unsigned long Cr;
  /* 0x0018 */ unsigned __int64 Ctr;
  /* 0x0020 */ unsigned long Lr;
  /* 0x0024 */ unsigned __int64 Gpr3;
} PPC_DBGKD_CONTROL_REPORT, *PPPC_DBGKD_CONTROL_REPORT; /* size: 0x002c */

typedef struct _FILE_NAMES_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NAMES_INFORMATION, *PFILE_NAMES_INFORMATION; /* size: 0x0010 */

typedef struct _SE_TOKEN_ACCESS_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned __int64 AccessInformation;
} SE_TOKEN_ACCESS_INFORMATION, *PSE_TOKEN_ACCESS_INFORMATION; /* size: 0x0010 */

typedef struct _OB_CALLBACK_REGISTRATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short OperationRegistrationCount;
  /* 0x0004 */ long Padding_596;
  /* 0x0008 */ struct _UNICODE_STRING Altitude;
  /* 0x0018 */ void* RegistrationContext;
  /* 0x0020 */ struct _OB_OPERATION_REGISTRATION* OperationRegistration;
} OB_CALLBACK_REGISTRATION, *POB_CALLBACK_REGISTRATION; /* size: 0x0028 */

typedef struct _IOSPACE_EX64
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long Data;
  /* 0x0010 */ unsigned long InterfaceType;
  /* 0x0014 */ unsigned long BusNumber;
  /* 0x0018 */ unsigned long AddressSpace;
  /* 0x001c */ long __PADDING__[1];
} IOSPACE_EX64, *PIOSPACE_EX64; /* size: 0x0020 */

typedef struct _ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_ACE, *PACCESS_ALLOWED_ACE; /* size: 0x000c */

typedef union _RATE_QUOTA_LIMIT
{
  union
  {
    /* 0x0000 */ unsigned long RateData;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RatePercent : 7; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved0 : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT; /* size: 0x0004 */

typedef struct _SH_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long PR;
  /* 0x0008 */ unsigned long MACH;
  /* 0x000c */ unsigned long MACL;
  /* 0x0010 */ unsigned long GBR;
  /* 0x0014 */ unsigned long R0;
  /* 0x0018 */ unsigned long R1;
  /* 0x001c */ unsigned long R2;
  /* 0x0020 */ unsigned long R3;
  /* 0x0024 */ unsigned long R4;
  /* 0x0028 */ unsigned long R5;
  /* 0x002c */ unsigned long R6;
  /* 0x0030 */ unsigned long R7;
  /* 0x0034 */ unsigned long R8;
  /* 0x0038 */ unsigned long R9;
  /* 0x003c */ unsigned long R10;
  /* 0x0040 */ unsigned long R11;
  /* 0x0044 */ unsigned long R12;
  /* 0x0048 */ unsigned long R13;
  /* 0x004c */ unsigned long R14;
  /* 0x0050 */ unsigned long R15;
  /* 0x0054 */ unsigned long Fir;
  /* 0x0058 */ unsigned long Psr;
  /* 0x005c */ unsigned long Fpscr;
  /* 0x0060 */ unsigned long Fpul;
  /* 0x0064 */ unsigned long FRegs[16];
  /* 0x00a4 */ unsigned long xFRegs[16];
} SH_CONTEXT, *PSH_CONTEXT; /* size: 0x00e4 */

typedef struct _DEFERRED_WRITE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteSize;
  /* 0x0004 */ long Padding_597;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ unsigned long BytesToWrite;
  /* 0x0014 */ long Padding_598;
  /* 0x0018 */ struct _LIST_ENTRY DeferredWriteLinks;
  /* 0x0028 */ struct _KEVENT* Event;
  /* 0x0030 */ void* PostRoutine /* function */;
  /* 0x0038 */ void* Context1;
  /* 0x0040 */ void* Context2;
} DEFERRED_WRITE, *PDEFERRED_WRITE; /* size: 0x0048 */

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_599;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING ValueName;
  /* 0x0038 */ unsigned long OldValueType;
  /* 0x003c */ unsigned long OldDataLength;
  /* 0x0040 */ void* OldData;
  /* 0x0048 */ unsigned long NewValueType;
  /* 0x004c */ unsigned long NewDataLength;
  /* 0x0050 */ void* NewData;
} JOURNAL_SET_DELETE_VALUE_INFORMATION, *PJOURNAL_SET_DELETE_VALUE_INFORMATION; /* size: 0x0058 */

typedef struct _OB_DUPLICATE_OBJECT_STATE
{
  /* 0x0000 */ struct _EPROCESS* SourceProcess;
  /* 0x0008 */ void* SourceHandle;
  /* 0x0010 */ void* Object;
  /* 0x0018 */ unsigned long TargetAccess;
  /* 0x001c */ struct _HANDLE_TABLE_ENTRY_INFO ObjectInfo;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ long __PADDING__[1];
} OB_DUPLICATE_OBJECT_STATE, *POB_DUPLICATE_OBJECT_STATE; /* size: 0x0028 */

typedef struct _LDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ struct _LIST_ENTRY InMemoryOrderLinks;
  /* 0x0020 */ struct _LIST_ENTRY InInitializationOrderLinks;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_600;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct _LIST_ENTRY HashLinks;
    struct
    {
      /* 0x0070 */ void* SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ void* LoadedImports;
  }; /* size: 0x0008 */
  /* 0x0088 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
  /* 0x0090 */ void* PatchInformation;
  /* 0x0098 */ struct _LIST_ENTRY ForwarderLinks;
  /* 0x00a8 */ struct _LIST_ENTRY ServiceTagLinks;
  /* 0x00b8 */ struct _LIST_ENTRY StaticLinks;
  /* 0x00c8 */ void* ContextInformation;
  /* 0x00d0 */ unsigned __int64 OriginalBase;
  /* 0x00d8 */ union _LARGE_INTEGER LoadTime;
} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY; /* size: 0x00e0 */

typedef struct _FILE_GET_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char EaNameLength;
  /* 0x0005 */ char EaName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_GET_EA_INFORMATION, *PFILE_GET_EA_INFORMATION; /* size: 0x0008 */

typedef struct _LSA_FOREST_TRUST_RECORD
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ enum LSA_FOREST_TRUST_RECORD_TYPE ForestTrustType;
  /* 0x0008 */ union _LARGE_INTEGER Time;
  union
  {
    union
    {
      /* 0x0010 */ struct _UNICODE_STRING TopLevelName;
      /* 0x0010 */ struct _LSA_FOREST_TRUST_DOMAIN_INFO DomainInfo;
      /* 0x0010 */ struct _LSA_FOREST_TRUST_BINARY_DATA Data;
    }; /* size: 0x0028 */
  } /* size: 0x0028 */ ForestTrustData;
} LSA_FOREST_TRUST_RECORD, *PLSA_FOREST_TRUST_RECORD; /* size: 0x0038 */

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION
{
  /* 0x0000 */ char* SymbolicBackTrace;
  /* 0x0008 */ unsigned long TraceCount;
  /* 0x000c */ unsigned short Index;
  /* 0x000e */ unsigned short Depth;
  /* 0x0010 */ void* BackTrace[32];
} RTL_PROCESS_BACKTRACE_INFORMATION, *PRTL_PROCESS_BACKTRACE_INFORMATION; /* size: 0x0110 */

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long FlagsToEnable;
  /* 0x0004 */ unsigned long FlagsToDisable;
} SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION, *PSYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION; /* size: 0x0008 */

struct WMIREGGUIDW
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long InstanceCount;
  union
  {
    /* 0x0018 */ unsigned long InstanceNameList;
    /* 0x0018 */ unsigned long BaseNameOffset;
    /* 0x0018 */ unsigned __int64 Pdo;
    /* 0x0018 */ unsigned __int64 InstanceInfo;
  }; /* size: 0x0008 */
}; /* size: 0x0020 */

typedef struct _POP_SYSTEM_IDLE_STATUS
{
  /* 0x0000 */ struct _LIST_ENTRY IdleDetectionCallbacks;
} POP_SYSTEM_IDLE_STATUS, *PPOP_SYSTEM_IDLE_STATUS; /* size: 0x0010 */

typedef struct _HAL_MCA_INTERFACE
{
  /* 0x0000 */ void* Lock /* function */;
  /* 0x0008 */ void* Unlock /* function */;
  /* 0x0010 */ void* ReadRegister /* function */;
} HAL_MCA_INTERFACE, *PHAL_MCA_INTERFACE; /* size: 0x0018 */

typedef struct _HV_INPUT_UNMAP_STATS_PAGE
{
  /* 0x0000 */ enum _HV_STATS_OBJECT_TYPE StatsType;
  /* 0x0004 */ long Padding_601;
  /* 0x0008 */ union _HV_STATS_OBJECT_IDENTITY ObjectIdentity;
  /* 0x0018 */ unsigned __int64 MapLocation;
} HV_INPUT_UNMAP_STATS_PAGE, *PHV_INPUT_UNMAP_STATS_PAGE; /* size: 0x0020 */

typedef struct _PUBLIC_BCB
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteSize;
  /* 0x0004 */ unsigned long MappedLength;
  /* 0x0008 */ union _LARGE_INTEGER MappedFileOffset;
} PUBLIC_BCB, *PPUBLIC_BCB; /* size: 0x0010 */

typedef union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long MaxPayloadSizeSupported : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned long PhantomFunctionsSupported : 2; /* bit position: 3 */
      /* 0x0000 */ unsigned long ExtendedTagSupported : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long L0sAcceptableLatency : 3; /* bit position: 6 */
      /* 0x0000 */ unsigned long L1AcceptableLatency : 3; /* bit position: 9 */
      /* 0x0000 */ unsigned long Undefined : 3; /* bit position: 12 */
      /* 0x0000 */ unsigned long RoleBasedErrorReporting : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long Rsvd1 : 2; /* bit position: 16 */
      /* 0x0000 */ unsigned long CapturedSlotPowerLimit : 8; /* bit position: 18 */
      /* 0x0000 */ unsigned long CapturedSlotPowerLimitScale : 2; /* bit position: 26 */
      /* 0x0000 */ unsigned long Rsvd2 : 4; /* bit position: 28 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER, *PPCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER; /* size: 0x0004 */

typedef struct _TRACE_PROVIDER_INSTANCE_INFO
{
  /* 0x0000 */ unsigned long NextOffset;
  /* 0x0004 */ unsigned long EnableCount;
  /* 0x0008 */ unsigned long Pid;
  /* 0x000c */ unsigned long Flags;
} TRACE_PROVIDER_INSTANCE_INFO, *PTRACE_PROVIDER_INSTANCE_INFO; /* size: 0x0010 */

typedef struct _HAL_CALLBACKS
{
  /* 0x0000 */ struct _CALLBACK_OBJECT* SetSystemInformation;
  /* 0x0008 */ struct _CALLBACK_OBJECT* BusCheck;
} HAL_CALLBACKS, *PHAL_CALLBACKS; /* size: 0x0010 */

typedef struct _CALLBACK_OBJECT
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_602;
  /* 0x0008 */ unsigned __int64 Lock;
  /* 0x0010 */ struct _LIST_ENTRY RegisteredCallbacks;
  /* 0x0020 */ unsigned char AllowMultipleCallbacks;
  /* 0x0021 */ unsigned char reserved[3];
  /* 0x0024 */ long __PADDING__[1];
} CALLBACK_OBJECT, *PCALLBACK_OBJECT; /* size: 0x0028 */

typedef struct _ETW_HEAP_EVENT_CREATE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned __int64 ReserveSize;
  /* 0x0034 */ unsigned __int64 CommitSize;
  /* 0x003c */ unsigned __int64 AllocatedSize;
} ETW_HEAP_EVENT_CREATE, *PETW_HEAP_EVENT_CREATE; /* size: 0x0044 */

typedef struct _WMI_PROCESS_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 UniqueProcessKey64;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ unsigned long ParentId;
  /* 0x0010 */ unsigned long SessionId;
  /* 0x0014 */ long ExitStatus;
  /* 0x0018 */ unsigned __int64 DirectoryTableBase;
  /* 0x0020 */ unsigned long Sid;
  /* 0x0024 */ long __PADDING__[1];
} WMI_PROCESS_INFORMATION64, *PWMI_PROCESS_INFORMATION64; /* size: 0x0028 */

typedef struct _PERFINFO_HARDPAGEFAULT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ReadOffset;
  /* 0x0008 */ void* VirtualAddress;
  /* 0x0010 */ void* FileObject;
  /* 0x0018 */ unsigned long ThreadId;
  /* 0x001c */ unsigned long ByteCount;
} PERFINFO_HARDPAGEFAULT_INFORMATION, *PPERFINFO_HARDPAGEFAULT_INFORMATION; /* size: 0x0020 */

typedef struct _FP_32
{
  /* 0x0000 */ unsigned long W[1];
} FP_32, *PFP_32; /* size: 0x0004 */

typedef struct _WHEA_ERROR_RECORD
{
  /* 0x0000 */ struct _WHEA_ERROR_RECORD_HEADER Header;
  /* 0x0080 */ struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR SectionDescriptor[1];
} WHEA_ERROR_RECORD, *PWHEA_ERROR_RECORD; /* size: 0x00c8 */

typedef struct _IO_UNLOAD_SAFE_COMPLETION_CONTEXT
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* CompletionRoutine /* function */;
  /* 0x0018 */ unsigned char InvokeOnError;
  /* 0x0019 */ unsigned char InvokeOnSuccess;
  /* 0x001a */ unsigned char InvokeOnCancel;
  /* 0x001b */ char __PADDING__[5];
} IO_UNLOAD_SAFE_COMPLETION_CONTEXT, *PIO_UNLOAD_SAFE_COMPLETION_CONTEXT; /* size: 0x0020 */

typedef struct _TXFS_WRITE_BACKUP_INFORMATION
{
  /* 0x0000 */ unsigned char Buffer[1];
} TXFS_WRITE_BACKUP_INFORMATION, *PTXFS_WRITE_BACKUP_INFORMATION; /* size: 0x0001 */

struct POP_HIBER_FILE
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ unsigned __int64 FileSize;
  /* 0x0018 */ union _LARGE_INTEGER* Mcb;
  /* 0x0020 */ unsigned long McbSize;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct PCI_MSI_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  /* 0x0002 */ struct _PCI_MSI_MESSAGE_CONTROL MessageControl;
  union
  {
    union
    {
      /* 0x0004 */ struct _PCI_MSI_MESSAGE_ADDRESS Register;
      /* 0x0004 */ unsigned long Raw;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ MessageAddressLower;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned short MessageData;
      /* 0x000a */ unsigned short Reserved;
      /* 0x000c */ unsigned long MaskBits;
      /* 0x0010 */ unsigned long PendingBits;
    } /* size: 0x000c */ Option32Bit;
    struct
    {
      /* 0x0008 */ unsigned long MessageAddressUpper;
      /* 0x000c */ unsigned short MessageData;
      /* 0x000e */ unsigned short Reserved;
      /* 0x0010 */ unsigned long MaskBits;
      /* 0x0014 */ unsigned long PendingBits;
    } /* size: 0x0010 */ Option64Bit;
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

typedef struct _WHEA_PSHED_PLUGIN_CALLBACKS
{
  /* 0x0000 */ void* GetAllErrorSources /* function */;
  /* 0x0008 */ void* Reserved;
  /* 0x0010 */ void* GetErrorSourceInfo /* function */;
  /* 0x0018 */ void* SetErrorSourceInfo /* function */;
  /* 0x0020 */ void* EnableErrorSource /* function */;
  /* 0x0028 */ void* DisableErrorSource /* function */;
  /* 0x0030 */ void* WriteErrorRecord /* function */;
  /* 0x0038 */ void* ReadErrorRecord /* function */;
  /* 0x0040 */ void* ClearErrorRecord /* function */;
  /* 0x0048 */ void* RetrieveErrorInfo /* function */;
  /* 0x0050 */ void* FinalizeErrorRecord /* function */;
  /* 0x0058 */ void* ClearErrorStatus /* function */;
  /* 0x0060 */ void* AttemptRecovery /* function */;
  /* 0x0068 */ void* GetInjectionCapabilities /* function */;
  /* 0x0070 */ void* InjectError /* function */;
} WHEA_PSHED_PLUGIN_CALLBACKS, *PWHEA_PSHED_PLUGIN_CALLBACKS; /* size: 0x0078 */

typedef struct _MESSAGE_RESOURCE_ENTRY
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned char Text[1];
  /* 0x0005 */ char __PADDING__[1];
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY; /* size: 0x0006 */

typedef struct _WMI_DELAY_EXECUTION
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ long Padding_603;
  /* 0x0008 */ unsigned __int64 Delta;
} WMI_DELAY_EXECUTION, *PWMI_DELAY_EXECUTION; /* size: 0x0010 */

typedef struct _LSA_FOREST_TRUST_INFORMATION
{
  /* 0x0000 */ unsigned long RecordCount;
  /* 0x0004 */ long Padding_604;
  /* 0x0008 */ struct _LSA_FOREST_TRUST_RECORD** Entries;
} LSA_FOREST_TRUST_INFORMATION, *PLSA_FOREST_TRUST_INFORMATION; /* size: 0x0010 */

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
{
  /* 0x0000 */ unsigned long SavepointId;
} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT; /* size: 0x0004 */

typedef struct _ETW_UMS_EVENT_DIRECTED_SWITCH_END
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ScheduledThreadId;
  /* 0x0008 */ unsigned long PrimaryThreadId;
  /* 0x000c */ unsigned long SwitchFlags;
} ETW_UMS_EVENT_DIRECTED_SWITCH_END, *PETW_UMS_EVENT_DIRECTED_SWITCH_END; /* size: 0x0010 */

typedef struct _SEMAPHORE_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ long MaximumCount;
} SEMAPHORE_BASIC_INFORMATION, *PSEMAPHORE_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _HAL_PROFILE_SOURCE_INTERVAL
{
  /* 0x0000 */ enum _KPROFILE_SOURCE Source;
  /* 0x0004 */ long Padding_605;
  /* 0x0008 */ unsigned __int64 Interval;
} HAL_PROFILE_SOURCE_INTERVAL, *PHAL_PROFILE_SOURCE_INTERVAL; /* size: 0x0010 */

typedef struct _RETRIEVAL_POINTER_BASE
{
  /* 0x0000 */ union _LARGE_INTEGER FileAreaOffset;
} RETRIEVAL_POINTER_BASE, *PRETRIEVAL_POINTER_BASE; /* size: 0x0008 */

typedef struct _SCSI_PASS_THROUGH_DIRECT32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned char ScsiStatus;
  /* 0x0003 */ unsigned char PathId;
  /* 0x0004 */ unsigned char TargetId;
  /* 0x0005 */ unsigned char Lun;
  /* 0x0006 */ unsigned char CdbLength;
  /* 0x0007 */ unsigned char SenseInfoLength;
  /* 0x0008 */ unsigned char DataIn;
  /* 0x0009 */ char Padding_606[3];
  /* 0x000c */ unsigned long DataTransferLength;
  /* 0x0010 */ unsigned long TimeOutValue;
  /* 0x0014 */ void* DataBuffer;
  /* 0x0018 */ unsigned long SenseInfoOffset;
  /* 0x001c */ unsigned char Cdb[16];
} SCSI_PASS_THROUGH_DIRECT32, *PSCSI_PASS_THROUGH_DIRECT32; /* size: 0x002c */

typedef struct _MPIO_PASS_THROUGH_PATH_DIRECT32
{
  /* 0x0000 */ struct _SCSI_PASS_THROUGH_DIRECT32 PassThrough;
  /* 0x002c */ unsigned long Version;
  /* 0x0030 */ unsigned short Length;
  /* 0x0032 */ unsigned char Flags;
  /* 0x0033 */ unsigned char PortNumber;
  /* 0x0034 */ long Padding_607;
  /* 0x0038 */ unsigned __int64 MpioPathId;
} MPIO_PASS_THROUGH_PATH_DIRECT32, *PMPIO_PASS_THROUGH_PATH_DIRECT32; /* size: 0x0040 */

typedef struct _JOB_SET_ARRAY
{
  /* 0x0000 */ void* JobHandle;
  /* 0x0008 */ unsigned long MemberLevel;
  /* 0x000c */ unsigned long Flags;
} JOB_SET_ARRAY, *PJOB_SET_ARRAY; /* size: 0x0010 */

typedef struct _STORAGE_MINIPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _STORAGE_PORT_CODE_SET Portdriver;
  /* 0x000c */ unsigned char LUNResetSupported;
  /* 0x000d */ unsigned char TargetResetSupported;
  /* 0x000e */ char __PADDING__[2];
} STORAGE_MINIPORT_DESCRIPTOR, *PSTORAGE_MINIPORT_DESCRIPTOR; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorCount;
  /* 0x0004 */ unsigned long Offsets[1];
} SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION; /* size: 0x0008 */

struct HAL_PRIVATE_DISPATCH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_608;
  /* 0x0008 */ void* HalHandlerForBus /* function */;
  /* 0x0010 */ void* HalHandlerForConfigSpace /* function */;
  /* 0x0018 */ void* HalLocateHiberRanges /* function */;
  /* 0x0020 */ void* HalRegisterBusHandler /* function */;
  /* 0x0028 */ void* HalSetWakeEnable /* function */;
  /* 0x0030 */ void* HalSetWakeAlarm /* function */;
  /* 0x0038 */ void* HalPciTranslateBusAddress /* function */;
  /* 0x0040 */ void* HalPciAssignSlotResources /* function */;
  /* 0x0048 */ void* HalHaltSystem /* function */;
  /* 0x0050 */ void* HalFindBusAddressTranslation /* function */;
  /* 0x0058 */ void* HalResetDisplay /* function */;
  /* 0x0060 */ void* HalAllocateMapRegisters /* function */;
  /* 0x0068 */ void* KdSetupPciDeviceForDebugging /* function */;
  /* 0x0070 */ void* KdReleasePciDeviceForDebugging /* function */;
  /* 0x0078 */ void* KdGetAcpiTablePhase0 /* function */;
  /* 0x0080 */ void* KdCheckPowerButton /* function */;
  /* 0x0088 */ void* HalVectorToIDTEntry /* function */;
  /* 0x0090 */ void* KdMapPhysicalMemory64 /* function */;
  /* 0x0098 */ void* KdUnmapVirtualAddress /* function */;
  /* 0x00a0 */ void* KdGetPciDataByOffset /* function */;
  /* 0x00a8 */ void* KdSetPciDataByOffset /* function */;
  /* 0x00b0 */ void* HalGetInterruptVectorOverride /* function */;
  /* 0x00b8 */ void* HalGetVectorInputOverride /* function */;
  /* 0x00c0 */ void* HalLoadMicrocode /* function */;
  /* 0x00c8 */ void* HalUnloadMicrocode /* function */;
  /* 0x00d0 */ void* HalPostMicrocodeUpdate /* function */;
  /* 0x00d8 */ void* HalAllocateMessageTargetOverride /* function */;
  /* 0x00e0 */ void* HalFreeMessageTargetOverride /* function */;
  /* 0x00e8 */ void* HalDpReplaceBegin /* function */;
  /* 0x00f0 */ void* HalDpReplaceTarget /* function */;
  /* 0x00f8 */ void* HalDpReplaceControl /* function */;
  /* 0x0100 */ void* HalDpReplaceEnd /* function */;
  /* 0x0108 */ void* HalPrepareForBugcheck /* function */;
  /* 0x0110 */ void* HalQueryWakeTime /* function */;
  /* 0x0118 */ void* HalReportIdleStateUsage /* function */;
  /* 0x0120 */ void* HalTscSynchronization /* function */;
  /* 0x0128 */ void* HalWheaInitProcessorGenericSection /* function */;
  /* 0x0130 */ void* HalStopLegacyUsbInterrupts /* function */;
  /* 0x0138 */ void* HalReadWheaPhysicalMemory /* function */;
  /* 0x0140 */ void* HalWriteWheaPhysicalMemory /* function */;
  /* 0x0148 */ void* HalDpMaskLevelTriggeredInterrupts /* function */;
  /* 0x0150 */ void* HalDpUnmaskLevelTriggeredInterrupts /* function */;
  /* 0x0158 */ void* HalDpGetInterruptReplayState /* function */;
  /* 0x0160 */ void* HalDpReplayInterrupts /* function */;
  /* 0x0168 */ void* HalQueryIoPortAccessSupported /* function */;
}; /* size: 0x0170 */

typedef struct _ETW_KERNEL_HEADER_EXTENSION
{
  /* 0x0000 */ struct _PERFINFO_GROUPMASK GroupMasks;
  /* 0x0020 */ unsigned long Version;
} ETW_KERNEL_HEADER_EXTENSION, *PETW_KERNEL_HEADER_EXTENSION; /* size: 0x0024 */

typedef struct _TRACE_ENABLE_CONTEXT
{
  /* 0x0000 */ unsigned short LoggerId;
  /* 0x0002 */ unsigned char Level;
  /* 0x0003 */ unsigned char InternalFlag;
  /* 0x0004 */ unsigned long EnableFlags;
} TRACE_ENABLE_CONTEXT, *PTRACE_ENABLE_CONTEXT; /* size: 0x0008 */

typedef struct _NTFS_STATISTICS
{
  /* 0x0000 */ unsigned long LogFileFullExceptions;
  /* 0x0004 */ unsigned long OtherExceptions;
  /* 0x0008 */ unsigned long MftReads;
  /* 0x000c */ unsigned long MftReadBytes;
  /* 0x0010 */ unsigned long MftWrites;
  /* 0x0014 */ unsigned long MftWriteBytes;
  struct
  {
    /* 0x0018 */ unsigned short Write;
    /* 0x001a */ unsigned short Create;
    /* 0x001c */ unsigned short SetInfo;
    /* 0x001e */ unsigned short Flush;
  } /* size: 0x0008 */ MftWritesUserLevel;
  /* 0x0020 */ unsigned short MftWritesFlushForLogFileFull;
  /* 0x0022 */ unsigned short MftWritesLazyWriter;
  /* 0x0024 */ unsigned short MftWritesUserRequest;
  /* 0x0026 */ char Padding_609[2];
  /* 0x0028 */ unsigned long Mft2Writes;
  /* 0x002c */ unsigned long Mft2WriteBytes;
  struct
  {
    /* 0x0030 */ unsigned short Write;
    /* 0x0032 */ unsigned short Create;
    /* 0x0034 */ unsigned short SetInfo;
    /* 0x0036 */ unsigned short Flush;
  } /* size: 0x0008 */ Mft2WritesUserLevel;
  /* 0x0038 */ unsigned short Mft2WritesFlushForLogFileFull;
  /* 0x003a */ unsigned short Mft2WritesLazyWriter;
  /* 0x003c */ unsigned short Mft2WritesUserRequest;
  /* 0x003e */ char Padding_610[2];
  /* 0x0040 */ unsigned long RootIndexReads;
  /* 0x0044 */ unsigned long RootIndexReadBytes;
  /* 0x0048 */ unsigned long RootIndexWrites;
  /* 0x004c */ unsigned long RootIndexWriteBytes;
  /* 0x0050 */ unsigned long BitmapReads;
  /* 0x0054 */ unsigned long BitmapReadBytes;
  /* 0x0058 */ unsigned long BitmapWrites;
  /* 0x005c */ unsigned long BitmapWriteBytes;
  /* 0x0060 */ unsigned short BitmapWritesFlushForLogFileFull;
  /* 0x0062 */ unsigned short BitmapWritesLazyWriter;
  /* 0x0064 */ unsigned short BitmapWritesUserRequest;
  struct
  {
    /* 0x0066 */ unsigned short Write;
    /* 0x0068 */ unsigned short Create;
    /* 0x006a */ unsigned short SetInfo;
  } /* size: 0x0006 */ BitmapWritesUserLevel;
  /* 0x006c */ unsigned long MftBitmapReads;
  /* 0x0070 */ unsigned long MftBitmapReadBytes;
  /* 0x0074 */ unsigned long MftBitmapWrites;
  /* 0x0078 */ unsigned long MftBitmapWriteBytes;
  /* 0x007c */ unsigned short MftBitmapWritesFlushForLogFileFull;
  /* 0x007e */ unsigned short MftBitmapWritesLazyWriter;
  /* 0x0080 */ unsigned short MftBitmapWritesUserRequest;
  struct
  {
    /* 0x0082 */ unsigned short Write;
    /* 0x0084 */ unsigned short Create;
    /* 0x0086 */ unsigned short SetInfo;
    /* 0x0088 */ unsigned short Flush;
  } /* size: 0x0008 */ MftBitmapWritesUserLevel;
  /* 0x008a */ char Padding_611[2];
  /* 0x008c */ unsigned long UserIndexReads;
  /* 0x0090 */ unsigned long UserIndexReadBytes;
  /* 0x0094 */ unsigned long UserIndexWrites;
  /* 0x0098 */ unsigned long UserIndexWriteBytes;
  /* 0x009c */ unsigned long LogFileReads;
  /* 0x00a0 */ unsigned long LogFileReadBytes;
  /* 0x00a4 */ unsigned long LogFileWrites;
  /* 0x00a8 */ unsigned long LogFileWriteBytes;
  struct
  {
    /* 0x00ac */ unsigned long Calls;
    /* 0x00b0 */ unsigned long Clusters;
    /* 0x00b4 */ unsigned long Hints;
    /* 0x00b8 */ unsigned long RunsReturned;
    /* 0x00bc */ unsigned long HintsHonored;
    /* 0x00c0 */ unsigned long HintsClusters;
    /* 0x00c4 */ unsigned long Cache;
    /* 0x00c8 */ unsigned long CacheClusters;
    /* 0x00cc */ unsigned long CacheMiss;
    /* 0x00d0 */ unsigned long CacheMissClusters;
  } /* size: 0x0028 */ Allocate;
} NTFS_STATISTICS, *PNTFS_STATISTICS; /* size: 0x00d4 */

typedef struct _REG_SAVE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ void* FileHandle;
  /* 0x0010 */ unsigned long Format;
  /* 0x0014 */ long Padding_612;
  /* 0x0018 */ void* CallContext;
  /* 0x0020 */ void* ObjectContext;
  /* 0x0028 */ void* Reserved;
} REG_SAVE_KEY_INFORMATION, *PREG_SAVE_KEY_INFORMATION; /* size: 0x0030 */

typedef struct _ETW_HEAP_EVENT_CONTRACTION
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ unsigned __int64 DeCommitSize;
  /* 0x0030 */ void* DeCommitAddress;
  /* 0x0038 */ unsigned __int64 FreeSpace;
  /* 0x0040 */ unsigned __int64 CommittedSpace;
  /* 0x0048 */ unsigned __int64 ReservedSpace;
  /* 0x0050 */ unsigned long NoOfUCRs;
  /* 0x0054 */ unsigned __int64 AllocatedSpace;
} ETW_HEAP_EVENT_CONTRACTION, *PETW_HEAP_EVENT_CONTRACTION; /* size: 0x005c */

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 LastRecoveredLsn;
} TRANSACTIONMANAGER_RECOVERY_INFORMATION, *PTRANSACTIONMANAGER_RECOVERY_INFORMATION; /* size: 0x0008 */

typedef struct _OBJECT_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long HandleAttributes;
  /* 0x0004 */ unsigned long GrantedAccess;
} OBJECT_HANDLE_INFORMATION, *POBJECT_HANDLE_INFORMATION; /* size: 0x0008 */

typedef struct _CM_COMPONENT_INFORMATION
{
  /* 0x0000 */ struct _DEVICE_FLAGS Flags;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Key;
  /* 0x000c */ long Padding_613;
  /* 0x0010 */ unsigned __int64 AffinityMask;
} CM_COMPONENT_INFORMATION, *PCM_COMPONENT_INFORMATION; /* size: 0x0018 */

typedef struct _CLS_ARCHIVE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 coffLow;
  /* 0x0008 */ unsigned __int64 coffHigh;
  /* 0x0010 */ struct _CLS_CONTAINER_INFORMATION infoContainer;
} CLS_ARCHIVE_DESCRIPTOR, *PCLS_ARCHIVE_DESCRIPTOR; /* size: 0x0250 */

typedef struct _WHEA_ERROR_PACKET_V2
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ union _WHEA_ERROR_PACKET_FLAGS Flags;
  /* 0x0010 */ enum _WHEA_ERROR_TYPE ErrorType;
  /* 0x0014 */ enum _WHEA_ERROR_SEVERITY ErrorSeverity;
  /* 0x0018 */ unsigned long ErrorSourceId;
  /* 0x001c */ enum _WHEA_ERROR_SOURCE_TYPE ErrorSourceType;
  /* 0x0020 */ struct _GUID NotifyType;
  /* 0x0030 */ unsigned __int64 Context;
  /* 0x0038 */ enum _WHEA_ERROR_PACKET_DATA_FORMAT DataFormat;
  /* 0x003c */ unsigned long Reserved1;
  /* 0x0040 */ unsigned long DataOffset;
  /* 0x0044 */ unsigned long DataLength;
  /* 0x0048 */ unsigned long PshedDataOffset;
  /* 0x004c */ unsigned long PshedDataLength;
} WHEA_ERROR_PACKET_V2, *PWHEA_ERROR_PACKET_V2; /* size: 0x0050 */

typedef struct _WHEA_PSHED_PLUGIN_REGISTRATION_PACKET
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ unsigned long FunctionalAreaMask;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ struct _WHEA_PSHED_PLUGIN_CALLBACKS Callbacks;
} WHEA_PSHED_PLUGIN_REGISTRATION_PACKET, *PWHEA_PSHED_PLUGIN_REGISTRATION_PACKET; /* size: 0x0090 */

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
  /* 0x0010 */ long Priority;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_THREAD_CID_PRIORITY_INFORMATION, *PSYSTEM_THREAD_CID_PRIORITY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_OBJECTID_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0018 */ unsigned char BirthVolumeId[16];
      /* 0x0028 */ unsigned char BirthObjectId[16];
      /* 0x0038 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0018 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_INFORMATION, *PFILE_OBJECTID_INFORMATION; /* size: 0x0048 */

typedef struct _CI_LOG_SCHEDULER_SLEEP_RESPONSE
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
} CI_LOG_SCHEDULER_SLEEP_RESPONSE, *PCI_LOG_SCHEDULER_SLEEP_RESPONSE; /* size: 0x0030 */

typedef struct _PROCESS_HANDLE_TRACING_ENTRY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ struct _CLIENT_ID ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_614;
  /* 0x0020 */ void* Stacks[16];
} PROCESS_HANDLE_TRACING_ENTRY, *PPROCESS_HANDLE_TRACING_ENTRY; /* size: 0x00a0 */

typedef struct _CLFS_PHYSICAL_LSN_INFORMATION
{
  /* 0x0000 */ unsigned char StreamIdentifier;
  /* 0x0001 */ char Padding_615[7];
  /* 0x0008 */ union _CLS_LSN VirtualLsn;
  /* 0x0010 */ union _CLS_LSN PhysicalLsn;
} CLFS_PHYSICAL_LSN_INFORMATION, *PCLFS_PHYSICAL_LSN_INFORMATION; /* size: 0x0018 */

typedef struct _ImageArchitectureEntry
{
  /* 0x0000 */ unsigned long FixupInstRVA;
  /* 0x0004 */ unsigned long NewInst;
} ImageArchitectureEntry, *PImageArchitectureEntry; /* size: 0x0008 */

typedef struct _X86_NT5_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _X86_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  union
  {
    /* 0x00cc */ unsigned char ExtendedRegisters[512];
    /* 0x00cc */ struct _X86_FXSAVE_FORMAT FxSave;
  }; /* size: 0x0200 */
} X86_NT5_CONTEXT, *PX86_NT5_CONTEXT; /* size: 0x02cc */

typedef struct _FILE_FULL_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char EaNameLength;
  /* 0x0006 */ unsigned short EaValueLength;
  /* 0x0008 */ char EaName[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION; /* size: 0x000c */

typedef struct _HARDERROR_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ long Status;
  /* 0x002c */ long Padding_616;
  /* 0x0030 */ union _LARGE_INTEGER ErrorTime;
  /* 0x0038 */ unsigned long ValidResponseOptions;
  /* 0x003c */ unsigned long Response;
  /* 0x0040 */ unsigned long NumberOfParameters;
  /* 0x0044 */ unsigned long UnicodeStringParameterMask;
  /* 0x0048 */ unsigned __int64 Parameters[5];
} HARDERROR_MSG, *PHARDERROR_MSG; /* size: 0x0070 */

typedef struct _LSA_ADT_STRING_LIST
{
  /* 0x0000 */ unsigned long cStrings;
  /* 0x0004 */ long Padding_617;
  /* 0x0008 */ struct _LSA_ADT_STRING_LIST_ENTRY* Strings;
} LSA_ADT_STRING_LIST, *PLSA_ADT_STRING_LIST; /* size: 0x0010 */

typedef struct _RESOURCE_PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned long ActiveResourceCount;
  /* 0x0004 */ unsigned long TotalResourceCount;
  /* 0x0008 */ unsigned long ExclusiveAcquire;
  /* 0x000c */ unsigned long SharedFirstLevel;
  /* 0x0010 */ unsigned long SharedSecondLevel;
  /* 0x0014 */ unsigned long StarveFirstLevel;
  /* 0x0018 */ unsigned long StarveSecondLevel;
  /* 0x001c */ unsigned long WaitForExclusive;
  /* 0x0020 */ unsigned long OwnerTableExpands;
  /* 0x0024 */ unsigned long MaximumTableExpand;
  /* 0x0028 */ struct _LIST_ENTRY HashTable[64];
} RESOURCE_PERFORMANCE_DATA, *PRESOURCE_PERFORMANCE_DATA; /* size: 0x0428 */

typedef struct _ETW_HEAP_EVENT_RUNDOWN
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned long ProcessId;
  /* 0x0030 */ unsigned long RangeCount;
  /* 0x0034 */ unsigned long Reserved;
  /* 0x0038 */ struct _ETW_HEAP_EVENT_RUNDOWN_RANGE Ranges[1];
} ETW_HEAP_EVENT_RUNDOWN, *PETW_HEAP_EVENT_RUNDOWN; /* size: 0x0048 */

typedef struct _PROCESS_ACCESS_TOKEN
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ void* Thread;
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN; /* size: 0x0010 */

struct tagWNODE_TOO_SMALL
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
  /* 0x0030 */ unsigned long SizeNeeded;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _LSA_ENUMERATION_INFORMATION
{
  /* 0x0000 */ void* Sid;
} LSA_ENUMERATION_INFORMATION, *PLSA_ENUMERATION_INFORMATION; /* size: 0x0008 */

typedef struct _TRIAGE_POP_IRP_WORKER_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _ETHREAD* Thread;
} TRIAGE_POP_IRP_WORKER_ENTRY, *PTRIAGE_POP_IRP_WORKER_ENTRY; /* size: 0x0018 */

typedef struct _BATTERY_SET_INFORMATION
{
  /* 0x0000 */ unsigned long BatteryTag;
  /* 0x0004 */ enum BATTERY_SET_INFORMATION_LEVEL InformationLevel;
  /* 0x0008 */ unsigned char Buffer[1];
  /* 0x0009 */ char __PADDING__[3];
} BATTERY_SET_INFORMATION, *PBATTERY_SET_INFORMATION; /* size: 0x000c */

typedef struct _KI_LOCAL_ARRAY6
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ unsigned char Fill5;
  /* 0x0005 */ unsigned char Fill6;
  /* 0x0006 */ unsigned char Fill7;
  /* 0x0007 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY6, *PKI_LOCAL_ARRAY6; /* size: 0x005f */

typedef struct _DBGKD_COMMAND_STRING
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Reserved1;
  /* 0x0008 */ unsigned __int64 Reserved2[7];
} DBGKD_COMMAND_STRING, *PDBGKD_COMMAND_STRING; /* size: 0x0040 */

typedef struct _PACKEDEVENTINFO
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long ulNumEventsForLogFile;
  /* 0x0008 */ unsigned long* ulOffsets /* zero-length array */;
} PACKEDEVENTINFO, *PPACKEDEVENTINFO; /* size: 0x0008 */

typedef struct _EISA_MEMORY_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_MEMORY_TYPE ConfigurationByte;
  /* 0x0001 */ unsigned char DataSize;
  /* 0x0002 */ unsigned short AddressLowWord;
  /* 0x0004 */ unsigned char AddressHighByte;
  /* 0x0005 */ unsigned short MemorySize;
} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION; /* size: 0x0007 */

typedef struct _EVENT_TRACE_VERSION_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ unsigned long EventTraceKernelVersion;
} EVENT_TRACE_VERSION_INFORMATION, *PEVENT_TRACE_VERSION_INFORMATION; /* size: 0x0008 */

typedef struct _VI_TRACK_IRQL
{
  /* 0x0000 */ void* Thread;
  /* 0x0008 */ unsigned char OldIrql;
  /* 0x0009 */ unsigned char NewIrql;
  /* 0x000a */ unsigned short Processor;
  /* 0x000c */ unsigned long TickCount;
  /* 0x0010 */ void* StackTrace[5];
} VI_TRACK_IRQL, *PVI_TRACK_IRQL; /* size: 0x0038 */

typedef struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS
{
  /* 0x0000 */ unsigned long QueryFlags;
  /* 0x0004 */ long Padding_618;
  /* 0x0008 */ void* ProcessHandle;
} SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS, *PSYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS; /* size: 0x0010 */

typedef struct _KEY_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long NameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _X86_FIBER
{
  /* 0x0000 */ unsigned long FiberData;
  /* 0x0004 */ unsigned long ExceptionList;
  /* 0x0008 */ unsigned long StackBase;
  /* 0x000c */ unsigned long StackLimit;
  /* 0x0010 */ unsigned long DeallocationStack;
  /* 0x0014 */ struct _X86_NT5_CONTEXT FiberContext;
  /* 0x02e0 */ unsigned long Wx86Tib;
} X86_FIBER, *PX86_FIBER; /* size: 0x02e4 */

typedef struct _PERFINFO_INTERRUPT_INFORMATION
{
  /* 0x0000 */ unsigned __int64 InitialTime;
  /* 0x0008 */ void* ServiceRoutine;
  /* 0x0010 */ unsigned char ReturnValue;
  /* 0x0011 */ unsigned char Vector;
  /* 0x0012 */ unsigned short Reserved;
  /* 0x0014 */ long __PADDING__[1];
} PERFINFO_INTERRUPT_INFORMATION, *PPERFINFO_INTERRUPT_INFORMATION; /* size: 0x0018 */

typedef struct _PNP_REPLACE_MEMORY_LIST
{
  /* 0x0000 */ unsigned long AllocatedCount;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned __int64 TotalLength;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER Address;
    /* 0x0018 */ unsigned __int64 Length;
  } /* size: 0x0010 */ Ranges[1];
} PNP_REPLACE_MEMORY_LIST, *PPNP_REPLACE_MEMORY_LIST; /* size: 0x0020 */

typedef struct _TRANSACTION_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTransactions;
  /* 0x0004 */ struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
} TRANSACTION_LIST_INFORMATION, *PTRANSACTION_LIST_INFORMATION; /* size: 0x0014 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES
{
  /* 0x0000 */ struct _GUID KtmTransaction;
  /* 0x0010 */ unsigned __int64 NumberOfFiles;
  /* 0x0018 */ unsigned __int64 BufferSizeRequired;
  /* 0x0020 */ unsigned __int64 Offset;
} TXFS_LIST_TRANSACTION_LOCKED_FILES, *PTXFS_LIST_TRANSACTION_LOCKED_FILES; /* size: 0x0028 */

typedef union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short CRSSoftwareVisibility : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short Rsvd : 15; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER, *PPCI_EXPRESS_ROOT_CAPABILITIES_REGISTER; /* size: 0x0002 */

typedef struct _FILE_RENAME_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_619[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION; /* size: 0x0018 */

typedef struct _KSYSTEM_TIME
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long High1Time;
  /* 0x0008 */ long High2Time;
} KSYSTEM_TIME, *PKSYSTEM_TIME; /* size: 0x000c */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 ZeroBits;
  /* 0x0010 */ void* StackBase;
} PROCESS_STACK_ALLOCATION_INFORMATION, *PPROCESS_STACK_ALLOCATION_INFORMATION; /* size: 0x0018 */

typedef struct _PS_CPU_QUOTA_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long SessionCount;
  /* 0x0004 */ struct _PS_CPU_QUOTA_QUERY_ENTRY SessionInformation[1];
} PS_CPU_QUOTA_QUERY_INFORMATION, *PPS_CPU_QUOTA_QUERY_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_VERIFIER_INFORMATION Legacy;
  /* 0x0080 */ unsigned long RaiseIrqls;
  /* 0x0084 */ unsigned long AcquireSpinLocks;
  /* 0x0088 */ unsigned long SynchronizeExecutions;
  /* 0x008c */ unsigned long AllocationsWithNoTag;
  /* 0x0090 */ unsigned long AllocationsFailed;
  /* 0x0094 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0098 */ unsigned __int64 LockedBytes;
  /* 0x00a0 */ unsigned __int64 PeakLockedBytes;
  /* 0x00a8 */ unsigned __int64 MappedLockedBytes;
  /* 0x00b0 */ unsigned __int64 PeakMappedLockedBytes;
  /* 0x00b8 */ unsigned __int64 MappedIoSpaceBytes;
  /* 0x00c0 */ unsigned __int64 PeakMappedIoSpaceBytes;
  /* 0x00c8 */ unsigned __int64 PagesForMdlBytes;
  /* 0x00d0 */ unsigned __int64 PeakPagesForMdlBytes;
  /* 0x00d8 */ unsigned __int64 ContiguousMemoryBytes;
  /* 0x00e0 */ unsigned __int64 PeakContiguousMemoryBytes;
} SYSTEM_VERIFIER_COUNTERS_INFORMATION, *PSYSTEM_VERIFIER_COUNTERS_INFORMATION; /* size: 0x00e8 */

typedef struct _PERFINFO_FILE_READ_WRITE
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned __int64 Irp;
  /* 0x0010 */ unsigned __int64 ThreadId;
  /* 0x0018 */ unsigned __int64 FileObject;
  /* 0x0020 */ unsigned __int64 FileKey;
  /* 0x0028 */ unsigned long Size;
  /* 0x002c */ unsigned long Flags;
} PERFINFO_FILE_READ_WRITE, *PPERFINFO_FILE_READ_WRITE; /* size: 0x0030 */

typedef struct _DBGKD_DEBUG_DATA_HEADER64
{
  /* 0x0000 */ struct LIST_ENTRY64 List;
  /* 0x0010 */ unsigned long OwnerTag;
  /* 0x0014 */ unsigned long Size;
} DBGKD_DEBUG_DATA_HEADER64, *PDBGKD_DEBUG_DATA_HEADER64; /* size: 0x0018 */

typedef struct _FILE_ALLOCATION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFORMATION, *PFILE_ALLOCATION_INFORMATION; /* size: 0x0008 */

typedef struct _TXFS_LIST_TRANSACTIONS
{
  /* 0x0000 */ unsigned __int64 NumberOfTransactions;
  /* 0x0008 */ unsigned __int64 BufferSizeRequired;
} TXFS_LIST_TRANSACTIONS, *PTXFS_LIST_TRANSACTIONS; /* size: 0x0010 */

typedef struct _EXCEPTION_POINTERS
{
  /* 0x0000 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0008 */ struct _CONTEXT* ContextRecord;
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS; /* size: 0x0010 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE
{
  /* 0x0000 */ unsigned long ResponseLevel;
  /* 0x0004 */ unsigned long NumberEntries;
  union
  {
    /* 0x0008 */ struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY* Lev1Depends /* zero-length array */;
    /* 0x0008 */ struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY* Lev2Depends /* zero-length array */;
    /* 0x0008 */ long __PADDING__[17];
  }; /* size: 0x0044 */
} STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE, *PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE; /* size: 0x004c */

typedef struct _PARTITION_UNIT_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_620;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* GetUniqueId /* function */;
  /* 0x0028 */ void* GetSpareProperties /* function */;
  /* 0x0030 */ void* IsValidSpare /* function */;
} PARTITION_UNIT_INTERFACE, *PPARTITION_UNIT_INTERFACE; /* size: 0x0038 */

typedef struct _AMD64_KSWITCH_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned long MxCsr;
  /* 0x002c */ unsigned char ApcBypass;
  /* 0x002d */ unsigned char Fill1[3];
  /* 0x0030 */ unsigned __int64 Rbp;
  /* 0x0038 */ unsigned __int64 Return;
} AMD64_KSWITCH_FRAME, *PAMD64_KSWITCH_FRAME; /* size: 0x0040 */

typedef struct _PERFINFO_CCSWAP_IDLE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DataType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long TimeDelta : 30; /* bit position: 2 */
  }; /* bitfield */
} PERFINFO_CCSWAP_IDLE, *PPERFINFO_CCSWAP_IDLE; /* size: 0x0004 */

typedef union _PCI_EXPRESS_SLOT_STATUS_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short AttentionButtonPressed : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short PowerFaultDetected : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short MRLSensorChanged : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short PresenceDetectChanged : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short CommandCompleted : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short MRLSensorState : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned short PresenceDetectState : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned short ElectromechanicalLockEngaged : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned short DataLinkStateChanged : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned short Rsvd : 7; /* bit position: 9 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_SLOT_STATUS_REGISTER, *PPCI_EXPRESS_SLOT_STATUS_REGISTER; /* size: 0x0002 */

typedef struct _WMI_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned __int64 UniqueProcessKey;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ unsigned long ParentId;
  /* 0x0010 */ unsigned long SessionId;
  /* 0x0014 */ long ExitStatus;
  /* 0x0018 */ unsigned __int64 DirectoryTableBase;
  /* 0x0020 */ unsigned long Sid;
  /* 0x0024 */ long __PADDING__[1];
} WMI_PROCESS_INFORMATION, *PWMI_PROCESS_INFORMATION; /* size: 0x0028 */

struct tagWNODE_EVENT_ITEM
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
}; /* size: 0x0030 */

typedef struct _CI_LOG_SCHEDULER_SLEEP
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
} CI_LOG_SCHEDULER_SLEEP, *PCI_LOG_SCHEDULER_SLEEP; /* size: 0x0030 */

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  /* 0x0000 */ unsigned char Name[16];
  /* 0x0010 */ unsigned char Date[12];
  /* 0x001c */ unsigned char UserID[6];
  /* 0x0022 */ unsigned char GroupID[6];
  /* 0x0028 */ unsigned char Mode[8];
  /* 0x0030 */ unsigned char Size[10];
  /* 0x003a */ unsigned char EndHeader[2];
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER; /* size: 0x003c */

typedef struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  union
  {
    union
    {
      /* 0x0008 */ void** Generic;
      /* 0x0008 */ struct _IO_INTERRUPT_MESSAGE_INFO** InterruptMessageTable;
      /* 0x0008 */ struct _KINTERRUPT** InterruptObject;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ ConnectionContext;
  /* 0x0010 */ void* MessageServiceRoutine /* function */;
  /* 0x0018 */ void* ServiceContext;
  /* 0x0020 */ unsigned __int64* SpinLock;
  /* 0x0028 */ unsigned char SynchronizeIrql;
  /* 0x0029 */ unsigned char FloatingSave;
  /* 0x002a */ char Padding_621[6];
  /* 0x0030 */ void* FallBackServiceRoutine /* function */;
} IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS, *PIO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS; /* size: 0x0038 */

typedef struct _WMI_FILE_IO
{
  /* 0x0000 */ void* FileObject;
  /* 0x0008 */ wchar_t FileName[1];
  /* 0x000a */ char __PADDING__[6];
} WMI_FILE_IO, *PWMI_FILE_IO; /* size: 0x0010 */

typedef struct _KCRM_TRANSACTION_BLOB
{
  /* 0x0000 */ struct _GUID UOW;
  /* 0x0010 */ struct _GUID TmIdentity;
  /* 0x0020 */ unsigned long IsolationLevel;
  /* 0x0024 */ unsigned long IsolationFlags;
  /* 0x0028 */ unsigned long Timeout;
  /* 0x002c */ wchar_t Description[64];
} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB; /* size: 0x00ac */

typedef union _HV_X64_MSR_HYPERCALL_CONTENTS
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Enable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ReservedP : 11; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 GpaPageNumber : 52; /* bit position: 12 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} HV_X64_MSR_HYPERCALL_CONTENTS, *PHV_X64_MSR_HYPERCALL_CONTENTS; /* size: 0x0008 */

struct FIND_BY_SID_OUTPUT
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO
{
  /* 0x0000 */ unsigned char TransactionsActiveAtSnapshot;
} TXFS_TRANSACTION_ACTIVE_INFO, *PTXFS_TRANSACTION_ACTIVE_INFO; /* size: 0x0001 */

typedef struct _RTL_USER_PROCESS_INFORMATION64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_622;
  /* 0x0008 */ __int64 Process;
  /* 0x0010 */ __int64 Thread;
  /* 0x0018 */ struct _CLIENT_ID64 ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
} RTL_USER_PROCESS_INFORMATION64, *PRTL_USER_PROCESS_INFORMATION64; /* size: 0x0068 */

typedef struct _EVENT_BASIC_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TYPE EventType;
  /* 0x0004 */ long EventState;
} EVENT_BASIC_INFORMATION, *PEVENT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _IO_SESSION_STATE_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ enum _IO_SESSION_STATE SessionState;
  /* 0x0008 */ unsigned char LocalSession;
  /* 0x0009 */ char __PADDING__[3];
} IO_SESSION_STATE_INFORMATION, *PIO_SESSION_STATE_INFORMATION; /* size: 0x000c */

typedef struct _KI_LOCAL_ARRAY8
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ unsigned char Fill5;
  /* 0x0005 */ unsigned char Fill6;
  /* 0x0006 */ unsigned char Fill7;
  /* 0x0007 */ unsigned char Fill8;
  /* 0x0008 */ unsigned char Fill9;
  /* 0x0009 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY8, *PKI_LOCAL_ARRAY8; /* size: 0x0061 */

typedef struct _TRACE_ENABLE_FLAG_EXTENSION
{
  /* 0x0000 */ unsigned short Offset;
  /* 0x0002 */ unsigned char Length;
  /* 0x0003 */ unsigned char Flag;
} TRACE_ENABLE_FLAG_EXTENSION, *PTRACE_ENABLE_FLAG_EXTENSION; /* size: 0x0004 */

typedef struct _IMAGE_EXPORT_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long Base;
  /* 0x0014 */ unsigned long NumberOfFunctions;
  /* 0x0018 */ unsigned long NumberOfNames;
  /* 0x001c */ unsigned long AddressOfFunctions;
  /* 0x0020 */ unsigned long AddressOfNames;
  /* 0x0024 */ unsigned long AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY; /* size: 0x0028 */

typedef struct _PAGE_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long PagePriority;
} PAGE_PRIORITY_INFORMATION, *PPAGE_PRIORITY_INFORMATION; /* size: 0x0004 */

typedef struct _PCI_AGP_STATUS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Rate : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned long Agp3Mode : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long FastWrite : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long FourGB : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long HostTransDisable : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long Gart64 : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned long ITA_Coherent : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned long SideBandAddressing : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned long CalibrationCycle : 3; /* bit position: 10 */
    /* 0x0000 */ unsigned long AsyncRequestSize : 3; /* bit position: 13 */
    /* 0x0000 */ unsigned long Rsvd1 : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long Isoch : 1; /* bit position: 17 */
    /* 0x0000 */ unsigned long Rsvd2 : 6; /* bit position: 18 */
    /* 0x0000 */ unsigned long RequestQueueDepthMaximum : 8; /* bit position: 24 */
  }; /* bitfield */
} PCI_AGP_STATUS, *PPCI_AGP_STATUS; /* size: 0x0004 */

typedef struct _PCI_AGP_COMMAND
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Rate : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned long Rsvd1 : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long FastWriteEnable : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long FourGBEnable : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Rsvd2 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long Gart64 : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned long AGPEnable : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned long SBAEnable : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned long CalibrationCycle : 3; /* bit position: 10 */
    /* 0x0000 */ unsigned long AsyncReqSize : 3; /* bit position: 13 */
    /* 0x0000 */ unsigned long Rsvd3 : 8; /* bit position: 16 */
    /* 0x0000 */ unsigned long RequestQueueDepth : 8; /* bit position: 24 */
  }; /* bitfield */
} PCI_AGP_COMMAND, *PPCI_AGP_COMMAND; /* size: 0x0004 */

typedef struct _PCI_AGP_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  struct /* bitfield */
  {
    /* 0x0002 */ unsigned short Minor : 4; /* bit position: 0 */
    /* 0x0002 */ unsigned short Major : 4; /* bit position: 4 */
    /* 0x0002 */ unsigned short Rsvd1 : 8; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ struct _PCI_AGP_STATUS AGPStatus;
  /* 0x0008 */ struct _PCI_AGP_COMMAND AGPCommand;
} PCI_AGP_CAPABILITY, *PPCI_AGP_CAPABILITY; /* size: 0x000c */

typedef struct _PERFINFO_PROCESS_PERFCTR
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long PageFaultCount;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned __int64 PeakVirtualSize;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 VirtualSize;
  /* 0x0040 */ unsigned __int64 WorkingSetSize;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0058 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0060 */ unsigned __int64 PrivatePageCount;
} PERFINFO_PROCESS_PERFCTR, *PPERFINFO_PROCESS_PERFCTR; /* size: 0x0068 */

struct QUERY_CONTEXT
{
  /* 0x0000 */ struct _DEVICE_NODE* DeviceNode;
  /* 0x0008 */ struct _ADD_CONTEXT* AddContext;
  /* 0x0010 */ struct _DRIVER_LIST_ENTRY* DriverLists[5];
}; /* size: 0x0038 */

typedef struct _MESSAGE_TRACE_HEADER
{
  union
  {
    /* 0x0000 */ unsigned long Marker;
    struct
    {
      /* 0x0000 */ unsigned short Size;
      /* 0x0002 */ unsigned char Reserved;
      /* 0x0003 */ unsigned char Version;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long Header;
    /* 0x0004 */ struct _WMI_TRACE_MESSAGE_PACKET Packet;
  }; /* size: 0x0004 */
} MESSAGE_TRACE_HEADER, *PMESSAGE_TRACE_HEADER; /* size: 0x0008 */

typedef struct _MESSAGE_TRACE_USER
{
  /* 0x0000 */ unsigned __int64 LoggerHandle;
  /* 0x0008 */ struct _MESSAGE_TRACE_HEADER MessageHeader;
  /* 0x0010 */ struct _GUID MessageGuid;
  /* 0x0020 */ unsigned long MessageFlags;
  /* 0x0024 */ unsigned long DataSize;
  /* 0x0028 */ unsigned __int64 Data;
} MESSAGE_TRACE_USER, *PMESSAGE_TRACE_USER; /* size: 0x0030 */

typedef struct _ETW_NOTIFICATION_HEADER
{
  /* 0x0000 */ enum _ETW_NOTIFICATION_TYPE NotificationType;
  /* 0x0004 */ unsigned long NotificationSize;
  /* 0x0008 */ unsigned long Offset;
  /* 0x000c */ unsigned char ReplyRequested;
  /* 0x000d */ char Padding_623[3];
  /* 0x0010 */ unsigned long Timeout;
  union
  {
    /* 0x0014 */ unsigned long ReplyCount;
    /* 0x0014 */ unsigned long NotifyeeCount;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned __int64 Reserved2;
  /* 0x0020 */ unsigned long TargetPID;
  /* 0x0024 */ unsigned long SourcePID;
  /* 0x0028 */ struct _GUID DestinationGuid;
  /* 0x0038 */ struct _GUID SourceGuid;
} ETW_NOTIFICATION_HEADER, *PETW_NOTIFICATION_HEADER; /* size: 0x0048 */

typedef struct _ETW_SESSION_NOTIFICATION_PACKET
{
  /* 0x0000 */ struct _ETW_NOTIFICATION_HEADER NotificationHeader;
  /* 0x0048 */ enum _ETW_SESSION_NOTIFICATION_TYPE Type;
  /* 0x004c */ long Status;
  /* 0x0050 */ unsigned __int64 TraceHandle;
  /* 0x0058 */ unsigned long Reserved[2];
} ETW_SESSION_NOTIFICATION_PACKET, *PETW_SESSION_NOTIFICATION_PACKET; /* size: 0x0060 */

typedef struct _EBC_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ long Padding_624;
  /* 0x0008 */ unsigned __int64 R0;
  /* 0x0010 */ unsigned __int64 R1;
  /* 0x0018 */ unsigned __int64 R2;
  /* 0x0020 */ unsigned __int64 R3;
  /* 0x0028 */ unsigned __int64 R4;
  /* 0x0030 */ unsigned __int64 R5;
  /* 0x0038 */ unsigned __int64 R6;
  /* 0x0040 */ unsigned __int64 R7;
  /* 0x0048 */ unsigned __int64 Flags;
  /* 0x0050 */ unsigned __int64 Ip;
  /* 0x0058 */ unsigned __int64 Reserved[6];
} EBC_CONTEXT, *PEBC_CONTEXT; /* size: 0x0088 */

struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned long DeCommitFreeBlockThreshold;
  /* 0x001c */ unsigned long DeCommitTotalFreeThreshold;
  /* 0x0020 */ unsigned long LockPrefixTable;
  /* 0x0024 */ unsigned long MaximumAllocationSize;
  /* 0x0028 */ unsigned long VirtualMemoryThreshold;
  /* 0x002c */ unsigned long ProcessHeapFlags;
  /* 0x0030 */ unsigned long ProcessAffinityMask;
  /* 0x0034 */ unsigned short CSDVersion;
  /* 0x0036 */ unsigned short Reserved1;
  /* 0x0038 */ unsigned long EditList;
  /* 0x003c */ unsigned long SecurityCookie;
  /* 0x0040 */ unsigned long SEHandlerTable;
  /* 0x0044 */ unsigned long SEHandlerCount;
}; /* size: 0x0048 */

typedef struct _PERFINFO_DRIVER_MAJORFUNCTION_RET
{
  /* 0x0000 */ void* Irp;
  /* 0x0008 */ unsigned long UniqMatchId;
} PERFINFO_DRIVER_MAJORFUNCTION_RET, *PPERFINFO_DRIVER_MAJORFUNCTION_RET; /* size: 0x000c */

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long UnwindInfoAddress;
} IMAGE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_RUNTIME_FUNCTION_ENTRY; /* size: 0x000c */

typedef union _PCI_EXPRESS_ROOT_ERROR_COMMAND
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long CorrectableErrorReportingEnable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long NonFatalErrorReportingEnable : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long FatalErrorReportingEnable : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_ROOT_ERROR_COMMAND, *PPCI_EXPRESS_ROOT_ERROR_COMMAND; /* size: 0x0004 */

typedef struct _PCI_EXPRESS_ROOTPORT_AER_CAPABILITY
{
  /* 0x0000 */ struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;
  /* 0x0004 */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS UncorrectableErrorStatus;
  /* 0x0008 */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK UncorrectableErrorMask;
  /* 0x000c */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY UncorrectableErrorSeverity;
  /* 0x0010 */ union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS CorrectableErrorStatus;
  /* 0x0014 */ union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK CorrectableErrorMask;
  /* 0x0018 */ union _PCI_EXPRESS_AER_CAPABILITIES CapabilitiesAndControl;
  /* 0x001c */ unsigned long HeaderLog[4];
  /* 0x002c */ union _PCI_EXPRESS_ROOT_ERROR_COMMAND RootErrorCommand;
  /* 0x0030 */ union _PCI_EXPRESS_ROOT_ERROR_STATUS RootErrorStatus;
  /* 0x0034 */ union _PCI_EXPRESS_ERROR_SOURCE_ID ErrorSourceId;
} PCI_EXPRESS_ROOTPORT_AER_CAPABILITY, *PPCI_EXPRESS_ROOTPORT_AER_CAPABILITY; /* size: 0x0038 */

typedef struct _FP_80
{
  /* 0x0000 */ unsigned long W[3];
} FP_80, *PFP_80; /* size: 0x000c */

typedef struct _FP_128
{
  /* 0x0000 */ unsigned long W[4];
} FP_128, *PFP_128; /* size: 0x0010 */

typedef struct _TPM_BOOT_ENTROPY_NT_RESULT
{
  /* 0x0000 */ unsigned __int64 Policy;
  /* 0x0008 */ enum _TPM_BOOT_ENTROPY_RESULT_CODE ResultCode;
  /* 0x000c */ long ResultStatus;
  /* 0x0010 */ unsigned __int64 Time;
  /* 0x0018 */ unsigned long EntropyLength;
  /* 0x001c */ unsigned char EntropyData[40];
  /* 0x0044 */ long __PADDING__[1];
} TPM_BOOT_ENTROPY_NT_RESULT, *PTPM_BOOT_ENTROPY_NT_RESULT; /* size: 0x0048 */

typedef struct _CRT_DOUBLE
{
  /* 0x0000 */ double x;
} CRT_DOUBLE, *PCRT_DOUBLE; /* size: 0x0008 */

typedef struct _FP_IEEE_VALUE
{
  union
  {
    union
    {
      /* 0x0000 */ short I16Value;
      /* 0x0000 */ unsigned short U16Value;
      /* 0x0000 */ long I32Value;
      /* 0x0000 */ unsigned long U32Value;
      /* 0x0000 */ void* StringValue;
      /* 0x0000 */ unsigned long CompareValue;
      /* 0x0000 */ struct _FP_32 Fp32Value;
      /* 0x0000 */ union _LARGE_INTEGER I64Value;
      /* 0x0000 */ union _ULARGE_INTEGER U64Value;
      /* 0x0000 */ struct _FP_64 Fp64Value;
      /* 0x0000 */ struct _FP_80 Fp80Value;
      /* 0x0000 */ struct _FP_128 Fp128Value;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Value;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long RoundingMode : 2; /* bit position: 0 */
      /* 0x0010 */ unsigned long Inexact : 1; /* bit position: 2 */
      /* 0x0010 */ unsigned long Underflow : 1; /* bit position: 3 */
      /* 0x0010 */ unsigned long Overflow : 1; /* bit position: 4 */
      /* 0x0010 */ unsigned long ZeroDivide : 1; /* bit position: 5 */
      /* 0x0010 */ unsigned long InvalidOperation : 1; /* bit position: 6 */
      /* 0x0010 */ unsigned long OperandValid : 1; /* bit position: 7 */
      /* 0x0010 */ unsigned long Format : 4; /* bit position: 8 */
      /* 0x0010 */ unsigned long Precision : 4; /* bit position: 12 */
      /* 0x0010 */ unsigned long Operation : 12; /* bit position: 16 */
      /* 0x0010 */ unsigned long Spare : 3; /* bit position: 28 */
      /* 0x0010 */ unsigned long HardwareException : 1; /* bit position: 31 */
    }; /* bitfield */
  } /* size: 0x0004 */ Control;
  /* 0x0014 */ long __PADDING__[1];
} FP_IEEE_VALUE, *PFP_IEEE_VALUE; /* size: 0x0018 */

typedef struct _SE_AUDITING_STATE
{
  /* 0x0000 */ unsigned char AuditOnSuccess;
  /* 0x0001 */ unsigned char AuditOnFailure;
} SE_AUDITING_STATE, *PSE_AUDITING_STATE; /* size: 0x0002 */

typedef struct _WMI_SYSDLLINFO_RECORD
{
  /* 0x0000 */ unsigned long OriginalFileNameLen;
  /* 0x0004 */ wchar_t OriginalFileName[1];
  /* 0x0006 */ char __PADDING__[2];
} WMI_SYSDLLINFO_RECORD, *PWMI_SYSDLLINFO_RECORD; /* size: 0x0008 */

typedef struct _WMI_THREAD_INFORMATION
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ThreadId;
} WMI_THREAD_INFORMATION, *PWMI_THREAD_INFORMATION; /* size: 0x0008 */

typedef struct _REG_KEY_HANDLE_CLOSE_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ void* CallContext;
  /* 0x0010 */ void* ObjectContext;
  /* 0x0018 */ void* Reserved;
} REG_KEY_HANDLE_CLOSE_INFORMATION, *PREG_KEY_HANDLE_CLOSE_INFORMATION; /* size: 0x0020 */

typedef struct _TEB_ACTIVE_FRAME_EX32
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME32 BasicFrame;
  /* 0x000c */ unsigned long ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX32, *PTEB_ACTIVE_FRAME_EX32; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BufferLength;
  /* 0x0008 */ void* Buffer;
} PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA, *PPLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA; /* size: 0x0010 */

typedef struct _PERFINFO_MEMORY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ZeroPageCount;
  /* 0x0008 */ unsigned __int64 FreePageCount;
  /* 0x0010 */ unsigned __int64 ModifiedPageCount;
  /* 0x0018 */ unsigned __int64 ModifiedNoWritePageCount;
  /* 0x0020 */ unsigned __int64 BadPageCount;
  /* 0x0028 */ unsigned __int64 PageCountByPriority[8];
  /* 0x0068 */ unsigned __int64 RepurposedPagesByPriority[8];
} PERFINFO_MEMORY_INFORMATION, *PPERFINFO_MEMORY_INFORMATION; /* size: 0x00a8 */

typedef struct _STORAGE_READ_CAPACITY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long BlockLength;
  /* 0x000c */ long Padding_625;
  /* 0x0010 */ union _LARGE_INTEGER NumberOfBlocks;
  /* 0x0018 */ union _LARGE_INTEGER DiskLength;
} STORAGE_READ_CAPACITY, *PSTORAGE_READ_CAPACITY; /* size: 0x0020 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX
{
  /* 0x0000 */ unsigned short NextOffset;
  /* 0x0002 */ char Padding_626[6];
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
  /* 0x0130 */ unsigned long ImageChecksum;
  /* 0x0134 */ unsigned long TimeDateStamp;
  /* 0x0138 */ void* DefaultBase;
} RTL_PROCESS_MODULE_INFORMATION_EX, *PRTL_PROCESS_MODULE_INFORMATION_EX; /* size: 0x0140 */

typedef union _IMAGE_AUX_SYMBOL_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long WeakDefaultSymIndex;
      /* 0x0004 */ unsigned long WeakSearchType;
      /* 0x0008 */ unsigned char rgbReserved[12];
    } /* size: 0x0014 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[20];
    } /* size: 0x0014 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ unsigned char bReserved;
      /* 0x0010 */ short HighNumber;
      /* 0x0012 */ unsigned char rgbReserved[2];
    } /* size: 0x0014 */ Section;
    struct
    {
      /* 0x0000 */ struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
      /* 0x0012 */ unsigned char rgbReserved[2];
    }; /* size: 0x0014 */
    struct
    {
      /* 0x0000 */ unsigned long crc;
      /* 0x0004 */ unsigned char rgbReserved[16];
    } /* size: 0x0014 */ CRC;
  }; /* size: 0x0014 */
} IMAGE_AUX_SYMBOL_EX, *PIMAGE_AUX_SYMBOL_EX; /* size: 0x0014 */

struct _EX_EXTENSION;

typedef union _MM_PAGE_ACCESS_INFO_FLAGS
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long FilePointerIndex : 9; /* bit position: 0 */
        /* 0x0000 */ unsigned long HardFault : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned long Image : 1; /* bit position: 10 */
        /* 0x0000 */ unsigned long Spare0 : 1; /* bit position: 11 */
      }; /* bitfield */
    } /* size: 0x0004 */ File;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long FilePointerIndex : 9; /* bit position: 0 */
        /* 0x0000 */ unsigned long HardFault : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned long Spare1 : 2; /* bit position: 10 */
      }; /* bitfield */
    } /* size: 0x0004 */ Private;
  }; /* size: 0x0004 */
} MM_PAGE_ACCESS_INFO_FLAGS, *PMM_PAGE_ACCESS_INFO_FLAGS; /* size: 0x0004 */

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _MSWmi_GuidRegistrationInfo
{
  /* 0x0000 */ unsigned long Operation;
  /* 0x0004 */ unsigned long GuidCount;
  /* 0x0008 */ struct _MSWmi_Guid GuidList[1];
} MSWmi_GuidRegistrationInfo, *PMSWmi_GuidRegistrationInfo; /* size: 0x0018 */

typedef struct _POLICY_ACCOUNT_DOMAIN_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING DomainName;
  /* 0x0010 */ void* DomainSid;
} POLICY_ACCOUNT_DOMAIN_INFO, *PPOLICY_ACCOUNT_DOMAIN_INFO; /* size: 0x0018 */

typedef struct _PNP_DEPENDENT_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DEVICE_OBJECT* DependentPdo;
  /* 0x0018 */ unsigned char Satisfied;
  /* 0x0019 */ char __PADDING__[7];
} PNP_DEPENDENT_INFO, *PPNP_DEPENDENT_INFO; /* size: 0x0020 */

typedef struct _WMI_IMAGELOAD_INFORMATION
{
  /* 0x0000 */ void* ImageBase;
  /* 0x0008 */ unsigned __int64 ImageSize;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long ImageChecksum;
  /* 0x0018 */ unsigned long TimeDateStamp;
  /* 0x001c */ unsigned long Reserved0;
  /* 0x0020 */ void* DefaultBase;
  /* 0x0028 */ unsigned long Reserved1;
  /* 0x002c */ unsigned long Reserved2;
  /* 0x0030 */ unsigned long Reserved3;
  /* 0x0034 */ unsigned long Reserved4;
  /* 0x0038 */ wchar_t FileName[1];
  /* 0x003a */ char __PADDING__[6];
} WMI_IMAGELOAD_INFORMATION, *PWMI_IMAGELOAD_INFORMATION; /* size: 0x0040 */

typedef struct _SYSTEM_HIVE_LIMITS
{
  /* 0x0000 */ unsigned long Low;
  /* 0x0004 */ unsigned long High;
} SYSTEM_HIVE_LIMITS, *PSYSTEM_HIVE_LIMITS; /* size: 0x0008 */

typedef union _FILE_SEGMENT_ELEMENT
{
  union
  {
    /* 0x0000 */ void* Buffer;
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT; /* size: 0x0008 */

typedef struct _SET_PARTITION_INFORMATION
{
  /* 0x0000 */ unsigned char PartitionType;
} SET_PARTITION_INFORMATION, *PSET_PARTITION_INFORMATION; /* size: 0x0001 */

typedef struct _PARTITION_INFORMATION_GPT
{
  /* 0x0000 */ struct _GUID PartitionType;
  /* 0x0010 */ struct _GUID PartitionId;
  /* 0x0020 */ unsigned __int64 Attributes;
  /* 0x0028 */ wchar_t Name[36];
} PARTITION_INFORMATION_GPT, *PPARTITION_INFORMATION_GPT; /* size: 0x0070 */

typedef struct _SET_PARTITION_INFORMATION_EX
{
  /* 0x0000 */ enum _PARTITION_STYLE PartitionStyle;
  /* 0x0004 */ long Padding_627;
  union
  {
    /* 0x0008 */ struct _SET_PARTITION_INFORMATION Mbr;
    /* 0x0008 */ struct _PARTITION_INFORMATION_GPT Gpt;
  }; /* size: 0x0070 */
} SET_PARTITION_INFORMATION_EX, *PSET_PARTITION_INFORMATION_EX; /* size: 0x0078 */

typedef struct _SI_COPYFILE
{
  /* 0x0000 */ unsigned long SourceFileNameLength;
  /* 0x0004 */ unsigned long DestinationFileNameLength;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ wchar_t FileNameBuffer[1];
  /* 0x000e */ char __PADDING__[2];
} SI_COPYFILE, *PSI_COPYFILE; /* size: 0x0010 */

typedef struct _FILE_PIPE_INFORMATION
{
  /* 0x0000 */ unsigned long ReadMode;
  /* 0x0004 */ unsigned long CompletionMode;
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION; /* size: 0x0008 */

typedef struct _STORAGE_HOTPLUG_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned char MediaRemovable;
  /* 0x0005 */ unsigned char MediaHotplug;
  /* 0x0006 */ unsigned char DeviceHotplug;
  /* 0x0007 */ unsigned char WriteCacheEnableOverride;
} STORAGE_HOTPLUG_INFO, *PSTORAGE_HOTPLUG_INFO; /* size: 0x0008 */

typedef struct _PCI_AGP_CONTROL
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Rsvd1 : 7; /* bit position: 0 */
    /* 0x0000 */ unsigned long GTLB_Enable : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned long AP_Enable : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned long CAL_Disable : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned long Rsvd2 : 22; /* bit position: 10 */
  }; /* bitfield */
} PCI_AGP_CONTROL, *PPCI_AGP_CONTROL; /* size: 0x0004 */

typedef struct _OB_CALLBACK_CONTEXT_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY CallbackListEntry;
  /* 0x0010 */ unsigned long Operations;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ void* Registration;
  /* 0x0020 */ struct _OBJECT_TYPE* ObjectType;
  /* 0x0028 */ void* PreCallback /* function */;
  /* 0x0030 */ void* PostCallback /* function */;
  /* 0x0038 */ struct _EX_RUNDOWN_REF RundownReference;
} OB_CALLBACK_CONTEXT_BLOCK, *POB_CALLBACK_CONTEXT_BLOCK; /* size: 0x0040 */

typedef struct _OB_REGISTRATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short RegistrationCount;
  /* 0x0004 */ long Padding_628;
  /* 0x0008 */ void* RegistrationContext;
  /* 0x0010 */ struct _UNICODE_STRING Altitude;
  /* 0x0020 */ struct _OB_CALLBACK_CONTEXT_BLOCK CallbackContext[1];
} OB_REGISTRATION, *POB_REGISTRATION; /* size: 0x0060 */

typedef struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE
{
  /* 0x0000 */ struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE_HEADER Header;
} HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE, *PHV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE; /* size: 0x0018 */

typedef struct _PNP_DEVICE_COMPLETION_QUEUE
{
  /* 0x0000 */ struct _LIST_ENTRY DispatchedList;
  /* 0x0010 */ unsigned long DispatchedCount;
  /* 0x0014 */ long Padding_629;
  /* 0x0018 */ struct _LIST_ENTRY CompletedList;
  /* 0x0028 */ struct _KSEMAPHORE CompletedSemaphore;
  /* 0x0048 */ unsigned __int64 SpinLock;
} PNP_DEVICE_COMPLETION_QUEUE, *PPNP_DEVICE_COMPLETION_QUEUE; /* size: 0x0050 */

typedef struct _RLETYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Partial : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 NewSubsection : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 PrototypePteHighBits : 30; /* bit position: 2 */
  }; /* bitfield */
} RLETYPE, *PRLETYPE; /* size: 0x0008 */

typedef struct _SID_AND_ATTRIBUTES_HASH
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ long Padding_630;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* SidAttr;
  /* 0x0010 */ unsigned __int64 Hash[32];
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH; /* size: 0x0110 */

typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER DueTime;
  /* 0x0008 */ void* TimerApcRoutine /* function */;
  /* 0x0010 */ void* TimerContext;
  /* 0x0018 */ struct _COUNTED_REASON_CONTEXT* WakeContext;
  /* 0x0020 */ unsigned long Period;
  /* 0x0024 */ unsigned long TolerableDelay;
  /* 0x0028 */ unsigned char* PreviousState;
} TIMER_SET_COALESCABLE_TIMER_INFO, *PTIMER_SET_COALESCABLE_TIMER_INFO; /* size: 0x0030 */

typedef struct _LSA_ADT_SID_LIST
{
  /* 0x0000 */ unsigned long cSids;
  /* 0x0004 */ long Padding_631;
  /* 0x0008 */ struct _LSA_ADT_SID_LIST_ENTRY* Sids;
} LSA_ADT_SID_LIST, *PLSA_ADT_SID_LIST; /* size: 0x0010 */

typedef struct _DISK_CACHE_SETTING
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _DISK_CACHE_STATE State;
  /* 0x0008 */ unsigned char IsPowerProtected;
  /* 0x0009 */ char __PADDING__[3];
} DISK_CACHE_SETTING, *PDISK_CACHE_SETTING; /* size: 0x000c */

typedef struct _CM_KEYBOARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char Subtype;
  /* 0x0006 */ unsigned short KeyboardFlags;
} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA; /* size: 0x0008 */

typedef struct _LSA_ADT_SID_LIST_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_632;
  /* 0x0008 */ void* Sid;
} LSA_ADT_SID_LIST_ENTRY, *PLSA_ADT_SID_LIST_ENTRY; /* size: 0x0010 */

typedef struct _PERFINFO_SESSIONCREATE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 PageDirectoryBase;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ long __PADDING__[1];
} PERFINFO_SESSIONCREATE_INFORMATION, *PPERFINFO_SESSIONCREATE_INFORMATION; /* size: 0x0010 */

typedef struct _ENUM_CONTEXT
{
  /* 0x0000 */ void* CallersCallback /* function */;
  /* 0x0008 */ void* CallersContext;
} ENUM_CONTEXT, *PENUM_CONTEXT; /* size: 0x0010 */

typedef struct _PERFINFO_FILEOBJECT_INFORMATION
{
  /* 0x0000 */ void* FileObject;
} PERFINFO_FILEOBJECT_INFORMATION, *PPERFINFO_FILEOBJECT_INFORMATION; /* size: 0x0008 */

typedef struct _PNP_USER_BLOCK
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long Result;
  /* 0x0008 */ enum _PNP_VETO_TYPE* VetoType;
  /* 0x0010 */ struct _UNICODE_STRING* VetoName;
  /* 0x0018 */ struct _ERESOURCE Lock;
  /* 0x0080 */ struct _KEVENT Registered;
  /* 0x0098 */ struct _KEVENT NotifyUserEvent;
  /* 0x00b0 */ struct _KEVENT UserResultEvent;
  /* 0x00c8 */ void* PoolBuffer;
  /* 0x00d0 */ unsigned long PoolUsed;
  /* 0x00d4 */ unsigned long PoolSize;
  /* 0x00d8 */ unsigned char Deferred;
  /* 0x00d9 */ char __PADDING__[7];
} PNP_USER_BLOCK, *PPNP_USER_BLOCK; /* size: 0x00e0 */

typedef struct _MESSAGE_TRACE
{
  /* 0x0000 */ struct _MESSAGE_TRACE_HEADER MessageHeader;
  /* 0x0008 */ unsigned char Data;
  /* 0x0009 */ char __PADDING__[3];
} MESSAGE_TRACE, *PMESSAGE_TRACE; /* size: 0x000c */

typedef struct _ARBITER_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_633;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* ArbiterHandler /* function */;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} ARBITER_INTERFACE, *PARBITER_INTERFACE; /* size: 0x0030 */

typedef struct _DUMP_DRIVER
{
  /* 0x0000 */ void* DumpDriverList;
  /* 0x0008 */ wchar_t DriverName[15];
  /* 0x0026 */ wchar_t BaseName[15];
  /* 0x0044 */ long __PADDING__[1];
} DUMP_DRIVER, *PDUMP_DRIVER; /* size: 0x0048 */

typedef struct _ETW_DFSS_START_NEW_INTERVAL
{
  /* 0x0000 */ unsigned long CurrentGeneration;
  /* 0x0004 */ unsigned long SessionCount;
  /* 0x0008 */ unsigned __int64 TotalCycleCredit;
  /* 0x0010 */ unsigned __int64 TotalCyclesAccumulated;
  /* 0x0018 */ struct _ETW_PER_SESSION_QUOTA SessionQuota[1];
} ETW_DFSS_START_NEW_INTERVAL, *PETW_DFSS_START_NEW_INTERVAL; /* size: 0x0030 */

typedef struct _TOKEN_AUDIT_POLICY
{
  /* 0x0000 */ unsigned char PerUserPolicy[27];
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY; /* size: 0x001b */

typedef struct _STORAGE_IDENTIFIER
{
  /* 0x0000 */ enum _STORAGE_IDENTIFIER_CODE_SET CodeSet;
  /* 0x0004 */ enum _STORAGE_IDENTIFIER_TYPE Type;
  /* 0x0008 */ unsigned short IdentifierSize;
  /* 0x000a */ unsigned short NextOffset;
  /* 0x000c */ enum _STORAGE_ASSOCIATION_TYPE Association;
  /* 0x0010 */ unsigned char Identifier[1];
  /* 0x0011 */ char __PADDING__[3];
} STORAGE_IDENTIFIER, *PSTORAGE_IDENTIFIER; /* size: 0x0014 */

typedef struct _KDPC_STACK_FRAME
{
  /* 0x0000 */ void* ParametersHome[4];
  /* 0x0020 */ void* ErrorCodePad;
  /* 0x0028 */ struct _MACHINE_FRAME MachineFrame;
} KDPC_STACK_FRAME, *PKDPC_STACK_FRAME; /* size: 0x0050 */

typedef struct _PNP_VETO_DEVICE_OBJECT_INFO
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ struct _LIST_ENTRY ListEntry;
} PNP_VETO_DEVICE_OBJECT_INFO, *PPNP_VETO_DEVICE_OBJECT_INFO; /* size: 0x0018 */

struct BATTERY_MINIPORT_INFO
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ long Padding_634;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* QueryTag /* function */;
  /* 0x0018 */ void* QueryInformation /* function */;
  /* 0x0020 */ void* SetInformation /* function */;
  /* 0x0028 */ void* QueryStatus /* function */;
  /* 0x0030 */ void* SetStatusNotify /* function */;
  /* 0x0038 */ void* DisableStatusNotify /* function */;
  /* 0x0040 */ struct _DEVICE_OBJECT* Pdo;
  /* 0x0048 */ struct _UNICODE_STRING* DeviceName;
}; /* size: 0x0050 */

typedef struct _ARBITER_TEST_ALLOCATION_PARAMETERS
{
  /* 0x0000 */ struct _LIST_ENTRY* ArbitrationList;
  /* 0x0008 */ unsigned long AllocateFromCount;
  /* 0x000c */ long Padding_635;
  /* 0x0010 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR* AllocateFrom;
} ARBITER_TEST_ALLOCATION_PARAMETERS, *PARBITER_TEST_ALLOCATION_PARAMETERS; /* size: 0x0018 */

typedef struct _ARBITER_RETEST_ALLOCATION_PARAMETERS
{
  /* 0x0000 */ struct _LIST_ENTRY* ArbitrationList;
  /* 0x0008 */ unsigned long AllocateFromCount;
  /* 0x000c */ long Padding_636;
  /* 0x0010 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR* AllocateFrom;
} ARBITER_RETEST_ALLOCATION_PARAMETERS, *PARBITER_RETEST_ALLOCATION_PARAMETERS; /* size: 0x0018 */

typedef struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS
{
  /* 0x0000 */ struct _CM_PARTIAL_RESOURCE_LIST** AllocatedResources;
} ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS, *PARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS; /* size: 0x0008 */

typedef struct _ARBITER_QUERY_CONFLICT_PARAMETERS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0008 */ struct _IO_RESOURCE_DESCRIPTOR* ConflictingResource;
  /* 0x0010 */ unsigned long* ConflictCount;
  /* 0x0018 */ struct _ARBITER_CONFLICT_INFO** Conflicts;
} ARBITER_QUERY_CONFLICT_PARAMETERS, *PARBITER_QUERY_CONFLICT_PARAMETERS; /* size: 0x0020 */

typedef struct _ARBITER_QUERY_ARBITRATE_PARAMETERS
{
  /* 0x0000 */ struct _LIST_ENTRY* ArbitrationList;
} ARBITER_QUERY_ARBITRATE_PARAMETERS, *PARBITER_QUERY_ARBITRATE_PARAMETERS; /* size: 0x0008 */

typedef struct _ARBITER_ADD_RESERVED_PARAMETERS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* ReserveDevice;
} ARBITER_ADD_RESERVED_PARAMETERS, *PARBITER_ADD_RESERVED_PARAMETERS; /* size: 0x0008 */

typedef struct _OBJECT_TYPES_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTypes;
} OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION; /* size: 0x0004 */

typedef struct _ALPC_DATA_VIEW_ATTR32
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long SectionHandle;
  /* 0x0008 */ unsigned long ViewBase;
  /* 0x000c */ unsigned long ViewSize;
} ALPC_DATA_VIEW_ATTR32, *PALPC_DATA_VIEW_ATTR32; /* size: 0x0010 */

typedef struct _TXFS_QUERY_RM_INFORMATION
{
  /* 0x0000 */ unsigned long BytesRequired;
  /* 0x0004 */ long Padding_637;
  /* 0x0008 */ unsigned __int64 TailLsn;
  /* 0x0010 */ unsigned __int64 CurrentLsn;
  /* 0x0018 */ unsigned __int64 ArchiveTailLsn;
  /* 0x0020 */ unsigned __int64 LogContainerSize;
  /* 0x0028 */ union _LARGE_INTEGER HighestVirtualClock;
  /* 0x0030 */ unsigned long LogContainerCount;
  /* 0x0034 */ unsigned long LogContainerCountMax;
  /* 0x0038 */ unsigned long LogContainerCountMin;
  /* 0x003c */ unsigned long LogGrowthIncrement;
  /* 0x0040 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ unsigned short LoggingMode;
  /* 0x004a */ unsigned short Reserved;
  /* 0x004c */ unsigned long RmState;
  /* 0x0050 */ unsigned __int64 LogCapacity;
  /* 0x0058 */ unsigned __int64 LogFree;
  /* 0x0060 */ unsigned __int64 TopsSize;
  /* 0x0068 */ unsigned __int64 TopsUsed;
  /* 0x0070 */ unsigned __int64 TransactionCount;
  /* 0x0078 */ unsigned __int64 OnePCCount;
  /* 0x0080 */ unsigned __int64 TwoPCCount;
  /* 0x0088 */ unsigned __int64 NumberLogFileFull;
  /* 0x0090 */ unsigned __int64 OldestTransactionAge;
  /* 0x0098 */ struct _GUID RMName;
  /* 0x00a8 */ unsigned long TmLogPathOffset;
  /* 0x00ac */ long __PADDING__[1];
} TXFS_QUERY_RM_INFORMATION, *PTXFS_QUERY_RM_INFORMATION; /* size: 0x00b0 */

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_638;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_UNLOADED_NOTIFICATION_DATA, *PLDR_DLL_UNLOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef struct _REPARSE_GUID_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ struct _GUID ReparseGuid;
  struct
  {
    /* 0x0018 */ unsigned char DataBuffer[1];
  } /* size: 0x0001 */ GenericReparseBuffer;
  /* 0x0019 */ char __PADDING__[3];
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER; /* size: 0x001c */

typedef struct _ALPC_COMPLETION_LIST_STATE
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ volatile unsigned __int64 Head : 24; /* bit position: 0 */
          /* 0x0000 */ volatile unsigned __int64 Tail : 24; /* bit position: 24 */
          /* 0x0000 */ volatile unsigned __int64 ActiveThreadCount : 16; /* bit position: 48 */
        }; /* bitfield */
      } /* size: 0x0008 */ s1;
      /* 0x0000 */ volatile unsigned __int64 Value;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} ALPC_COMPLETION_LIST_STATE, *PALPC_COMPLETION_LIST_STATE; /* size: 0x0008 */

typedef struct _RTL_SRWLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Waiting : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Waking : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 MultipleShared : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Shared : 60; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} RTL_SRWLOCK, *PRTL_SRWLOCK; /* size: 0x0008 */

typedef struct _ALPC_COMPLETION_LIST_HEADER
{
  /* 0x0000 */ unsigned __int64 StartMagic;
  /* 0x0008 */ unsigned long TotalSize;
  /* 0x000c */ unsigned long ListOffset;
  /* 0x0010 */ unsigned long ListSize;
  /* 0x0014 */ unsigned long BitmapOffset;
  /* 0x0018 */ unsigned long BitmapSize;
  /* 0x001c */ unsigned long DataOffset;
  /* 0x0020 */ unsigned long DataSize;
  /* 0x0024 */ unsigned long AttributeFlags;
  /* 0x0028 */ unsigned long AttributeSize;
  /* 0x002c */ long Padding_639[21];
  /* 0x0080 */ struct _ALPC_COMPLETION_LIST_STATE State;
  /* 0x0088 */ volatile unsigned long LastMessageId;
  /* 0x008c */ volatile unsigned long LastCallbackId;
  /* 0x0090 */ long Padding_640[28];
  /* 0x0100 */ volatile unsigned long PostCount;
  /* 0x0104 */ long Padding_641[31];
  /* 0x0180 */ volatile unsigned long ReturnCount;
  /* 0x0184 */ long Padding_642[31];
  /* 0x0200 */ volatile unsigned long LogSequenceNumber;
  /* 0x0204 */ long Padding_643[31];
  /* 0x0280 */ struct _RTL_SRWLOCK UserLock;
  /* 0x0288 */ unsigned __int64 EndMagic;
  /* 0x0290 */ long __PADDING__[28];
} ALPC_COMPLETION_LIST_HEADER, *PALPC_COMPLETION_LIST_HEADER; /* size: 0x0300 */

typedef struct _HEAP_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ unsigned long Protection;
  /* 0x0018 */ unsigned __int64 FirstBlockInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRangeInformationOffset;
} HEAP_RANGE_INFORMATION, *PHEAP_RANGE_INFORMATION; /* size: 0x0028 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long Padding_644;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION_EX, *PPROCESS_DEVICEMAP_INFORMATION_EX; /* size: 0x0030 */

struct _TP_WAIT;

typedef struct _MMWS_TRIM_CRITERIA
{
  /* 0x0000 */ unsigned char NumPasses;
  /* 0x0001 */ unsigned char TrimAge;
  /* 0x0002 */ unsigned char TrimAllPasses;
  /* 0x0003 */ char Padding_645;
  /* 0x0004 */ unsigned long TrimCredit;
  /* 0x0008 */ unsigned __int64 DesiredFreeGoal;
  /* 0x0010 */ unsigned __int64 NewTotalClaim;
  /* 0x0018 */ unsigned long PossiblePages;
  /* 0x001c */ long __PADDING__[1];
} MMWS_TRIM_CRITERIA, *PMMWS_TRIM_CRITERIA; /* size: 0x0020 */

typedef struct _ETW_TP_EVENT_CALLBACK_START
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
  /* 0x0028 */ void* TaskId;
  /* 0x0030 */ void* Callback;
  /* 0x0038 */ void* Context;
  /* 0x0040 */ void* SubProcessTag;
} ETW_TP_EVENT_CALLBACK_START, *PETW_TP_EVENT_CALLBACK_START; /* size: 0x0048 */

typedef struct _FILE_STANDARD_LINK_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAccessibleLinks;
  /* 0x0004 */ unsigned long TotalNumberOfLinks;
  /* 0x0008 */ unsigned char DeletePending;
  /* 0x0009 */ unsigned char Directory;
  /* 0x000a */ char __PADDING__[2];
} FILE_STANDARD_LINK_INFORMATION, *PFILE_STANDARD_LINK_INFORMATION; /* size: 0x000c */

typedef struct _IMAGE_RESOURCE_DIR_STRING_U
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ wchar_t NameString[1];
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U; /* size: 0x0004 */

typedef struct _BCD_PRIVILEGE_STATE
{
  /* 0x0000 */ unsigned long Privilege;
  /* 0x0004 */ unsigned char ClientToken;
  /* 0x0005 */ unsigned char PreviouslyEnabled;
  /* 0x0006 */ char __PADDING__[2];
} BCD_PRIVILEGE_STATE, *PBCD_PRIVILEGE_STATE; /* size: 0x0008 */

typedef struct _MMWSLE_FLUSH_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long FlushIndex[19];
} MMWSLE_FLUSH_LIST, *PMMWSLE_FLUSH_LIST; /* size: 0x0050 */

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION
{
  /* 0x0000 */ void* VirtualAddress;
  union
  {
    union
    {
      /* 0x0008 */ struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
      /* 0x0008 */ unsigned __int64 Long;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MEMORY_WORKING_SET_EX_INFORMATION, *PMEMORY_WORKING_SET_EX_INFORMATION; /* size: 0x0010 */

typedef struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_LIST
{
  /* 0x0000 */ struct _HV_INPUT_FLUSH_VIRTUAL_ADDRESS_SPACE_HEADER Header;
  /* 0x0018 */ unsigned __int64* GvaList /* zero-length array */;
} HV_INPUT_FLUSH_VIRTUAL_ADDRESS_LIST, *PHV_INPUT_FLUSH_VIRTUAL_ADDRESS_LIST; /* size: 0x0018 */

typedef struct _EX_PUSH_LOCK_WAIT_BLOCK
{
  /* 0x0000 */ struct _KEVENT WakeEvent;
  /* 0x0018 */ struct _EX_PUSH_LOCK_WAIT_BLOCK* Next;
  /* 0x0020 */ struct _EX_PUSH_LOCK_WAIT_BLOCK* Last;
  /* 0x0028 */ struct _EX_PUSH_LOCK_WAIT_BLOCK* Previous;
  /* 0x0030 */ long ShareCount;
  /* 0x0034 */ long Flags;
  /* 0x0038 */ long __PADDING__[2];
} EX_PUSH_LOCK_WAIT_BLOCK, *PEX_PUSH_LOCK_WAIT_BLOCK; /* size: 0x0040 */

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER BootTime;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTime;
  /* 0x0010 */ union _LARGE_INTEGER TimeZoneBias;
  /* 0x0018 */ unsigned long TimeZoneId;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ unsigned __int64 BootTimeBias;
  /* 0x0028 */ unsigned __int64 SleepTimeBias;
} SYSTEM_TIMEOFDAY_INFORMATION, *PSYSTEM_TIMEOFDAY_INFORMATION; /* size: 0x0030 */

typedef struct _KPROFILE
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_646;
  /* 0x0008 */ struct _LIST_ENTRY ProfileListEntry;
  /* 0x0018 */ struct _KPROCESS* Process;
  /* 0x0020 */ void* RangeBase;
  /* 0x0028 */ void* RangeLimit;
  /* 0x0030 */ unsigned long BucketShift;
  /* 0x0034 */ long Padding_647;
  /* 0x0038 */ void* Buffer;
  /* 0x0040 */ unsigned long Segment;
  /* 0x0044 */ long Padding_648;
  /* 0x0048 */ struct _KAFFINITY_EX Affinity;
  /* 0x0070 */ short Source;
  /* 0x0072 */ unsigned char Started;
  /* 0x0073 */ char __PADDING__[5];
} KPROFILE, *PKPROFILE; /* size: 0x0078 */

typedef struct _WMI_DISKIO_FLUSH_BUFFERS
{
  /* 0x0000 */ unsigned long DiskNumber;
  /* 0x0004 */ unsigned long IrpFlags;
  /* 0x0008 */ unsigned __int64 HighResResponseTime;
  /* 0x0010 */ void* IrpAddr;
} WMI_DISKIO_FLUSH_BUFFERS, *PWMI_DISKIO_FLUSH_BUFFERS; /* size: 0x0018 */

typedef struct _BOOT_OPTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Timeout;
  /* 0x000c */ unsigned long CurrentBootEntryId;
  /* 0x0010 */ unsigned long NextBootEntryId;
  /* 0x0014 */ wchar_t HeadlessRedirection[1];
  /* 0x0016 */ char __PADDING__[2];
} BOOT_OPTIONS, *PBOOT_OPTIONS; /* size: 0x0018 */

typedef struct _FILE_END_OF_FILE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; /* size: 0x0008 */

typedef struct _PERFINFO_FILE_SIMPLE_OPERATION
{
  /* 0x0000 */ unsigned __int64 Irp;
  /* 0x0008 */ unsigned __int64 ThreadId;
  /* 0x0010 */ unsigned __int64 FileObject;
  /* 0x0018 */ unsigned __int64 FileKey;
} PERFINFO_FILE_SIMPLE_OPERATION, *PPERFINFO_FILE_SIMPLE_OPERATION; /* size: 0x0020 */

typedef struct _FILE_COMPRESSION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFORMATION, *PFILE_COMPRESSION_INFORMATION; /* size: 0x0010 */

typedef struct _POP_SLEEPER_HANDOFF
{
  /* 0x0000 */ struct _KEVENT SleeperThreadStarted;
  /* 0x0018 */ struct _KEVENT PowerStateFinalized;
  /* 0x0030 */ struct _KEVENT SleeperThreadFinished;
  /* 0x0048 */ enum POWER_STATE_HANDLER_TYPE PowerStateHandlerType;
  /* 0x004c */ long Status;
} POP_SLEEPER_HANDOFF, *PPOP_SLEEPER_HANDOFF; /* size: 0x0050 */

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalUserTime;
  /* 0x0008 */ union _LARGE_INTEGER TotalKernelTime;
  /* 0x0010 */ union _LARGE_INTEGER ThisPeriodTotalUserTime;
  /* 0x0018 */ union _LARGE_INTEGER ThisPeriodTotalKernelTime;
  /* 0x0020 */ unsigned long TotalPageFaultCount;
  /* 0x0024 */ unsigned long TotalProcesses;
  /* 0x0028 */ unsigned long ActiveProcesses;
  /* 0x002c */ unsigned long TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION; /* size: 0x0030 */

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION; /* size: 0x0060 */

typedef struct _MOUNTMGR_VOLUME_MOUNT_POINT
{
  /* 0x0000 */ unsigned short SourceVolumeNameOffset;
  /* 0x0002 */ unsigned short SourceVolumeNameLength;
  /* 0x0004 */ unsigned short TargetVolumeNameOffset;
  /* 0x0006 */ unsigned short TargetVolumeNameLength;
} MOUNTMGR_VOLUME_MOUNT_POINT, *PMOUNTMGR_VOLUME_MOUNT_POINT; /* size: 0x0008 */

typedef union _HV_X64_MSR_POWER_STATE_TRIGGER
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsUINT64;
    struct
    {
      /* 0x0000 */ unsigned char IdleEntryCount;
      /* 0x0001 */ unsigned char Reserved[3];
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned int Reserved2 : 31; /* bit position: 0 */
        /* 0x0004 */ unsigned int ActiveBM_STS : 1; /* bit position: 31 */
      }; /* bitfield */
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} HV_X64_MSR_POWER_STATE_TRIGGER, *PHV_X64_MSR_POWER_STATE_TRIGGER; /* size: 0x0008 */

typedef struct _OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long PagedPoolCharge;
  /* 0x0014 */ unsigned long NonPagedPoolCharge;
  /* 0x0018 */ unsigned long Reserved[3];
  /* 0x0024 */ unsigned long NameInfoSize;
  /* 0x0028 */ unsigned long TypeInfoSize;
  /* 0x002c */ unsigned long SecurityDescriptorSize;
  /* 0x0030 */ union _LARGE_INTEGER CreationTime;
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _INITIAL_PEB
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SpareBits : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ long Padding_649;
  /* 0x0008 */ void* Mutant;
} INITIAL_PEB, *PINITIAL_PEB; /* size: 0x0010 */

typedef struct _COVERAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long CoverageType;
  /* 0x0008 */ unsigned char MD5Hash[16];
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned long CoverageVectorSize;
  /* 0x0020 */ unsigned long CoverageVectorOffset;
  /* 0x0024 */ unsigned long ExtraDataOffset;
} COVERAGE_SECTION_HEADER, *PCOVERAGE_SECTION_HEADER; /* size: 0x0028 */

typedef struct _PROCESSOR_CAP
{
  /* 0x0000 */ struct _PROCESSOR_NUMBER ProcessorNumber;
  /* 0x0004 */ unsigned long PercentageCap;
} PROCESSOR_CAP, *PPROCESSOR_CAP; /* size: 0x0008 */

typedef struct _PORT_DATA_ENTRY
{
  /* 0x0000 */ void* Base;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PORT_DATA_ENTRY, *PPORT_DATA_ENTRY; /* size: 0x0010 */

typedef struct _SMKM_FILE_INFO
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ struct _FILE_OBJECT* VolumeFileObject;
  /* 0x0018 */ struct _DEVICE_OBJECT* VolumeDeviceObject;
  /* 0x0020 */ void* VolumePnpHandle;
  /* 0x0028 */ struct _IRP* UsageNotificationIrp;
  /* 0x0030 */ struct _SMKM_REGION_EXTENT* Extents;
  /* 0x0038 */ unsigned long ExtentCount;
  /* 0x003c */ long __PADDING__[1];
} SMKM_FILE_INFO, *PSMKM_FILE_INFO; /* size: 0x0040 */

typedef struct _EEVENT_PAIR
{
  /* 0x0000 */ struct _KEVENT_PAIR KernelEventPair;
} EEVENT_PAIR, *PEEVENT_PAIR; /* size: 0x0038 */

typedef struct _PERFINFO_PO_NOTIFY_DEVICE_COMPLETE
{
  /* 0x0000 */ void* Irp;
  /* 0x0008 */ long Status;
  /* 0x000c */ long __PADDING__[1];
} PERFINFO_PO_NOTIFY_DEVICE_COMPLETE, *PPERFINFO_PO_NOTIFY_DEVICE_COMPLETE; /* size: 0x0010 */

typedef struct _OSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW; /* size: 0x011c */

typedef struct _IO_MINI_COMPLETION_PACKET_USER
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long PacketType;
  /* 0x0014 */ long Padding_650;
  /* 0x0018 */ void* KeyContext;
  /* 0x0020 */ void* ApcContext;
  /* 0x0028 */ long IoStatus;
  /* 0x002c */ long Padding_651;
  /* 0x0030 */ unsigned __int64 IoStatusInformation;
  /* 0x0038 */ void* MiniPacketCallback /* function */;
  /* 0x0040 */ void* Context;
  /* 0x0048 */ unsigned char Allocated;
  /* 0x0049 */ char __PADDING__[7];
} IO_MINI_COMPLETION_PACKET_USER, *PIO_MINI_COMPLETION_PACKET_USER; /* size: 0x0050 */

typedef struct _PERFINFO_SET_POWER_ACTION
{
  /* 0x0000 */ void* Trigger;
  /* 0x0008 */ unsigned long PowerAction;
  /* 0x000c */ unsigned long LightestState;
} PERFINFO_SET_POWER_ACTION, *PPERFINFO_SET_POWER_ACTION; /* size: 0x0010 */

typedef struct _WIN32_POWERINFO_DISPLAYREQUIRED
{
  /* 0x0000 */ unsigned char Set;
} WIN32_POWERINFO_DISPLAYREQUIRED, *PWIN32_POWERINFO_DISPLAYREQUIRED; /* size: 0x0001 */

typedef struct _CM_PNP_BIOS_DEVICE_NODE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Node;
  /* 0x0003 */ unsigned long ProductId;
  /* 0x0007 */ unsigned char DeviceType[3];
  /* 0x000a */ unsigned short DeviceAttributes;
} CM_PNP_BIOS_DEVICE_NODE, *PCM_PNP_BIOS_DEVICE_NODE; /* size: 0x000c */

typedef struct _VF_EXCLUDED_DRIVER_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _UNICODE_STRING BaseName;
} VF_EXCLUDED_DRIVER_ENTRY, *PVF_EXCLUDED_DRIVER_ENTRY; /* size: 0x0020 */

typedef union _LDR_DLL_NOTIFICATION_DATA
{
  union
  {
    /* 0x0000 */ struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    /* 0x0000 */ struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
  }; /* size: 0x0028 */
} LDR_DLL_NOTIFICATION_DATA, *PLDR_DLL_NOTIFICATION_DATA; /* size: 0x0028 */

typedef struct _FT_REGISTRY
{
  /* 0x0000 */ unsigned short NumberOfComponents;
  /* 0x0002 */ unsigned short ReservedShort;
  /* 0x0004 */ struct _FT_DESCRIPTION FtDescription[1];
} FT_REGISTRY, *PFT_REGISTRY; /* size: 0x0020 */

typedef struct _SYSTEM_MANDATORY_LABEL_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE; /* size: 0x000c */

typedef struct _ETW_BUFFER_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ unsigned long Offset;
} ETW_BUFFER_INFORMATION, *PETW_BUFFER_INFORMATION; /* size: 0x0010 */

typedef struct _WIN32_POWERINFO_POLICYCHANGE
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long Value;
} WIN32_POWERINFO_POLICYCHANGE, *PWIN32_POWERINFO_POLICYCHANGE; /* size: 0x0014 */

typedef struct _CM_HARDWARE_PROFILE_LIST
{
  /* 0x0000 */ unsigned long MaxProfileCount;
  /* 0x0004 */ unsigned long CurrentProfileCount;
  /* 0x0008 */ struct _CM_HARDWARE_PROFILE Profile[1];
} CM_HARDWARE_PROFILE_LIST, *PCM_HARDWARE_PROFILE_LIST; /* size: 0x0028 */

typedef struct _POLICY_AUDIT_LOG_INFO
{
  /* 0x0000 */ unsigned long AuditLogPercentFull;
  /* 0x0004 */ unsigned long MaximumLogSize;
  /* 0x0008 */ union _LARGE_INTEGER AuditRetentionPeriod;
  /* 0x0010 */ unsigned char AuditLogFullShutdownInProgress;
  /* 0x0011 */ char Padding_652[7];
  /* 0x0018 */ union _LARGE_INTEGER TimeToShutdown;
  /* 0x0020 */ unsigned long NextAuditRecordId;
  /* 0x0024 */ long __PADDING__[1];
} POLICY_AUDIT_LOG_INFO, *PPOLICY_AUDIT_LOG_INFO; /* size: 0x0028 */

typedef struct _SM_STORE_LIST_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long StoreCount : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long ExtendedRequest : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long Spare : 15; /* bit position: 17 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long StoreId[8];
} SM_STORE_LIST_REQUEST, *PSM_STORE_LIST_REQUEST; /* size: 0x0024 */

typedef struct _SM_STORE_LIST_REQUEST_EX
{
  /* 0x0000 */ struct _SM_STORE_LIST_REQUEST Request;
  /* 0x0024 */ wchar_t NameBuffer[64][8];
} SM_STORE_LIST_REQUEST_EX, *PSM_STORE_LIST_REQUEST_EX; /* size: 0x0424 */

typedef struct _WDBGEXTS_CLR_DATA_INTERFACE
{
  /* 0x0000 */ const struct _GUID* Iid;
  /* 0x0008 */ void* Iface;
} WDBGEXTS_CLR_DATA_INTERFACE, *PWDBGEXTS_CLR_DATA_INTERFACE; /* size: 0x0010 */

struct tagStringHash
{
  /* 0x0000 */ unsigned long dwHashSize;
  /* 0x0004 */ long Padding_653;
  /* 0x0008 */ struct tagStringHashElement** pTable;
}; /* size: 0x0010 */

typedef struct _DBGKD_DEBUG_DATA_HEADER32
{
  /* 0x0000 */ struct LIST_ENTRY32 List;
  /* 0x0008 */ unsigned long OwnerTag;
  /* 0x000c */ unsigned long Size;
} DBGKD_DEBUG_DATA_HEADER32, *PDBGKD_DEBUG_DATA_HEADER32; /* size: 0x0010 */

typedef struct _RTL_PROCESS_BACKTRACES
{
  /* 0x0000 */ unsigned __int64 CommittedMemory;
  /* 0x0008 */ unsigned __int64 ReservedMemory;
  /* 0x0010 */ unsigned long NumberOfBackTraceLookups;
  /* 0x0014 */ unsigned long NumberOfBackTraces;
  /* 0x0018 */ struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
} RTL_PROCESS_BACKTRACES, *PRTL_PROCESS_BACKTRACES; /* size: 0x0128 */

typedef struct _FSRTL_FILE_CONTEXT_SUPPORT
{
  /* 0x0000 */ struct _EX_PUSH_LOCK PushLock;
  /* 0x0008 */ struct _LIST_ENTRY FilterContexts;
} FSRTL_FILE_CONTEXT_SUPPORT, *PFSRTL_FILE_CONTEXT_SUPPORT; /* size: 0x0018 */

struct RETRIEVAL_POINTERS_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ long Padding_654;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER NextVcn;
    /* 0x0018 */ union _LARGE_INTEGER Lcn;
  } /* size: 0x0010 */ Extents[1];
}; /* size: 0x0020 */

typedef struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0008 */ struct _KINTERRUPT** InterruptObject;
  /* 0x0010 */ void* ServiceRoutine /* function */;
  /* 0x0018 */ void* ServiceContext;
  /* 0x0020 */ unsigned __int64* SpinLock;
  /* 0x0028 */ unsigned char SynchronizeIrql;
  /* 0x0029 */ unsigned char FloatingSave;
  /* 0x002a */ unsigned char ShareVector;
  /* 0x002b */ char Padding_655;
  /* 0x002c */ unsigned long Vector;
  /* 0x0030 */ unsigned char Irql;
  /* 0x0031 */ char Padding_656[3];
  /* 0x0034 */ enum _KINTERRUPT_MODE InterruptMode;
  /* 0x0038 */ unsigned __int64 ProcessorEnableMask;
  /* 0x0040 */ unsigned short Group;
  /* 0x0042 */ char __PADDING__[6];
} IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS, *PIO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS; /* size: 0x0048 */

typedef struct _IO_CONNECT_INTERRUPT_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_657;
  union
  {
    /* 0x0008 */ struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS FullySpecified;
    /* 0x0008 */ struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS LineBased;
    struct
    {
      /* 0x0008 */ struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS MessageBased;
      /* 0x0040 */ long __PADDING__[4];
    }; /* size: 0x0048 */
  }; /* size: 0x0048 */
} IO_CONNECT_INTERRUPT_PARAMETERS, *PIO_CONNECT_INTERRUPT_PARAMETERS; /* size: 0x0050 */

typedef struct _PERFINFO_PFMAPPED_SECTION_INFORMATION
{
  /* 0x0000 */ void* RangeBase;
  /* 0x0008 */ void* RangeEnd;
  /* 0x0010 */ unsigned long CreatingProcessId;
  /* 0x0014 */ long __PADDING__[1];
} PERFINFO_PFMAPPED_SECTION_INFORMATION, *PPERFINFO_PFMAPPED_SECTION_INFORMATION; /* size: 0x0018 */

typedef struct _SECURITY_DESCRIPTOR_RELATIVE
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ unsigned long Owner;
  /* 0x0008 */ unsigned long Group;
  /* 0x000c */ unsigned long Sacl;
  /* 0x0010 */ unsigned long Dacl;
} SECURITY_DESCRIPTOR_RELATIVE, *PSECURITY_DESCRIPTOR_RELATIVE; /* size: 0x0014 */

typedef struct _ECP_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Spare;
  /* 0x0008 */ struct _LIST_ENTRY ListEntry;
  /* 0x0018 */ struct _GUID EcpType;
  /* 0x0028 */ void* CleanupCallback /* function */;
  /* 0x0030 */ unsigned long Flags;
  /* 0x0034 */ unsigned long Size;
  /* 0x0038 */ void* ListAllocatedFrom;
  /* 0x0040 */ void* Filter;
} ECP_HEADER, *PECP_HEADER; /* size: 0x0048 */

typedef struct _ETW_READY_THREAD_EVENT
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned char AdjustReason;
  /* 0x0005 */ char AdjustIncrement;
  union
  {
    struct /* bitfield */
    {
      /* 0x0006 */ unsigned char ExecutingDpc : 1; /* bit position: 0 */
      /* 0x0006 */ unsigned char KernelStackNotResident : 1; /* bit position: 1 */
      /* 0x0006 */ unsigned char ProcessOutOfMemory : 1; /* bit position: 2 */
      /* 0x0006 */ unsigned char Reserved : 5; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0006 */ unsigned char Flags;
  }; /* size: 0x0001 */
  /* 0x0007 */ unsigned char SpareByte;
} ETW_READY_THREAD_EVENT, *PETW_READY_THREAD_EVENT; /* size: 0x0008 */

typedef struct _PCI_SUBSYSTEM_IDS_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short SubVendorID;
  /* 0x0006 */ unsigned short SubSystemID;
} PCI_SUBSYSTEM_IDS_CAPABILITY, *PPCI_SUBSYSTEM_IDS_CAPABILITY; /* size: 0x0008 */

typedef struct _KI_LOCAL_ARRAY7
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ unsigned char Fill5;
  /* 0x0005 */ unsigned char Fill6;
  /* 0x0006 */ unsigned char Fill7;
  /* 0x0007 */ unsigned char Fill8;
  /* 0x0008 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY7, *PKI_LOCAL_ARRAY7; /* size: 0x0060 */

typedef struct _MM_PAGE_ACCESS_INFO_HEADER
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  /* 0x0008 */ enum _MM_PAGE_ACCESS_TYPE Type;
  union
  {
    /* 0x000c */ unsigned long EmptySequenceNumber;
    /* 0x000c */ unsigned long CurrentFileIndex;
  }; /* size: 0x0004 */
  /* 0x0010 */ unsigned __int64 CreateTime;
  union
  {
    /* 0x0018 */ unsigned __int64 EmptyTime;
    /* 0x0018 */ struct _MM_PAGE_ACCESS_INFO* TempEntry;
  }; /* size: 0x0008 */
  union
  {
    struct
    {
      /* 0x0020 */ struct _MM_PAGE_ACCESS_INFO* PageEntry;
      /* 0x0028 */ unsigned __int64* FileEntry;
      /* 0x0030 */ unsigned __int64* FirstFileEntry;
      /* 0x0038 */ struct _EPROCESS* Process;
      /* 0x0040 */ unsigned long SessionId;
    }; /* size: 0x0024 */
    struct
    {
      /* 0x0020 */ unsigned __int64* PageFrameEntry;
      /* 0x0028 */ unsigned __int64* LastPageFrameEntry;
      /* 0x0030 */ long __PADDING__[6];
    }; /* size: 0x0028 */
  }; /* size: 0x0028 */
} MM_PAGE_ACCESS_INFO_HEADER, *PMM_PAGE_ACCESS_INFO_HEADER; /* size: 0x0048 */

typedef struct _BOOTDISK_INFORMATION_LITE
{
  /* 0x0000 */ unsigned long NumberEntries;
  /* 0x0004 */ struct _LOADER_PARTITION_INFORMATION_EX Entries[1];
} BOOTDISK_INFORMATION_LITE, *PBOOTDISK_INFORMATION_LITE; /* size: 0x0020 */

typedef struct _MM_PAGE_ACCESS_INFO
{
  union
  {
    /* 0x0000 */ union _MM_PAGE_ACCESS_INFO_FLAGS Flags;
    /* 0x0000 */ unsigned __int64 FileOffset;
    /* 0x0000 */ void* VirtualAddress;
    /* 0x0000 */ void* PointerProtoPte;
  }; /* size: 0x0008 */
} MM_PAGE_ACCESS_INFO, *PMM_PAGE_ACCESS_INFO; /* size: 0x0008 */

typedef struct _PARTITION_INFORMATION_EX
{
  /* 0x0000 */ enum _PARTITION_STYLE PartitionStyle;
  /* 0x0004 */ long Padding_658;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ union _LARGE_INTEGER PartitionLength;
  /* 0x0018 */ unsigned long PartitionNumber;
  /* 0x001c */ unsigned char RewritePartition;
  /* 0x001d */ char Padding_659[3];
  union
  {
    /* 0x0020 */ struct _PARTITION_INFORMATION_MBR Mbr;
    /* 0x0020 */ struct _PARTITION_INFORMATION_GPT Gpt;
  }; /* size: 0x0070 */
} PARTITION_INFORMATION_EX, *PPARTITION_INFORMATION_EX; /* size: 0x0090 */

typedef struct _EVENT_EXTENDED_ITEM_STACK_TRACE32
{
  /* 0x0000 */ unsigned __int64 MatchId;
  /* 0x0008 */ unsigned long Address[1];
  /* 0x000c */ long __PADDING__[1];
} EVENT_EXTENDED_ITEM_STACK_TRACE32, *PEVENT_EXTENDED_ITEM_STACK_TRACE32; /* size: 0x0010 */

struct WMIEVENTQUEUE
{
  /* 0x0000 */ unsigned char* Buffer;
  /* 0x0008 */ struct _WNODE_HEADER* LastWnode;
  /* 0x0010 */ unsigned long MaxBufferSize;
  /* 0x0014 */ unsigned long NextOffset;
  /* 0x0018 */ unsigned long EventsLost;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct MBREQUESTS
{
  /* 0x0000 */ struct _WMIGUIDOBJECT* ReplyObject;
  /* 0x0008 */ struct _LIST_ENTRY RequestListEntry;
}; /* size: 0x0018 */

typedef struct _WMIGUIDOBJECT
{
  /* 0x0000 */ struct _KEVENT Event;
  union
  {
    /* 0x0018 */ struct _GUID Guid;
    /* 0x0018 */ struct _REGENTRY* RegEntry;
  }; /* size: 0x0010 */
  /* 0x0028 */ struct _LIST_ENTRY GEObjectList;
  /* 0x0038 */ struct tagGUIDENTRY* GuidEntry;
  /* 0x0040 */ unsigned long Type;
  /* 0x0044 */ long Padding_660;
  union
  {
    struct
    {
      /* 0x0048 */ void* Callback /* function */;
      /* 0x0050 */ void* CallbackContext;
    }; /* size: 0x0010 */
    /* 0x0048 */ struct _LIST_ENTRY ThreadObjectList;
  }; /* size: 0x0010 */
  /* 0x0058 */ void* UserModeProcess;
  /* 0x0060 */ void* UserModeCallback /* function */;
  /* 0x0068 */ struct _IRP* Irp;
  /* 0x0070 */ struct _LIST_ENTRY IrpObjectList;
  /* 0x0080 */ unsigned long EventQueueAction;
  /* 0x0084 */ long Padding_661;
  /* 0x0088 */ struct WMIEVENTQUEUE HiPriority;
  /* 0x00a8 */ struct WMIEVENTQUEUE LoPriority;
  /* 0x00c8 */ unsigned char EnableRequestSent;
  /* 0x00c9 */ char Padding_662[7];
  union
  {
    /* 0x00d0 */ struct _LIST_ENTRY RequestListHead;
    /* 0x00d0 */ struct MBREQUESTS MBRequests[4];
  }; /* size: 0x0060 */
  /* 0x0130 */ unsigned long Cookie;
  /* 0x0134 */ unsigned long Flags;
} WMIGUIDOBJECT, *PWMIGUIDOBJECT; /* size: 0x0138 */

typedef struct _ETW_HEAP_EVENT_COMMON
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* Handle;
} ETW_HEAP_EVENT_COMMON, *PETW_HEAP_EVENT_COMMON; /* size: 0x0028 */

typedef struct _PERFINFO_DRIVER_COMPLETE_REQUEST
{
  /* 0x0000 */ void* RoutineAddr;
  /* 0x0008 */ void* Irp;
  /* 0x0010 */ unsigned long UniqMatchId;
} PERFINFO_DRIVER_COMPLETE_REQUEST, *PPERFINFO_DRIVER_COMPLETE_REQUEST; /* size: 0x0014 */

struct UNICODE_STRING3264
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_663;
  union
  {
    /* 0x0008 */ unsigned short* Buffer;
    /* 0x0008 */ unsigned __int64 Dummy;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct WMIQSIINFO
{
  /* 0x0000 */ union HANDLE3264 Handle;
  /* 0x0008 */ struct UNICODE_STRING3264 InstanceName;
}; /* size: 0x0018 */

typedef struct _ETW_TP_EVENT_POOL_TH_MAX_SET
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
  /* 0x0028 */ unsigned long ThreadNum;
  /* 0x002c */ long __PADDING__[1];
} ETW_TP_EVENT_POOL_TH_MAX_SET, *PETW_TP_EVENT_POOL_TH_MAX_SET; /* size: 0x0030 */

typedef struct _TOKEN_STATISTICS
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0018 */ enum _TOKEN_TYPE TokenType;
  /* 0x001c */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0020 */ unsigned long DynamicCharged;
  /* 0x0024 */ unsigned long DynamicAvailable;
  /* 0x0028 */ unsigned long GroupCount;
  /* 0x002c */ unsigned long PrivilegeCount;
  /* 0x0030 */ struct _LUID ModifiedId;
} TOKEN_STATISTICS, *PTOKEN_STATISTICS; /* size: 0x0038 */

typedef struct _FILE_EA_INFORMATION
{
  /* 0x0000 */ unsigned long EaSize;
} FILE_EA_INFORMATION, *PFILE_EA_INFORMATION; /* size: 0x0004 */

typedef struct _DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _RUNTIME_FUNCTION* FunctionTable;
  /* 0x0018 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0020 */ unsigned __int64 MinimumAddress;
  /* 0x0028 */ unsigned __int64 MaximumAddress;
  /* 0x0030 */ unsigned __int64 BaseAddress;
  /* 0x0038 */ void* Callback /* function */;
  /* 0x0040 */ void* Context;
  /* 0x0048 */ unsigned short* OutOfProcessCallbackDll;
  /* 0x0050 */ enum _FUNCTION_TABLE_TYPE Type;
  /* 0x0054 */ unsigned long EntryCount;
} DYNAMIC_FUNCTION_TABLE, *PDYNAMIC_FUNCTION_TABLE; /* size: 0x0058 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA
{
  /* 0x0000 */ unsigned long BufferLength;
  /* 0x0004 */ long Padding_664;
  /* 0x0008 */ unsigned short* Buffer;
} PLUGPLAY_CONTROL_INSTALL_DATA, *PPLUGPLAY_CONTROL_INSTALL_DATA; /* size: 0x0010 */

typedef struct _EX_DEBUG_LOG
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ unsigned long NumberOfTags;
  /* 0x000c */ unsigned long MaximumNumberOfTags;
  /* 0x0010 */ struct _EX_DEBUG_LOG_TAG* Tags;
  /* 0x0018 */ unsigned long CountOfEventsLogged;
  /* 0x001c */ long Padding_665;
  /* 0x0020 */ struct _EX_DEBUG_LOG_EVENT* First;
  /* 0x0028 */ struct _EX_DEBUG_LOG_EVENT* Last;
  /* 0x0030 */ struct _EX_DEBUG_LOG_EVENT* Next;
} EX_DEBUG_LOG, *PEX_DEBUG_LOG; /* size: 0x0038 */

typedef struct _KDPC32
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ unsigned char Number;
  /* 0x0003 */ unsigned char Importance;
  /* 0x0004 */ struct LIST_ENTRY32 DpcListEntry;
  /* 0x000c */ unsigned long DeferredRoutine;
  /* 0x0010 */ unsigned long DeferredContext;
  /* 0x0014 */ unsigned long SystemArgument1;
  /* 0x0018 */ unsigned long SystemArgument2;
  /* 0x001c */ unsigned long Lock;
} KDPC32, *PKDPC32; /* size: 0x0020 */

typedef struct _TAPE_STATISTICS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER RecoveredWrites;
  /* 0x0010 */ union _LARGE_INTEGER UnrecoveredWrites;
  /* 0x0018 */ union _LARGE_INTEGER RecoveredReads;
  /* 0x0020 */ union _LARGE_INTEGER UnrecoveredReads;
  /* 0x0028 */ unsigned char CompressionRatioReads;
  /* 0x0029 */ unsigned char CompressionRatioWrites;
  /* 0x002a */ char __PADDING__[6];
} TAPE_STATISTICS, *PTAPE_STATISTICS; /* size: 0x0030 */

typedef struct _EX_DEBUG_LOG_TAG
{
  /* 0x0000 */ unsigned char Format[4];
  /* 0x0004 */ long Padding_666;
  /* 0x0008 */ char* Name;
} EX_DEBUG_LOG_TAG, *PEX_DEBUG_LOG_TAG; /* size: 0x0010 */

typedef struct _BSD_POWER_TRANSITION
{
  /* 0x0000 */ __int64 PowerButtonTimestamp;
  /* 0x0008 */ unsigned char SystemRunning;
  /* 0x0009 */ unsigned char SleepInProgress;
  /* 0x000a */ char __PADDING__[6];
} BSD_POWER_TRANSITION, *PBSD_POWER_TRANSITION; /* size: 0x0010 */

struct BSD_BOOT_STATUS_DATA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _NT_PRODUCT_TYPE ProductType;
  /* 0x0008 */ unsigned char AutoAdvancedBoot;
  /* 0x0009 */ unsigned char AdvancedBootMenuTimeout;
  /* 0x000a */ unsigned char LastBootSucceeded;
  /* 0x000b */ unsigned char LastBootShutdown;
  /* 0x000c */ unsigned char SleepInProgress;
  /* 0x000d */ char Padding_667[3];
  /* 0x0010 */ struct _BSD_POWER_TRANSITION PowerTransition;
}; /* size: 0x0020 */

typedef struct _PPM_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ unsigned char IncreaseLevel;
  /* 0x000a */ unsigned char DecreaseLevel;
  /* 0x000b */ unsigned char Type;
  /* 0x000c */ long Padding_668;
  /* 0x0010 */ unsigned __int64 Control;
  /* 0x0018 */ unsigned __int64 Status;
  /* 0x0020 */ unsigned long TotalHitCount;
  /* 0x0024 */ unsigned long DesiredCount;
} PPM_PERF_STATE, *PPPM_PERF_STATE; /* size: 0x0028 */

typedef struct _REG_RENAME_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _UNICODE_STRING* NewName;
  /* 0x0010 */ void* CallContext;
  /* 0x0018 */ void* ObjectContext;
  /* 0x0020 */ void* Reserved;
} REG_RENAME_KEY_INFORMATION, *PREG_RENAME_KEY_INFORMATION; /* size: 0x0028 */

struct PROCESSOR_OBJECT_INFO
{
  /* 0x0000 */ unsigned long PhysicalID;
  /* 0x0004 */ unsigned long PBlkAddress;
  /* 0x0008 */ unsigned char PBlkLength;
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _SYSTEM_PROCESSOR_POLICY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long PolicyId;
  /* 0x0008 */ struct _XSAVE_POLICY Policy;
} SYSTEM_PROCESSOR_POLICY_INFORMATION, *PSYSTEM_PROCESSOR_POLICY_INFORMATION; /* size: 0x0038 */

typedef struct _EM_CLIENT_NOTIFICATION_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* RuleId;
  /* 0x0008 */ void* RuleNotifyCallback /* function */;
  /* 0x0010 */ void* Context;
} EM_CLIENT_NOTIFICATION_REGISTRATION, *PEM_CLIENT_NOTIFICATION_REGISTRATION; /* size: 0x0018 */

typedef struct _THREAD_UMS_INFORMATION
{
  /* 0x0000 */ enum _THREAD_UMS_INFORMATION_COMMAND Command;
  /* 0x0004 */ long Padding_669;
  /* 0x0008 */ struct _RTL_UMS_COMPLETION_LIST* CompletionList;
  /* 0x0010 */ struct _RTL_UMS_CONTEXT* UmsContext;
} THREAD_UMS_INFORMATION, *PTHREAD_UMS_INFORMATION; /* size: 0x0018 */

typedef struct _DISK_SAN_SETTINGS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _DISK_SAN_POLICY SanPolicy;
} DISK_SAN_SETTINGS, *PDISK_SAN_SETTINGS; /* size: 0x0008 */

struct WMIRECEIVENOTIFICATION
{
  /* 0x0000 */ unsigned long HandleCount;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ union HANDLE3264 UserModeCallback;
  /* 0x0010 */ union HANDLE3264 UserModeProcess;
  /* 0x0018 */ union HANDLE3264 Handles[1];
}; /* size: 0x0020 */

typedef struct _TEB_ACTIVE_FRAME_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME BasicFrame;
  /* 0x0018 */ void* ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX, *PTEB_ACTIVE_FRAME_EX; /* size: 0x0020 */

typedef struct _HV_OUTPUT_GET_LOGICAL_PROCESSOR_RUN_TIME
{
  /* 0x0000 */ unsigned __int64 GlobalTime;
  /* 0x0008 */ unsigned __int64 LocalRunTime;
  /* 0x0010 */ unsigned __int64 RsvdZ;
  /* 0x0018 */ unsigned __int64 HypervisorTime;
} HV_OUTPUT_GET_LOGICAL_PROCESSOR_RUN_TIME, *PHV_OUTPUT_GET_LOGICAL_PROCESSOR_RUN_TIME; /* size: 0x0020 */

typedef struct _PROCESS_BASIC_INFORMATION64
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ unsigned int Pad1;
  /* 0x0008 */ unsigned __int64 PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ unsigned int Pad2;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION64, *PPROCESS_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
  union
  {
    /* 0x0038 */ unsigned int Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned int IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned int IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned int IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned int IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned int SpareBits : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION64, *PPROCESS_EXTENDED_BASIC_INFORMATION64; /* size: 0x0040 */

typedef struct _BitField
{
  /* 0x0000 */ unsigned short Position;
  /* 0x0002 */ unsigned short Size;
} BitField, *PBitField; /* size: 0x0004 */

typedef struct _FIELD_INFO
{
  /* 0x0000 */ unsigned char* fName;
  /* 0x0008 */ unsigned char* printName;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned long fOptions;
  /* 0x0018 */ unsigned __int64 address;
  union
  {
    /* 0x0020 */ void* fieldCallBack;
    /* 0x0020 */ void* pBuffer;
  }; /* size: 0x0008 */
  /* 0x0028 */ unsigned long TypeId;
  /* 0x002c */ unsigned long FieldOffset;
  /* 0x0030 */ unsigned long BufferSize;
  /* 0x0034 */ struct _BitField BitField;
  struct /* bitfield */
  {
    /* 0x0038 */ unsigned long fPointer : 2; /* bit position: 0 */
    /* 0x0038 */ unsigned long fArray : 1; /* bit position: 2 */
    /* 0x0038 */ unsigned long fStruct : 1; /* bit position: 3 */
    /* 0x0038 */ unsigned long fConstant : 1; /* bit position: 4 */
    /* 0x0038 */ unsigned long fStatic : 1; /* bit position: 5 */
    /* 0x0038 */ unsigned long Reserved : 26; /* bit position: 6 */
  }; /* bitfield */
  /* 0x003c */ long __PADDING__[1];
} FIELD_INFO, *PFIELD_INFO; /* size: 0x0040 */

struct ISSTATICENAMES
{
  /* 0x0000 */ unsigned short* StaticNamePtr[1];
}; /* size: 0x0008 */

typedef struct _KLDTENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} KLDTENTRY, *PKLDTENTRY; /* size: 0x0008 */

typedef struct _ETW_UMS_EVENT_DIRECTED_SWITCH_START
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ScheduledThreadId;
  /* 0x0008 */ unsigned long PrimaryThreadId;
  /* 0x000c */ unsigned long SwitchFlags;
} ETW_UMS_EVENT_DIRECTED_SWITCH_START, *PETW_UMS_EVENT_DIRECTED_SWITCH_START; /* size: 0x0010 */

typedef struct _KEY_VALUE_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ wchar_t Name[1];
  /* 0x000e */ char __PADDING__[2];
} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION; /* size: 0x0010 */

typedef struct _VERIFY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} VERIFY_INFORMATION, *PVERIFY_INFORMATION; /* size: 0x0010 */

typedef struct _PHYSICAL_MEMORY_RUN
{
  /* 0x0000 */ unsigned __int64 BasePage;
  /* 0x0008 */ unsigned __int64 PageCount;
} PHYSICAL_MEMORY_RUN, *PPHYSICAL_MEMORY_RUN; /* size: 0x0010 */

struct WMIFHTOINSTANCENAME
{
  union
  {
    /* 0x0000 */ union HANDLE3264 FileHandle;
    /* 0x0000 */ unsigned long SizeNeeded;
  }; /* size: 0x0008 */
  /* 0x0008 */ union HANDLE3264 KernelHandle;
  /* 0x0010 */ unsigned long BaseIndex;
  /* 0x0014 */ unsigned short InstanceNameLength;
  /* 0x0016 */ wchar_t InstanceNames[1];
}; /* size: 0x0018 */

typedef struct _SYSTEM_PAGEFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long TotalSize;
  /* 0x0008 */ unsigned long TotalInUse;
  /* 0x000c */ unsigned long PeakUsage;
  /* 0x0010 */ struct _UNICODE_STRING PageFileName;
} SYSTEM_PAGEFILE_INFORMATION, *PSYSTEM_PAGEFILE_INFORMATION; /* size: 0x0020 */

typedef struct _PERFINFO_SET_POWER_ACTION_RET
{
  /* 0x0000 */ void* Trigger;
  /* 0x0008 */ long Status;
  /* 0x000c */ long __PADDING__[1];
} PERFINFO_SET_POWER_ACTION_RET, *PPERFINFO_SET_POWER_ACTION_RET; /* size: 0x0010 */

typedef struct _UNDOCK_POWER_RESTRICTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long HotUndockMinimumCapacity;
  /* 0x000c */ unsigned long SleepUndockMinimumCapacity;
} UNDOCK_POWER_RESTRICTIONS, *PUNDOCK_POWER_RESTRICTIONS; /* size: 0x0010 */

typedef struct _NEGOTIATE_CALLER_NAME_REQUEST
{
  /* 0x0000 */ unsigned long MessageType;
  /* 0x0004 */ struct _LUID LogonId;
} NEGOTIATE_CALLER_NAME_REQUEST, *PNEGOTIATE_CALLER_NAME_REQUEST; /* size: 0x000c */

typedef struct _ALPC_SECURITY_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_670;
  /* 0x0008 */ struct _SECURITY_QUALITY_OF_SERVICE* QoS;
  /* 0x0010 */ void* ContextHandle;
} ALPC_SECURITY_ATTR, *PALPC_SECURITY_ATTR; /* size: 0x0018 */

typedef union _TURBO_THUNK_DESCRIPTION
{
  /* 0x0000 */ unsigned char ServiceType;
} TURBO_THUNK_DESCRIPTION, *PTURBO_THUNK_DESCRIPTION; /* size: 0x0001 */

typedef struct _READ_WRITE_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0004 */ long Padding_671;
  /* 0x0008 */ __int64 Value;
} READ_WRITE_MSR, *PREAD_WRITE_MSR; /* size: 0x0010 */

typedef struct _FILE_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFORMATION, *PFILE_STREAM_INFORMATION; /* size: 0x0020 */

typedef struct _BASE_MCB
{
  /* 0x0000 */ unsigned long MaximumPairCount;
  /* 0x0004 */ unsigned long PairCount;
  /* 0x0008 */ unsigned short PoolType;
  /* 0x000a */ unsigned short Flags;
  /* 0x000c */ long Padding_672;
  /* 0x0010 */ void* Mapping;
} BASE_MCB, *PBASE_MCB; /* size: 0x0018 */

typedef struct _IO_COMPLETION_RESERVE
{
  /* 0x0000 */ struct _MEMORY_RESERVE_HEADER Header;
  /* 0x0004 */ long Padding_673;
  /* 0x0008 */ struct _IO_MINI_COMPLETION_PACKET_USER IoMiniPacket;
} IO_COMPLETION_RESERVE, *PIO_COMPLETION_RESERVE; /* size: 0x0058 */

typedef struct _CM_PCCARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char ErrorCode;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long BusData;
  /* 0x0008 */ unsigned long DeviceId;
  /* 0x000c */ unsigned long LegacyBaseAddress;
  /* 0x0010 */ unsigned char IRQMap[16];
} CM_PCCARD_DEVICE_DATA, *PCM_PCCARD_DEVICE_DATA; /* size: 0x0020 */

typedef struct _PNP_BUS_INFORMATION
{
  /* 0x0000 */ struct _GUID BusTypeGuid;
  /* 0x0010 */ enum _INTERFACE_TYPE LegacyBusType;
  /* 0x0014 */ unsigned long BusNumber;
} PNP_BUS_INFORMATION, *PPNP_BUS_INFORMATION; /* size: 0x0018 */

typedef struct _PARTITION_IDENTIFIER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long BootEntry;
    } /* size: 0x0004 */ ElTorito;
    struct
    {
      /* 0x0000 */ struct _GUID PartitionSignature;
    } /* size: 0x0010 */ Gpt;
    struct
    {
      /* 0x0000 */ unsigned long PartitionNumber;
    } /* size: 0x0004 */ Mbr;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct _BLOCK_IO_IDENTIFIER ParentIdentifier;
} PARTITION_IDENTIFIER, *PPARTITION_IDENTIFIER; /* size: 0x0038 */

struct PPM_SIMULATED_PROCESSOR_LOAD
{
  /* 0x0000 */ unsigned char Enabled;
  /* 0x0001 */ unsigned char PercentBusy[64];
}; /* size: 0x0041 */

typedef struct _CURDIR32
{
  /* 0x0000 */ struct _STRING32 DosPath;
  /* 0x0008 */ unsigned long Handle;
} CURDIR32, *PCURDIR32; /* size: 0x000c */

typedef struct _RTL_DRIVE_LETTER_CURDIR32
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING32 DosPath;
} RTL_DRIVE_LETTER_CURDIR32, *PRTL_DRIVE_LETTER_CURDIR32; /* size: 0x0010 */

typedef struct _RTL_USER_PROCESS_PARAMETERS32
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ unsigned long ConsoleHandle;
  /* 0x0014 */ unsigned long ConsoleFlags;
  /* 0x0018 */ unsigned long StandardInput;
  /* 0x001c */ unsigned long StandardOutput;
  /* 0x0020 */ unsigned long StandardError;
  /* 0x0024 */ struct _CURDIR32 CurrentDirectory;
  /* 0x0030 */ struct _STRING32 DllPath;
  /* 0x0038 */ struct _STRING32 ImagePathName;
  /* 0x0040 */ struct _STRING32 CommandLine;
  /* 0x0048 */ unsigned long Environment;
  /* 0x004c */ unsigned long StartingX;
  /* 0x0050 */ unsigned long StartingY;
  /* 0x0054 */ unsigned long CountX;
  /* 0x0058 */ unsigned long CountY;
  /* 0x005c */ unsigned long CountCharsX;
  /* 0x0060 */ unsigned long CountCharsY;
  /* 0x0064 */ unsigned long FillAttribute;
  /* 0x0068 */ unsigned long WindowFlags;
  /* 0x006c */ unsigned long ShowWindowFlags;
  /* 0x0070 */ struct _STRING32 WindowTitle;
  /* 0x0078 */ struct _STRING32 DesktopInfo;
  /* 0x0080 */ struct _STRING32 ShellInfo;
  /* 0x0088 */ struct _STRING32 RuntimeData;
  /* 0x0090 */ struct _RTL_DRIVE_LETTER_CURDIR32 CurrentDirectores[32];
  /* 0x0290 */ volatile unsigned long EnvironmentSize;
  /* 0x0294 */ volatile unsigned long EnvironmentVersion;
} RTL_USER_PROCESS_PARAMETERS32, *PRTL_USER_PROCESS_PARAMETERS32; /* size: 0x0298 */

typedef struct _STORAGE_DESCRIPTOR_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
} STORAGE_DESCRIPTOR_HEADER, *PSTORAGE_DESCRIPTOR_HEADER; /* size: 0x0008 */

typedef struct _REG_SET_INFORMATION_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ enum _KEY_SET_INFORMATION_CLASS KeySetInformationClass;
  /* 0x000c */ long Padding_674;
  /* 0x0010 */ void* KeySetInformation;
  /* 0x0018 */ unsigned long KeySetInformationLength;
  /* 0x001c */ long Padding_675;
  /* 0x0020 */ void* CallContext;
  /* 0x0028 */ void* ObjectContext;
  /* 0x0030 */ void* Reserved;
} REG_SET_INFORMATION_KEY_INFORMATION, *PREG_SET_INFORMATION_KEY_INFORMATION; /* size: 0x0038 */

typedef struct _Wx86ThreadState
{
  /* 0x0000 */ unsigned long* CallBx86Eip;
  /* 0x0008 */ void* DeallocationCpu;
  /* 0x0010 */ unsigned char UseKnownWx86Dll;
  /* 0x0011 */ char OleStubInvoked;
  /* 0x0012 */ char __PADDING__[6];
} Wx86ThreadState, *PWx86ThreadState; /* size: 0x0018 */

struct PPM_IDLE_STATE_ACCOUNTING
{
  /* 0x0000 */ unsigned long IdleTransitions;
  /* 0x0004 */ unsigned long FailedTransitions;
  /* 0x0008 */ unsigned long InvalidBucketIndex;
  /* 0x000c */ long Padding_676;
  /* 0x0010 */ unsigned __int64 TotalTime;
  /* 0x0018 */ unsigned long IdleTimeBuckets[6];
}; /* size: 0x0030 */

struct PPM_IDLE_ACCOUNTING
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ long Padding_677;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING State[1];
}; /* size: 0x0048 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulEncodedAssemblyIdentityLength;
  /* 0x0008 */ unsigned long ulManifestPathType;
  /* 0x000c */ unsigned long ulManifestPathLength;
  /* 0x0010 */ union _LARGE_INTEGER liManifestLastWriteTime;
  /* 0x0018 */ unsigned long ulPolicyPathType;
  /* 0x001c */ unsigned long ulPolicyPathLength;
  /* 0x0020 */ union _LARGE_INTEGER liPolicyLastWriteTime;
  /* 0x0028 */ unsigned long ulMetadataSatelliteRosterIndex;
  /* 0x002c */ unsigned long ulManifestVersionMajor;
  /* 0x0030 */ unsigned long ulManifestVersionMinor;
  /* 0x0034 */ unsigned long ulPolicyVersionMajor;
  /* 0x0038 */ unsigned long ulPolicyVersionMinor;
  /* 0x003c */ unsigned long ulAssemblyDirectoryNameLength;
  /* 0x0040 */ const wchar_t* lpAssemblyEncodedAssemblyIdentity;
  /* 0x0048 */ const wchar_t* lpAssemblyManifestPath;
  /* 0x0050 */ const wchar_t* lpAssemblyPolicyPath;
  /* 0x0058 */ const wchar_t* lpAssemblyDirectoryName;
  /* 0x0060 */ unsigned long ulFileCount;
  /* 0x0064 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION; /* size: 0x0068 */

typedef struct _PERFINFO_BOOT_PHASE_START
{
  /* 0x0000 */ long Phase;
} PERFINFO_BOOT_PHASE_START, *PPERFINFO_BOOT_PHASE_START; /* size: 0x0004 */

typedef struct _REG_POST_CREATE_KEY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING* CompleteName;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ long Status;
  /* 0x0014 */ long __PADDING__[1];
} REG_POST_CREATE_KEY_INFORMATION, *PREG_POST_CREATE_KEY_INFORMATION; /* size: 0x0018 */

typedef struct _HAL_INTERRUPT_TARGET_INFORMATION
{
  /* 0x0000 */ enum HAL_INTERRUPT_TARGET_TYPE Type;
  /* 0x0004 */ struct _PROCESSOR_NUMBER ProcessorNumber;
  /* 0x0008 */ unsigned long Flags;
  union
  {
    struct
    {
      /* 0x000c */ unsigned long LogicalApicId;
      /* 0x0010 */ unsigned long ClusterId;
      /* 0x0014 */ enum HAL_APIC_DESTINATION_MODE DestinationMode;
    } /* size: 0x000c */ Apic;
    struct
    {
      /* 0x000c */ unsigned char Enabled;
      /* 0x0001 */ char Padding_678[3];
      /* 0x0010 */ unsigned long MinimumIndex;
      /* 0x0014 */ unsigned long MaximumIndex;
    } /* size: 0x000c */ Irt;
  }; /* size: 0x000c */
} HAL_INTERRUPT_TARGET_INFORMATION, *PHAL_INTERRUPT_TARGET_INFORMATION; /* size: 0x0018 */

typedef struct _PLUGPLAY_EVENT_BLOCK
{
  /* 0x0000 */ struct _GUID EventGuid;
  /* 0x0010 */ enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ long Padding_679;
  /* 0x0018 */ unsigned long* Result;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long TotalSize;
  /* 0x0028 */ void* DeviceObject;
  union
  {
    union
    {
      struct
      {
        /* 0x0030 */ struct _GUID ClassGuid;
        /* 0x0040 */ wchar_t SymbolicLinkName[1];
        /* 0x0042 */ char __PADDING__[2];
      } /* size: 0x0014 */ DeviceClass;
      struct
      {
        /* 0x0030 */ wchar_t DeviceIds[1];
      } /* size: 0x0002 */ TargetDevice;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ InstallDevice;
      struct
      {
        /* 0x0030 */ void* NotificationStructure;
        /* 0x0038 */ wchar_t DeviceIds[1];
        /* 0x003a */ char __PADDING__[6];
      } /* size: 0x0010 */ CustomNotification;
      struct
      {
        /* 0x0030 */ void* Notification;
      } /* size: 0x0008 */ ProfileNotification;
      struct
      {
        /* 0x0030 */ unsigned long NotificationCode;
        /* 0x0034 */ unsigned long NotificationData;
      } /* size: 0x0008 */ PowerNotification;
      struct
      {
        /* 0x0030 */ enum _PNP_VETO_TYPE VetoType;
        /* 0x0034 */ wchar_t DeviceIdVetoNameBuffer[1];
        /* 0x0036 */ char __PADDING__[2];
      } /* size: 0x0008 */ VetoNotification;
      struct
      {
        /* 0x0030 */ struct _GUID BlockedDriverGuid;
      } /* size: 0x0010 */ BlockedDriverNotification;
      struct
      {
        /* 0x0030 */ wchar_t ParentId[1];
      } /* size: 0x0002 */ InvalidIDNotification;
      struct
      {
        /* 0x0030 */ struct _GUID PowerSettingGuid;
        /* 0x0040 */ unsigned long Flags;
        /* 0x0044 */ unsigned long SessionId;
        /* 0x0048 */ unsigned long DataLength;
        /* 0x004c */ unsigned char Data[1];
        /* 0x004d */ char __PADDING__[3];
      } /* size: 0x0020 */ PowerSettingNotification;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ PropertyChangeNotification;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
} PLUGPLAY_EVENT_BLOCK, *PPLUGPLAY_EVENT_BLOCK; /* size: 0x0050 */

struct NTFS_EXTENDED_VOLUME_DATA
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
}; /* size: 0x0008 */

typedef struct _QUOTA_LIMITS_EX
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
  /* 0x0030 */ unsigned __int64 WorkingSetLimit;
  /* 0x0038 */ unsigned __int64 Reserved2;
  /* 0x0040 */ unsigned __int64 Reserved3;
  /* 0x0048 */ unsigned __int64 Reserved4;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ union _RATE_QUOTA_LIMIT CpuRateLimit;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX; /* size: 0x0058 */

typedef struct _X86_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _X86_CONTEXT ContextFrame;
  /* 0x00cc */ struct _X86_KSPECIAL_REGISTERS SpecialRegisters;
} X86_KPROCESSOR_STATE, *PX86_KPROCESSOR_STATE; /* size: 0x0120 */

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulFilenameLength;
  /* 0x0008 */ unsigned long ulPathLength;
  /* 0x000c */ long Padding_680;
  /* 0x0010 */ const wchar_t* lpFileName;
  /* 0x0018 */ const wchar_t* lpFilePath;
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION; /* size: 0x0020 */

typedef struct _ADMINISTRATOR_POWER_POLICY
{
  /* 0x0000 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x0008 */ unsigned long MinVideoTimeout;
  /* 0x000c */ unsigned long MaxVideoTimeout;
  /* 0x0010 */ unsigned long MinSpindownTimeout;
  /* 0x0014 */ unsigned long MaxSpindownTimeout;
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY; /* size: 0x0018 */

typedef struct _MM_MIRROR_DISPATCH
{
  /* 0x0000 */ void* StartMirroring /* function */;
  /* 0x0008 */ void* EndMirroring /* function */;
  /* 0x0010 */ void* MirrorPhysicalMemory /* function */;
  /* 0x0018 */ void* MirrorVerify /* function */;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long __PADDING__[1];
} MM_MIRROR_DISPATCH, *PMM_MIRROR_DISPATCH; /* size: 0x0028 */

typedef struct _RTL_BACKOFF
{
  /* 0x0000 */ unsigned long Delay;
} RTL_BACKOFF, *PRTL_BACKOFF; /* size: 0x0004 */

typedef struct _FSRTL_PER_FILEOBJECT_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ void* OwnerId;
  /* 0x0018 */ void* InstanceId;
} FSRTL_PER_FILEOBJECT_CONTEXT, *PFSRTL_PER_FILEOBJECT_CONTEXT; /* size: 0x0020 */

typedef struct _RELATION_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long TagCount;
  /* 0x0008 */ unsigned long FirstLevel;
  /* 0x000c */ unsigned long MaxLevel;
  /* 0x0010 */ struct _RELATION_LIST_ENTRY* Entries[1];
} RELATION_LIST, *PRELATION_LIST; /* size: 0x0018 */

typedef struct _DBGKM_ERROR_MSG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ struct _SECTION_IMAGE_INFORMATION ImageInfo;
  union
  {
    /* 0x00d8 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x00d8 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x00d8 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x00d8 */ unsigned long IsFilterMessage : 1; /* bit position: 2 */
      /* 0x00d8 */ unsigned long SpareBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x00dc */ long __PADDING__[1];
} DBGKM_ERROR_MSG, *PDBGKM_ERROR_MSG; /* size: 0x00e0 */

typedef struct _KEY_CACHED_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long SubKeys;
  /* 0x0010 */ unsigned long MaxNameLen;
  /* 0x0014 */ unsigned long Values;
  /* 0x0018 */ unsigned long MaxValueNameLen;
  /* 0x001c */ unsigned long MaxValueDataLen;
  /* 0x0020 */ unsigned long NameLength;
  /* 0x0024 */ long __PADDING__[1];
} KEY_CACHED_INFORMATION, *PKEY_CACHED_INFORMATION; /* size: 0x0028 */

typedef struct _inf
{
  /* 0x0000 */ struct _section* pSection;
  /* 0x0008 */ struct _section* pSectionRecord;
  /* 0x0010 */ struct _line* pLineRecord;
  /* 0x0018 */ struct _value* pValueRecord;
  /* 0x0020 */ enum _stringsSectionType StringsSectionType;
  /* 0x0024 */ long Padding_681;
  /* 0x0028 */ struct _section* StringsSection;
} inf, *Pinf; /* size: 0x0030 */

typedef struct _HAL_HYPERVISOR_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  union
  {
    /* 0x0004 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long ProcessorTscsSynchronized : 1; /* bit position: 0 */
      /* 0x0004 */ unsigned long HpetTimerReservedForHypervisor : 1; /* bit position: 1 */
      /* 0x0004 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  struct
  {
    /* 0x0008 */ union _LARGE_INTEGER PhysicalAddress;
    /* 0x0010 */ unsigned long TimerIndex;
    /* 0x0014 */ unsigned long InterruptVector;
  } /* size: 0x0010 */ HpetTimerInformation;
} HAL_HYPERVISOR_INFORMATION, *PHAL_HYPERVISOR_INFORMATION; /* size: 0x0018 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG64
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_682;
  /* 0x0008 */ unsigned __int64 CriticalSection;
  /* 0x0010 */ struct LIST_ENTRY64 ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG64, *PRTL_CRITICAL_SECTION_DEBUG64; /* size: 0x0030 */

typedef struct _ALPHA_CONTEXT
{
  /* 0x0000 */ unsigned long FltF0;
  /* 0x0004 */ unsigned long FltF1;
  /* 0x0008 */ unsigned long FltF2;
  /* 0x000c */ unsigned long FltF3;
  /* 0x0010 */ unsigned long FltF4;
  /* 0x0014 */ unsigned long FltF5;
  /* 0x0018 */ unsigned long FltF6;
  /* 0x001c */ unsigned long FltF7;
  /* 0x0020 */ unsigned long FltF8;
  /* 0x0024 */ unsigned long FltF9;
  /* 0x0028 */ unsigned long FltF10;
  /* 0x002c */ unsigned long FltF11;
  /* 0x0030 */ unsigned long FltF12;
  /* 0x0034 */ unsigned long FltF13;
  /* 0x0038 */ unsigned long FltF14;
  /* 0x003c */ unsigned long FltF15;
  /* 0x0040 */ unsigned long FltF16;
  /* 0x0044 */ unsigned long FltF17;
  /* 0x0048 */ unsigned long FltF18;
  /* 0x004c */ unsigned long FltF19;
  /* 0x0050 */ unsigned long FltF20;
  /* 0x0054 */ unsigned long FltF21;
  /* 0x0058 */ unsigned long FltF22;
  /* 0x005c */ unsigned long FltF23;
  /* 0x0060 */ unsigned long FltF24;
  /* 0x0064 */ unsigned long FltF25;
  /* 0x0068 */ unsigned long FltF26;
  /* 0x006c */ unsigned long FltF27;
  /* 0x0070 */ unsigned long FltF28;
  /* 0x0074 */ unsigned long FltF29;
  /* 0x0078 */ unsigned long FltF30;
  /* 0x007c */ unsigned long FltF31;
  /* 0x0080 */ unsigned long IntV0;
  /* 0x0084 */ unsigned long IntT0;
  /* 0x0088 */ unsigned long IntT1;
  /* 0x008c */ unsigned long IntT2;
  /* 0x0090 */ unsigned long IntT3;
  /* 0x0094 */ unsigned long IntT4;
  /* 0x0098 */ unsigned long IntT5;
  /* 0x009c */ unsigned long IntT6;
  /* 0x00a0 */ unsigned long IntT7;
  /* 0x00a4 */ unsigned long IntS0;
  /* 0x00a8 */ unsigned long IntS1;
  /* 0x00ac */ unsigned long IntS2;
  /* 0x00b0 */ unsigned long IntS3;
  /* 0x00b4 */ unsigned long IntS4;
  /* 0x00b8 */ unsigned long IntS5;
  /* 0x00bc */ unsigned long IntFp;
  /* 0x00c0 */ unsigned long IntA0;
  /* 0x00c4 */ unsigned long IntA1;
  /* 0x00c8 */ unsigned long IntA2;
  /* 0x00cc */ unsigned long IntA3;
  /* 0x00d0 */ unsigned long IntA4;
  /* 0x00d4 */ unsigned long IntA5;
  /* 0x00d8 */ unsigned long IntT8;
  /* 0x00dc */ unsigned long IntT9;
  /* 0x00e0 */ unsigned long IntT10;
  /* 0x00e4 */ unsigned long IntT11;
  /* 0x00e8 */ unsigned long IntRa;
  /* 0x00ec */ unsigned long IntT12;
  /* 0x00f0 */ unsigned long IntAt;
  /* 0x00f4 */ unsigned long IntGp;
  /* 0x00f8 */ unsigned long IntSp;
  /* 0x00fc */ unsigned long IntZero;
  /* 0x0100 */ unsigned long Fpcr;
  /* 0x0104 */ unsigned long SoftFpcr;
  /* 0x0108 */ unsigned long Fir;
  /* 0x010c */ unsigned long Psr;
  /* 0x0110 */ unsigned long ContextFlags;
  /* 0x0114 */ unsigned long HighFltF0;
  /* 0x0118 */ unsigned long HighFltF1;
  /* 0x011c */ unsigned long HighFltF2;
  /* 0x0120 */ unsigned long HighFltF3;
  /* 0x0124 */ unsigned long HighFltF4;
  /* 0x0128 */ unsigned long HighFltF5;
  /* 0x012c */ unsigned long HighFltF6;
  /* 0x0130 */ unsigned long HighFltF7;
  /* 0x0134 */ unsigned long HighFltF8;
  /* 0x0138 */ unsigned long HighFltF9;
  /* 0x013c */ unsigned long HighFltF10;
  /* 0x0140 */ unsigned long HighFltF11;
  /* 0x0144 */ unsigned long HighFltF12;
  /* 0x0148 */ unsigned long HighFltF13;
  /* 0x014c */ unsigned long HighFltF14;
  /* 0x0150 */ unsigned long HighFltF15;
  /* 0x0154 */ unsigned long HighFltF16;
  /* 0x0158 */ unsigned long HighFltF17;
  /* 0x015c */ unsigned long HighFltF18;
  /* 0x0160 */ unsigned long HighFltF19;
  /* 0x0164 */ unsigned long HighFltF20;
  /* 0x0168 */ unsigned long HighFltF21;
  /* 0x016c */ unsigned long HighFltF22;
  /* 0x0170 */ unsigned long HighFltF23;
  /* 0x0174 */ unsigned long HighFltF24;
  /* 0x0178 */ unsigned long HighFltF25;
  /* 0x017c */ unsigned long HighFltF26;
  /* 0x0180 */ unsigned long HighFltF27;
  /* 0x0184 */ unsigned long HighFltF28;
  /* 0x0188 */ unsigned long HighFltF29;
  /* 0x018c */ unsigned long HighFltF30;
  /* 0x0190 */ unsigned long HighFltF31;
  /* 0x0194 */ unsigned long HighIntV0;
  /* 0x0198 */ unsigned long HighIntT0;
  /* 0x019c */ unsigned long HighIntT1;
  /* 0x01a0 */ unsigned long HighIntT2;
  /* 0x01a4 */ unsigned long HighIntT3;
  /* 0x01a8 */ unsigned long HighIntT4;
  /* 0x01ac */ unsigned long HighIntT5;
  /* 0x01b0 */ unsigned long HighIntT6;
  /* 0x01b4 */ unsigned long HighIntT7;
  /* 0x01b8 */ unsigned long HighIntS0;
  /* 0x01bc */ unsigned long HighIntS1;
  /* 0x01c0 */ unsigned long HighIntS2;
  /* 0x01c4 */ unsigned long HighIntS3;
  /* 0x01c8 */ unsigned long HighIntS4;
  /* 0x01cc */ unsigned long HighIntS5;
  /* 0x01d0 */ unsigned long HighIntFp;
  /* 0x01d4 */ unsigned long HighIntA0;
  /* 0x01d8 */ unsigned long HighIntA1;
  /* 0x01dc */ unsigned long HighIntA2;
  /* 0x01e0 */ unsigned long HighIntA3;
  /* 0x01e4 */ unsigned long HighIntA4;
  /* 0x01e8 */ unsigned long HighIntA5;
  /* 0x01ec */ unsigned long HighIntT8;
  /* 0x01f0 */ unsigned long HighIntT9;
  /* 0x01f4 */ unsigned long HighIntT10;
  /* 0x01f8 */ unsigned long HighIntT11;
  /* 0x01fc */ unsigned long HighIntRa;
  /* 0x0200 */ unsigned long HighIntT12;
  /* 0x0204 */ unsigned long HighIntAt;
  /* 0x0208 */ unsigned long HighIntGp;
  /* 0x020c */ unsigned long HighIntSp;
  /* 0x0210 */ unsigned long HighIntZero;
  /* 0x0214 */ unsigned long HighFpcr;
  /* 0x0218 */ unsigned long HighSoftFpcr;
  /* 0x021c */ unsigned long HighFir;
  /* 0x0220 */ double DoNotUseThisField;
  /* 0x0228 */ unsigned long HighFill[2];
} ALPHA_CONTEXT, *PALPHA_CONTEXT; /* size: 0x0230 */

typedef struct _AMD64_OBSOLETE_CONTEXT_1
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  /* 0x0100 */ struct _AMD64_M128 Xmm0;
  /* 0x0110 */ struct _AMD64_M128 Xmm1;
  /* 0x0120 */ struct _AMD64_M128 Xmm2;
  /* 0x0130 */ struct _AMD64_M128 Xmm3;
  /* 0x0140 */ struct _AMD64_M128 Xmm4;
  /* 0x0150 */ struct _AMD64_M128 Xmm5;
  /* 0x0160 */ struct _AMD64_M128 Xmm6;
  /* 0x0170 */ struct _AMD64_M128 Xmm7;
  /* 0x0180 */ struct _AMD64_M128 Xmm8;
  /* 0x0190 */ struct _AMD64_M128 Xmm9;
  /* 0x01a0 */ struct _AMD64_M128 Xmm10;
  /* 0x01b0 */ struct _AMD64_M128 Xmm11;
  /* 0x01c0 */ struct _AMD64_M128 Xmm12;
  /* 0x01d0 */ struct _AMD64_M128 Xmm13;
  /* 0x01e0 */ struct _AMD64_M128 Xmm14;
  /* 0x01f0 */ struct _AMD64_M128 Xmm15;
  /* 0x0200 */ struct _AMD64_LEGACY_SAVE_AREA FltSave;
  /* 0x02a0 */ unsigned __int64 DebugControl;
  /* 0x02a8 */ unsigned __int64 LastBranchToRip;
  /* 0x02b0 */ unsigned __int64 LastBranchFromRip;
  /* 0x02b8 */ unsigned __int64 LastExceptionToRip;
  /* 0x02c0 */ unsigned __int64 LastExceptionFromRip;
  /* 0x02c8 */ unsigned __int64 VectorControl;
  /* 0x02d0 */ struct _AMD64_M128 VectorRegister[16];
} AMD64_OBSOLETE_CONTEXT_1, *PAMD64_OBSOLETE_CONTEXT_1; /* size: 0x03d0 */

typedef struct _MIPS64_CONTEXT
{
  union
  {
    /* 0x0000 */ unsigned long Argument[4];
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned __int64 FltF0;
  /* 0x0018 */ unsigned __int64 FltF1;
  /* 0x0020 */ unsigned __int64 FltF2;
  /* 0x0028 */ unsigned __int64 FltF3;
  /* 0x0030 */ unsigned __int64 FltF4;
  /* 0x0038 */ unsigned __int64 FltF5;
  /* 0x0040 */ unsigned __int64 FltF6;
  /* 0x0048 */ unsigned __int64 FltF7;
  /* 0x0050 */ unsigned __int64 FltF8;
  /* 0x0058 */ unsigned __int64 FltF9;
  /* 0x0060 */ unsigned __int64 FltF10;
  /* 0x0068 */ unsigned __int64 FltF11;
  /* 0x0070 */ unsigned __int64 FltF12;
  /* 0x0078 */ unsigned __int64 FltF13;
  /* 0x0080 */ unsigned __int64 FltF14;
  /* 0x0088 */ unsigned __int64 FltF15;
  /* 0x0090 */ unsigned __int64 FltF16;
  /* 0x0098 */ unsigned __int64 FltF17;
  /* 0x00a0 */ unsigned __int64 FltF18;
  /* 0x00a8 */ unsigned __int64 FltF19;
  /* 0x00b0 */ unsigned __int64 FltF20;
  /* 0x00b8 */ unsigned __int64 FltF21;
  /* 0x00c0 */ unsigned __int64 FltF22;
  /* 0x00c8 */ unsigned __int64 FltF23;
  /* 0x00d0 */ unsigned __int64 FltF24;
  /* 0x00d8 */ unsigned __int64 FltF25;
  /* 0x00e0 */ unsigned __int64 FltF26;
  /* 0x00e8 */ unsigned __int64 FltF27;
  /* 0x00f0 */ unsigned __int64 FltF28;
  /* 0x00f8 */ unsigned __int64 FltF29;
  /* 0x0100 */ unsigned __int64 FltF30;
  /* 0x0108 */ unsigned __int64 FltF31;
  /* 0x0110 */ unsigned long Fill1;
  /* 0x0114 */ unsigned long Fill2;
  /* 0x0118 */ unsigned long Fsr;
  /* 0x011c */ unsigned long Fir;
  /* 0x0120 */ unsigned long Psr;
  /* 0x0124 */ unsigned long ContextFlags;
  /* 0x0128 */ unsigned __int64 IntZero;
  /* 0x0130 */ unsigned __int64 IntAt;
  /* 0x0138 */ unsigned __int64 IntV0;
  /* 0x0140 */ unsigned __int64 IntV1;
  /* 0x0148 */ unsigned __int64 IntA0;
  /* 0x0150 */ unsigned __int64 IntA1;
  /* 0x0158 */ unsigned __int64 IntA2;
  /* 0x0160 */ unsigned __int64 IntA3;
  /* 0x0168 */ unsigned __int64 IntT0;
  /* 0x0170 */ unsigned __int64 IntT1;
  /* 0x0178 */ unsigned __int64 IntT2;
  /* 0x0180 */ unsigned __int64 IntT3;
  /* 0x0188 */ unsigned __int64 IntT4;
  /* 0x0190 */ unsigned __int64 IntT5;
  /* 0x0198 */ unsigned __int64 IntT6;
  /* 0x01a0 */ unsigned __int64 IntT7;
  /* 0x01a8 */ unsigned __int64 IntS0;
  /* 0x01b0 */ unsigned __int64 IntS1;
  /* 0x01b8 */ unsigned __int64 IntS2;
  /* 0x01c0 */ unsigned __int64 IntS3;
  /* 0x01c8 */ unsigned __int64 IntS4;
  /* 0x01d0 */ unsigned __int64 IntS5;
  /* 0x01d8 */ unsigned __int64 IntS6;
  /* 0x01e0 */ unsigned __int64 IntS7;
  /* 0x01e8 */ unsigned __int64 IntT8;
  /* 0x01f0 */ unsigned __int64 IntT9;
  /* 0x01f8 */ unsigned __int64 IntK0;
  /* 0x0200 */ unsigned __int64 IntK1;
  /* 0x0208 */ unsigned __int64 IntGp;
  /* 0x0210 */ unsigned __int64 IntSp;
  /* 0x0218 */ unsigned __int64 IntS8;
  /* 0x0220 */ unsigned __int64 IntRa;
  /* 0x0228 */ unsigned __int64 IntLo;
  /* 0x0230 */ unsigned __int64 IntHi;
} MIPS64_CONTEXT, *PMIPS64_CONTEXT; /* size: 0x0238 */

typedef struct _CROSS_PLATFORM_CONTEXT
{
  union
  {
    /* 0x0000 */ struct _X86_CONTEXT X86Context;
    /* 0x0000 */ struct _X86_NT5_CONTEXT X86Nt5Context;
    /* 0x0000 */ struct _ALPHA_CONTEXT AlphaContext;
    /* 0x0000 */ struct _ALPHA_NT5_CONTEXT AlphaNt5Context;
    /* 0x0000 */ struct _IA64_CONTEXT IA64Context;
    /* 0x0000 */ struct _AMD64_CONTEXT Amd64Context;
    /* 0x0000 */ struct _AMD64_OBSOLETE_CONTEXT_1 Amd64ObsContext1;
    /* 0x0000 */ struct _AMD64_OBSOLETE_CONTEXT_2 Amd64ObsContext2;
    /* 0x0000 */ struct _ARM_CONTEXT ArmContext;
    /* 0x0000 */ struct _EBC_CONTEXT EbcContext;
    /* 0x0000 */ struct _PPC_CONTEXT PpcContext;
    /* 0x0000 */ struct _MIPS32_CONTEXT Mips32Context;
    /* 0x0000 */ struct _MIPS64_CONTEXT Mips64Context;
    struct
    {
      /* 0x0000 */ struct _SH_CONTEXT ShContext;
      /* 0x00e4 */ long __PADDING__[611];
    }; /* size: 0x0a70 */
  }; /* size: 0x0a70 */
} CROSS_PLATFORM_CONTEXT, *PCROSS_PLATFORM_CONTEXT; /* size: 0x0a70 */

typedef struct _REG_ENUMERATE_VALUE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ enum _KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass;
  /* 0x0010 */ void* KeyValueInformation;
  /* 0x0018 */ unsigned long Length;
  /* 0x001c */ long Padding_683;
  /* 0x0020 */ unsigned long* ResultLength;
  /* 0x0028 */ void* CallContext;
  /* 0x0030 */ void* ObjectContext;
  /* 0x0038 */ void* Reserved;
} REG_ENUMERATE_VALUE_KEY_INFORMATION, *PREG_ENUMERATE_VALUE_KEY_INFORMATION; /* size: 0x0040 */

typedef struct _KSPIN_LOCK_QUEUE64
{
  /* 0x0000 */ unsigned __int64 Next;
  /* 0x0008 */ unsigned __int64 Lock;
} KSPIN_LOCK_QUEUE64, *PKSPIN_LOCK_QUEUE64; /* size: 0x0010 */

typedef struct _ARBITER_ORDERING_LIST
{
  /* 0x0000 */ unsigned short Count;
  /* 0x0002 */ unsigned short Maximum;
  /* 0x0004 */ long Padding_684;
  /* 0x0008 */ struct _ARBITER_ORDERING* Orderings;
} ARBITER_ORDERING_LIST, *PARBITER_ORDERING_LIST; /* size: 0x0010 */

struct WMIREGINFOW
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ unsigned long NextWmiRegInfo;
  /* 0x0008 */ unsigned long RegistryPath;
  /* 0x000c */ unsigned long MofResourceName;
  /* 0x0010 */ unsigned long GuidCount;
  /* 0x0014 */ long Padding_685;
  /* 0x0018 */ struct WMIREGGUIDW* WmiRegGuid /* zero-length array */;
}; /* size: 0x0018 */

typedef struct _ARBITER_INSTANCE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_686;
  /* 0x0008 */ struct _KEVENT* MutexEvent;
  /* 0x0010 */ unsigned short* Name;
  /* 0x0018 */ unsigned short* OrderingName;
  /* 0x0020 */ int ResourceType;
  /* 0x0024 */ long Padding_687;
  /* 0x0028 */ struct _RTL_RANGE_LIST* Allocation;
  /* 0x0030 */ struct _RTL_RANGE_LIST* PossibleAllocation;
  /* 0x0038 */ struct _ARBITER_ORDERING_LIST OrderingList;
  /* 0x0048 */ struct _ARBITER_ORDERING_LIST ReservedList;
  /* 0x0058 */ long ReferenceCount;
  /* 0x005c */ long Padding_688;
  /* 0x0060 */ struct _ARBITER_INTERFACE* Interface;
  /* 0x0068 */ unsigned long AllocationStackMaxSize;
  /* 0x006c */ long Padding_689;
  /* 0x0070 */ struct _ARBITER_ALLOCATION_STATE* AllocationStack;
  /* 0x0078 */ void* UnpackRequirement /* function */;
  /* 0x0080 */ void* PackResource /* function */;
  /* 0x0088 */ void* UnpackResource /* function */;
  /* 0x0090 */ void* ScoreRequirement /* function */;
  /* 0x0098 */ void* TestAllocation /* function */;
  /* 0x00a0 */ void* RetestAllocation /* function */;
  /* 0x00a8 */ void* CommitAllocation /* function */;
  /* 0x00b0 */ void* RollbackAllocation /* function */;
  /* 0x00b8 */ void* BootAllocation /* function */;
  /* 0x00c0 */ void* QueryArbitrate /* function */;
  /* 0x00c8 */ void* QueryConflict /* function */;
  /* 0x00d0 */ void* AddReserved /* function */;
  /* 0x00d8 */ void* StartArbiter /* function */;
  /* 0x00e0 */ void* PreprocessEntry /* function */;
  /* 0x00e8 */ void* AllocateEntry /* function */;
  /* 0x00f0 */ void* GetNextAllocationRange /* function */;
  /* 0x00f8 */ void* FindSuitableRange /* function */;
  /* 0x0100 */ void* AddAllocation /* function */;
  /* 0x0108 */ void* BacktrackAllocation /* function */;
  /* 0x0110 */ void* OverrideConflict /* function */;
  /* 0x0118 */ void* InitializeRangeList /* function */;
  /* 0x0120 */ unsigned char TransactionInProgress;
  /* 0x0121 */ char Padding_690[7];
  /* 0x0128 */ struct _KEVENT* TransactionEvent;
  /* 0x0130 */ void* Extension;
  /* 0x0138 */ struct _DEVICE_OBJECT* BusDeviceObject;
  /* 0x0140 */ void* ConflictCallbackContext;
  /* 0x0148 */ void* ConflictCallback /* function */;
  /* 0x0150 */ wchar_t PdoDescriptionString[336];
  /* 0x03f0 */ char PdoSymbolicNameString[672];
  /* 0x0690 */ wchar_t PdoAddressString[1];
  /* 0x0692 */ char __PADDING__[6];
} ARBITER_INSTANCE, *PARBITER_INSTANCE; /* size: 0x0698 */

typedef struct _WMI_IMAGEID_INFORMATION32
{
  /* 0x0000 */ unsigned int ImageBase32;
  /* 0x0004 */ unsigned int ImageSize32;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ wchar_t OriginalFileName[1];
  /* 0x0012 */ char __PADDING__[2];
} WMI_IMAGEID_INFORMATION32, *PWMI_IMAGEID_INFORMATION32; /* size: 0x0014 */

typedef struct _LSA_REPLY_MESSAGE
{
  /* 0x0000 */ struct _PORT_MESSAGE MessageHeader;
  /* 0x0028 */ long ReturnedStatus;
  /* 0x002c */ unsigned char ReplyBuffer[468];
} LSA_REPLY_MESSAGE, *PLSA_REPLY_MESSAGE; /* size: 0x0200 */

typedef struct _RTL_MODULE_EXTENDED_INFO
{
  /* 0x0000 */ struct _RTL_MODULE_BASIC_INFO BasicInfo;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ unsigned short FileNameOffset;
  /* 0x000e */ unsigned char FullPathName[256];
  /* 0x010e */ char __PADDING__[2];
} RTL_MODULE_EXTENDED_INFO, *PRTL_MODULE_EXTENDED_INFO; /* size: 0x0110 */

typedef struct _SEP_AUDIT_POLICY
{
  /* 0x0000 */ struct _TOKEN_AUDIT_POLICY AdtTokenPolicy;
  /* 0x001b */ unsigned char PolicySetStatus;
} SEP_AUDIT_POLICY, *PSEP_AUDIT_POLICY; /* size: 0x001c */

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION
{
  /* 0x0000 */ struct _GUID LogIdentity;
} TRANSACTIONMANAGER_LOG_INFORMATION, *PTRANSACTIONMANAGER_LOG_INFORMATION; /* size: 0x0010 */

typedef struct _TEST_CONTROL
{
  /* 0x0000 */ unsigned long EventFlags;
  /* 0x0004 */ unsigned long MapFailureInterval;
  /* 0x0008 */ unsigned long MapCallCount;
  /* 0x000c */ long Padding_691;
  /* 0x0010 */ unsigned __int64 VaUsageLimitMb;
} TEST_CONTROL, *PTEST_CONTROL; /* size: 0x0018 */

typedef struct _WIN32_CLOSEMETHOD_PARAMETERS
{
  /* 0x0000 */ struct _EPROCESS* Process;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long ProcessHandleCount;
  /* 0x0014 */ unsigned long SystemHandleCount;
} WIN32_CLOSEMETHOD_PARAMETERS, *PWIN32_CLOSEMETHOD_PARAMETERS; /* size: 0x0018 */

typedef struct _PROCESSOR_IDLE_STATES_EX
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_692;
  /* 0x0008 */ struct _KAFFINITY_EX TargetProcessors;
  /* 0x0030 */ struct _PROCESSOR_IDLE_STATE_EX State[1];
} PROCESSOR_IDLE_STATES_EX, *PPROCESSOR_IDLE_STATES_EX; /* size: 0x0060 */

typedef struct _TRACE_ENABLE_INFO
{
  /* 0x0000 */ unsigned long IsEnabled;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short LoggerId;
  /* 0x0008 */ unsigned long EnableProperty;
  /* 0x000c */ unsigned long Reserved2;
  /* 0x0010 */ unsigned __int64 MatchAnyKeyword;
  /* 0x0018 */ unsigned __int64 MatchAllKeyword;
} TRACE_ENABLE_INFO, *PTRACE_ENABLE_INFO; /* size: 0x0020 */

struct WMIMOFENTRY
{
  /* 0x0000 */ unsigned long RegPathOffset;
  /* 0x0004 */ unsigned long ResourceOffset;
  /* 0x0008 */ unsigned long Flags;
}; /* size: 0x000c */

typedef struct _CONTEXT32_UPDATE
{
  /* 0x0000 */ unsigned long NumberEntries;
} CONTEXT32_UPDATE, *PCONTEXT32_UPDATE; /* size: 0x0004 */

typedef struct _XSTATE_CONFIGURATION
{
  /* 0x0000 */ unsigned __int64 EnabledFeatures;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long OptimizedSave : 1; /* bit position: 0 */
  /* 0x0010 */ struct _XSTATE_FEATURE Features[64];
} XSTATE_CONFIGURATION, *PXSTATE_CONFIGURATION; /* size: 0x0210 */

typedef struct _KUSER_SHARED_DATA
{
  /* 0x0000 */ unsigned long TickCountLowDeprecated;
  /* 0x0004 */ unsigned long TickCountMultiplier;
  /* 0x0008 */ volatile struct _KSYSTEM_TIME InterruptTime;
  /* 0x0014 */ volatile struct _KSYSTEM_TIME SystemTime;
  /* 0x0020 */ volatile struct _KSYSTEM_TIME TimeZoneBias;
  /* 0x002c */ unsigned short ImageNumberLow;
  /* 0x002e */ unsigned short ImageNumberHigh;
  /* 0x0030 */ wchar_t NtSystemRoot[260];
  /* 0x0238 */ unsigned long MaxStackTraceDepth;
  /* 0x023c */ unsigned long CryptoExponent;
  /* 0x0240 */ unsigned long TimeZoneId;
  /* 0x0244 */ unsigned long LargePageMinimum;
  /* 0x0248 */ unsigned long Reserved2[7];
  /* 0x0264 */ enum _NT_PRODUCT_TYPE NtProductType;
  /* 0x0268 */ unsigned char ProductTypeIsValid;
  /* 0x0269 */ char Padding_693[3];
  /* 0x026c */ unsigned long NtMajorVersion;
  /* 0x0270 */ unsigned long NtMinorVersion;
  /* 0x0274 */ unsigned char ProcessorFeatures[64];
  /* 0x02b4 */ unsigned long Reserved1;
  /* 0x02b8 */ unsigned long Reserved3;
  /* 0x02bc */ volatile unsigned long TimeSlip;
  /* 0x02c0 */ enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  /* 0x02c4 */ unsigned long AltArchitecturePad[1];
  /* 0x02c8 */ union _LARGE_INTEGER SystemExpirationDate;
  /* 0x02d0 */ unsigned long SuiteMask;
  /* 0x02d4 */ unsigned char KdDebuggerEnabled;
  /* 0x02d5 */ unsigned char NXSupportPolicy;
  /* 0x02d6 */ char Padding_694[2];
  /* 0x02d8 */ volatile unsigned long ActiveConsoleId;
  /* 0x02dc */ volatile unsigned long DismountCount;
  /* 0x02e0 */ unsigned long ComPlusPackage;
  /* 0x02e4 */ unsigned long LastSystemRITEventTickCount;
  /* 0x02e8 */ unsigned long NumberOfPhysicalPages;
  /* 0x02ec */ unsigned char SafeBootMode;
  union
  {
    /* 0x02ed */ unsigned char TscQpcData;
    struct /* bitfield */
    {
      /* 0x02ed */ unsigned char TscQpcEnabled : 1; /* bit position: 0 */
      /* 0x02ed */ unsigned char TscQpcSpareFlag : 1; /* bit position: 1 */
      /* 0x02ed */ unsigned char TscQpcShift : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x02ee */ unsigned char TscQpcPad[2];
  union
  {
    /* 0x02f0 */ unsigned long SharedDataFlags;
    struct /* bitfield */
    {
      /* 0x02f0 */ unsigned long DbgErrorPortPresent : 1; /* bit position: 0 */
      /* 0x02f0 */ unsigned long DbgElevationEnabled : 1; /* bit position: 1 */
      /* 0x02f0 */ unsigned long DbgVirtEnabled : 1; /* bit position: 2 */
      /* 0x02f0 */ unsigned long DbgInstallerDetectEnabled : 1; /* bit position: 3 */
      /* 0x02f0 */ unsigned long DbgSystemDllRelocated : 1; /* bit position: 4 */
      /* 0x02f0 */ unsigned long DbgDynProcessorEnabled : 1; /* bit position: 5 */
      /* 0x02f0 */ unsigned long DbgSEHValidationEnabled : 1; /* bit position: 6 */
      /* 0x02f0 */ unsigned long SpareBits : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x02f4 */ unsigned long DataFlagsPad[1];
  /* 0x02f8 */ unsigned __int64 TestRetInstruction;
  /* 0x0300 */ unsigned long SystemCall;
  /* 0x0304 */ unsigned long SystemCallReturn;
  /* 0x0308 */ unsigned __int64 SystemCallPad[3];
  union
  {
    /* 0x0320 */ volatile struct _KSYSTEM_TIME TickCount;
    /* 0x0320 */ volatile unsigned __int64 TickCountQuad;
    /* 0x0320 */ unsigned long ReservedTickCountOverlay[3];
  }; /* size: 0x000c */
  /* 0x032c */ unsigned long TickCountPad[1];
  /* 0x0330 */ unsigned long Cookie;
  /* 0x0334 */ unsigned long CookiePad[1];
  /* 0x0338 */ __int64 ConsoleSessionForegroundProcessId;
  /* 0x0340 */ unsigned long Wow64SharedInformation[16];
  /* 0x0380 */ unsigned short UserModeGlobalLogger[16];
  /* 0x03a0 */ unsigned long ImageFileExecutionOptions;
  /* 0x03a4 */ unsigned long LangGenerationCount;
  /* 0x03a8 */ unsigned __int64 Reserved5;
  /* 0x03b0 */ volatile unsigned __int64 InterruptTimeBias;
  /* 0x03b8 */ volatile unsigned __int64 TscQpcBias;
  /* 0x03c0 */ volatile unsigned long ActiveProcessorCount;
  /* 0x03c4 */ volatile unsigned short ActiveGroupCount;
  /* 0x03c6 */ unsigned short Reserved4;
  /* 0x03c8 */ volatile unsigned long AitSamplingValue;
  /* 0x03cc */ volatile unsigned long AppCompatFlag;
  /* 0x03d0 */ unsigned __int64 SystemDllNativeRelocation;
  /* 0x03d8 */ unsigned long SystemDllWowRelocation;
  /* 0x03dc */ unsigned long XStatePad[1];
  /* 0x03e0 */ struct _XSTATE_CONFIGURATION XState;
} KUSER_SHARED_DATA, *PKUSER_SHARED_DATA; /* size: 0x05f0 */

typedef struct _MOVE_FILE_DATA32
{
  /* 0x0000 */ unsigned int FileHandle;
  /* 0x0004 */ long Padding_695;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
} MOVE_FILE_DATA32, *PMOVE_FILE_DATA32; /* size: 0x0020 */

typedef struct _SEP_TOKEN_PRIVILEGES
{
  /* 0x0000 */ unsigned __int64 Present;
  /* 0x0008 */ unsigned __int64 Enabled;
  /* 0x0010 */ unsigned __int64 EnabledByDefault;
} SEP_TOKEN_PRIVILEGES, *PSEP_TOKEN_PRIVILEGES; /* size: 0x0018 */

typedef struct _TOKEN
{
  /* 0x0000 */ struct _TOKEN_SOURCE TokenSource;
  /* 0x0010 */ struct _LUID TokenId;
  /* 0x0018 */ struct _LUID AuthenticationId;
  /* 0x0020 */ struct _LUID ParentTokenId;
  /* 0x0028 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0030 */ struct _ERESOURCE* TokenLock;
  /* 0x0038 */ struct _LUID ModifiedId;
  /* 0x0040 */ struct _SEP_TOKEN_PRIVILEGES Privileges;
  /* 0x0058 */ struct _SEP_AUDIT_POLICY AuditPolicy;
  /* 0x0074 */ unsigned long SessionId;
  /* 0x0078 */ unsigned long UserAndGroupCount;
  /* 0x007c */ unsigned long RestrictedSidCount;
  /* 0x0080 */ unsigned long VariableLength;
  /* 0x0084 */ unsigned long DynamicCharged;
  /* 0x0088 */ unsigned long DynamicAvailable;
  /* 0x008c */ unsigned long DefaultOwnerIndex;
  /* 0x0090 */ struct _SID_AND_ATTRIBUTES* UserAndGroups;
  /* 0x0098 */ struct _SID_AND_ATTRIBUTES* RestrictedSids;
  /* 0x00a0 */ void* PrimaryGroup;
  /* 0x00a8 */ unsigned long* DynamicPart;
  /* 0x00b0 */ struct _ACL* DefaultDacl;
  /* 0x00b8 */ enum _TOKEN_TYPE TokenType;
  /* 0x00bc */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x00c0 */ unsigned long TokenFlags;
  /* 0x00c4 */ unsigned char TokenInUse;
  /* 0x00c5 */ char Padding_696[3];
  /* 0x00c8 */ unsigned long IntegrityLevelIndex;
  /* 0x00cc */ unsigned long MandatoryPolicy;
  /* 0x00d0 */ struct _SEP_LOGON_SESSION_REFERENCES* LogonSession;
  /* 0x00d8 */ struct _LUID OriginatingLogonSession;
  /* 0x00e0 */ struct _SID_AND_ATTRIBUTES_HASH SidHash;
  /* 0x01f0 */ struct _SID_AND_ATTRIBUTES_HASH RestrictedSidHash;
  /* 0x0300 */ struct _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION* pSecurityAttributes;
  /* 0x0308 */ unsigned __int64 VariablePart;
} TOKEN, *PTOKEN; /* size: 0x0310 */

struct NOTIFY_USER_POWER_SETTING
{
  /* 0x0000 */ struct _GUID Guid;
}; /* size: 0x0010 */

typedef struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES
{
  /* 0x0000 */ unsigned long SupportedEncryptionTypes;
} TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES, *PTRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES; /* size: 0x0004 */

typedef struct _FILE_PREFETCH
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH, *PFILE_PREFETCH; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_PAGE_LOCATION
{
  /* 0x0000 */ unsigned long StoreOffset;
  /* 0x0004 */ struct ST_STORE<SM_TRAITS>::_ST_PAGE_INFO Info;
}; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_DEVICE_READ_HEADER
{
  /* 0x0000 */ unsigned long PageCount;
  union
  {
    struct
    {
      /* 0x0004 */ unsigned long StartTimeLo;
      /* 0x0008 */ unsigned long StartTimeHi;
    }; /* size: 0x0008 */
    /* 0x0004 */ long FailStatus;
  }; /* size: 0x0008 */
  /* 0x000c */ struct ST_STORE<SM_TRAITS>::_ST_PAGE_LOCATION PageLoc[16];
}; /* size: 0x010c */

typedef struct _RTL_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _TIME_FIELDS StandardStart;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _TIME_FIELDS DaylightStart;
  /* 0x00a8 */ long DaylightBias;
} RTL_TIME_ZONE_INFORMATION, *PRTL_TIME_ZONE_INFORMATION; /* size: 0x00ac */

typedef struct _TRACE_LOGFILE_HEADER
{
  /* 0x0000 */ unsigned long BufferSize;
  union
  {
    /* 0x0004 */ unsigned long Version;
    struct
    {
      /* 0x0004 */ unsigned char MajorVersion;
      /* 0x0005 */ unsigned char MinorVersion;
      /* 0x0006 */ unsigned char SubVersion;
      /* 0x0007 */ unsigned char SubMinorVersion;
    } /* size: 0x0004 */ VersionDetail;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ProviderVersion;
  /* 0x000c */ unsigned long NumberOfProcessors;
  /* 0x0010 */ union _LARGE_INTEGER EndTime;
  /* 0x0018 */ unsigned long TimerResolution;
  /* 0x001c */ unsigned long MaximumFileSize;
  /* 0x0020 */ unsigned long LogFileMode;
  /* 0x0024 */ unsigned long BuffersWritten;
  union
  {
    /* 0x0028 */ struct _GUID LogInstanceGuid;
    struct
    {
      /* 0x0028 */ unsigned long StartBuffers;
      /* 0x002c */ unsigned long PointerSize;
      /* 0x0030 */ unsigned long EventsLost;
      /* 0x0034 */ unsigned long CpuSpeedInMHz;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0038 */ unsigned short* LoggerName;
  /* 0x0040 */ unsigned short* LogFileName;
  /* 0x0048 */ struct _RTL_TIME_ZONE_INFORMATION TimeZone;
  /* 0x00f4 */ long Padding_697;
  /* 0x00f8 */ union _LARGE_INTEGER BootTime;
  /* 0x0100 */ union _LARGE_INTEGER PerfFreq;
  /* 0x0108 */ union _LARGE_INTEGER StartTime;
  /* 0x0110 */ unsigned long ReservedFlags;
  /* 0x0114 */ unsigned long BuffersLost;
} TRACE_LOGFILE_HEADER, *PTRACE_LOGFILE_HEADER; /* size: 0x0118 */

struct MOVE_FILE_RECORD_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileRecord;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileRecord;
}; /* size: 0x0018 */

typedef struct _PROCESS_SESSION_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
} PROCESS_SESSION_INFORMATION, *PPROCESS_SESSION_INFORMATION; /* size: 0x0004 */

typedef struct _REG_QUERY_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ enum _KEY_INFORMATION_CLASS KeyInformationClass;
  /* 0x000c */ long Padding_698;
  /* 0x0010 */ void* KeyInformation;
  /* 0x0018 */ unsigned long Length;
  /* 0x001c */ long Padding_699;
  /* 0x0020 */ unsigned long* ResultLength;
  /* 0x0028 */ void* CallContext;
  /* 0x0030 */ void* ObjectContext;
  /* 0x0038 */ void* Reserved;
} REG_QUERY_KEY_INFORMATION, *PREG_QUERY_KEY_INFORMATION; /* size: 0x0040 */

struct PCI_HT_INTERRUPT_INDEX_1
{
  /* 0x0000 */ unsigned short Reserved1;
  /* 0x0002 */ unsigned char LastInterrupt;
  /* 0x0003 */ unsigned char Reserved2;
}; /* size: 0x0004 */

typedef struct _KDDEBUGGER_DATA32
{
  /* 0x0000 */ struct _DBGKD_DEBUG_DATA_HEADER32 Header;
  /* 0x0010 */ unsigned long KernBase;
  /* 0x0014 */ unsigned long BreakpointWithStatus;
  /* 0x0018 */ unsigned long SavedContext;
  /* 0x001c */ unsigned short ThCallbackStack;
  /* 0x001e */ unsigned short NextCallback;
  /* 0x0020 */ unsigned short FramePointer;
  /* 0x0022 */ unsigned short PaeEnabled : 1; /* bit position: 0 */
  /* 0x0024 */ unsigned long KiCallUserMode;
  /* 0x0028 */ unsigned long KeUserCallbackDispatcher;
  /* 0x002c */ unsigned long PsLoadedModuleList;
  /* 0x0030 */ unsigned long PsActiveProcessHead;
  /* 0x0034 */ unsigned long PspCidTable;
  /* 0x0038 */ unsigned long ExpSystemResourcesList;
  /* 0x003c */ unsigned long ExpPagedPoolDescriptor;
  /* 0x0040 */ unsigned long ExpNumberOfPagedPools;
  /* 0x0044 */ unsigned long KeTimeIncrement;
  /* 0x0048 */ unsigned long KeBugCheckCallbackListHead;
  /* 0x004c */ unsigned long KiBugcheckData;
  /* 0x0050 */ unsigned long IopErrorLogListHead;
  /* 0x0054 */ unsigned long ObpRootDirectoryObject;
  /* 0x0058 */ unsigned long ObpTypeObjectType;
  /* 0x005c */ unsigned long MmSystemCacheStart;
  /* 0x0060 */ unsigned long MmSystemCacheEnd;
  /* 0x0064 */ unsigned long MmSystemCacheWs;
  /* 0x0068 */ unsigned long MmPfnDatabase;
  /* 0x006c */ unsigned long MmSystemPtesStart;
  /* 0x0070 */ unsigned long MmSystemPtesEnd;
  /* 0x0074 */ unsigned long MmSubsectionBase;
  /* 0x0078 */ unsigned long MmNumberOfPagingFiles;
  /* 0x007c */ unsigned long MmLowestPhysicalPage;
  /* 0x0080 */ unsigned long MmHighestPhysicalPage;
  /* 0x0084 */ unsigned long MmNumberOfPhysicalPages;
  /* 0x0088 */ unsigned long MmMaximumNonPagedPoolInBytes;
  /* 0x008c */ unsigned long MmNonPagedSystemStart;
  /* 0x0090 */ unsigned long MmNonPagedPoolStart;
  /* 0x0094 */ unsigned long MmNonPagedPoolEnd;
  /* 0x0098 */ unsigned long MmPagedPoolStart;
  /* 0x009c */ unsigned long MmPagedPoolEnd;
  /* 0x00a0 */ unsigned long MmPagedPoolInformation;
  /* 0x00a4 */ unsigned long MmPageSize;
  /* 0x00a8 */ unsigned long MmSizeOfPagedPoolInBytes;
  /* 0x00ac */ unsigned long MmTotalCommitLimit;
  /* 0x00b0 */ unsigned long MmTotalCommittedPages;
  /* 0x00b4 */ unsigned long MmSharedCommit;
  /* 0x00b8 */ unsigned long MmDriverCommit;
  /* 0x00bc */ unsigned long MmProcessCommit;
  /* 0x00c0 */ unsigned long MmPagedPoolCommit;
  /* 0x00c4 */ unsigned long MmExtendedCommit;
  /* 0x00c8 */ unsigned long MmZeroedPageListHead;
  /* 0x00cc */ unsigned long MmFreePageListHead;
  /* 0x00d0 */ unsigned long MmStandbyPageListHead;
  /* 0x00d4 */ unsigned long MmModifiedPageListHead;
  /* 0x00d8 */ unsigned long MmModifiedNoWritePageListHead;
  /* 0x00dc */ unsigned long MmAvailablePages;
  /* 0x00e0 */ unsigned long MmResidentAvailablePages;
  /* 0x00e4 */ unsigned long PoolTrackTable;
  /* 0x00e8 */ unsigned long NonPagedPoolDescriptor;
  /* 0x00ec */ unsigned long MmHighestUserAddress;
  /* 0x00f0 */ unsigned long MmSystemRangeStart;
  /* 0x00f4 */ unsigned long MmUserProbeAddress;
  /* 0x00f8 */ unsigned long KdPrintCircularBuffer;
  /* 0x00fc */ unsigned long KdPrintCircularBufferEnd;
  /* 0x0100 */ unsigned long KdPrintWritePointer;
  /* 0x0104 */ unsigned long KdPrintRolloverCount;
  /* 0x0108 */ unsigned long MmLoadedUserImageList;
} KDDEBUGGER_DATA32, *PKDDEBUGGER_DATA32; /* size: 0x010c */

typedef struct _LDOUBLE
{
  /* 0x0000 */ unsigned char ld[10];
} LDOUBLE, *PLDOUBLE; /* size: 0x000a */

typedef struct _SYSTEM_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentFixupCount;
  /* 0x0004 */ unsigned long ExceptionDispatchCount;
  /* 0x0008 */ unsigned long FloatingEmulationCount;
  /* 0x000c */ unsigned long ByteWordEmulationCount;
} SYSTEM_EXCEPTION_INFORMATION, *PSYSTEM_EXCEPTION_INFORMATION; /* size: 0x0010 */

typedef struct _POP_HIBER_LOGGING
{
  /* 0x0000 */ const wchar_t* Name;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} POP_HIBER_LOGGING, *PPOP_HIBER_LOGGING; /* size: 0x0018 */

typedef struct _CM_FLOPPY_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ char Size[8];
  /* 0x000c */ unsigned long MaxDensity;
  /* 0x0010 */ unsigned long MountDensity;
  /* 0x0014 */ unsigned char StepRateHeadUnloadTime;
  /* 0x0015 */ unsigned char HeadLoadTime;
  /* 0x0016 */ unsigned char MotorOffTime;
  /* 0x0017 */ unsigned char SectorLengthCode;
  /* 0x0018 */ unsigned char SectorPerTrack;
  /* 0x0019 */ unsigned char ReadWriteGapLength;
  /* 0x001a */ unsigned char DataTransferLength;
  /* 0x001b */ unsigned char FormatGapLength;
  /* 0x001c */ unsigned char FormatFillCharacter;
  /* 0x001d */ unsigned char HeadSettleTime;
  /* 0x001e */ unsigned char MotorSettleTime;
  /* 0x001f */ unsigned char MaximumTrackValue;
  /* 0x0020 */ unsigned char DataTransferRate;
  /* 0x0021 */ char __PADDING__[3];
} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA; /* size: 0x0024 */

typedef struct _PERFINFO_PROCESS_PERFCTR64
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long PageFaultCount;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned __int64 PeakVirtualSize;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 VirtualSize;
  /* 0x0040 */ unsigned __int64 WorkingSetSize;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0058 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0060 */ unsigned __int64 PrivatePageCount;
} PERFINFO_PROCESS_PERFCTR64, *PPERFINFO_PROCESS_PERFCTR64; /* size: 0x0068 */

typedef struct _RTL_CHASH_ENTRY
{
  /* 0x0000 */ unsigned __int64 Key;
} RTL_CHASH_ENTRY, *PRTL_CHASH_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned char CurrentFrequency;
  /* 0x0001 */ unsigned char ThermalLimitFrequency;
  /* 0x0002 */ unsigned char ConstantThrottleFrequency;
  /* 0x0003 */ unsigned char DegradedThrottleFrequency;
  /* 0x0004 */ unsigned char LastBusyFrequency;
  /* 0x0005 */ unsigned char LastC3Frequency;
  /* 0x0006 */ unsigned char LastAdjustedBusyFrequency;
  /* 0x0007 */ unsigned char ProcessorMinThrottle;
  /* 0x0008 */ unsigned char ProcessorMaxThrottle;
  /* 0x0009 */ char Padding_700[3];
  /* 0x000c */ unsigned long NumberOfFrequencies;
  /* 0x0010 */ unsigned long PromotionCount;
  /* 0x0014 */ unsigned long DemotionCount;
  /* 0x0018 */ unsigned long ErrorCount;
  /* 0x001c */ unsigned long RetryCount;
  /* 0x0020 */ unsigned __int64 CurrentFrequencyTime;
  /* 0x0028 */ unsigned __int64 CurrentProcessorTime;
  /* 0x0030 */ unsigned __int64 CurrentProcessorIdleTime;
  /* 0x0038 */ unsigned __int64 LastProcessorTime;
  /* 0x0040 */ unsigned __int64 LastProcessorIdleTime;
} SYSTEM_PROCESSOR_POWER_INFORMATION, *PSYSTEM_PROCESSOR_POWER_INFORMATION; /* size: 0x0048 */

typedef struct _LDR_RESLOADER_RET
{
  /* 0x0000 */ void* Module;
  /* 0x0008 */ void* DataEntry;
  /* 0x0010 */ void* TargetModule;
} LDR_RESLOADER_RET, *PLDR_RESLOADER_RET; /* size: 0x0018 */

typedef struct _OBJECT_HEADER_PROCESS_INFO
{
  /* 0x0000 */ struct _EPROCESS* ExclusiveProcess;
  /* 0x0008 */ unsigned __int64 Reserved;
} OBJECT_HEADER_PROCESS_INFO, *POBJECT_HEADER_PROCESS_INFO; /* size: 0x0010 */

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DriverName;
  /* 0x0010 */ void* ImageAddress;
  /* 0x0018 */ void* SectionPointer;
  /* 0x0020 */ void* EntryPoint;
  /* 0x0028 */ struct _IMAGE_EXPORT_DIRECTORY* ExportSectionPointer;
  /* 0x0030 */ unsigned long ImageLength;
  /* 0x0034 */ long __PADDING__[1];
} SYSTEM_GDI_DRIVER_INFORMATION, *PSYSTEM_GDI_DRIVER_INFORMATION; /* size: 0x0038 */

typedef struct _STACK_WALK_EVENT_DATA
{
  /* 0x0000 */ unsigned __int64 TimeStamp;
  /* 0x0008 */ unsigned long ProcessId;
  /* 0x000c */ unsigned long ThreadId;
  /* 0x0010 */ void* Addresses[1];
} STACK_WALK_EVENT_DATA, *PSTACK_WALK_EVENT_DATA; /* size: 0x0018 */

typedef struct _PERFINFO_MARK_EVENT
{
  /* 0x0000 */ unsigned long TranId;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char AppId;
  /* 0x0006 */ unsigned short OpId;
  /* 0x0008 */ wchar_t Text[1];
  /* 0x000a */ char __PADDING__[2];
} PERFINFO_MARK_EVENT, *PPERFINFO_MARK_EVENT; /* size: 0x000c */

typedef struct _PF_HARD_FAULT_INFO
{
  /* 0x0000 */ struct _ETW_KERNEL_TRACE_TIMESTAMP KernelTimeStamp;
  /* 0x0010 */ struct _PERFINFO_HARDPAGEFAULT_INFORMATION HardFaultEvent;
  /* 0x0030 */ union _LARGE_INTEGER IoTimeInTicks;
} PF_HARD_FAULT_INFO, *PPF_HARD_FAULT_INFO; /* size: 0x0038 */

typedef struct _DBGKM_UNLOAD_DLL
{
  /* 0x0000 */ void* BaseAddress;
} DBGKM_UNLOAD_DLL, *PDBGKM_UNLOAD_DLL; /* size: 0x0008 */

typedef struct _OB_SD_CACHE_LIST
{
  /* 0x0000 */ struct _EX_PUSH_LOCK PushLock;
  /* 0x0008 */ struct _LIST_ENTRY Head;
} OB_SD_CACHE_LIST, *POB_SD_CACHE_LIST; /* size: 0x0018 */

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long OriginalOplockLevel;
  /* 0x0008 */ unsigned long NewOplockLevel;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long AccessMode;
  /* 0x0014 */ unsigned short ShareMode;
  /* 0x0016 */ char __PADDING__[2];
} REQUEST_OPLOCK_OUTPUT_BUFFER, *PREQUEST_OPLOCK_OUTPUT_BUFFER; /* size: 0x0018 */

struct PCI_MSIX_TABLE_ENTRY
{
  /* 0x0000 */ union _LARGE_INTEGER MessageAddress;
  /* 0x0008 */ unsigned long MessageData;
  union
  {
    union
    {
      /* 0x000c */ unsigned long Mask : 1; /* bit position: 0 */
      /* 0x000c */ unsigned long Reserved : 31; /* bit position: 0 */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ VectorControl;
}; /* size: 0x0010 */

typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureSize;
  /* 0x0004 */ unsigned long Protocol;
  /* 0x0008 */ unsigned short ProtocolMajorVersion;
  /* 0x000a */ unsigned short ProtocolMinorVersion;
  /* 0x000c */ unsigned short ProtocolRevision;
  /* 0x000e */ unsigned short Reserved;
  /* 0x0010 */ unsigned long Flags;
  struct
  {
    /* 0x0014 */ unsigned long Reserved[8];
  } /* size: 0x0020 */ GenericReserved;
  struct
  {
    /* 0x0034 */ unsigned long Reserved[16];
  } /* size: 0x0040 */ ProtocolSpecificReserved;
} FILE_REMOTE_PROTOCOL_INFORMATION, *PFILE_REMOTE_PROTOCOL_INFORMATION; /* size: 0x0074 */

typedef struct _SYSTEM_VHD_BOOT_INFORMATION
{
  /* 0x0000 */ unsigned char OsDiskIsVhd;
  /* 0x0001 */ char Padding_701[3];
  /* 0x0004 */ unsigned long OsVhdFilePathOffset;
  /* 0x0008 */ wchar_t OsVhdParentVolume[1];
  /* 0x000a */ char __PADDING__[2];
} SYSTEM_VHD_BOOT_INFORMATION, *PSYSTEM_VHD_BOOT_INFORMATION; /* size: 0x000c */

typedef struct _IO_STATUS_BLOCK32
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long Information;
} IO_STATUS_BLOCK32, *PIO_STATUS_BLOCK32; /* size: 0x0008 */

typedef struct _FORMAT_EX_PARAMETERS
{
  /* 0x0000 */ enum _MEDIA_TYPE MediaType;
  /* 0x0004 */ unsigned long StartCylinderNumber;
  /* 0x0008 */ unsigned long EndCylinderNumber;
  /* 0x000c */ unsigned long StartHeadNumber;
  /* 0x0010 */ unsigned long EndHeadNumber;
  /* 0x0014 */ unsigned short FormatGapLength;
  /* 0x0016 */ unsigned short SectorsPerTrack;
  /* 0x0018 */ unsigned short SectorNumber[1];
  /* 0x001a */ char __PADDING__[2];
} FORMAT_EX_PARAMETERS, *PFORMAT_EX_PARAMETERS; /* size: 0x001c */

typedef struct _PPM_PERF_STATES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long PStateCap;
  /* 0x000c */ unsigned long TStateCap;
  /* 0x0010 */ unsigned long MaxPerfState;
  /* 0x0014 */ unsigned long MinPerfState;
  /* 0x0018 */ unsigned long LowestPState;
  /* 0x001c */ unsigned long IncreaseTime;
  /* 0x0020 */ unsigned long DecreaseTime;
  /* 0x0024 */ unsigned char BusyAdjThreshold;
  /* 0x0025 */ unsigned char Reserved;
  /* 0x0026 */ unsigned char ThrottleStatesOnly;
  /* 0x0027 */ unsigned char PolicyType;
  /* 0x0028 */ unsigned long TimerInterval;
  union
  {
    union
    {
      /* 0x002c */ unsigned long AsULONG;
      struct /* bitfield */
      {
        /* 0x002c */ unsigned long IncreasePolicy : 2; /* bit position: 0 */
        /* 0x002c */ unsigned long DecreasePolicy : 2; /* bit position: 2 */
        /* 0x002c */ unsigned long Reserved : 28; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Flags;
  /* 0x0030 */ struct _KAFFINITY_EX TargetProcessors;
  /* 0x0058 */ void* PStateHandler /* function */;
  /* 0x0060 */ unsigned __int64 PStateContext;
  /* 0x0068 */ void* TStateHandler /* function */;
  /* 0x0070 */ unsigned __int64 TStateContext;
  /* 0x0078 */ void* FeedbackHandler /* function */;
  /* 0x0080 */ void* GetFFHThrottleState /* function */;
  /* 0x0088 */ struct _PPM_PERF_STATE State[1];
} PPM_PERF_STATES, *PPPM_PERF_STATES; /* size: 0x00b0 */

typedef struct _MI_TRIAGE_STORAGE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long MmSpecialPoolTag;
  /* 0x000c */ unsigned long MiTriageActionTaken;
  /* 0x0010 */ unsigned long MmVerifyDriverLevel;
  /* 0x0014 */ unsigned long KernelVerifier;
  /* 0x0018 */ unsigned __int64 MmMaximumNonPagedPool;
  /* 0x0020 */ unsigned __int64 MmAllocatedNonPagedPool;
  /* 0x0028 */ unsigned __int64 PagedPoolMaximum;
  /* 0x0030 */ unsigned __int64 PagedPoolAllocated;
  /* 0x0038 */ unsigned __int64 CommittedPages;
  /* 0x0040 */ unsigned __int64 CommittedPagesPeak;
  /* 0x0048 */ unsigned __int64 CommitLimitMaximum;
} MI_TRIAGE_STORAGE, *PMI_TRIAGE_STORAGE; /* size: 0x0050 */

struct tagATTRINFO
{
  /* 0x0000 */ unsigned short tAttrID;
  /* 0x0002 */ char Padding_702[2];
  /* 0x0004 */ unsigned long dwFlags;
  union
  {
    /* 0x0008 */ unsigned __int64 ullAttr;
    /* 0x0008 */ unsigned long dwAttr;
    /* 0x0008 */ unsigned short* lpAttr;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

typedef struct _ETW_UMS_EVENT_CONTEXT_SWITCH
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ unsigned long ScheduledThreadId;
  /* 0x0024 */ unsigned long SwitchCount;
  /* 0x0028 */ unsigned long KernelYieldCount;
  /* 0x002c */ unsigned long MixedYieldCount;
  /* 0x0030 */ unsigned long YieldCount;
  /* 0x0034 */ long __PADDING__[1];
} ETW_UMS_EVENT_CONTEXT_SWITCH, *PETW_UMS_EVENT_CONTEXT_SWITCH; /* size: 0x0038 */

typedef struct _CLS_WRITE_ENTRY
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long ByteLength;
  /* 0x000c */ long __PADDING__[1];
} CLS_WRITE_ENTRY, *PCLS_WRITE_ENTRY; /* size: 0x0010 */

typedef struct _KBUGCHECK_DUMP_IO
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long BufferLength;
  /* 0x0014 */ enum _KBUGCHECK_DUMP_IO_TYPE Type;
} KBUGCHECK_DUMP_IO, *PKBUGCHECK_DUMP_IO; /* size: 0x0018 */

typedef struct _WMI_WAIT_OBJECT_RECORD
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned char ObjectType;
  /* 0x0009 */ char __PADDING__[7];
} WMI_WAIT_OBJECT_RECORD, *PWMI_WAIT_OBJECT_RECORD; /* size: 0x0010 */

typedef struct _WMI_WAIT_MULTIPLE
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned char WaitType;
  /* 0x0005 */ unsigned char ObjectCount;
  /* 0x0006 */ char Padding_703[2];
  /* 0x0008 */ struct _WMI_WAIT_OBJECT_RECORD ObjectRecord[64];
} WMI_WAIT_MULTIPLE, *PWMI_WAIT_MULTIPLE; /* size: 0x0408 */

typedef struct _STORAGE_PRIORITY_HINT_SUPPORT
{
  /* 0x0000 */ unsigned long SupportFlags;
} STORAGE_PRIORITY_HINT_SUPPORT, *PSTORAGE_PRIORITY_HINT_SUPPORT; /* size: 0x0004 */

typedef struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_INPUT
{
  /* 0x0000 */ struct _UNICODE_STRING DomainName;
  /* 0x0010 */ struct _UNICODE_STRING AccountName;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} LSA_SID_NAME_MAPPING_OPERATION_ADD_INPUT, *PLSA_SID_NAME_MAPPING_OPERATION_ADD_INPUT; /* size: 0x0030 */

typedef struct _ETW_TP_EVENT_POOL_CREATE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
} ETW_TP_EVENT_POOL_CREATE, *PETW_TP_EVENT_POOL_CREATE; /* size: 0x0028 */

typedef struct _HWPROFILE_CHANGE_NOTIFICATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} HWPROFILE_CHANGE_NOTIFICATION, *PHWPROFILE_CHANGE_NOTIFICATION; /* size: 0x0014 */

typedef struct _VI_TARGET_CONTIGUOUS_ALLOCATION
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ void* p;
  /* 0x0018 */ unsigned __int64 Size;
} VI_TARGET_CONTIGUOUS_ALLOCATION, *PVI_TARGET_CONTIGUOUS_ALLOCATION; /* size: 0x0020 */

typedef struct _EMULATOR_ACCESS_ENTRY
{
  /* 0x0000 */ unsigned long BasePort;
  /* 0x0004 */ unsigned long NumConsecutivePorts;
  /* 0x0008 */ enum _EMULATOR_PORT_ACCESS_TYPE AccessType;
  /* 0x000c */ unsigned char AccessMode;
  /* 0x000d */ unsigned char StringSupport;
  /* 0x000e */ char Padding_704[2];
  /* 0x0010 */ void* Routine;
} EMULATOR_ACCESS_ENTRY, *PEMULATOR_ACCESS_ENTRY; /* size: 0x0018 */

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX2
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING FlatName;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned long TrustDirection;
  /* 0x002c */ unsigned long TrustType;
  /* 0x0030 */ unsigned long TrustAttributes;
  /* 0x0034 */ unsigned long ForestTrustLength;
  /* 0x0038 */ unsigned char* ForestTrustInfo;
} TRUSTED_DOMAIN_INFORMATION_EX2, *PTRUSTED_DOMAIN_INFORMATION_EX2; /* size: 0x0040 */

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION2
{
  /* 0x0000 */ struct _TRUSTED_DOMAIN_INFORMATION_EX2 Information;
  /* 0x0040 */ struct _TRUSTED_POSIX_OFFSET_INFO PosixOffset;
  /* 0x0044 */ long Padding_705;
  /* 0x0048 */ struct _TRUSTED_DOMAIN_AUTH_INFORMATION AuthInformation;
} TRUSTED_DOMAIN_FULL_INFORMATION2, *PTRUSTED_DOMAIN_FULL_INFORMATION2; /* size: 0x0078 */

typedef struct _ALPHA_DBGKD_CONTROL_REPORT
{
  /* 0x0000 */ unsigned long InstructionCount;
  /* 0x0004 */ unsigned char InstructionStream[16];
} ALPHA_DBGKD_CONTROL_REPORT, *PALPHA_DBGKD_CONTROL_REPORT; /* size: 0x0014 */

typedef struct _IA64_DBGKD_CONTROL_REPORT
{
  /* 0x0000 */ unsigned long InstructionCount;
  /* 0x0004 */ unsigned char InstructionStream[16];
} IA64_DBGKD_CONTROL_REPORT, *PIA64_DBGKD_CONTROL_REPORT; /* size: 0x0014 */

typedef struct _ARM_DBGKD_CONTROL_REPORT
{
  /* 0x0000 */ unsigned long Cpsr;
  /* 0x0004 */ unsigned long InstructionCount;
  /* 0x0008 */ unsigned char InstructionStream[16];
} ARM_DBGKD_CONTROL_REPORT, *PARM_DBGKD_CONTROL_REPORT; /* size: 0x0018 */

typedef struct _DBGKD_ANY_CONTROL_REPORT
{
  union
  {
    /* 0x0000 */ struct _X86_DBGKD_CONTROL_REPORT X86ControlReport;
    /* 0x0000 */ struct _ALPHA_DBGKD_CONTROL_REPORT AlphaControlReport;
    /* 0x0000 */ struct _IA64_DBGKD_CONTROL_REPORT IA64ControlReport;
    /* 0x0000 */ struct _AMD64_DBGKD_CONTROL_REPORT Amd64ControlReport;
    /* 0x0000 */ struct _ARM_DBGKD_CONTROL_REPORT ArmControlReport;
    struct
    {
      /* 0x0000 */ struct _PPC_DBGKD_CONTROL_REPORT PpcControlReport;
      /* 0x002c */ long __PADDING__[1];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} DBGKD_ANY_CONTROL_REPORT, *PDBGKD_ANY_CONTROL_REPORT; /* size: 0x0030 */

typedef struct _DBGKD_ANY_WAIT_STATE_CHANGE
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  /* 0x0008 */ unsigned long NumberProcessors;
  /* 0x000c */ long Padding_706;
  /* 0x0010 */ unsigned __int64 Thread;
  /* 0x0018 */ unsigned __int64 ProgramCounter;
  union
  {
    union
    {
      /* 0x0020 */ struct _DBGKM_EXCEPTION64 Exception;
      /* 0x0020 */ struct _DBGKD_LOAD_SYMBOLS64 LoadSymbols;
      /* 0x0020 */ struct _DBGKD_COMMAND_STRING CommandString;
    }; /* size: 0x00a0 */
  } /* size: 0x00a0 */ u;
  union
  {
    /* 0x00c0 */ struct _AMD64_DBGKD_CONTROL_REPORT ControlReport;
    /* 0x00c0 */ struct _DBGKD_ANY_CONTROL_REPORT AnyControlReport;
  }; /* size: 0x0030 */
} DBGKD_ANY_WAIT_STATE_CHANGE, *PDBGKD_ANY_WAIT_STATE_CHANGE; /* size: 0x00f0 */

typedef struct _DEVICE_HANDLER_OBJECT
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ long Padding_707;
  /* 0x0008 */ struct _BUS_HANDLER* BusHandler;
  /* 0x0010 */ unsigned long SlotNumber;
  /* 0x0014 */ long Padding_708;
  /* 0x0018 */ struct _UNICODE_STRING ServiceKeyName;
  /* 0x0028 */ unsigned long InstanceOrdinal;
  /* 0x002c */ long __PADDING__[1];
} DEVICE_HANDLER_OBJECT, *PDEVICE_HANDLER_OBJECT; /* size: 0x0030 */

typedef struct _LBLOB
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LBLOB, *PLBLOB; /* size: 0x0018 */

typedef struct _PERFINFO_FILE_DIRENUM
{
  /* 0x0000 */ unsigned __int64 Irp;
  /* 0x0008 */ unsigned __int64 ThreadId;
  /* 0x0010 */ unsigned __int64 FileObject;
  /* 0x0018 */ unsigned __int64 FileKey;
  /* 0x0020 */ unsigned long Length;
  /* 0x0024 */ unsigned long InfoClass;
  /* 0x0028 */ unsigned long FileIndex;
  /* 0x002c */ wchar_t FileName[1];
  /* 0x002e */ char __PADDING__[2];
} PERFINFO_FILE_DIRENUM, *PPERFINFO_FILE_DIRENUM; /* size: 0x0030 */

typedef struct _VF_TRACKER_STAMP
{
  /* 0x0000 */ void* Thread;
  /* 0x0008 */ unsigned char Flags : 8; /* bit position: 0 */
  /* 0x0009 */ unsigned char OldIrql : 8; /* bit position: 0 */
  /* 0x000a */ unsigned char NewIrql : 8; /* bit position: 0 */
  /* 0x000b */ unsigned char Processor : 8; /* bit position: 0 */
  /* 0x000c */ long __PADDING__[1];
} VF_TRACKER_STAMP, *PVF_TRACKER_STAMP; /* size: 0x0010 */

typedef struct _RTL_PROCESS_MODULES
{
  /* 0x0000 */ unsigned long NumberOfModules;
  /* 0x0004 */ long Padding_709;
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
} RTL_PROCESS_MODULES, *PRTL_PROCESS_MODULES; /* size: 0x0130 */

typedef struct _BOOT_LOG_RECORD
{
  /* 0x0000 */ struct _UNICODE_STRING LoadedString;
  /* 0x0010 */ struct _UNICODE_STRING NotLoadedString;
  /* 0x0020 */ struct _UNICODE_STRING LogFileName;
  /* 0x0030 */ struct _UNICODE_STRING HeaderString;
  /* 0x0040 */ struct _ERESOURCE Resource;
  /* 0x00a8 */ unsigned long NextKey;
  /* 0x00ac */ unsigned char FileLogging;
  /* 0x00ad */ char __PADDING__[3];
} BOOT_LOG_RECORD, *PBOOT_LOG_RECORD; /* size: 0x00b0 */

typedef struct _TRIAGE_POP_IRP_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _IRP* Irp;
  /* 0x0018 */ struct _DEVICE_OBJECT* Pdo;
} TRIAGE_POP_IRP_DATA, *PTRIAGE_POP_IRP_DATA; /* size: 0x0020 */

typedef struct _SYSTEM_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} SYSTEM_FLAGS_INFORMATION, *PSYSTEM_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _CALL_FRAME
{
  /* 0x0000 */ void* ReturnAddress;
  /* 0x0008 */ void* Param1Home;
  /* 0x0010 */ void* Param2Home;
  /* 0x0018 */ void* Param3Home;
  /* 0x0020 */ void* Param4Home;
} CALL_FRAME, *PCALL_FRAME; /* size: 0x0028 */

typedef struct _FLS_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* Slots[128];
} FLS_DATA, *PFLS_DATA; /* size: 0x0410 */

typedef struct _DEVICE_RELATIONS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_710;
  /* 0x0008 */ struct _DEVICE_OBJECT* Objects[1];
} DEVICE_RELATIONS, *PDEVICE_RELATIONS; /* size: 0x0010 */

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE
{
  /* 0x0000 */ union _LARGE_INTEGER ActivationTime;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ButtonInstanceID;
} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE; /* size: 0x0010 */

typedef struct _REG_SET_VALUE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _UNICODE_STRING* ValueName;
  /* 0x0010 */ unsigned long TitleIndex;
  /* 0x0014 */ unsigned long Type;
  /* 0x0018 */ void* Data;
  /* 0x0020 */ unsigned long DataSize;
  /* 0x0024 */ long Padding_711;
  /* 0x0028 */ void* CallContext;
  /* 0x0030 */ void* ObjectContext;
  /* 0x0038 */ void* Reserved;
} REG_SET_VALUE_KEY_INFORMATION, *PREG_SET_VALUE_KEY_INFORMATION; /* size: 0x0040 */

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long CodeIntegrityOptions;
} SYSTEM_CODEINTEGRITY_INFORMATION, *PSYSTEM_CODEINTEGRITY_INFORMATION; /* size: 0x0008 */

typedef struct _CM_HARDWARE_PROFILE_ALIAS
{
  /* 0x0000 */ unsigned long ProfileNumber;
  /* 0x0004 */ unsigned long DockState;
  /* 0x0008 */ unsigned long DockID;
  /* 0x000c */ unsigned long SerialNumber;
} CM_HARDWARE_PROFILE_ALIAS, *PCM_HARDWARE_PROFILE_ALIAS; /* size: 0x0010 */

typedef struct _CM_HARDWARE_PROFILE_ALIAS_LIST
{
  /* 0x0000 */ unsigned long MaxAliasCount;
  /* 0x0004 */ unsigned long CurrentAliasCount;
  /* 0x0008 */ struct _CM_HARDWARE_PROFILE_ALIAS Alias[1];
} CM_HARDWARE_PROFILE_ALIAS_LIST, *PCM_HARDWARE_PROFILE_ALIAS_LIST; /* size: 0x0018 */

struct POP_SYS_CONTEXT
{
  /* 0x0000 */ struct POWER_STATE_HANDLER* Handler;
  /* 0x0008 */ void* SystemHandler /* function */;
  /* 0x0010 */ void* SystemContext;
  /* 0x0018 */ struct _POP_HIBER_CONTEXT* HiberContext;
  /* 0x0020 */ struct POWER_STATE_NOTIFY_HANDLER* NotifyHandler;
  /* 0x0028 */ enum POWER_STATE_HANDLER_TYPE NotifyState;
  /* 0x002c */ unsigned char NotifyType;
  /* 0x002d */ char Padding_712[3];
  /* 0x0030 */ long NumberProcessors;
  /* 0x0034 */ volatile long TargetCount;
  /* 0x0038 */ volatile unsigned long State;
  /* 0x003c */ long HandlerBarrier;
}; /* size: 0x0040 */

typedef struct _POP_COMPOSITE_BATTERY
{
  /* 0x0000 */ unsigned char State;
  /* 0x0001 */ unsigned char Spare;
  /* 0x0002 */ short BatteryCount;
  /* 0x0004 */ unsigned long Tag;
  /* 0x0008 */ unsigned __int64 StatusTime;
  /* 0x0010 */ struct _BATTERY_STATUS Status;
  /* 0x0020 */ struct _POP_ACTION_TRIGGER Trigger[4];
  /* 0x0080 */ unsigned __int64 EstTimeTime;
  /* 0x0088 */ unsigned long EstTime;
  /* 0x008c */ unsigned long AdjustedEstTime;
  /* 0x0090 */ struct _BATTERY_INFORMATION Info;
  /* 0x00b4 */ long Padding_713;
  /* 0x00b8 */ struct _IRP* StatusIrp;
  union
  {
    union
    {
      /* 0x00c0 */ unsigned long Tag;
      /* 0x00c0 */ unsigned long EstTime;
      /* 0x00c0 */ struct _BATTERY_STATUS Status;
      /* 0x00c0 */ struct _BATTERY_INFORMATION Info;
      /* 0x00c0 */ struct _BATTERY_WAIT_STATUS Wait;
      /* 0x00c0 */ struct _BATTERY_QUERY_INFORMATION QueryInfo;
    }; /* size: 0x0024 */
  } /* size: 0x0024 */ u;
  /* 0x00e4 */ unsigned char ThreadWaiting;
  /* 0x00e5 */ char Padding_714[3];
  struct
  {
    /* 0x00e8 */ long DpcQueued;
    /* 0x0004 */ long Padding_715;
    /* 0x00f0 */ struct _KTIMER DpcTimerObject;
    /* 0x0130 */ struct _KDPC DpcObject;
    /* 0x0170 */ struct _KEVENT DpcCompletedEvent;
    /* 0x0188 */ unsigned char IgnoreStatus;
    /* 0x0189 */ char __PADDING__[7];
  } /* size: 0x00a8 */ QueryStatus;
} POP_COMPOSITE_BATTERY, *PPOP_COMPOSITE_BATTERY; /* size: 0x0190 */

typedef struct _NEGOTIATE_CALLER_NAME_RESPONSE_WOW
{
  /* 0x0000 */ unsigned long MessageType;
  /* 0x0004 */ unsigned long CallerName;
} NEGOTIATE_CALLER_NAME_RESPONSE_WOW, *PNEGOTIATE_CALLER_NAME_RESPONSE_WOW; /* size: 0x0008 */

typedef struct _PP_LOOKASIDE_LIST32
{
  /* 0x0000 */ unsigned long P;
  /* 0x0004 */ unsigned long L;
} PP_LOOKASIDE_LIST32, *PPP_LOOKASIDE_LIST32; /* size: 0x0008 */

typedef struct _IO_CACHE_INFO
{
  /* 0x0000 */ unsigned char CacheAttribute;
} IO_CACHE_INFO, *PIO_CACHE_INFO; /* size: 0x0001 */

typedef struct _OBJECTID
{
  /* 0x0000 */ struct _GUID Lineage;
  /* 0x0010 */ unsigned long Uniquifier;
} OBJECTID, *POBJECTID; /* size: 0x0014 */

typedef struct _MI_RESAVAIL_TRACKER
{
  /* 0x0000 */ unsigned __int64 AllocateKernelStack;
  /* 0x0008 */ unsigned __int64 AllocateGrowKernelStack;
  /* 0x0010 */ unsigned __int64 FreeKernelStack;
  /* 0x0018 */ unsigned __int64 FreeKernelStackError;
  /* 0x0020 */ unsigned __int64 FreeGrowKernelStackError;
  /* 0x0028 */ unsigned __int64 FreeKernelStackOutPage;
  /* 0x0030 */ unsigned __int64 AllocateCreateProcess;
  /* 0x0038 */ unsigned __int64 FreeCreateProcessError;
  /* 0x0040 */ unsigned __int64 FreeDeleteProcess;
  /* 0x0048 */ unsigned __int64 FreeCleanProcess;
  /* 0x0050 */ unsigned __int64 FreeCleanProcessError;
  /* 0x0058 */ unsigned __int64 AllocateAddProcessWsMetaPage;
  /* 0x0060 */ unsigned __int64 AllocateWsIncrease;
  /* 0x0068 */ unsigned __int64 FreeWsIncreaseError;
  /* 0x0070 */ unsigned __int64 FreeWsIncreaseErrorMax;
  /* 0x0078 */ unsigned __int64 FreeWsDecrease;
  /* 0x0080 */ unsigned __int64 AllocateWorkingSetPage;
  /* 0x0088 */ unsigned __int64 FreeWorkingSetPage;
  /* 0x0090 */ unsigned __int64 FreeWorkingSetPageError;
  /* 0x0098 */ unsigned __int64 FreeDeletePteRange;
  /* 0x00a0 */ unsigned __int64 AllocatePageTablesForProcessMetadata;
  /* 0x00a8 */ unsigned __int64 FreePageTablesForProcessMetadataError;
  /* 0x00b0 */ unsigned __int64 FreePageTablesForProcessMetadataError2;
  /* 0x00b8 */ unsigned __int64 FreePageTablesForProcessMetadataExcess;
  /* 0x00c0 */ unsigned __int64 AllocatePageTablesForSystem;
  /* 0x00c8 */ unsigned __int64 FreeSystemVaPageTables;
  /* 0x00d0 */ unsigned __int64 FreePageTablesForSystemError;
  /* 0x00d8 */ unsigned __int64 FreePageTablesForSystemExcess;
  /* 0x00e0 */ unsigned __int64 FreeSessionVaPageTables;
  /* 0x00e8 */ unsigned __int64 AllocateCreateSession;
  /* 0x00f0 */ unsigned __int64 FreeSessionWsDereference;
  /* 0x00f8 */ unsigned __int64 FreeSessionDereference;
  /* 0x0100 */ unsigned __int64 FreeSessionDataPage;
  /* 0x0108 */ unsigned __int64 FreeSessionImageConversion;
  /* 0x0110 */ unsigned __int64 AllocateWsAdjustPageTable;
  /* 0x0118 */ unsigned __int64 FreeWsAdjustPageTable;
  /* 0x0120 */ unsigned __int64 FreeWsAdjustPageTableError;
  /* 0x0128 */ unsigned __int64 AllocateNoLowMemory;
  /* 0x0130 */ unsigned __int64 AllocatePagedPoolLockedDown;
  /* 0x0138 */ unsigned __int64 FreePagedPoolPageTablesError;
  /* 0x0140 */ unsigned __int64 FreePagedPoolLockedDown;
  /* 0x0148 */ unsigned __int64 AllocateLockSystemCode;
  /* 0x0150 */ unsigned __int64 AllocateSystemBitmaps;
  /* 0x0158 */ unsigned __int64 FreeSystemBitmapsError;
  /* 0x0160 */ unsigned __int64 FreeSessionBitmaps;
  /* 0x0168 */ unsigned __int64 AllocateForMdl;
  /* 0x0170 */ unsigned __int64 FreeFromMdl;
  /* 0x0178 */ unsigned __int64 FreeMdlExcess;
  /* 0x0180 */ unsigned __int64 AllocateExpansionNonPagedPool;
  /* 0x0188 */ unsigned __int64 FreeExpansionNonPagedPool;
  /* 0x0190 */ unsigned __int64 FreeInitialPool;
  /* 0x0198 */ unsigned __int64 AllocateUserPageTable;
  /* 0x01a0 */ unsigned __int64 FreeUserPageTable;
  /* 0x01a8 */ unsigned __int64 AllocateVad;
  /* 0x01b0 */ unsigned __int64 RemoveVad;
  /* 0x01b8 */ unsigned __int64 FreeVad;
  /* 0x01c0 */ unsigned __int64 AllocateContiguous;
  /* 0x01c8 */ unsigned __int64 FreeContiguousPages;
  /* 0x01d0 */ unsigned __int64 FreeContiguousError;
  /* 0x01d8 */ unsigned __int64 FreeLargePages;
  /* 0x01e0 */ unsigned __int64 FreeLargePageMemory;
  /* 0x01e8 */ unsigned __int64 FreeLargePagesPageFileSection;
  /* 0x01f0 */ unsigned __int64 AllocateSystemWsles;
  /* 0x01f8 */ unsigned __int64 FreeSystemWsles;
  /* 0x0200 */ unsigned __int64 AllocateSystemInitWs;
  /* 0x0208 */ unsigned __int64 AllocateSessionInitWs;
  /* 0x0210 */ unsigned __int64 FreeSessionInitWsError;
  /* 0x0218 */ unsigned __int64 AllocateReverseRelocations;
  /* 0x0220 */ unsigned __int64 FreeReverseRelocations;
  /* 0x0228 */ unsigned __int64 AllocateSystemImage;
  /* 0x0230 */ unsigned __int64 AllocateSystemImageLoad;
  /* 0x0238 */ unsigned __int64 AllocateSessionSharedImage;
  /* 0x0240 */ unsigned __int64 FreeKernelImageInitCode;
  /* 0x0248 */ unsigned __int64 FreeSystemImageInitCode;
  /* 0x0250 */ unsigned __int64 FreePagableDriverCode;
  /* 0x0258 */ unsigned __int64 FreeSystemImageLargePageConversion;
  /* 0x0260 */ unsigned __int64 FreeSystemImageError;
  /* 0x0268 */ unsigned __int64 FreeSystemImageLoadError;
  /* 0x0270 */ unsigned __int64 FreeSystemImageLoadExcess;
  /* 0x0278 */ unsigned __int64 FreeSystemImageTempCharge;
  /* 0x0280 */ unsigned __int64 FreeUnloadSystemImage;
  /* 0x0288 */ unsigned __int64 FreeUnloadSessionImage;
  /* 0x0290 */ unsigned __int64 FreeUnloadBootImage;
  /* 0x0298 */ unsigned __int64 FreeReloadBootImageLarge;
  /* 0x02a0 */ unsigned __int64 AllocateIndependent;
  /* 0x02a8 */ unsigned __int64 FreeIndependent;
  /* 0x02b0 */ unsigned __int64 AllocateHotAdd;
  /* 0x02b8 */ unsigned __int64 AllocateHotRemove;
  /* 0x02c0 */ unsigned __int64 FreeHotAdd;
  /* 0x02c8 */ unsigned __int64 FreeHotAddEcc;
  /* 0x02d0 */ unsigned __int64 FreeHotAddError;
  /* 0x02d8 */ unsigned __int64 FreeHotAddUnmap;
  /* 0x02e0 */ unsigned __int64 FreeHotAddRemove;
  /* 0x02e8 */ unsigned __int64 AllocateBoot;
  /* 0x02f0 */ unsigned __int64 FreeBootRegistry;
  /* 0x02f8 */ unsigned __int64 FreeLoaderBlock;
  /* 0x0300 */ unsigned __int64 AllocateNonPagedSpecialPool;
  /* 0x0308 */ unsigned __int64 FreeNonPagedSpecialPoolError;
  /* 0x0310 */ unsigned __int64 FreeNonPagedSpecialPool;
  /* 0x0318 */ unsigned __int64 FreeUnlockAwe;
  /* 0x0320 */ unsigned __int64 FreeAdvanceAwe;
  /* 0x0328 */ unsigned __int64 AllocateZeroPage;
  /* 0x0330 */ unsigned __int64 FreeZeroPage;
} MI_RESAVAIL_TRACKER, *PMI_RESAVAIL_TRACKER; /* size: 0x0338 */

typedef struct _SYSTEM_ALARM_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_ACE, *PSYSTEM_ALARM_ACE; /* size: 0x000c */

typedef struct _LAZY_WRITER
{
  /* 0x0000 */ struct _KDPC ScanDpc;
  /* 0x0040 */ struct _KTIMER ScanTimer;
  /* 0x0080 */ unsigned char ScanActive;
  /* 0x0081 */ unsigned char OtherWork;
  /* 0x0082 */ unsigned char PendingTeardownScan;
  /* 0x0083 */ unsigned char PendingPeriodicScan;
  /* 0x0084 */ unsigned char PendingLowMemoryScan;
  /* 0x0085 */ unsigned char PendingPowerScan;
  /* 0x0086 */ char __PADDING__[2];
} LAZY_WRITER, *PLAZY_WRITER; /* size: 0x0088 */

struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 LockPrefixTable;
  /* 0x0030 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0038 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0040 */ unsigned __int64 ProcessAffinityMask;
  /* 0x0048 */ unsigned long ProcessHeapFlags;
  /* 0x004c */ unsigned short CSDVersion;
  /* 0x004e */ unsigned short Reserved1;
  /* 0x0050 */ unsigned __int64 EditList;
  /* 0x0058 */ unsigned __int64 SecurityCookie;
  /* 0x0060 */ unsigned __int64 SEHandlerTable;
  /* 0x0068 */ unsigned __int64 SEHandlerCount;
}; /* size: 0x0070 */

typedef struct _PHYSICAL_COUNTER_RESOURCE_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR Descriptors[1];
} PHYSICAL_COUNTER_RESOURCE_LIST, *PPHYSICAL_COUNTER_RESOURCE_LIST; /* size: 0x0014 */

typedef struct _COMPRESSION_BLOCK
{
  /* 0x0000 */ unsigned char Buffer[65536];
  /* 0x10000 */ unsigned char* Ptr;
} COMPRESSION_BLOCK, *PCOMPRESSION_BLOCK; /* size: 0x10008 */

typedef struct _MMINPAGE_FLAGS2
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 StoreInstruction : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 InjectRetry : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 IssuedAtLowPriority : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 ControlAreaHighBits : 61; /* bit position: 3 */
  }; /* bitfield */
} MMINPAGE_FLAGS2, *PMMINPAGE_FLAGS2; /* size: 0x0008 */

typedef struct _MMINPAGE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 VaPrefetchReadBlock : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 CollidedFlowThrough : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned __int64 ForceCollisions : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 PrefetchMdlHighBits : 61; /* bit position: 3 */
  }; /* bitfield */
} MMINPAGE_FLAGS, *PMMINPAGE_FLAGS; /* size: 0x0008 */

typedef struct _MMINPAGE_SUPPORT
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListEntry;
  /* 0x0008 */ struct _ETHREAD* Thread;
  /* 0x0010 */ struct _LIST_ENTRY ListHead;
  /* 0x0020 */ struct _KEVENT Event;
  /* 0x0038 */ struct _KEVENT CollidedEvent;
  /* 0x0050 */ struct _IO_STATUS_BLOCK IoStatus;
  /* 0x0060 */ union _LARGE_INTEGER ReadOffset;
  /* 0x0068 */ struct _MMPTE PteContents;
  /* 0x0070 */ struct _MMPFN* LockedProtoPfn;
  /* 0x0078 */ volatile long WaitCount;
  /* 0x007c */ unsigned long ByteCount;
  /* 0x0080 */ unsigned long ImagePteOffset;
  /* 0x0084 */ long Padding_716;
  union
  {
    union
    {
      /* 0x0088 */ struct _FILE_OBJECT* FilePointer;
      /* 0x0088 */ struct _MMINPAGE_FLAGS3 e3;
      /* 0x0088 */ unsigned __int64 Value;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
  union
  {
    union
    {
      /* 0x0090 */ struct _CONTROL_AREA* ControlArea;
      /* 0x0090 */ struct _MI_IMAGE_SECURITY_REFERENCE* SeImageStub;
      /* 0x0090 */ struct _MMINPAGE_FLAGS2 e2;
      /* 0x0090 */ unsigned __int64 Value;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u3;
  /* 0x0098 */ void* FaultingAddress;
  /* 0x00a0 */ struct _MMPTE* PointerPte;
  /* 0x00a8 */ struct _MMPTE* BasePte;
  /* 0x00b0 */ struct _MMPFN* Pfn;
  union
  {
    union
    {
      /* 0x00b8 */ struct _MMINPAGE_FLAGS e1;
      /* 0x00b8 */ unsigned __int64 LongFlags;
      /* 0x00b8 */ struct _MDL* PrefetchMdl;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x00c0 */ struct _MDL Mdl;
  /* 0x00f0 */ unsigned __int64 Page[16];
} MMINPAGE_SUPPORT, *PMMINPAGE_SUPPORT; /* size: 0x0170 */

typedef struct _READCONTROLSPACE64
{
  /* 0x0000 */ unsigned short Processor;
  /* 0x0002 */ char Padding_717[6];
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long BufLen;
  /* 0x0014 */ unsigned char Buf[1];
  /* 0x0015 */ char __PADDING__[3];
} READCONTROLSPACE64, *PREADCONTROLSPACE64; /* size: 0x0018 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfClusters;
  /* 0x0008 */ union _LARGE_INTEGER Cluster[1];
} LOOKUP_STREAM_FROM_CLUSTER_INPUT, *PLOOKUP_STREAM_FROM_CLUSTER_INPUT; /* size: 0x0010 */

typedef struct _TXFS_START_RM_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_718;
  /* 0x0008 */ unsigned __int64 LogContainerSize;
  /* 0x0010 */ unsigned long LogContainerCountMin;
  /* 0x0014 */ unsigned long LogContainerCountMax;
  /* 0x0018 */ unsigned long LogGrowthIncrement;
  /* 0x001c */ unsigned long LogAutoShrinkPercentage;
  /* 0x0020 */ unsigned long TmLogPathOffset;
  /* 0x0024 */ unsigned short TmLogPathLength;
  /* 0x0026 */ unsigned short LoggingMode;
  /* 0x0028 */ unsigned short LogPathLength;
  /* 0x002a */ unsigned short Reserved;
  /* 0x002c */ wchar_t LogPath[1];
  /* 0x002e */ char __PADDING__[2];
} TXFS_START_RM_INFORMATION, *PTXFS_START_RM_INFORMATION; /* size: 0x0030 */

typedef struct _PARSE_MESSAGE_CONTEXT
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long cwSavColumn;
  /* 0x0008 */ unsigned __int64 iwSrc;
  /* 0x0010 */ unsigned __int64 iwDst;
  /* 0x0018 */ unsigned __int64 iwDstSpace;
  /* 0x0020 */ char* lpvArgStart;
} PARSE_MESSAGE_CONTEXT, *PPARSE_MESSAGE_CONTEXT; /* size: 0x0028 */

struct PCI_AGP_EXTENDED_CAPABILITY
{
  /* 0x0000 */ struct _PCI_AGP_ISOCH_STATUS IsochStatus;
  /* 0x0004 */ struct _PCI_AGP_CONTROL AgpControl;
  /* 0x0008 */ unsigned short ApertureSize;
  /* 0x000a */ struct _PCI_AGP_APERTURE_PAGE_SIZE AperturePageSize;
  /* 0x000c */ unsigned long GartLow;
  /* 0x0010 */ unsigned long GartHigh;
  /* 0x0014 */ struct _PCI_AGP_ISOCH_COMMAND IsochCommand;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

typedef struct _DBGUI_CREATE_THREAD
{
  /* 0x0000 */ void* HandleToThread;
  /* 0x0008 */ struct _DBGKM_CREATE_THREAD NewThread;
} DBGUI_CREATE_THREAD, *PDBGUI_CREATE_THREAD; /* size: 0x0018 */

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned __int64 BeginAddress;
  /* 0x0008 */ unsigned __int64 EndAddress;
  /* 0x0010 */ unsigned __int64 ExceptionHandler;
  /* 0x0018 */ unsigned __int64 HandlerData;
  /* 0x0020 */ unsigned __int64 PrologEndAddress;
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY; /* size: 0x0028 */

typedef struct _SM_STORE_BASIC_PARAMS
{
  union
  {
    /* 0x0000 */ unsigned long StoreFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StoreType : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long NoDuplication : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long StaticPopulation : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long FailNoCompression : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long NoCompression : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long NoEncryption : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long Spare0 : 3; /* bit position: 13 */
      /* 0x0000 */ unsigned long PerformsFileIo : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long VdlNotSet : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long UseIntermediateAddBuffer : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long Spare1 : 13; /* bit position: 19 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long Granularity;
  /* 0x0008 */ unsigned long RegionSize;
  /* 0x000c */ unsigned long RegionCount;
} SM_STORE_BASIC_PARAMS, *PSM_STORE_BASIC_PARAMS; /* size: 0x0010 */

typedef struct _ST_PARAMETERS
{
  /* 0x0000 */ struct _SM_STORE_BASIC_PARAMS Store;
  /* 0x0010 */ unsigned long SectorSize;
  /* 0x0014 */ long Padding_719;
  /* 0x0018 */ void* BackingStore;
  /* 0x0020 */ char* EncryptionKey;
  /* 0x0028 */ unsigned long EncryptionKeySize;
  /* 0x002c */ long Padding_720;
  /* 0x0030 */ struct _ST_ETA_CONTEXT* EtaContext;
} ST_PARAMETERS, *PST_PARAMETERS; /* size: 0x0038 */

typedef struct _WMI_RESOURCE
{
  /* 0x0000 */ unsigned __int64 AcquireTime;
  /* 0x0008 */ unsigned __int64 HoldTime;
  /* 0x0010 */ unsigned __int64 WaitTime;
  /* 0x0018 */ unsigned long MaxRecursionDepth;
  /* 0x001c */ unsigned long ThreadId;
  /* 0x0020 */ void* Resource;
  /* 0x0028 */ unsigned long Action;
  /* 0x002c */ unsigned long ContentionDelta;
} WMI_RESOURCE, *PWMI_RESOURCE; /* size: 0x0030 */

typedef struct _CREATE_DISK_GPT
{
  /* 0x0000 */ struct _GUID DiskId;
  /* 0x0010 */ unsigned long MaxPartitionCount;
} CREATE_DISK_GPT, *PCREATE_DISK_GPT; /* size: 0x0014 */

struct tagUSERSDBLOOKUPENTRY
{
  /* 0x0000 */ union _ULARGE_INTEGER liTimeStamp;
  /* 0x0008 */ struct _GUID guidDB;
}; /* size: 0x0018 */

typedef struct _KAFFINITY_ENUMERATION_CONTEXT
{
  /* 0x0000 */ struct _KAFFINITY_EX* Affinity;
  /* 0x0008 */ unsigned __int64 CurrentMask;
  /* 0x0010 */ unsigned short CurrentIndex;
  /* 0x0012 */ char __PADDING__[6];
} KAFFINITY_ENUMERATION_CONTEXT, *PKAFFINITY_ENUMERATION_CONTEXT; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0018 */ unsigned short* VetoName;
  /* 0x0020 */ unsigned long VetoNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA, *PPLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA; /* size: 0x0028 */

typedef struct _CM_HARDWARE_PROFILE_ACPI_ALIAS_LIST
{
  /* 0x0000 */ unsigned long MaxAliasCount;
  /* 0x0004 */ unsigned long CurrentAliasCount;
  /* 0x0008 */ struct _CM_HARDWARE_PROFILE_ACPI_ALIAS Alias[1];
} CM_HARDWARE_PROFILE_ACPI_ALIAS_LIST, *PCM_HARDWARE_PROFILE_ACPI_ALIAS_LIST; /* size: 0x0020 */

typedef union _UCHAR1
{
  union
  {
    /* 0x0000 */ unsigned char Uchar[1];
    /* 0x0000 */ unsigned char ForceAlignment;
  }; /* size: 0x0001 */
} UCHAR1, *PUCHAR1; /* size: 0x0001 */

typedef struct _EXHANDLE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TagBits : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long Index : 30; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0000 */ void* GenericHandleOverlay;
    /* 0x0000 */ unsigned __int64 Value;
  }; /* size: 0x0008 */
} EXHANDLE, *PEXHANDLE; /* size: 0x0008 */

typedef struct _LOGTYPEDESCRIPTOR
{
  /* 0x0000 */ unsigned char LogType;
  /* 0x0001 */ unsigned char DataFormatType;
} LOGTYPEDESCRIPTOR, *PLOGTYPEDESCRIPTOR; /* size: 0x0002 */

typedef struct _DBGKM_UNLOAD_DLL64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
} DBGKM_UNLOAD_DLL64, *PDBGKM_UNLOAD_DLL64; /* size: 0x0008 */

struct tagUSERSDBLOOKUP
{
  /* 0x0000 */ struct tagUSERSDBLOOKUP* pNext;
  /* 0x0008 */ struct tagUSERSDBLOOKUP* pPrev;
  /* 0x0010 */ unsigned short* pwszItemName;
  /* 0x0018 */ int bLayer;
  /* 0x001c */ unsigned long dwCount;
  /* 0x0020 */ struct tagUSERSDBLOOKUPENTRY rgEntries[1];
}; /* size: 0x0038 */

typedef struct _TOKEN_ELEVATION
{
  /* 0x0000 */ unsigned long TokenIsElevated;
} TOKEN_ELEVATION, *PTOKEN_ELEVATION; /* size: 0x0004 */

typedef struct _POP_IRP_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _IRP* Irp;
  /* 0x0018 */ struct _DEVICE_OBJECT* Pdo;
  /* 0x0020 */ struct _DEVICE_OBJECT* TargetDevice;
  /* 0x0028 */ struct _DEVICE_OBJECT* CurrentDevice;
  /* 0x0030 */ unsigned char MinorFunction;
  /* 0x0031 */ char Padding_721[3];
  /* 0x0034 */ enum _POWER_STATE_TYPE PowerStateType;
  /* 0x0038 */ union _POWER_STATE PowerState;
  /* 0x003c */ unsigned long WatchdogCount;
  /* 0x0040 */ unsigned char WatchdogState;
  /* 0x0041 */ char Padding_722[7];
  union
  {
    struct
    {
      /* 0x0048 */ void* CallerCompletion /* function */;
      /* 0x0050 */ void* CallerContext;
      /* 0x0058 */ struct _DEVICE_OBJECT* CallerDevice;
      /* 0x0060 */ unsigned char SystemWake;
      /* 0x0061 */ char __PADDING__[7];
    } /* size: 0x0020 */ Device;
    struct
    {
      struct
      {
        /* 0x0048 */ struct _PO_DEVICE_NOTIFY* NotifyDevice;
      } /* size: 0x0008 */ System;
      /* 0x0050 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} POP_IRP_DATA, *PPOP_IRP_DATA; /* size: 0x0068 */

typedef struct _B_TREE_SERIALIZE_INFO
{
  /* 0x0000 */ unsigned long Depth;
  /* 0x0004 */ long Padding_723;
  /* 0x0008 */ unsigned __int64 RootKey;
  /* 0x0010 */ unsigned __int64 EntryCount;
} B_TREE_SERIALIZE_INFO, *PB_TREE_SERIALIZE_INFO; /* size: 0x0018 */

typedef struct _BIN_RANGE
{
  /* 0x0000 */ union _LARGE_INTEGER StartValue;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} BIN_RANGE, *PBIN_RANGE; /* size: 0x0010 */

typedef struct _BIN_COUNT
{
  /* 0x0000 */ struct _BIN_RANGE BinRange;
  /* 0x0010 */ unsigned long BinCount;
  /* 0x0014 */ long __PADDING__[1];
} BIN_COUNT, *PBIN_COUNT; /* size: 0x0018 */

typedef struct _BIN_RESULTS
{
  /* 0x0000 */ unsigned long NumberOfBins;
  /* 0x0004 */ long Padding_724;
  /* 0x0008 */ struct _BIN_COUNT BinCounts[1];
} BIN_RESULTS, *PBIN_RESULTS; /* size: 0x0020 */

typedef struct _PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY
{
  /* 0x0000 */ struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;
  /* 0x0004 */ unsigned long LowSerialNumber;
  /* 0x0008 */ unsigned long HighSerialNumber;
} PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY, *PPCI_EXPRESS_SERIAL_NUMBER_CAPABILITY; /* size: 0x000c */

typedef struct _FS_FILTER_COMPLETION_NODE
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ void* CompletionContext;
  /* 0x0018 */ void* CompletionCallback /* function */;
} FS_FILTER_COMPLETION_NODE, *PFS_FILTER_COMPLETION_NODE; /* size: 0x0020 */

typedef struct _FT_SET_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfMembers;
  /* 0x0004 */ enum FT_TYPE Type;
  /* 0x0008 */ enum _FT_STATE SetState;
} FT_SET_INFORMATION, *PFT_SET_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_HOTPATCH_CODE_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long InfoSize;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long DescriptorsCount;
      /* 0x0004 */ long Padding_725;
      /* 0x0010 */ struct _HOTPATCH_HOOK_DESCRIPTOR CodeDescriptors[1];
    } /* size: 0x0030 */ CodeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
    } /* size: 0x0004 */ KernelInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x0014 */ unsigned char PatchingFinished;
      /* 0x0015 */ char __PADDING__[1];
    } /* size: 0x000e */ UserModeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x000c */ long Padding_726;
      /* 0x0018 */ unsigned __int64 TargetProcess;
    } /* size: 0x0018 */ InjectionInfo;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned __int64 ParentDirectory;
        /* 0x0010 */ unsigned __int64 ObjectHandle1;
        /* 0x0018 */ unsigned __int64 ObjectHandle2;
      } /* size: 0x0018 */ AtomicSwap;
      /* 0x0020 */ long __PADDING__[6];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} SYSTEM_HOTPATCH_CODE_INFORMATION, *PSYSTEM_HOTPATCH_CODE_INFORMATION; /* size: 0x0038 */

typedef union _PCI_EXPRESS_CAPABILITIES_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short CapabilityVersion : 4; /* bit position: 0 */
      /* 0x0000 */ unsigned short DeviceType : 4; /* bit position: 4 */
      /* 0x0000 */ unsigned short SlotImplemented : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned short InterruptMessageNumber : 5; /* bit position: 9 */
      /* 0x0000 */ unsigned short Rsvd : 2; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_CAPABILITIES_REGISTER, *PPCI_EXPRESS_CAPABILITIES_REGISTER; /* size: 0x0002 */

typedef struct _WINDBG_OLD_EXTENSION_APIS
{
  /* 0x0000 */ unsigned long nSize;
  /* 0x0004 */ long Padding_727;
  /* 0x0008 */ void* lpOutputRoutine /* function */;
  /* 0x0010 */ void* lpGetExpressionRoutine /* function */;
  /* 0x0018 */ void* lpGetSymbolRoutine /* function */;
  /* 0x0020 */ void* lpDisasmRoutine /* function */;
  /* 0x0028 */ void* lpCheckControlCRoutine /* function */;
} WINDBG_OLD_EXTENSION_APIS, *PWINDBG_OLD_EXTENSION_APIS; /* size: 0x0030 */

typedef struct _BCDE_DEVICE_QUALIFIED_PARTITION
{
  /* 0x0000 */ unsigned long PartitionStyle;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long DiskSignature;
      /* 0x000c */ unsigned __int64 PartitionOffset;
    } /* size: 0x000c */ Mbr;
    struct
    {
      /* 0x0008 */ struct _GUID DiskSignature;
      /* 0x0018 */ struct _GUID PartitionSignature;
    } /* size: 0x0020 */ Gpt;
  }; /* size: 0x0020 */
} BCDE_DEVICE_QUALIFIED_PARTITION, *PBCDE_DEVICE_QUALIFIED_PARTITION; /* size: 0x0028 */

typedef struct _BCDE_DEVICE
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ struct _GUID AdditionalOptions;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned long ParentOffset;
      /* 0x0018 */ wchar_t Path[1];
    } /* size: 0x0006 */ File;
    struct
    {
      /* 0x0014 */ wchar_t Path[1];
    } /* size: 0x0002 */ Partition;
    struct
    {
      /* 0x0014 */ unsigned long Type;
      /* 0x0018 */ unsigned long ParentOffset;
      /* 0x001c */ unsigned long ElementType;
      /* 0x0020 */ wchar_t Path[1];
    } /* size: 0x000e */ Locate;
    struct
    {
      /* 0x0014 */ unsigned char Data[1];
    } /* size: 0x0001 */ Unknown;
    /* 0x0014 */ struct _BCDE_DEVICE_QUALIFIED_PARTITION QualifiedPartition;
  }; /* size: 0x0028 */
} BCDE_DEVICE, *PBCDE_DEVICE; /* size: 0x003c */

typedef struct _IOSPACE64
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long Data;
} IOSPACE64, *PIOSPACE64; /* size: 0x0010 */

typedef struct _EX_CALLBACK_ROUTINE_BLOCK
{
  /* 0x0000 */ struct _EX_RUNDOWN_REF RundownProtect;
  /* 0x0008 */ void* Function /* function */;
  /* 0x0010 */ void* Context;
} EX_CALLBACK_ROUTINE_BLOCK, *PEX_CALLBACK_ROUTINE_BLOCK; /* size: 0x0018 */

typedef struct _IOP_PRIORITY_CALLBACK_BLOCK
{
  /* 0x0000 */ struct _EX_CALLBACK_ROUTINE_BLOCK CallbackBlock;
  /* 0x0018 */ void* CallbackRoutine /* function */;
  /* 0x0020 */ struct _DRIVER_OBJECT* DriverObject;
} IOP_PRIORITY_CALLBACK_BLOCK, *PIOP_PRIORITY_CALLBACK_BLOCK; /* size: 0x0028 */

typedef struct _VF_POOL_TRACE
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ struct _ETHREAD* Thread;
  /* 0x0018 */ void* StackTrace[13];
} VF_POOL_TRACE, *PVF_POOL_TRACE; /* size: 0x0080 */

typedef struct _RTL_UNICODE_STRING_BUFFER
{
  /* 0x0000 */ struct _UNICODE_STRING String;
  /* 0x0010 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0040 */ unsigned char MinimumStaticBufferForTerminalNul[2];
  /* 0x0042 */ char __PADDING__[6];
} RTL_UNICODE_STRING_BUFFER, *PRTL_UNICODE_STRING_BUFFER; /* size: 0x0048 */

typedef union _PCI_EXPRESS_ROOT_CONTROL_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short CorrectableSerrEnable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short NonFatalSerrEnable : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short FatalSerrEnable : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short PMEInterruptEnable : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short CRSSoftwareVisibilityEnable : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short Rsvd : 11; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_ROOT_CONTROL_REGISTER, *PPCI_EXPRESS_ROOT_CONTROL_REGISTER; /* size: 0x0002 */

typedef struct _IO_PRIORITY_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ThreadPriority;
  /* 0x0008 */ unsigned long PagePriority;
  /* 0x000c */ enum _IO_PRIORITY_HINT IoPriority;
} IO_PRIORITY_INFO, *PIO_PRIORITY_INFO; /* size: 0x0010 */

typedef struct _ACL_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long AceCount;
  /* 0x0004 */ unsigned long AclBytesInUse;
  /* 0x0008 */ unsigned long AclBytesFree;
} ACL_SIZE_INFORMATION, *PACL_SIZE_INFORMATION; /* size: 0x000c */

typedef struct _PERFINFO_EXECUTIVE_RESOURCE_CONFIG
{
  /* 0x0000 */ unsigned long ReleaseSamplingRate;
  /* 0x0004 */ unsigned long ContentionSamplingRate;
  /* 0x0008 */ unsigned long NumberOfExcessiveTimeouts;
} PERFINFO_EXECUTIVE_RESOURCE_CONFIG, *PPERFINFO_EXECUTIVE_RESOURCE_CONFIG; /* size: 0x000c */

typedef struct _POOL_HEADER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long PreviousSize : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long PoolIndex : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned long BlockSize : 8; /* bit position: 16 */
      /* 0x0000 */ unsigned long PoolType : 8; /* bit position: 24 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Ulong1;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long PoolTag;
  union
  {
    /* 0x0008 */ struct _EPROCESS* ProcessBilled;
    struct
    {
      /* 0x0008 */ unsigned short AllocatorBackTraceIndex;
      /* 0x000a */ unsigned short PoolTagHash;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} POOL_HEADER, *PPOOL_HEADER; /* size: 0x0010 */

typedef struct _MI_VERIFIER_POOL_HEADER
{
  /* 0x0000 */ struct _VI_POOL_ENTRY* VerifierPoolEntry;
} MI_VERIFIER_POOL_HEADER, *PMI_VERIFIER_POOL_HEADER; /* size: 0x0008 */

typedef struct _MI_FREED_SPECIAL_POOL
{
  /* 0x0000 */ struct _POOL_HEADER OverlaidPoolHeader;
  /* 0x0010 */ struct _MI_VERIFIER_POOL_HEADER OverlaidVerifierPoolHeader;
  /* 0x0018 */ unsigned long Signature;
  /* 0x001c */ unsigned long TickCount;
  /* 0x0020 */ unsigned long NumberOfBytesRequested;
  /* 0x0024 */ unsigned long Pagable;
  /* 0x0028 */ void* VirtualAddress;
  /* 0x0030 */ void* StackPointer;
  /* 0x0038 */ unsigned long StackBytes;
  /* 0x003c */ long Padding_728;
  /* 0x0040 */ struct _ETHREAD* Thread;
  /* 0x0048 */ unsigned char StackData[1024];
} MI_FREED_SPECIAL_POOL, *PMI_FREED_SPECIAL_POOL; /* size: 0x0448 */

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ struct _GUID LockingTransactionId;
  /* 0x0058 */ unsigned long TxInfoFlags;
  /* 0x005c */ wchar_t FileName[1];
  /* 0x005e */ char __PADDING__[2];
} FILE_ID_GLOBAL_TX_DIR_INFORMATION, *PFILE_ID_GLOBAL_TX_DIR_INFORMATION; /* size: 0x0060 */

typedef struct _SE_PROCESS_AUDIT_INFO
{
  /* 0x0000 */ struct _EPROCESS* Process;
  /* 0x0008 */ struct _EPROCESS* Parent;
} SE_PROCESS_AUDIT_INFO, *PSE_PROCESS_AUDIT_INFO; /* size: 0x0010 */

typedef struct _SYSTEM_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ struct POWER_ACTION_POLICY PowerButton;
  /* 0x0010 */ struct POWER_ACTION_POLICY SleepButton;
  /* 0x001c */ struct POWER_ACTION_POLICY LidClose;
  /* 0x0028 */ enum _SYSTEM_POWER_STATE LidOpenWake;
  /* 0x002c */ unsigned long Reserved;
  /* 0x0030 */ struct POWER_ACTION_POLICY Idle;
  /* 0x003c */ unsigned long IdleTimeout;
  /* 0x0040 */ unsigned char IdleSensitivity;
  /* 0x0041 */ unsigned char DynamicThrottle;
  /* 0x0042 */ unsigned char Spare2[2];
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x004c */ enum _SYSTEM_POWER_STATE ReducedLatencySleep;
  /* 0x0050 */ unsigned long WinLogonFlags;
  /* 0x0054 */ unsigned long Spare3;
  /* 0x0058 */ unsigned long DozeS4Timeout;
  /* 0x005c */ unsigned long BroadcastCapacityResolution;
  /* 0x0060 */ struct SYSTEM_POWER_LEVEL DischargePolicy[4];
  /* 0x00c0 */ unsigned long VideoTimeout;
  /* 0x00c4 */ unsigned char VideoDimDisplay;
  /* 0x00c5 */ char Padding_729[3];
  /* 0x00c8 */ unsigned long VideoReserved[3];
  /* 0x00d4 */ unsigned long SpindownTimeout;
  /* 0x00d8 */ unsigned char OptimizeForPower;
  /* 0x00d9 */ unsigned char FanThrottleTolerance;
  /* 0x00da */ unsigned char ForcedThrottle;
  /* 0x00db */ unsigned char MinThrottle;
  /* 0x00dc */ struct POWER_ACTION_POLICY OverThrottled;
} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY; /* size: 0x00e8 */

typedef struct _IMAGE_BOUND_FORWARDER_REF
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short Reserved;
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF; /* size: 0x0008 */

typedef struct _GETVERSIONINPARAMS
{
  /* 0x0000 */ unsigned char bVersion;
  /* 0x0001 */ unsigned char bRevision;
  /* 0x0002 */ unsigned char bReserved;
  /* 0x0003 */ unsigned char bIDEDeviceMap;
  /* 0x0004 */ unsigned long fCapabilities;
  /* 0x0008 */ unsigned long dwReserved[4];
} GETVERSIONINPARAMS, *PGETVERSIONINPARAMS; /* size: 0x0018 */

typedef struct _LDR_FAILURE_DATA
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ wchar_t ImageName[32];
  /* 0x0044 */ wchar_t AdditionalInfo[32];
} LDR_FAILURE_DATA, *PLDR_FAILURE_DATA; /* size: 0x0084 */

struct _TPP_THREAD_DATA_CALLBACK;

typedef struct _ETW_TP_EVENT_POOL_CLOSE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
} ETW_TP_EVENT_POOL_CLOSE, *PETW_TP_EVENT_POOL_CLOSE; /* size: 0x0028 */

typedef struct _WMI_VISUALTHEME_RECORD
{
  /* 0x0000 */ unsigned char ThemeActive;
  /* 0x0001 */ char Padding_730[3];
  /* 0x0004 */ unsigned long DisplayNameOfModifiedLen;
  /* 0x0008 */ wchar_t DisplayNameOfModified[1];
  /* 0x000a */ char __PADDING__[2];
} WMI_VISUALTHEME_RECORD, *PWMI_VISUALTHEME_RECORD; /* size: 0x000c */

typedef struct _HAL_AMLI_BAD_IO_ADDRESS_LIST
{
  /* 0x0000 */ unsigned long BadAddrBegin;
  /* 0x0004 */ unsigned long BadAddrSize;
  /* 0x0008 */ unsigned long OSVersionTrigger;
  /* 0x000c */ long Padding_731;
  /* 0x0010 */ void* IOHandler /* function */;
} HAL_AMLI_BAD_IO_ADDRESS_LIST, *PHAL_AMLI_BAD_IO_ADDRESS_LIST; /* size: 0x0018 */

typedef struct _CI_LOG_SCHEDULER_EVENT
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
  /* 0x0030 */ unsigned long ProcessId;
  /* 0x0034 */ unsigned long ThreadId;
  /* 0x0038 */ unsigned long Priority;
  /* 0x003c */ unsigned long TaskIndex;
} CI_LOG_SCHEDULER_EVENT, *PCI_LOG_SCHEDULER_EVENT; /* size: 0x0040 */

typedef struct _X86_CALL_FRAME
{
  /* 0x0000 */ unsigned long ReturnAddress;
  /* 0x0004 */ unsigned long Param1;
  /* 0x0008 */ unsigned long Param2;
  /* 0x000c */ unsigned long CompatibilityArea;
} X86_CALL_FRAME, *PX86_CALL_FRAME; /* size: 0x0010 */

struct PPM_IDLE_ACCOUNTING_EX
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ long Padding_732;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING_EX State[1];
}; /* size: 0x01b8 */

typedef struct _HARDWARE_COUNTER_DATA
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Value;
} HARDWARE_COUNTER_DATA, *PHARDWARE_COUNTER_DATA; /* size: 0x0010 */

typedef struct _VF_PENDING_DEFERRAL_CONTEXT
{
  /* 0x0000 */ struct _IOV_REQUEST_PACKET* IovRequestPacket;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ struct _IO_STACK_LOCATION* IrpSpNext;
  /* 0x0018 */ void* CompletionRoutine /* function */;
  /* 0x0020 */ void* CompletionContext;
  /* 0x0028 */ struct _KDPC DpcItem;
  /* 0x0068 */ struct _KTIMER DeferralTimer;
  /* 0x00a8 */ enum VF_PENDING_DEFER_OPTION DeferAction;
  /* 0x00ac */ char PriorityBoost;
  /* 0x00ad */ char __PADDING__[3];
} VF_PENDING_DEFERRAL_CONTEXT, *PVF_PENDING_DEFERRAL_CONTEXT; /* size: 0x00b0 */

typedef struct _WINDBG_EXTENSION_APIS32
{
  /* 0x0000 */ unsigned long nSize;
  /* 0x0004 */ long Padding_733;
  /* 0x0008 */ void* lpOutputRoutine /* function */;
  /* 0x0010 */ void* lpGetExpressionRoutine /* function */;
  /* 0x0018 */ void* lpGetSymbolRoutine /* function */;
  /* 0x0020 */ void* lpDisasmRoutine /* function */;
  /* 0x0028 */ void* lpCheckControlCRoutine /* function */;
  /* 0x0030 */ void* lpReadProcessMemoryRoutine /* function */;
  /* 0x0038 */ void* lpWriteProcessMemoryRoutine /* function */;
  /* 0x0040 */ void* lpGetThreadContextRoutine /* function */;
  /* 0x0048 */ void* lpSetThreadContextRoutine /* function */;
  /* 0x0050 */ void* lpIoctlRoutine /* function */;
  /* 0x0058 */ void* lpStackTraceRoutine /* function */;
} WINDBG_EXTENSION_APIS32, *PWINDBG_EXTENSION_APIS32; /* size: 0x0060 */

typedef struct _ETW_CRITSEC_EVENT_COLLISION
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ unsigned long LockCount;
  /* 0x0024 */ unsigned long SpinCount;
  /* 0x0028 */ void* OwningThread;
  /* 0x0030 */ void* Address;
} ETW_CRITSEC_EVENT_COLLISION, *PETW_CRITSEC_EVENT_COLLISION; /* size: 0x0038 */

typedef struct _DBGUI_CREATE_PROCESS
{
  /* 0x0000 */ void* HandleToProcess;
  /* 0x0008 */ void* HandleToThread;
  /* 0x0010 */ struct _DBGKM_CREATE_PROCESS NewProcess;
} DBGUI_CREATE_PROCESS, *PDBGUI_CREATE_PROCESS; /* size: 0x0040 */

typedef union _SLIST_HEADER32
{
  union
  {
    /* 0x0000 */ unsigned __int64 Alignment;
    struct
    {
      /* 0x0000 */ struct _SLIST_ENTRY32 Next;
      /* 0x0004 */ unsigned short Depth;
      /* 0x0006 */ unsigned short Sequence;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} SLIST_HEADER32, *PSLIST_HEADER32; /* size: 0x0008 */

struct PPM_WMI_PERF_STATES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_734;
  /* 0x0028 */ unsigned __int64 TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

typedef struct _LSA_LAST_INTER_LOGON_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER LastSuccessfulLogon;
  /* 0x0008 */ union _LARGE_INTEGER LastFailedLogon;
  /* 0x0010 */ unsigned long FailedAttemptCountSinceLastSuccessfulLogon;
  /* 0x0014 */ long __PADDING__[1];
} LSA_LAST_INTER_LOGON_INFO, *PLSA_LAST_INTER_LOGON_INFO; /* size: 0x0018 */

typedef struct _SECURITY_LOGON_SESSION_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct _LUID LogonId;
  /* 0x000c */ long Padding_735;
  /* 0x0010 */ struct _UNICODE_STRING UserName;
  /* 0x0020 */ struct _UNICODE_STRING LogonDomain;
  /* 0x0030 */ struct _UNICODE_STRING AuthenticationPackage;
  /* 0x0040 */ unsigned long LogonType;
  /* 0x0044 */ unsigned long Session;
  /* 0x0048 */ void* Sid;
  /* 0x0050 */ union _LARGE_INTEGER LogonTime;
  /* 0x0058 */ struct _UNICODE_STRING LogonServer;
  /* 0x0068 */ struct _UNICODE_STRING DnsDomainName;
  /* 0x0078 */ struct _UNICODE_STRING Upn;
  /* 0x0088 */ unsigned long UserFlags;
  /* 0x008c */ long Padding_736;
  /* 0x0090 */ struct _LSA_LAST_INTER_LOGON_INFO LastLogonInfo;
  /* 0x00a8 */ struct _UNICODE_STRING LogonScript;
  /* 0x00b8 */ struct _UNICODE_STRING ProfilePath;
  /* 0x00c8 */ struct _UNICODE_STRING HomeDirectory;
  /* 0x00d8 */ struct _UNICODE_STRING HomeDirectoryDrive;
  /* 0x00e8 */ union _LARGE_INTEGER LogoffTime;
  /* 0x00f0 */ union _LARGE_INTEGER KickOffTime;
  /* 0x00f8 */ union _LARGE_INTEGER PasswordLastSet;
  /* 0x0100 */ union _LARGE_INTEGER PasswordCanChange;
  /* 0x0108 */ union _LARGE_INTEGER PasswordMustChange;
} SECURITY_LOGON_SESSION_DATA, *PSECURITY_LOGON_SESSION_DATA; /* size: 0x0110 */

typedef struct _VF_PENDING_WORKER_INFORMATION
{
  /* 0x0000 */ struct _KTHREAD* Thread;
  /* 0x0008 */ struct _VF_PENDING_DEFERRAL_CONTEXT* DeferralContext;
  /* 0x0010 */ struct _KEVENT WorkItemReady;
  /* 0x0028 */ unsigned long WorkItemCount;
  /* 0x002c */ long __PADDING__[1];
} VF_PENDING_WORKER_INFORMATION, *PVF_PENDING_WORKER_INFORMATION; /* size: 0x0030 */

typedef struct _WOW64_LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} WOW64_LDT_ENTRY, *PWOW64_LDT_ENTRY; /* size: 0x0008 */

typedef struct _EXTSTACKTRACE32
{
  /* 0x0000 */ unsigned long FramePointer;
  /* 0x0004 */ unsigned long ProgramCounter;
  /* 0x0008 */ unsigned long ReturnAddress;
  /* 0x000c */ unsigned long Args[4];
} EXTSTACKTRACE32, *PEXTSTACKTRACE32; /* size: 0x001c */

typedef struct _FILE_PREFETCH_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH_EX, *PFILE_PREFETCH_EX; /* size: 0x0018 */

typedef struct _EVENTSFORLOGFILE
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ wchar_t szLogicalLogFile[256];
  /* 0x0204 */ unsigned long ulNumRecords;
  /* 0x0208 */ struct _EVENTLOGRECORD* pEventLogRecords /* zero-length array */;
} EVENTSFORLOGFILE, *PEVENTSFORLOGFILE; /* size: 0x0208 */

typedef struct _MOUNTMGR_MOUNT_POINT
{
  /* 0x0000 */ unsigned long SymbolicLinkNameOffset;
  /* 0x0004 */ unsigned short SymbolicLinkNameLength;
  /* 0x0006 */ char Padding_737[2];
  /* 0x0008 */ unsigned long UniqueIdOffset;
  /* 0x000c */ unsigned short UniqueIdLength;
  /* 0x000e */ char Padding_738[2];
  /* 0x0010 */ unsigned long DeviceNameOffset;
  /* 0x0014 */ unsigned short DeviceNameLength;
  /* 0x0016 */ char __PADDING__[2];
} MOUNTMGR_MOUNT_POINT, *PMOUNTMGR_MOUNT_POINT; /* size: 0x0018 */

typedef struct _VF_BUGCHECK_LOG_ENTRY
{
  /* 0x0000 */ unsigned long Code;
  /* 0x0004 */ long Padding_739;
  /* 0x0008 */ unsigned __int64 Param1;
  /* 0x0010 */ unsigned __int64 Param2;
  /* 0x0018 */ unsigned __int64 Param3;
  /* 0x0020 */ unsigned __int64 Param4;
} VF_BUGCHECK_LOG_ENTRY, *PVF_BUGCHECK_LOG_ENTRY; /* size: 0x0028 */

typedef struct _REPARSE_INDEX_KEY
{
  /* 0x0000 */ unsigned long FileReparseTag;
  /* 0x0004 */ union _LARGE_INTEGER FileId;
} REPARSE_INDEX_KEY, *PREPARSE_INDEX_KEY; /* size: 0x000c */

typedef struct _PERFINFO_DRIVER_COMPLETIONROUTINE
{
  /* 0x0000 */ void* Routine;
  /* 0x0008 */ void* IrpPtr;
  /* 0x0010 */ unsigned long UniqMatchId;
} PERFINFO_DRIVER_COMPLETIONROUTINE, *PPERFINFO_DRIVER_COMPLETIONROUTINE; /* size: 0x0014 */

typedef struct _READ_LIST
{
  /* 0x0000 */ struct _FILE_OBJECT* FileObject;
  /* 0x0008 */ unsigned long NumberOfEntries;
  /* 0x000c */ unsigned long IsImage;
  /* 0x0010 */ union _FILE_SEGMENT_ELEMENT List[1];
} READ_LIST, *PREAD_LIST; /* size: 0x0018 */

typedef struct _X86_NT5_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _X86_NT5_CONTEXT ContextFrame;
  /* 0x02cc */ struct _X86_KSPECIAL_REGISTERS SpecialRegisters;
} X86_NT5_KPROCESSOR_STATE, *PX86_NT5_KPROCESSOR_STATE; /* size: 0x0320 */

typedef struct _HEAP_SUBSEGMENT_FREE
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ struct _HEAP_EVENT_SUBSEGMENT_ALLOC_FREE Event;
} HEAP_SUBSEGMENT_FREE, *PHEAP_SUBSEGMENT_FREE; /* size: 0x0040 */

typedef struct _UNIQUE_PROCESS_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 UniqueProcessKey : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} UNIQUE_PROCESS_INFORMATION, *PUNIQUE_PROCESS_INFORMATION; /* size: 0x0008 */

typedef struct _MEMORY_FRAME_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 UseDescription : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ListDescription : 3; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Reserved0 : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Pinned : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 DontUse : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 57 */
    /* 0x0000 */ unsigned __int64 Reserved : 4; /* bit position: 60 */
  }; /* bitfield */
} MEMORY_FRAME_INFORMATION, *PMEMORY_FRAME_INFORMATION; /* size: 0x0008 */

typedef struct _PAGEDIR_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageDirectoryBase : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} PAGEDIR_INFORMATION, *PPAGEDIR_INFORMATION; /* size: 0x0008 */

typedef struct _LSA_AUDIT_POLICY_STORAGE
{
  /* 0x0000 */ unsigned long AuditPolicyVersion;
  /* 0x0004 */ unsigned short MaximumCategoryCount;
  /* 0x0006 */ char Padding_740[2];
  /* 0x0008 */ unsigned long PerSubCategoryCountOffset;
  /* 0x000c */ unsigned short PerSubCategoryAuditPolicy[1];
  /* 0x000e */ char __PADDING__[2];
} LSA_AUDIT_POLICY_STORAGE, *PLSA_AUDIT_POLICY_STORAGE; /* size: 0x0010 */

struct POWER_STATE_NOTIFY_HANDLER
{
  /* 0x0000 */ void* Handler /* function */;
  /* 0x0008 */ void* Context;
}; /* size: 0x0010 */

typedef struct _MMPFN_IDENTITY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MEMORY_FRAME_INFORMATION e1;
      /* 0x0000 */ struct _FILEOFFSET_INFORMATION e2;
      /* 0x0000 */ struct _PAGEDIR_INFORMATION e3;
      /* 0x0000 */ struct _UNIQUE_PROCESS_INFORMATION e4;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ unsigned __int64 PageFrameIndex;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0010 */ unsigned __int64 Image : 1; /* bit position: 0 */
          /* 0x0010 */ unsigned __int64 Mismatch : 1; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0008 */ e1;
      /* 0x0010 */ void* FileObject;
      /* 0x0010 */ void* UniqueFileObjectKey;
      /* 0x0010 */ void* ProtoPteAddress;
      /* 0x0010 */ void* VirtualAddress;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
} MMPFN_IDENTITY, *PMMPFN_IDENTITY; /* size: 0x0018 */

typedef struct _VF_TRACKER
{
  /* 0x0000 */ unsigned long TrackerFlags;
  /* 0x0004 */ unsigned long TrackerSize;
  /* 0x0008 */ unsigned long TrackerIndex;
  /* 0x000c */ unsigned long TraceDepth;
} VF_TRACKER, *PVF_TRACKER; /* size: 0x0010 */

typedef struct _POLICY_DEFAULT_QUOTA_INFO
{
  /* 0x0000 */ struct _QUOTA_LIMITS QuotaLimits;
} POLICY_DEFAULT_QUOTA_INFO, *PPOLICY_DEFAULT_QUOTA_INFO; /* size: 0x0030 */

typedef struct _TOKEN_ORIGIN
{
  /* 0x0000 */ struct _LUID OriginatingLogonSession;
} TOKEN_ORIGIN, *PTOKEN_ORIGIN; /* size: 0x0008 */

typedef struct _DBGKM_LOAD_DLL
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ void* BaseOfDll;
  /* 0x0010 */ unsigned long DebugInfoFileOffset;
  /* 0x0014 */ unsigned long DebugInfoSize;
  /* 0x0018 */ void* NamePointer;
} DBGKM_LOAD_DLL, *PDBGKM_LOAD_DLL; /* size: 0x0020 */

typedef struct _FSRTL_AUXILIARY_BUFFER
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ struct _MDL* Mdl;
} FSRTL_AUXILIARY_BUFFER, *PFSRTL_AUXILIARY_BUFFER; /* size: 0x0018 */

typedef struct _REG_RESTORE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ void* FileHandle;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long Padding_741;
  /* 0x0018 */ void* CallContext;
  /* 0x0020 */ void* ObjectContext;
  /* 0x0028 */ void* Reserved;
} REG_RESTORE_KEY_INFORMATION, *PREG_RESTORE_KEY_INFORMATION; /* size: 0x0030 */

typedef struct _DBGUI_WAIT_STATE_CHANGE
{
  /* 0x0000 */ enum _DBG_STATE NewState;
  /* 0x0004 */ long Padding_742;
  /* 0x0008 */ struct _CLIENT_ID AppClientId;
  union
  {
    union
    {
      /* 0x0018 */ struct _DBGKM_EXCEPTION Exception;
      /* 0x0018 */ struct _DBGUI_CREATE_THREAD CreateThread;
      /* 0x0018 */ struct _DBGUI_CREATE_PROCESS CreateProcessInfo;
      /* 0x0018 */ struct _DBGKM_EXIT_THREAD ExitThread;
      /* 0x0018 */ struct _DBGKM_EXIT_PROCESS ExitProcess;
      /* 0x0018 */ struct _DBGKM_LOAD_DLL LoadDll;
      /* 0x0018 */ struct _DBGKM_UNLOAD_DLL UnloadDll;
    }; /* size: 0x00a0 */
  } /* size: 0x00a0 */ StateInfo;
} DBGUI_WAIT_STATE_CHANGE, *PDBGUI_WAIT_STATE_CHANGE; /* size: 0x00b8 */

typedef struct _FILE_INTERNAL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IndexNumber;
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_MODE_INFORMATION
{
  /* 0x0000 */ unsigned long Mode;
} FILE_MODE_INFORMATION, *PFILE_MODE_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_ALIGNMENT_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ALL_INFORMATION
{
  /* 0x0000 */ struct _FILE_BASIC_INFORMATION BasicInformation;
  /* 0x0028 */ struct _FILE_STANDARD_INFORMATION StandardInformation;
  /* 0x0040 */ struct _FILE_INTERNAL_INFORMATION InternalInformation;
  /* 0x0048 */ struct _FILE_EA_INFORMATION EaInformation;
  /* 0x004c */ struct _FILE_ACCESS_INFORMATION AccessInformation;
  /* 0x0050 */ struct _FILE_POSITION_INFORMATION PositionInformation;
  /* 0x0058 */ struct _FILE_MODE_INFORMATION ModeInformation;
  /* 0x005c */ struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
  /* 0x0060 */ struct _FILE_NAME_INFORMATION NameInformation;
} FILE_ALL_INFORMATION, *PFILE_ALL_INFORMATION; /* size: 0x0068 */

typedef struct _DEVICE_EVENT_MOUNT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long FileSystemNameLength;
  /* 0x000c */ unsigned long FileSystemNameOffset;
} DEVICE_EVENT_MOUNT, *PDEVICE_EVENT_MOUNT; /* size: 0x0010 */

typedef struct _SRB_IO_CONTROL
{
  /* 0x0000 */ unsigned long HeaderLength;
  /* 0x0004 */ unsigned char Signature[8];
  /* 0x000c */ unsigned long Timeout;
  /* 0x0010 */ unsigned long ControlCode;
  /* 0x0014 */ unsigned long ReturnCode;
  /* 0x0018 */ unsigned long Length;
} SRB_IO_CONTROL, *PSRB_IO_CONTROL; /* size: 0x001c */

typedef struct _ACCESS_DENIED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE; /* size: 0x0030 */

typedef struct _IMAGE_DOS_HEADER
{
  /* 0x0000 */ unsigned short e_magic;
  /* 0x0002 */ unsigned short e_cblp;
  /* 0x0004 */ unsigned short e_cp;
  /* 0x0006 */ unsigned short e_crlc;
  /* 0x0008 */ unsigned short e_cparhdr;
  /* 0x000a */ unsigned short e_minalloc;
  /* 0x000c */ unsigned short e_maxalloc;
  /* 0x000e */ unsigned short e_ss;
  /* 0x0010 */ unsigned short e_sp;
  /* 0x0012 */ unsigned short e_csum;
  /* 0x0014 */ unsigned short e_ip;
  /* 0x0016 */ unsigned short e_cs;
  /* 0x0018 */ unsigned short e_lfarlc;
  /* 0x001a */ unsigned short e_ovno;
  /* 0x001c */ unsigned short e_res[4];
  /* 0x0024 */ unsigned short e_oemid;
  /* 0x0026 */ unsigned short e_oeminfo;
  /* 0x0028 */ unsigned short e_res2[10];
  /* 0x003c */ long e_lfanew;
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER; /* size: 0x0040 */

typedef struct _ChildProcessInfo
{
  /* 0x0000 */ unsigned __int64 Signature;
  /* 0x0008 */ void* pPeb32;
  /* 0x0010 */ struct _SECTION_IMAGE_INFORMATION ImageInformation;
  /* 0x0050 */ unsigned __int64 TailSignature;
} ChildProcessInfo, *PChildProcessInfo; /* size: 0x0058 */

typedef struct _KI_LOCAL_ARRAY2
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY2, *PKI_LOCAL_ARRAY2; /* size: 0x005b */

typedef struct _RH_OP_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _IRP* OplockRequestIrp;
  /* 0x0018 */ struct _FILE_OBJECT* OplockRequestFileObject;
  /* 0x0020 */ struct _EPROCESS* OplockRequestProcess;
  /* 0x0028 */ unsigned long BreakFlags;
  /* 0x002c */ long __PADDING__[1];
} RH_OP_CONTEXT, *PRH_OP_CONTEXT; /* size: 0x0030 */

typedef struct _FP_IEEE_RECORD
{
  /* 0x0000 */ struct _FP_IEEE_VALUE Operand1;
  /* 0x0018 */ struct _FP_IEEE_VALUE Operand2;
  /* 0x0030 */ struct _FP_IEEE_VALUE Result;
} FP_IEEE_RECORD, *PFP_IEEE_RECORD; /* size: 0x0048 */

typedef struct _EVENT_TRACE_GROUPMASK_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ long Padding_743;
  /* 0x0008 */ unsigned __int64 TraceHandle;
  /* 0x0010 */ struct _PERFINFO_GROUPMASK EventTraceGroupMasks;
} EVENT_TRACE_GROUPMASK_INFORMATION, *PEVENT_TRACE_GROUPMASK_INFORMATION; /* size: 0x0030 */

typedef struct _CM_ROM_BLOCK
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Size;
} CM_ROM_BLOCK, *PCM_ROM_BLOCK; /* size: 0x0008 */

typedef struct _PERSISTENT_RESERVE_COMMAND
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned char ServiceAction : 5; /* bit position: 0 */
        /* 0x0008 */ unsigned char Reserved1 : 3; /* bit position: 5 */
      }; /* bitfield */
      /* 0x0001 */ char Padding_744;
      /* 0x000a */ unsigned short AllocationLength;
    } /* size: 0x0004 */ PR_IN;
    struct
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0008 */ unsigned char ServiceAction : 5; /* bit position: 0 */
          /* 0x0008 */ unsigned char Reserved1 : 3; /* bit position: 5 */
        }; /* bitfield */
        struct /* bitfield */
        {
          /* 0x0009 */ unsigned char Type : 4; /* bit position: 0 */
          /* 0x0009 */ unsigned char Scope : 4; /* bit position: 4 */
        }; /* bitfield */
        /* 0x000a */ unsigned char* ParameterList /* zero-length array */;
      } /* size: 0x0002 */ PR_OUT;
      /* 0x000a */ char __PADDING__[2];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} PERSISTENT_RESERVE_COMMAND, *PPERSISTENT_RESERVE_COMMAND; /* size: 0x000c */

struct _TP_TIMER;

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ZeroPageCount;
  /* 0x0008 */ unsigned __int64 FreePageCount;
  /* 0x0010 */ unsigned __int64 ModifiedPageCount;
  /* 0x0018 */ unsigned __int64 ModifiedNoWritePageCount;
  /* 0x0020 */ unsigned __int64 BadPageCount;
  /* 0x0028 */ unsigned __int64 PageCountByPriority[8];
  /* 0x0068 */ unsigned __int64 RepurposedPagesByPriority[8];
} SYSTEM_MEMORY_LIST_INFORMATION, *PSYSTEM_MEMORY_LIST_INFORMATION; /* size: 0x00a8 */

typedef struct _FILE_ATTRIBUTE_CACHE_VALUES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfValues;
  /* 0x0008 */ struct _FILE_ATTRIBUTE_CACHE_PAIR Attributes[1];
} FILE_ATTRIBUTE_CACHE_VALUES, *PFILE_ATTRIBUTE_CACHE_VALUES; /* size: 0x00dc */

typedef struct _WINDOWS_OS_OPTIONS
{
  /* 0x0000 */ unsigned char Signature[8];
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ unsigned long OsLoadPathOffset;
  /* 0x0014 */ wchar_t OsLoadOptions[1];
  /* 0x0016 */ char __PADDING__[2];
} WINDOWS_OS_OPTIONS, *PWINDOWS_OS_OPTIONS; /* size: 0x0018 */

typedef struct _INITIAL_PEB32
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SpareBits : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ long Mutant;
} INITIAL_PEB32, *PINITIAL_PEB32; /* size: 0x0008 */

typedef struct _JOURNAL_ABSOLUTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER EndTimeStamp;
  /* 0x0010 */ unsigned __int64 NumberOfRecords;
  /* 0x0018 */ unsigned long FillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_ABSOLUTE_INFORMATION, *PJOURNAL_ABSOLUTE_INFORMATION; /* size: 0x0020 */

typedef struct _KEY_FULL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long SubKeys;
  /* 0x0018 */ unsigned long MaxNameLen;
  /* 0x001c */ unsigned long MaxClassLen;
  /* 0x0020 */ unsigned long Values;
  /* 0x0024 */ unsigned long MaxValueNameLen;
  /* 0x0028 */ unsigned long MaxValueDataLen;
  /* 0x002c */ wchar_t Class[1];
  /* 0x002e */ char __PADDING__[2];
} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION; /* size: 0x0030 */

typedef struct _VF_STACK_SWITCH_TRACE
{
  /* 0x0000 */ struct _ETHREAD* Thread;
  /* 0x0008 */ unsigned long FaultInjected;
  /* 0x000c */ long Padding_745;
  /* 0x0010 */ void* StackTrace[126];
} VF_STACK_SWITCH_TRACE, *PVF_STACK_SWITCH_TRACE; /* size: 0x0400 */

typedef struct _X86_DESCRIPTOR_TABLE_ENTRY
{
  /* 0x0000 */ unsigned long Selector;
  /* 0x0004 */ struct _X86_LDT_ENTRY Descriptor;
} X86_DESCRIPTOR_TABLE_ENTRY, *PX86_DESCRIPTOR_TABLE_ENTRY; /* size: 0x000c */

typedef struct _CALL_HASH_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ void* CallersAddress;
  /* 0x0018 */ void* CallersCaller;
  /* 0x0020 */ unsigned long CallCount;
  /* 0x0024 */ long __PADDING__[1];
} CALL_HASH_ENTRY, *PCALL_HASH_ENTRY; /* size: 0x0028 */

typedef struct _FILE_ID_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_746;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_747[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFORMATION, *PFILE_ID_BOTH_DIR_INFORMATION; /* size: 0x0070 */

typedef struct _DBGKM_CREATE_PROCESS64
{
  /* 0x0000 */ unsigned long SubSystemKey;
  /* 0x0004 */ long Padding_748;
  /* 0x0008 */ unsigned __int64 FileHandle;
  /* 0x0010 */ unsigned __int64 BaseOfImage;
  /* 0x0018 */ unsigned long DebugInfoFileOffset;
  /* 0x001c */ unsigned long DebugInfoSize;
  /* 0x0020 */ struct _DBGKM_CREATE_THREAD64 InitialThread;
} DBGKM_CREATE_PROCESS64, *PDBGKM_CREATE_PROCESS64; /* size: 0x0030 */

typedef struct _WDBGEXTS_MODULE_IN_RANGE
{
  /* 0x0000 */ unsigned __int64 Start;
  /* 0x0008 */ unsigned __int64 End;
  /* 0x0010 */ unsigned __int64 FoundModBase;
  /* 0x0018 */ unsigned long FoundModSize;
  /* 0x001c */ long __PADDING__[1];
} WDBGEXTS_MODULE_IN_RANGE, *PWDBGEXTS_MODULE_IN_RANGE; /* size: 0x0020 */

typedef struct _IMAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned char Name[8];
  union
  {
    union
    {
      /* 0x0008 */ unsigned long PhysicalAddress;
      /* 0x0008 */ unsigned long VirtualSize;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Misc;
  /* 0x000c */ unsigned long VirtualAddress;
  /* 0x0010 */ unsigned long SizeOfRawData;
  /* 0x0014 */ unsigned long PointerToRawData;
  /* 0x0018 */ unsigned long PointerToRelocations;
  /* 0x001c */ unsigned long PointerToLinenumbers;
  /* 0x0020 */ unsigned short NumberOfRelocations;
  /* 0x0022 */ unsigned short NumberOfLinenumbers;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER; /* size: 0x0028 */

struct _TP_ALPC;

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long TransactionState;
  /* 0x0014 */ unsigned long Reserved1;
  /* 0x0018 */ unsigned long Reserved2;
  /* 0x001c */ long Padding_749;
  /* 0x0020 */ __int64 Reserved3;
} TXFS_LIST_TRANSACTIONS_ENTRY, *PTXFS_LIST_TRANSACTIONS_ENTRY; /* size: 0x0028 */

typedef struct _FILE_LINK_ENTRY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_750;
  /* 0x0008 */ __int64 ParentFileId;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_ENTRY_INFORMATION, *PFILE_LINK_ENTRY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_LINKS_INFORMATION
{
  /* 0x0000 */ unsigned long BytesNeeded;
  /* 0x0004 */ unsigned long EntriesReturned;
  /* 0x0008 */ struct _FILE_LINK_ENTRY_INFORMATION Entry;
} FILE_LINKS_INFORMATION, *PFILE_LINKS_INFORMATION; /* size: 0x0020 */

typedef struct _SEP_WORK_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
} SEP_WORK_ITEM, *PSEP_WORK_ITEM; /* size: 0x0020 */

typedef struct _SEP_LSA_QUEUE_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY SepLsaQueue;
  /* 0x0010 */ struct _LIST_ENTRY SepLsaQueueNp;
  /* 0x0020 */ struct _ERESOURCE SepLsaQueueLock;
  /* 0x0088 */ unsigned __int64 SepLsaQueueLockNp;
  /* 0x0090 */ struct _SEP_WORK_ITEM SepExWorkItem;
  /* 0x00b0 */ unsigned long SepLsaCurrentListLength;
  /* 0x00b4 */ unsigned long SepListOrderCounter;
  /* 0x00b8 */ unsigned long SepLastWorkItemDispatched;
  /* 0x00bc */ long Padding_751;
  /* 0x00c0 */ struct _KEVENT* SepAdtLsaDeadEvent;
  /* 0x00c8 */ struct _KEVENT* SepAdtLsaDeadEventNp;
  /* 0x00d0 */ void* DetermineInsertQueue /* function */;
  /* 0x00d8 */ void* CleanupFunction /* function */;
  /* 0x00e0 */ unsigned short Flags;
  /* 0x00e2 */ char __PADDING__[6];
} SEP_LSA_QUEUE_INFO, *PSEP_LSA_QUEUE_INFO; /* size: 0x00e8 */

typedef union _MI_WRITE_COMPLETE_PFN_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long EntireFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long MarkDirty : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long FreePageFileSpace : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long DeletePage : 1; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_WRITE_COMPLETE_PFN_FLAGS, *PMI_WRITE_COMPLETE_PFN_FLAGS; /* size: 0x0004 */

typedef struct _SYSTEM_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long MaxIdlenessAllowed;
  /* 0x0004 */ unsigned long Idleness;
  /* 0x0008 */ unsigned long TimeRemaining;
  /* 0x000c */ unsigned char CoolingMode;
  /* 0x000d */ char __PADDING__[3];
} SYSTEM_POWER_INFORMATION, *PSYSTEM_POWER_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_HEAP_PARAMETERS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_752;
  /* 0x0008 */ unsigned __int64 SegmentReserve;
  /* 0x0010 */ unsigned __int64 SegmentCommit;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0030 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0038 */ unsigned __int64 InitialCommit;
  /* 0x0040 */ unsigned __int64 InitialReserve;
  /* 0x0048 */ void* CommitRoutine /* function */;
  /* 0x0050 */ unsigned __int64 Reserved[2];
} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS; /* size: 0x0060 */

struct tagWNODE_EVENT_REFERENCE
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
  /* 0x0030 */ struct _GUID TargetGuid;
  /* 0x0040 */ unsigned long TargetDataBlockSize;
  union
  {
    /* 0x0044 */ unsigned long TargetInstanceIndex;
    /* 0x0044 */ wchar_t* TargetInstanceName /* zero-length array */;
    /* 0x0044 */ long __PADDING__[1];
  }; /* size: 0x0004 */
}; /* size: 0x0048 */

typedef struct _SEP_GLOBAL_SACL
{
  /* 0x0000 */ struct _SEP_GLOBAL_SACL* Next;
  /* 0x0008 */ struct _UNICODE_STRING ObjectType;
  /* 0x0018 */ struct _ACL* Sacl;
} SEP_GLOBAL_SACL, *PSEP_GLOBAL_SACL; /* size: 0x0020 */

typedef struct _PERFINFO_IMAGELOAD_IN_PAGEFILE_INFO
{
  /* 0x0000 */ void* FileObject;
  /* 0x0008 */ unsigned long DeviceCharacteristics;
  /* 0x000c */ unsigned short FileCharacteristics;
  union
  {
    union
    {
      /* 0x000e */ unsigned short Flags;
      struct /* bitfield */
      {
        /* 0x000e */ unsigned short ActiveDataReference : 1; /* bit position: 0 */
        /* 0x000e */ unsigned short DeviceEjectable : 1; /* bit position: 1 */
        /* 0x000e */ unsigned short WritableHandles : 1; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Flags;
} PERFINFO_IMAGELOAD_IN_PAGEFILE_INFO, *PPERFINFO_IMAGELOAD_IN_PAGEFILE_INFO; /* size: 0x0010 */

struct DELETE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ unsigned long DeleteFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _POLICY_REPLICA_SOURCE_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING ReplicaSource;
  /* 0x0010 */ struct _UNICODE_STRING ReplicaAccountName;
} POLICY_REPLICA_SOURCE_INFO, *PPOLICY_REPLICA_SOURCE_INFO; /* size: 0x0020 */

typedef struct _NEGOTIATE_PACKAGE_PREFIX_WOW
{
  /* 0x0000 */ unsigned long PackageId;
  /* 0x0004 */ unsigned long PackageDataA;
  /* 0x0008 */ unsigned long PackageDataW;
  /* 0x000c */ unsigned long PrefixLen;
  /* 0x0010 */ unsigned char Prefix[32];
} NEGOTIATE_PACKAGE_PREFIX_WOW, *PNEGOTIATE_PACKAGE_PREFIX_WOW; /* size: 0x0030 */

typedef struct _IMAGE_DEBUG_MISC
{
  /* 0x0000 */ unsigned long DataType;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned char Unicode;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC; /* size: 0x0010 */

typedef union _PCI_EXPRESS_LINK_CONTROL_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short ActiveStatePMControl : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned short Rsvd1 : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short ReadCompletionBoundary : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short LinkDisable : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short RetrainLink : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned short CommonClockConfig : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned short ExtendedSynch : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned short EnableClockPowerManagement : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned short Rsvd2 : 7; /* bit position: 9 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_LINK_CONTROL_REGISTER, *PPCI_EXPRESS_LINK_CONTROL_REGISTER; /* size: 0x0002 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING
{
  /* 0x0000 */ void* ResolutionContext;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING; /* size: 0x0008 */

typedef struct _FPO_DATA
{
  /* 0x0000 */ unsigned long ulOffStart;
  /* 0x0004 */ unsigned long cbProcSize;
  /* 0x0008 */ unsigned long cdwLocals;
  /* 0x000c */ unsigned short cdwParams;
  struct /* bitfield */
  {
    /* 0x000e */ unsigned short cbProlog : 8; /* bit position: 0 */
    /* 0x000e */ unsigned short cbRegs : 3; /* bit position: 8 */
    /* 0x000e */ unsigned short fHasSEH : 1; /* bit position: 11 */
    /* 0x000e */ unsigned short fUseBP : 1; /* bit position: 12 */
    /* 0x000e */ unsigned short reserved : 1; /* bit position: 13 */
    /* 0x000e */ unsigned short cbFrame : 2; /* bit position: 14 */
  }; /* bitfield */
} FPO_DATA, *PFPO_DATA; /* size: 0x0010 */

typedef struct _SYSTEM_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_753;
  /* 0x0008 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_BIGPOOL_INFORMATION, *PSYSTEM_BIGPOOL_INFORMATION; /* size: 0x0020 */

typedef struct _WIN32_CALLOUTS_FPNS
{
  /* 0x0000 */ void* ProcessCallout /* function */;
  /* 0x0008 */ void* ThreadCallout /* function */;
  /* 0x0010 */ void* GlobalAtomTableCallout /* function */;
  /* 0x0018 */ void* PowerEventCallout /* function */;
  /* 0x0020 */ void* PowerStateCallout /* function */;
  /* 0x0028 */ void* PowerInfoCallout /* function */;
  /* 0x0030 */ void* JobCallout /* function */;
  /* 0x0038 */ void* BatchFlushRoutine;
  /* 0x0040 */ void* DesktopOpenProcedure /* function */;
  /* 0x0048 */ void* DesktopOkToCloseProcedure /* function */;
  /* 0x0050 */ void* DesktopCloseProcedure /* function */;
  /* 0x0058 */ void* DesktopDeleteProcedure /* function */;
  /* 0x0060 */ void* WindowStationOkToCloseProcedure /* function */;
  /* 0x0068 */ void* WindowStationCloseProcedure /* function */;
  /* 0x0070 */ void* WindowStationDeleteProcedure /* function */;
  /* 0x0078 */ void* WindowStationParseProcedure /* function */;
  /* 0x0080 */ void* WindowStationOpenProcedure /* function */;
  /* 0x0088 */ void* LicensingCallout /* function */;
} WIN32_CALLOUTS_FPNS, *PWIN32_CALLOUTS_FPNS; /* size: 0x0090 */

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
  }; /* bitfield */
} KEY_SET_VIRTUALIZATION_INFORMATION, *PKEY_SET_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_ALLOCATED_RANGE_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} FILE_ALLOCATED_RANGE_BUFFER, *PFILE_ALLOCATED_RANGE_BUFFER; /* size: 0x0010 */

typedef struct _RTL_CRITICAL_SECTION64
{
  /* 0x0000 */ unsigned __int64 DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ unsigned __int64 OwningThread;
  /* 0x0018 */ unsigned __int64 LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION64, *PRTL_CRITICAL_SECTION64; /* size: 0x0028 */

typedef struct _MMBANKED_SECTION
{
  /* 0x0000 */ unsigned __int64 BasePhysicalPage;
  /* 0x0008 */ struct _MMPTE* BasedPte;
  /* 0x0010 */ unsigned long BankSize;
  /* 0x0014 */ unsigned long BankShift;
  /* 0x0018 */ void* BankedRoutine /* function */;
  /* 0x0020 */ void* Context;
  /* 0x0028 */ struct _MMPTE* CurrentMappedPte;
  /* 0x0030 */ struct _MMPTE BankTemplate[1];
} MMBANKED_SECTION, *PMMBANKED_SECTION; /* size: 0x0038 */

typedef union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 ErrorStatus : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ErrorType : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 BusId : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 BusAddress : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 BusData : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 BusCommand : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned __int64 RequesterId : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned __int64 CompleterId : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned __int64 TargetId : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 Reserved : 55; /* bit position: 9 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS, *PWHEA_PCIXBUS_ERROR_SECTION_VALIDBITS; /* size: 0x0008 */

typedef struct _PERFINFO_FILE_PATH_OPERATION
{
  /* 0x0000 */ unsigned __int64 Irp;
  /* 0x0008 */ unsigned __int64 ThreadId;
  /* 0x0010 */ unsigned __int64 FileObject;
  /* 0x0018 */ unsigned __int64 FileKey;
  /* 0x0020 */ unsigned __int64 ExtraInformation;
  /* 0x0028 */ unsigned long InfoClass;
  /* 0x002c */ wchar_t Path[1];
  /* 0x002e */ char __PADDING__[2];
} PERFINFO_FILE_PATH_OPERATION, *PPERFINFO_FILE_PATH_OPERATION; /* size: 0x0030 */

typedef struct _KI_INITIALIZE_DYNAMIC_PROCESSOR_CONTEXT
{
  /* 0x0000 */ struct _KPRCB* Prcb;
  /* 0x0008 */ volatile unsigned char ExitFunction;
  /* 0x0009 */ char __PADDING__[7];
} KI_INITIALIZE_DYNAMIC_PROCESSOR_CONTEXT, *PKI_INITIALIZE_DYNAMIC_PROCESSOR_CONTEXT; /* size: 0x0010 */

typedef struct _CONDITION_OPERAND_VALUE
{
  /* 0x0000 */ unsigned char type;
  /* 0x0001 */ unsigned char isComposite;
  /* 0x0002 */ char Padding_754[2];
  /* 0x0004 */ unsigned long size;
  /* 0x0008 */ unsigned char* value;
} CONDITION_OPERAND_VALUE, *PCONDITION_OPERAND_VALUE; /* size: 0x0010 */

typedef struct _SYSTEM_AUDIT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_ACE, *PSYSTEM_AUDIT_ACE; /* size: 0x000c */

struct RTL_ACE_DATA
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char InheritFlags;
  /* 0x0002 */ unsigned char AceFlags;
  /* 0x0003 */ char Padding_755;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ void** Sid;
}; /* size: 0x0010 */

typedef struct _DISK_CONTROLLER_NUMBER
{
  /* 0x0000 */ unsigned long ControllerNumber;
  /* 0x0004 */ unsigned long DiskNumber;
} DISK_CONTROLLER_NUMBER, *PDISK_CONTROLLER_NUMBER; /* size: 0x0008 */

typedef struct _MM_SESSION_SPACE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Initialized : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long DeletePending : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long PoolInitialized : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long DynamicVaInitialized : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long WsInitialized : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long PoolDestroyed : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long ObjectInitialized : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long Filler : 25; /* bit position: 7 */
  }; /* bitfield */
} MM_SESSION_SPACE_FLAGS, *PMM_SESSION_SPACE_FLAGS; /* size: 0x0004 */

typedef struct _PO_SERVICE_NOTIFICATION
{
  /* 0x0000 */ unsigned long NotifyState;
  /* 0x0004 */ wchar_t ServiceName[1];
  /* 0x0006 */ char __PADDING__[2];
} PO_SERVICE_NOTIFICATION, *PPO_SERVICE_NOTIFICATION; /* size: 0x0008 */

struct tagENTRYINFO
{
  /* 0x0000 */ struct _GUID guidID;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ unsigned long tiData;
  /* 0x0018 */ struct _GUID guidDB;
}; /* size: 0x0028 */

typedef struct _PCI_EXPRESS_AER_CAPABILITY
{
  /* 0x0000 */ struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;
  /* 0x0004 */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS UncorrectableErrorStatus;
  /* 0x0008 */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK UncorrectableErrorMask;
  /* 0x000c */ union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY UncorrectableErrorSeverity;
  /* 0x0010 */ union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS CorrectableErrorStatus;
  /* 0x0014 */ union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK CorrectableErrorMask;
  /* 0x0018 */ union _PCI_EXPRESS_AER_CAPABILITIES CapabilitiesAndControl;
  /* 0x001c */ unsigned long HeaderLog[4];
  /* 0x002c */ union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS SecUncorrectableErrorStatus;
  /* 0x0030 */ union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK SecUncorrectableErrorMask;
  /* 0x0034 */ union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY SecUncorrectableErrorSeverity;
  /* 0x0038 */ union _PCI_EXPRESS_SEC_AER_CAPABILITIES SecCapabilitiesAndControl;
  /* 0x003c */ unsigned long SecHeaderLog[4];
} PCI_EXPRESS_AER_CAPABILITY, *PPCI_EXPRESS_AER_CAPABILITY; /* size: 0x004c */

typedef struct _MEMORY_CACHING_REQUIREMENTS
{
  /* 0x0000 */ unsigned __int64 BasePage;
  /* 0x0008 */ unsigned __int64 PageCount;
  /* 0x0010 */ enum _MEMORY_CACHING_TYPE MemoryCachingType;
  /* 0x0014 */ long __PADDING__[1];
} MEMORY_CACHING_REQUIREMENTS, *PMEMORY_CACHING_REQUIREMENTS; /* size: 0x0018 */

typedef struct _LSARM_POLICY_AUDIT_EVENTS_INFO_EX
{
  /* 0x0000 */ unsigned short EventAuditingOptions[53];
  /* 0x006a */ unsigned short MaximumAuditEventCount;
} LSARM_POLICY_AUDIT_EVENTS_INFO_EX, *PLSARM_POLICY_AUDIT_EVENTS_INFO_EX; /* size: 0x006c */

typedef struct _CM_MONITOR_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short HorizontalScreenSize;
  /* 0x0006 */ unsigned short VerticalScreenSize;
  /* 0x0008 */ unsigned short HorizontalResolution;
  /* 0x000a */ unsigned short VerticalResolution;
  /* 0x000c */ unsigned short HorizontalDisplayTimeLow;
  /* 0x000e */ unsigned short HorizontalDisplayTime;
  /* 0x0010 */ unsigned short HorizontalDisplayTimeHigh;
  /* 0x0012 */ unsigned short HorizontalBackPorchLow;
  /* 0x0014 */ unsigned short HorizontalBackPorch;
  /* 0x0016 */ unsigned short HorizontalBackPorchHigh;
  /* 0x0018 */ unsigned short HorizontalFrontPorchLow;
  /* 0x001a */ unsigned short HorizontalFrontPorch;
  /* 0x001c */ unsigned short HorizontalFrontPorchHigh;
  /* 0x001e */ unsigned short HorizontalSyncLow;
  /* 0x0020 */ unsigned short HorizontalSync;
  /* 0x0022 */ unsigned short HorizontalSyncHigh;
  /* 0x0024 */ unsigned short VerticalBackPorchLow;
  /* 0x0026 */ unsigned short VerticalBackPorch;
  /* 0x0028 */ unsigned short VerticalBackPorchHigh;
  /* 0x002a */ unsigned short VerticalFrontPorchLow;
  /* 0x002c */ unsigned short VerticalFrontPorch;
  /* 0x002e */ unsigned short VerticalFrontPorchHigh;
  /* 0x0030 */ unsigned short VerticalSyncLow;
  /* 0x0032 */ unsigned short VerticalSync;
  /* 0x0034 */ unsigned short VerticalSyncHigh;
} CM_MONITOR_DEVICE_DATA, *PCM_MONITOR_DEVICE_DATA; /* size: 0x0036 */

typedef struct _AMD64_KTRAP_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5;
  /* 0x0028 */ char PreviousMode;
  /* 0x0029 */ unsigned char PreviousIrql;
  /* 0x002a */ unsigned char FaultIndicator;
  /* 0x002b */ unsigned char Fill0;
  /* 0x002c */ unsigned long MxCsr;
  /* 0x0030 */ unsigned __int64 Rax;
  /* 0x0038 */ unsigned __int64 Rcx;
  /* 0x0040 */ unsigned __int64 Rdx;
  /* 0x0048 */ unsigned __int64 R8;
  /* 0x0050 */ unsigned __int64 R9;
  /* 0x0058 */ unsigned __int64 R10;
  /* 0x0060 */ unsigned __int64 R11;
  /* 0x0068 */ unsigned __int64 Spare0;
  /* 0x0070 */ struct _AMD64_M128 Xmm0;
  /* 0x0080 */ struct _AMD64_M128 Xmm1;
  /* 0x0090 */ struct _AMD64_M128 Xmm2;
  /* 0x00a0 */ struct _AMD64_M128 Xmm3;
  /* 0x00b0 */ struct _AMD64_M128 Xmm4;
  /* 0x00c0 */ struct _AMD64_M128 Xmm5;
  /* 0x00d0 */ unsigned __int64 FaultAddress;
  /* 0x00d8 */ unsigned __int64 Dr0;
  /* 0x00e0 */ unsigned __int64 Dr1;
  /* 0x00e8 */ unsigned __int64 Dr2;
  /* 0x00f0 */ unsigned __int64 Dr3;
  /* 0x00f8 */ unsigned __int64 Dr6;
  /* 0x0100 */ unsigned __int64 Dr7;
  /* 0x0108 */ unsigned __int64 DebugControl;
  /* 0x0110 */ unsigned __int64 LastBranchToRip;
  /* 0x0118 */ unsigned __int64 LastBranchFromRip;
  /* 0x0120 */ unsigned __int64 LastExceptionToRip;
  /* 0x0128 */ unsigned __int64 LastExceptionFromRip;
  /* 0x0130 */ unsigned short SegDs;
  /* 0x0132 */ unsigned short SegEs;
  /* 0x0134 */ unsigned short SegFs;
  /* 0x0136 */ unsigned short SegGs;
  /* 0x0138 */ unsigned __int64 TrapFrame;
  /* 0x0140 */ unsigned __int64 Rbx;
  /* 0x0148 */ unsigned __int64 Rdi;
  /* 0x0150 */ unsigned __int64 Rsi;
  /* 0x0158 */ unsigned __int64 Rbp;
  /* 0x0160 */ unsigned __int64 ErrorCode;
  /* 0x0168 */ unsigned __int64 Rip;
  /* 0x0170 */ unsigned short SegCs;
  /* 0x0172 */ unsigned short Fill1[3];
  /* 0x0178 */ unsigned long EFlags;
  /* 0x017c */ unsigned long Fill2;
  /* 0x0180 */ unsigned __int64 Rsp;
  /* 0x0188 */ unsigned short SegSs;
  /* 0x018a */ unsigned short Fill3[3];
} AMD64_KTRAP_FRAME, *PAMD64_KTRAP_FRAME; /* size: 0x0190 */

typedef struct _EVENT_EXTENDED_ITEM_INSTANCE
{
  /* 0x0000 */ unsigned long InstanceId;
  /* 0x0004 */ unsigned long ParentInstanceId;
  /* 0x0008 */ struct _GUID ParentGuid;
} EVENT_EXTENDED_ITEM_INSTANCE, *PEVENT_EXTENDED_ITEM_INSTANCE; /* size: 0x0018 */

struct tagSEARCHPATHPART
{
  /* 0x0000 */ const wchar_t* pszPart;
  /* 0x0008 */ unsigned long cchPart;
  /* 0x000c */ long Padding_756;
  /* 0x0010 */ void* pDirectoryCache;
  /* 0x0018 */ void* pNotExistCache;
  /* 0x0020 */ struct _UNICODE_STRING ustrBuffer;
}; /* size: 0x0030 */

struct tagSEARCHPATH
{
  /* 0x0000 */ unsigned long nParts;
  /* 0x0004 */ long Padding_757;
  /* 0x0008 */ struct tagSEARCHPATHPART parts[1];
}; /* size: 0x0038 */

typedef struct _PROCESS_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_758;
  /* 0x0008 */ struct _PEB* PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ long Padding_759;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION, *PPROCESS_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION BasicInfo;
  union
  {
    /* 0x0038 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned long IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned long IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned long SpareBits : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION, *PPROCESS_EXTENDED_BASIC_INFORMATION; /* size: 0x0040 */

typedef struct _PROFILE_ACPI_DOCKING_STATE
{
  /* 0x0000 */ unsigned short DockingState;
  /* 0x0002 */ unsigned short SerialLength;
  /* 0x0004 */ wchar_t SerialNumber[1];
} PROFILE_ACPI_DOCKING_STATE, *PPROFILE_ACPI_DOCKING_STATE; /* size: 0x0006 */

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemDisk;
} SYSTEM_SYSTEM_DISK_INFORMATION, *PSYSTEM_SYSTEM_DISK_INFORMATION; /* size: 0x0010 */

typedef struct _MOUNTMGR_SET_AUTO_MOUNT
{
  /* 0x0000 */ enum _MOUNTMGR_AUTO_MOUNT_STATE NewState;
} MOUNTMGR_SET_AUTO_MOUNT, *PMOUNTMGR_SET_AUTO_MOUNT; /* size: 0x0004 */

typedef struct _WMI_IMAGELOAD_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 ImageBase64;
  /* 0x0008 */ unsigned __int64 ImageSize64;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long ImageChecksum;
  /* 0x0018 */ unsigned long TimeDateStamp;
  /* 0x001c */ unsigned long Reserved0;
  /* 0x0020 */ unsigned __int64 DefaultBase64;
  /* 0x0028 */ unsigned long Reserved1;
  /* 0x002c */ unsigned long Reserved2;
  /* 0x0030 */ unsigned long Reserved3;
  /* 0x0034 */ unsigned long Reserved4;
  /* 0x0038 */ wchar_t FileName[1];
  /* 0x003a */ char __PADDING__[6];
} WMI_IMAGELOAD_INFORMATION64, *PWMI_IMAGELOAD_INFORMATION64; /* size: 0x0040 */

typedef struct _MI_CACHED_PTE
{
  union
  {
    struct
    {
      /* 0x0000 */ volatile unsigned long GlobalTimeStamp;
      /* 0x0004 */ volatile unsigned long PteIndex;
    }; /* size: 0x0008 */
    /* 0x0000 */ volatile __int64 Long;
  }; /* size: 0x0008 */
} MI_CACHED_PTE, *PMI_CACHED_PTE; /* size: 0x0008 */

typedef struct _PPC_KSWAP_FRAME
{
  /* 0x0000 */ unsigned long BackChain;
  /* 0x0004 */ unsigned long CompilerReserved;
  /* 0x0008 */ unsigned long CalleeOwned1;
  /* 0x000c */ unsigned long CalleeOwned2;
  /* 0x0010 */ unsigned __int64 Parameter0;
  /* 0x0018 */ unsigned __int64 Parameter1;
  /* 0x0020 */ unsigned __int64 Parameter2;
  /* 0x0028 */ unsigned __int64 Parameter3;
  /* 0x0030 */ unsigned __int64 Parameter4;
  /* 0x0038 */ unsigned __int64 Parameter5;
  /* 0x0040 */ unsigned __int64 Parameter6;
  /* 0x0048 */ unsigned __int64 Parameter7;
  /* 0x0050 */ unsigned __int64 Gpr14;
  /* 0x0058 */ unsigned __int64 Gpr15;
  /* 0x0060 */ unsigned __int64 Gpr16;
  /* 0x0068 */ unsigned __int64 Gpr17;
  /* 0x0070 */ unsigned __int64 Gpr18;
  /* 0x0078 */ unsigned __int64 Gpr19;
  /* 0x0080 */ unsigned __int64 Gpr20;
  /* 0x0088 */ unsigned __int64 Gpr21;
  /* 0x0090 */ unsigned __int64 Gpr22;
  /* 0x0098 */ unsigned __int64 Gpr23;
  /* 0x00a0 */ unsigned __int64 Gpr24;
  /* 0x00a8 */ unsigned __int64 Gpr25;
  /* 0x00b0 */ unsigned __int64 Gpr26;
  /* 0x00b8 */ unsigned __int64 Gpr27;
  /* 0x00c0 */ unsigned __int64 Gpr28;
  /* 0x00c8 */ unsigned __int64 Gpr29;
  /* 0x00d0 */ unsigned __int64 Gpr30;
  /* 0x00d8 */ unsigned __int64 Gpr31;
  /* 0x00e0 */ unsigned long Cr;
  /* 0x00e4 */ unsigned long Lr;
  /* 0x00e8 */ unsigned long CallersLr;
  /* 0x00ec */ unsigned long Fill[1];
} PPC_KSWAP_FRAME, *PPPC_KSWAP_FRAME; /* size: 0x00f0 */

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY
{
  /* 0x0000 */ unsigned long Selector;
  /* 0x0004 */ struct _WOW64_LDT_ENTRY Descriptor;
} WOW64_DESCRIPTOR_TABLE_ENTRY, *PWOW64_DESCRIPTOR_TABLE_ENTRY; /* size: 0x000c */

typedef struct _ACPI_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_760;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* GpeConnectVector /* function */;
  /* 0x0028 */ void* GpeDisconnectVector /* function */;
  /* 0x0030 */ void* GpeEnableEvent /* function */;
  /* 0x0038 */ void* GpeDisableEvent /* function */;
  /* 0x0040 */ void* GpeClearStatus /* function */;
  /* 0x0048 */ void* RegisterForDeviceNotifications /* function */;
  /* 0x0050 */ void* UnregisterForDeviceNotifications /* function */;
} ACPI_INTERFACE_STANDARD, *PACPI_INTERFACE_STANDARD; /* size: 0x0058 */

typedef struct _CPUCONTEXT_IA6432_HARDWARE
{
  /* 0x0000 */ unsigned __int64 Gdt[24];
  /* 0x00c0 */ unsigned __int64 GdtDescriptor;
  /* 0x00c8 */ unsigned __int64 LdtDescriptor;
  /* 0x00d0 */ unsigned __int64 FsDescriptor;
} CPUCONTEXT_IA6432_HARDWARE, *PCPUCONTEXT_IA6432_HARDWARE; /* size: 0x00d8 */

typedef struct _CPUCONTEXT_IA6432_SOFTWARE
{
  /* 0x0000 */ unsigned long FsBase;
  /* 0x0004 */ unsigned long GsBase;
  /* 0x0008 */ unsigned long EsBase;
  /* 0x000c */ unsigned long GdtBase;
  /* 0x0010 */ unsigned long IdtBase;
  /* 0x0014 */ short GdtLimit;
  /* 0x0016 */ short IdtLimit;
  /* 0x0018 */ short LdtSelector;
  /* 0x001a */ short Reserved;
  /* 0x001c */ void* PrivateData;
} CPUCONTEXT_IA6432_SOFTWARE, *PCPUCONTEXT_IA6432_SOFTWARE; /* size: 0x0024 */

typedef struct _CpuContext_ia6432
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ struct _WOW64_CONTEXT Context;
  union
  {
    /* 0x02d0 */ struct _CPUCONTEXT_IA6432_HARDWARE Hw;
    struct
    {
      /* 0x02d0 */ struct _CPUCONTEXT_IA6432_SOFTWARE Sw;
      /* 0x02f4 */ long __PADDING__[45];
    }; /* size: 0x00d8 */
  }; /* size: 0x00d8 */
} CpuContext_ia6432, *PCpuContext_ia6432; /* size: 0x03a8 */

typedef struct _WMIP_TRACE_DEVICE
{
  /* 0x0000 */ struct _REGENTRY* RegEntry;
  /* 0x0008 */ unsigned long TraceClass;
  /* 0x000c */ long __PADDING__[1];
} WMIP_TRACE_DEVICE, *PWMIP_TRACE_DEVICE; /* size: 0x0010 */

typedef struct _WMI_TCPIP
{
  /* 0x0000 */ unsigned long Context;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long DestAddr;
  /* 0x000c */ unsigned long SrcAddr;
  /* 0x0010 */ unsigned short DestPort;
  /* 0x0012 */ unsigned short SrcPort;
} WMI_TCPIP, *PWMI_TCPIP; /* size: 0x0014 */

typedef struct _ALPC_PORT_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackObject;
  /* 0x0008 */ void* Context;
} ALPC_PORT_CALLBACK_INFORMATION, *PALPC_PORT_CALLBACK_INFORMATION; /* size: 0x0010 */

typedef struct _IOP_CANCEL_APC_CONTEXT
{
  /* 0x0000 */ struct _KAPC Apc;
  /* 0x0058 */ struct _FILE_OBJECT* FileObject;
  /* 0x0060 */ struct _IO_STATUS_BLOCK* IoRequestToCancel;
  /* 0x0068 */ struct _KEVENT Event;
  /* 0x0080 */ unsigned char SynchronousOnly;
  /* 0x0081 */ char Padding_761[3];
  /* 0x0084 */ unsigned long CancelledRequest;
} IOP_CANCEL_APC_CONTEXT, *PIOP_CANCEL_APC_CONTEXT; /* size: 0x0088 */

typedef struct _MI_SYSTEM_PTE_TYPE_EX
{
  /* 0x0000 */ struct _RTL_BITMAP Bitmap;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Hint;
  /* 0x0018 */ struct _MMPTE* BasePte;
  /* 0x0020 */ unsigned long* FailureCount;
  /* 0x0028 */ struct _MMSUPPORT* Vm;
  /* 0x0030 */ volatile long TotalSystemPtes;
  /* 0x0034 */ volatile long TotalFreeSystemPtes;
  /* 0x0038 */ volatile long CachedPteCount;
  /* 0x003c */ unsigned long PteFailures;
  union
  {
    /* 0x0040 */ unsigned __int64 SpinLock;
    /* 0x0040 */ struct _KGUARDED_MUTEX* GlobalMutex;
  }; /* size: 0x0008 */
  /* 0x0048 */ struct _MI_CACHED_PTE CachedPtes[256];
} MI_SYSTEM_PTE_TYPE_EX, *PMI_SYSTEM_PTE_TYPE_EX; /* size: 0x0848 */

struct CM_RESTART_AREA
{
  /* 0x0000 */ union _CLS_LSN RestartLsn;
}; /* size: 0x0008 */

typedef struct _MMIOHEADER_DATA
{
  /* 0x0000 */ unsigned __int64 MappedPages;
  /* 0x0008 */ unsigned __int64 MappedPagesPeak;
  /* 0x0010 */ unsigned long NumberOfEntries;
  /* 0x0014 */ unsigned long NumberOfEntriesPeak;
  /* 0x0018 */ unsigned long MapCalls;
  /* 0x001c */ unsigned long UnmapCalls;
  /* 0x0020 */ unsigned long MdlCalls;
  /* 0x0024 */ unsigned long UnmapMdlCalls;
  /* 0x0028 */ unsigned long MapContiguousCalls;
  /* 0x002c */ unsigned long UnmapContiguousCalls;
  /* 0x0030 */ unsigned long MdlConvertedCalls;
  /* 0x0034 */ unsigned long LargePageConflicts;
  /* 0x0038 */ unsigned long ConflictOverrides;
  /* 0x003c */ unsigned long UnmapNothing;
  /* 0x0040 */ unsigned long FullOverlap;
  /* 0x0044 */ unsigned long CacheFlushAvoided;
  /* 0x0048 */ unsigned long CacheFlushIssued;
  /* 0x004c */ unsigned long CacheFlushConflicts;
  /* 0x0050 */ unsigned long CacheFlushOverflow;
  /* 0x0054 */ unsigned long UnusedEntries;
  /* 0x0058 */ unsigned long CacheFlushEntryCurrent;
  /* 0x005c */ unsigned long CacheFlushEntryOld;
  /* 0x0060 */ unsigned __int64 UnusedPages;
} MMIOHEADER_DATA, *PMMIOHEADER_DATA; /* size: 0x0068 */

typedef union _DISK_SIGNATURE_NEW
{
  union
  {
    /* 0x0000 */ struct _GUID Guid;
    /* 0x0000 */ unsigned long Signature;
  }; /* size: 0x0010 */
} DISK_SIGNATURE_NEW, *PDISK_SIGNATURE_NEW; /* size: 0x0010 */

typedef struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned char* NewCursorValue;
  /* 0x0008 */ long FailureReason;
  /* 0x000c */ long __PADDING__[1];
} RTL_UCSCHAR_ENCODER_RETURN_VALUE, *PRTL_UCSCHAR_ENCODER_RETURN_VALUE; /* size: 0x0010 */

typedef struct _SESSION_GLOBAL_SUBSECTION_INFO
{
  /* 0x0000 */ unsigned __int64 PteIndex;
  /* 0x0008 */ unsigned long PteCount;
  /* 0x000c */ unsigned long Protection;
} SESSION_GLOBAL_SUBSECTION_INFO, *PSESSION_GLOBAL_SUBSECTION_INFO; /* size: 0x0010 */

typedef struct _SHUTDOWN_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DEVICE_OBJECT* DeviceObject;
} SHUTDOWN_PACKET, *PSHUTDOWN_PACKET; /* size: 0x0018 */

typedef struct _DISK_INT13_INFO
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ char Padding_762[2];
  /* 0x0004 */ unsigned long MaxCylinders;
  /* 0x0008 */ unsigned short SectorsPerTrack;
  /* 0x000a */ unsigned short MaxHeads;
  /* 0x000c */ unsigned short NumberDrives;
  /* 0x000e */ char __PADDING__[2];
} DISK_INT13_INFO, *PDISK_INT13_INFO; /* size: 0x0010 */

typedef struct _CM_SYSTEM_CONTROL_VECTOR
{
  /* 0x0000 */ unsigned short* KeyPath;
  /* 0x0008 */ unsigned short* ValueName;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long* BufferLength;
  /* 0x0020 */ unsigned long* Type;
} CM_SYSTEM_CONTROL_VECTOR, *PCM_SYSTEM_CONTROL_VECTOR; /* size: 0x0028 */

typedef struct _MI_EXTRA_IMAGE_INFORMATION
{
  /* 0x0000 */ unsigned long SizeOfHeaders;
  /* 0x0004 */ unsigned long SizeOfImage;
} MI_EXTRA_IMAGE_INFORMATION, *PMI_EXTRA_IMAGE_INFORMATION; /* size: 0x0008 */

typedef struct _MI_SECTION_IMAGE_INFORMATION
{
  /* 0x0000 */ struct _SECTION_IMAGE_INFORMATION ExportedImageInformation;
  /* 0x0040 */ struct _MI_EXTRA_IMAGE_INFORMATION InternalImageInformation;
} MI_SECTION_IMAGE_INFORMATION, *PMI_SECTION_IMAGE_INFORMATION; /* size: 0x0048 */

typedef struct _ACCESS_METHOD_ADDRESS
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ unsigned short IndexAddr;
        /* 0x0002 */ unsigned short DataAddr;
      } /* size: 0x0004 */ IndexIo;
      /* 0x0000 */ unsigned long PhysicalAddress32;
      /* 0x0000 */ unsigned short GPNVHandle;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ AccessMethodAddress;
} ACCESS_METHOD_ADDRESS, *PACCESS_METHOD_ADDRESS; /* size: 0x0004 */

typedef struct _SMBIOS_SYSTEM_EVENTLOG_STRUCT
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Length;
  /* 0x0002 */ unsigned short Handle;
  /* 0x0004 */ unsigned short LogAreaLength;
  /* 0x0006 */ unsigned short LogHeaderStartOffset;
  /* 0x0008 */ unsigned short LogDataStartOffset;
  /* 0x000a */ unsigned char AccessMethod;
  /* 0x000b */ unsigned char LogStatus;
  /* 0x000c */ unsigned long LogChangeToken;
  /* 0x0010 */ struct _ACCESS_METHOD_ADDRESS AccessMethodAddress;
  /* 0x0014 */ unsigned char LogHeaderFormat;
  /* 0x0015 */ unsigned char NumLogTypeDescriptors;
  /* 0x0016 */ unsigned char LenLogTypeDescriptors;
  /* 0x0017 */ struct _LOGTYPEDESCRIPTOR LogTypeDescriptor[1];
} SMBIOS_SYSTEM_EVENTLOG_STRUCT, *PSMBIOS_SYSTEM_EVENTLOG_STRUCT; /* size: 0x0019 */

typedef struct _DISK_EX_INT13_INFO
{
  /* 0x0000 */ unsigned short ExBufferSize;
  /* 0x0002 */ unsigned short ExFlags;
  /* 0x0004 */ unsigned long ExCylinders;
  /* 0x0008 */ unsigned long ExHeads;
  /* 0x000c */ unsigned long ExSectorsPerTrack;
  /* 0x0010 */ unsigned __int64 ExSectorsPerDrive;
  /* 0x0018 */ unsigned short ExSectorSize;
  /* 0x001a */ unsigned short ExReserved;
  /* 0x001c */ long __PADDING__[1];
} DISK_EX_INT13_INFO, *PDISK_EX_INT13_INFO; /* size: 0x0020 */

typedef struct _DISK_DETECTION_INFO
{
  /* 0x0000 */ unsigned long SizeOfDetectInfo;
  /* 0x0004 */ enum _DETECTION_TYPE DetectionType;
  /* 0x0008 */ struct _DISK_INT13_INFO Int13;
  /* 0x0018 */ struct _DISK_EX_INT13_INFO ExInt13;
} DISK_DETECTION_INFO, *PDISK_DETECTION_INFO; /* size: 0x0038 */

typedef struct _SYSTEM_POWER_STATE_DISABLE_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _SYSTEM_POWER_STATE_DISABLE_REASON* Reason;
} SYSTEM_POWER_STATE_DISABLE_LIST, *PSYSTEM_POWER_STATE_DISABLE_LIST; /* size: 0x0018 */

typedef struct _RELATIVE_SYMLINK_INFO
{
  /* 0x0000 */ unsigned short ExposedNamespaceLength;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short DeviceNameLength;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ struct _RELATIVE_SYMLINK_INFO* InteriorMountPoint;
  /* 0x0010 */ struct _UNICODE_STRING OpenedName;
} RELATIVE_SYMLINK_INFO, *PRELATIVE_SYMLINK_INFO; /* size: 0x0020 */

typedef struct _FULL_DUMP64
{
  /* 0x0000 */ char Memory[1];
} FULL_DUMP64, *PFULL_DUMP64; /* size: 0x0001 */

typedef struct _REAL_NOTIFY_SYNC
{
  /* 0x0000 */ struct _FAST_MUTEX FastMutex;
  /* 0x0038 */ unsigned __int64 OwningThread;
  /* 0x0040 */ unsigned long OwnerCount;
  /* 0x0044 */ long __PADDING__[1];
} REAL_NOTIFY_SYNC, *PREAL_NOTIFY_SYNC; /* size: 0x0048 */

typedef struct _PLEX_READ_DATA_REQUEST
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ unsigned long ByteLength;
  /* 0x000c */ unsigned long PlexNumber;
} PLEX_READ_DATA_REQUEST, *PPLEX_READ_DATA_REQUEST; /* size: 0x0010 */

typedef struct _SYSTEM_CALL_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long NumberOfTables;
} SYSTEM_CALL_COUNT_INFORMATION, *PSYSTEM_CALL_COUNT_INFORMATION; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION
{
  /* 0x0000 */ struct _GUID OldestTransactionGuid;
} TRANSACTIONMANAGER_OLDEST_INFORMATION, *PTRANSACTIONMANAGER_OLDEST_INFORMATION; /* size: 0x0010 */

typedef struct _GET_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Length;
} GET_LENGTH_INFORMATION, *PGET_LENGTH_INFORMATION; /* size: 0x0008 */

typedef struct _PS_CREATE_INFO
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum PS_CREATE_STATE State;
  /* 0x000c */ long Padding_763;
  union
  {
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long InitFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char WriteOutputOnExit : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char DetectManifest : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char SpareBits1 : 6; /* bit position: 2 */
          }; /* bitfield */
          struct /* bitfield */
          {
            /* 0x0011 */ unsigned char IFEOKeyState : 2; /* bit position: 0 */
            /* 0x0011 */ unsigned char SpareBits2 : 6; /* bit position: 2 */
          }; /* bitfield */
          /* 0x0012 */ unsigned short ProhibitedImageCharacteristics : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0014 */ unsigned long AdditionalFileAccess;
    } /* size: 0x0008 */ InitState;
    struct
    {
      /* 0x0010 */ void* FileHandle;
    } /* size: 0x0008 */ FailSection;
    struct
    {
      /* 0x0010 */ void* IFEOKey;
    } /* size: 0x0008 */ ExeName;
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long OutputFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char ProtectedProcess : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char AddressSpaceOverride : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char DevOverrideEnabled : 1; /* bit position: 2 */
            /* 0x0010 */ unsigned char ManifestDetected : 1; /* bit position: 3 */
            /* 0x0010 */ unsigned char SpareBits1 : 4; /* bit position: 4 */
          }; /* bitfield */
          /* 0x0011 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x0012 */ unsigned short SpareBits3 : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0004 */ long Padding_764;
      /* 0x0018 */ void* FileHandle;
      /* 0x0020 */ void* SectionHandle;
      /* 0x0028 */ unsigned __int64 UserProcessParametersNative;
      /* 0x0030 */ unsigned long UserProcessParametersWow64;
      /* 0x0034 */ unsigned long CurrentParameterFlags;
      /* 0x0038 */ unsigned __int64 PebAddressNative;
      /* 0x0040 */ unsigned long PebAddressWow64;
      /* 0x0034 */ long Padding_765;
      /* 0x0048 */ unsigned __int64 ManifestAddress;
      /* 0x0050 */ unsigned long ManifestSize;
      /* 0x0054 */ long __PADDING__[1];
    } /* size: 0x0048 */ SuccessState;
  }; /* size: 0x0048 */
} PS_CREATE_INFO, *PPS_CREATE_INFO; /* size: 0x0058 */

typedef struct _PCI_TYPE2_ADDRESS_BITS
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned short RegisterNumber : 8; /* bit position: 0 */
          /* 0x0000 */ unsigned short Agent : 4; /* bit position: 8 */
          /* 0x0000 */ unsigned short AddressBase : 4; /* bit position: 12 */
        }; /* bitfield */
      } /* size: 0x0002 */ bits;
      /* 0x0000 */ unsigned short AsUSHORT;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ u;
} PCI_TYPE2_ADDRESS_BITS, *PPCI_TYPE2_ADDRESS_BITS; /* size: 0x0002 */

typedef struct _KSTART_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Reserved;
  /* 0x0028 */ unsigned __int64 Return;
} KSTART_FRAME, *PKSTART_FRAME; /* size: 0x0030 */

typedef struct _FILE_TRACKING_INFORMATION
{
  /* 0x0000 */ void* DestinationFile;
  /* 0x0008 */ unsigned long ObjectInformationLength;
  /* 0x000c */ char ObjectInformation[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_TRACKING_INFORMATION, *PFILE_TRACKING_INFORMATION; /* size: 0x0010 */

typedef struct _KEY_CONTROL_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
} KEY_CONTROL_FLAGS_INFORMATION, *PKEY_CONTROL_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _CI_LOG_MMCSS_START
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
} CI_LOG_MMCSS_START, *PCI_LOG_MMCSS_START; /* size: 0x0030 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_V1
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ unsigned short ValueType;
  /* 0x0012 */ unsigned short Reserved;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long ValueCount;
  /* 0x001c */ long Padding_766;
  union
  {
    union
    {
      /* 0x0020 */ __int64* pInt64;
      /* 0x0020 */ unsigned __int64* pUint64;
      /* 0x0020 */ struct _UNICODE_STRING* pString;
      /* 0x0020 */ struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE* pFqbn;
      /* 0x0020 */ struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE* pOctetString;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Values;
} TOKEN_SECURITY_ATTRIBUTE_V1, *PTOKEN_SECURITY_ATTRIBUTE_V1; /* size: 0x0028 */

typedef struct _MMCLONE_BLOCK
{
  /* 0x0000 */ struct _MMPTE ProtoPte;
  /* 0x0008 */ volatile long CloneRefCount;
  /* 0x000c */ long __PADDING__[1];
} MMCLONE_BLOCK, *PMMCLONE_BLOCK; /* size: 0x0010 */

struct PCI_HT_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0002 */ unsigned short Reserved : 11; /* bit position: 0 */
          /* 0x0002 */ unsigned short CapabilityType : 5; /* bit position: 11 */
        }; /* bitfield */
      } /* size: 0x0002 */ Generic;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0002 */ unsigned short Index : 8; /* bit position: 0 */
          /* 0x0002 */ unsigned short Reserved : 3; /* bit position: 8 */
          /* 0x0002 */ unsigned short CapabilityType : 5; /* bit position: 11 */
        }; /* bitfield */
      } /* size: 0x0002 */ Interrupt;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0002 */ unsigned short Enable : 1; /* bit position: 0 */
          /* 0x0002 */ unsigned short Fixed : 1; /* bit position: 1 */
          /* 0x0002 */ unsigned short Reserved : 9; /* bit position: 2 */
          /* 0x0002 */ unsigned short CapabilityType : 5; /* bit position: 11 */
        }; /* bitfield */
      } /* size: 0x0002 */ MsiMapping;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Command;
  union
  {
    union
    {
      /* 0x0004 */ unsigned long InterruptDataPort;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long Reserved : 20; /* bit position: 0 */
          /* 0x0004 */ unsigned long AddressLow : 12; /* bit position: 20 */
        }; /* bitfield */
      } /* size: 0x0004 */ MsiMapping;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Offset04;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long AddressUpper;
    } /* size: 0x0004 */ MsiMapping;
  } /* size: 0x0004 */ Offset08;
}; /* size: 0x000c */

typedef struct _KSERVICE_TABLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64* Base;
  /* 0x0008 */ unsigned long* Count;
  /* 0x0010 */ unsigned long Limit;
  /* 0x0014 */ long Reserved;
  /* 0x0018 */ unsigned char* Number;
} KSERVICE_TABLE_DESCRIPTOR, *PKSERVICE_TABLE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_767;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0028 */ struct _STRING* Prefix;
} PREFIX_TABLE_ENTRY, *PPREFIX_TABLE_ENTRY; /* size: 0x0030 */

typedef struct _PCI_TYPE2_CSE_BITS
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned char Enable : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned char FunctionNumber : 3; /* bit position: 1 */
          /* 0x0000 */ unsigned char Key : 4; /* bit position: 4 */
        }; /* bitfield */
      } /* size: 0x0001 */ bits;
      /* 0x0000 */ unsigned char AsUCHAR;
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ u;
} PCI_TYPE2_CSE_BITS, *PPCI_TYPE2_CSE_BITS; /* size: 0x0001 */

typedef struct _LSARM_POLICY_AUDIT_EVENTS_INFO
{
  /* 0x0000 */ unsigned char AuditingMode;
  /* 0x0001 */ char Padding_768[3];
  /* 0x0004 */ unsigned long EventAuditingOptions[9];
  /* 0x0028 */ unsigned long MaximumAuditEventCount;
} LSARM_POLICY_AUDIT_EVENTS_INFO, *PLSARM_POLICY_AUDIT_EVENTS_INFO; /* size: 0x002c */

typedef struct _KAPC_STATE32
{
  /* 0x0000 */ struct LIST_ENTRY32 ApcListHead[2];
  /* 0x0010 */ unsigned long Process;
  /* 0x0014 */ unsigned char KernelApcInProgress;
  /* 0x0015 */ unsigned char KernelApcPending;
  /* 0x0016 */ unsigned char UserApcPending;
  /* 0x0017 */ char __PADDING__[1];
} KAPC_STATE32, *PKAPC_STATE32; /* size: 0x0018 */

struct EVENT_INSTANCE_INFO
{
  /* 0x0000 */ void* RegHandle;
  /* 0x0008 */ unsigned long InstanceId;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _AEL_CACHE_EXE_MESSAGE
{
  /* 0x0000 */ unsigned short ExecutableType;
  /* 0x0002 */ unsigned short Padding1;
  /* 0x0004 */ unsigned short EnvironmentOffset;
  /* 0x0006 */ unsigned short EnvironmentSize;
  /* 0x0008 */ unsigned long Reason;
  /* 0x000c */ unsigned long Padding2;
} AEL_CACHE_EXE_MESSAGE, *PAEL_CACHE_EXE_MESSAGE; /* size: 0x0010 */

typedef struct _AEL_QUERY_STATE_MESSAGE
{
  /* 0x0000 */ unsigned long ItemsInQueue;
  /* 0x0004 */ unsigned long ItemsProcessed;
  /* 0x0008 */ unsigned long CacheExeMessages;
  /* 0x000c */ unsigned long QueryStateMessages;
  /* 0x0010 */ unsigned long StopListeningMessages;
  /* 0x0014 */ unsigned long MessageBundleCopiesAllocated;
  /* 0x0018 */ unsigned long MessageBundleCopiesFreed;
  /* 0x001c */ long Padding_769;
  /* 0x0020 */ unsigned __int64 PrivateHeapBytesAllocated;
  /* 0x0028 */ unsigned __int64 PrivateHeapBytesFreed;
} AEL_QUERY_STATE_MESSAGE, *PAEL_QUERY_STATE_MESSAGE; /* size: 0x0030 */

typedef struct _BOOT_DRIVER_LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _UNICODE_STRING FilePath;
  /* 0x0020 */ struct _UNICODE_STRING RegistryPath;
  /* 0x0030 */ struct _KLDR_DATA_TABLE_ENTRY* LdrEntry;
  /* 0x0038 */ long LoadStatus;
  /* 0x003c */ unsigned long LoadInformation;
} BOOT_DRIVER_LIST_ENTRY, *PBOOT_DRIVER_LIST_ENTRY; /* size: 0x0040 */

typedef struct _CLFS_STREAM_ID_INFORMATION
{
  /* 0x0000 */ unsigned char StreamIdentifier;
} CLFS_STREAM_ID_INFORMATION, *PCLFS_STREAM_ID_INFORMATION; /* size: 0x0001 */

typedef struct _PO_SESSION_DISPLAY_STATE
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long DisplayState;
  /* 0x0008 */ unsigned char IsConsole;
  /* 0x0009 */ char __PADDING__[3];
} PO_SESSION_DISPLAY_STATE, *PPO_SESSION_DISPLAY_STATE; /* size: 0x000c */

typedef struct _KSWITCH_FRAME
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned char ApcBypass;
  /* 0x0029 */ unsigned char Fill1[7];
  /* 0x0030 */ unsigned __int64 Rbp;
  /* 0x0038 */ unsigned __int64 Return;
} KSWITCH_FRAME, *PKSWITCH_FRAME; /* size: 0x0040 */

typedef struct _RTL_HEAP_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned short EntryOverhead;
  /* 0x000e */ unsigned short CreatorBackTraceIndex;
  /* 0x0010 */ unsigned __int64 BytesAllocated;
  /* 0x0018 */ unsigned __int64 BytesCommitted;
  /* 0x0020 */ unsigned long NumberOfTags;
  /* 0x0024 */ unsigned long NumberOfEntries;
  /* 0x0028 */ unsigned long NumberOfPseudoTags;
  /* 0x002c */ unsigned long PseudoTagGranularity;
  /* 0x0030 */ unsigned long Reserved[5];
  /* 0x0044 */ long Padding_770;
  /* 0x0048 */ struct _RTL_HEAP_TAG* Tags;
  /* 0x0050 */ struct _RTL_HEAP_ENTRY* Entries;
} RTL_HEAP_INFORMATION, *PRTL_HEAP_INFORMATION; /* size: 0x0058 */

typedef struct _KDDEBUGGER_DATA64
{
  /* 0x0000 */ struct _DBGKD_DEBUG_DATA_HEADER64 Header;
  /* 0x0018 */ unsigned __int64 KernBase;
  /* 0x0020 */ unsigned __int64 BreakpointWithStatus;
  /* 0x0028 */ unsigned __int64 SavedContext;
  /* 0x0030 */ unsigned short ThCallbackStack;
  /* 0x0032 */ unsigned short NextCallback;
  /* 0x0034 */ unsigned short FramePointer;
  /* 0x0036 */ unsigned short PaeEnabled : 1; /* bit position: 0 */
  /* 0x0038 */ unsigned __int64 KiCallUserMode;
  /* 0x0040 */ unsigned __int64 KeUserCallbackDispatcher;
  /* 0x0048 */ unsigned __int64 PsLoadedModuleList;
  /* 0x0050 */ unsigned __int64 PsActiveProcessHead;
  /* 0x0058 */ unsigned __int64 PspCidTable;
  /* 0x0060 */ unsigned __int64 ExpSystemResourcesList;
  /* 0x0068 */ unsigned __int64 ExpPagedPoolDescriptor;
  /* 0x0070 */ unsigned __int64 ExpNumberOfPagedPools;
  /* 0x0078 */ unsigned __int64 KeTimeIncrement;
  /* 0x0080 */ unsigned __int64 KeBugCheckCallbackListHead;
  /* 0x0088 */ unsigned __int64 KiBugcheckData;
  /* 0x0090 */ unsigned __int64 IopErrorLogListHead;
  /* 0x0098 */ unsigned __int64 ObpRootDirectoryObject;
  /* 0x00a0 */ unsigned __int64 ObpTypeObjectType;
  /* 0x00a8 */ unsigned __int64 MmSystemCacheStart;
  /* 0x00b0 */ unsigned __int64 MmSystemCacheEnd;
  /* 0x00b8 */ unsigned __int64 MmSystemCacheWs;
  /* 0x00c0 */ unsigned __int64 MmPfnDatabase;
  /* 0x00c8 */ unsigned __int64 MmSystemPtesStart;
  /* 0x00d0 */ unsigned __int64 MmSystemPtesEnd;
  /* 0x00d8 */ unsigned __int64 MmSubsectionBase;
  /* 0x00e0 */ unsigned __int64 MmNumberOfPagingFiles;
  /* 0x00e8 */ unsigned __int64 MmLowestPhysicalPage;
  /* 0x00f0 */ unsigned __int64 MmHighestPhysicalPage;
  /* 0x00f8 */ unsigned __int64 MmNumberOfPhysicalPages;
  /* 0x0100 */ unsigned __int64 MmMaximumNonPagedPoolInBytes;
  /* 0x0108 */ unsigned __int64 MmNonPagedSystemStart;
  /* 0x0110 */ unsigned __int64 MmNonPagedPoolStart;
  /* 0x0118 */ unsigned __int64 MmNonPagedPoolEnd;
  /* 0x0120 */ unsigned __int64 MmPagedPoolStart;
  /* 0x0128 */ unsigned __int64 MmPagedPoolEnd;
  /* 0x0130 */ unsigned __int64 MmPagedPoolInformation;
  /* 0x0138 */ unsigned __int64 MmPageSize;
  /* 0x0140 */ unsigned __int64 MmSizeOfPagedPoolInBytes;
  /* 0x0148 */ unsigned __int64 MmTotalCommitLimit;
  /* 0x0150 */ unsigned __int64 MmTotalCommittedPages;
  /* 0x0158 */ unsigned __int64 MmSharedCommit;
  /* 0x0160 */ unsigned __int64 MmDriverCommit;
  /* 0x0168 */ unsigned __int64 MmProcessCommit;
  /* 0x0170 */ unsigned __int64 MmPagedPoolCommit;
  /* 0x0178 */ unsigned __int64 MmExtendedCommit;
  /* 0x0180 */ unsigned __int64 MmZeroedPageListHead;
  /* 0x0188 */ unsigned __int64 MmFreePageListHead;
  /* 0x0190 */ unsigned __int64 MmStandbyPageListHead;
  /* 0x0198 */ unsigned __int64 MmModifiedPageListHead;
  /* 0x01a0 */ unsigned __int64 MmModifiedNoWritePageListHead;
  /* 0x01a8 */ unsigned __int64 MmAvailablePages;
  /* 0x01b0 */ unsigned __int64 MmResidentAvailablePages;
  /* 0x01b8 */ unsigned __int64 PoolTrackTable;
  /* 0x01c0 */ unsigned __int64 NonPagedPoolDescriptor;
  /* 0x01c8 */ unsigned __int64 MmHighestUserAddress;
  /* 0x01d0 */ unsigned __int64 MmSystemRangeStart;
  /* 0x01d8 */ unsigned __int64 MmUserProbeAddress;
  /* 0x01e0 */ unsigned __int64 KdPrintCircularBuffer;
  /* 0x01e8 */ unsigned __int64 KdPrintCircularBufferEnd;
  /* 0x01f0 */ unsigned __int64 KdPrintWritePointer;
  /* 0x01f8 */ unsigned __int64 KdPrintRolloverCount;
  /* 0x0200 */ unsigned __int64 MmLoadedUserImageList;
  /* 0x0208 */ unsigned __int64 NtBuildLab;
  /* 0x0210 */ unsigned __int64 KiNormalSystemCall;
  /* 0x0218 */ unsigned __int64 KiProcessorBlock;
  /* 0x0220 */ unsigned __int64 MmUnloadedDrivers;
  /* 0x0228 */ unsigned __int64 MmLastUnloadedDriver;
  /* 0x0230 */ unsigned __int64 MmTriageActionTaken;
  /* 0x0238 */ unsigned __int64 MmSpecialPoolTag;
  /* 0x0240 */ unsigned __int64 KernelVerifier;
  /* 0x0248 */ unsigned __int64 MmVerifierData;
  /* 0x0250 */ unsigned __int64 MmAllocatedNonPagedPool;
  /* 0x0258 */ unsigned __int64 MmPeakCommitment;
  /* 0x0260 */ unsigned __int64 MmTotalCommitLimitMaximum;
  /* 0x0268 */ unsigned __int64 CmNtCSDVersion;
  /* 0x0270 */ unsigned __int64 MmPhysicalMemoryBlock;
  /* 0x0278 */ unsigned __int64 MmSessionBase;
  /* 0x0280 */ unsigned __int64 MmSessionSize;
  /* 0x0288 */ unsigned __int64 MmSystemParentTablePage;
  /* 0x0290 */ unsigned __int64 MmVirtualTranslationBase;
  /* 0x0298 */ unsigned short OffsetKThreadNextProcessor;
  /* 0x029a */ unsigned short OffsetKThreadTeb;
  /* 0x029c */ unsigned short OffsetKThreadKernelStack;
  /* 0x029e */ unsigned short OffsetKThreadInitialStack;
  /* 0x02a0 */ unsigned short OffsetKThreadApcProcess;
  /* 0x02a2 */ unsigned short OffsetKThreadState;
  /* 0x02a4 */ unsigned short OffsetKThreadBStore;
  /* 0x02a6 */ unsigned short OffsetKThreadBStoreLimit;
  /* 0x02a8 */ unsigned short SizeEProcess;
  /* 0x02aa */ unsigned short OffsetEprocessPeb;
  /* 0x02ac */ unsigned short OffsetEprocessParentCID;
  /* 0x02ae */ unsigned short OffsetEprocessDirectoryTableBase;
  /* 0x02b0 */ unsigned short SizePrcb;
  /* 0x02b2 */ unsigned short OffsetPrcbDpcRoutine;
  /* 0x02b4 */ unsigned short OffsetPrcbCurrentThread;
  /* 0x02b6 */ unsigned short OffsetPrcbMhz;
  /* 0x02b8 */ unsigned short OffsetPrcbCpuType;
  /* 0x02ba */ unsigned short OffsetPrcbVendorString;
  /* 0x02bc */ unsigned short OffsetPrcbProcStateContext;
  /* 0x02be */ unsigned short OffsetPrcbNumber;
  /* 0x02c0 */ unsigned short SizeEThread;
  /* 0x02c2 */ char Padding_771[6];
  /* 0x02c8 */ unsigned __int64 KdPrintCircularBufferPtr;
  /* 0x02d0 */ unsigned __int64 KdPrintBufferSize;
  /* 0x02d8 */ unsigned __int64 KeLoaderBlock;
  /* 0x02e0 */ unsigned short SizePcr;
  /* 0x02e2 */ unsigned short OffsetPcrSelfPcr;
  /* 0x02e4 */ unsigned short OffsetPcrCurrentPrcb;
  /* 0x02e6 */ unsigned short OffsetPcrContainedPrcb;
  /* 0x02e8 */ unsigned short OffsetPcrInitialBStore;
  /* 0x02ea */ unsigned short OffsetPcrBStoreLimit;
  /* 0x02ec */ unsigned short OffsetPcrInitialStack;
  /* 0x02ee */ unsigned short OffsetPcrStackLimit;
  /* 0x02f0 */ unsigned short OffsetPrcbPcrPage;
  /* 0x02f2 */ unsigned short OffsetPrcbProcStateSpecialReg;
  /* 0x02f4 */ unsigned short GdtR0Code;
  /* 0x02f6 */ unsigned short GdtR0Data;
  /* 0x02f8 */ unsigned short GdtR0Pcr;
  /* 0x02fa */ unsigned short GdtR3Code;
  /* 0x02fc */ unsigned short GdtR3Data;
  /* 0x02fe */ unsigned short GdtR3Teb;
  /* 0x0300 */ unsigned short GdtLdt;
  /* 0x0302 */ unsigned short GdtTss;
  /* 0x0304 */ unsigned short Gdt64R3CmCode;
  /* 0x0306 */ unsigned short Gdt64R3CmTeb;
  /* 0x0308 */ unsigned __int64 IopNumTriageDumpDataBlocks;
  /* 0x0310 */ unsigned __int64 IopTriageDumpDataBlocks;
  /* 0x0318 */ unsigned __int64 VfCrashDataBlock;
  /* 0x0320 */ unsigned __int64 MmBadPagesDetected;
  /* 0x0328 */ unsigned __int64 MmZeroedPageSingleBitErrorsDetected;
  /* 0x0330 */ unsigned __int64 EtwpDebuggerData;
  /* 0x0338 */ unsigned short OffsetPrcbContext;
  /* 0x033a */ char __PADDING__[6];
} KDDEBUGGER_DATA64, *PKDDEBUGGER_DATA64; /* size: 0x0340 */

typedef struct _LOAD_IMPORTS
{
  /* 0x0000 */ unsigned __int64 Count;
  /* 0x0008 */ struct _KLDR_DATA_TABLE_ENTRY* Entry[1];
} LOAD_IMPORTS, *PLOAD_IMPORTS; /* size: 0x0010 */

typedef struct _PERFINFO_DPC_INFORMATION
{
  /* 0x0000 */ unsigned __int64 InitialTime;
  /* 0x0008 */ void* DpcRoutine;
} PERFINFO_DPC_INFORMATION, *PPERFINFO_DPC_INFORMATION; /* size: 0x0010 */

typedef struct _MI_SPECIAL_POOL_PTE_LIST
{
  /* 0x0000 */ struct _MMPTE FreePteHead;
  /* 0x0008 */ struct _MMPTE FreePteTail;
} MI_SPECIAL_POOL_PTE_LIST, *PMI_SPECIAL_POOL_PTE_LIST; /* size: 0x0010 */

struct BULK_SECURITY_TEST_DATA
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long SecurityIds[1];
}; /* size: 0x0008 */

typedef struct _REPARSE_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ unsigned long Flags;
      /* 0x0014 */ wchar_t PathBuffer[1];
      /* 0x0016 */ char __PADDING__[2];
    } /* size: 0x0010 */ SymbolicLinkReparseBuffer;
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ wchar_t PathBuffer[1];
    } /* size: 0x000a */ MountPointReparseBuffer;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned char DataBuffer[1];
      } /* size: 0x0001 */ GenericReparseBuffer;
      /* 0x0009 */ char __PADDING__[15];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER; /* size: 0x0018 */

typedef union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 LocalAPICId : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 CpuId : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 ProcInfoCount : 6; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 ContextInfoCount : 6; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 Reserved : 50; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 ValidBits;
  }; /* size: 0x0008 */
} WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS, *PWHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS; /* size: 0x0008 */

typedef struct _WHEA_XPF_PROCESSOR_ERROR_SECTION
{
  /* 0x0000 */ union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS ValidBits;
  /* 0x0008 */ unsigned __int64 LocalAPICId;
  /* 0x0010 */ unsigned char CpuId[48];
  /* 0x0040 */ unsigned char VariableInfo[1];
} WHEA_XPF_PROCESSOR_ERROR_SECTION, *PWHEA_XPF_PROCESSOR_ERROR_SECTION; /* size: 0x0041 */

typedef struct _IMAGE_RESOURCE_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned short NumberOfNamedEntries;
  /* 0x000e */ unsigned short NumberOfIdEntries;
} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY; /* size: 0x0010 */

typedef struct _VM_COUNTERS_EX
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_772;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0058 */ unsigned __int64 PrivateUsage;
} VM_COUNTERS_EX, *PVM_COUNTERS_EX; /* size: 0x0060 */

typedef union _MM_PREFETCH_FLAGS
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Priority : 3; /* bit position: 0 */
        /* 0x0000 */ unsigned long RepurposePriority : 3; /* bit position: 3 */
      }; /* bitfield */
    } /* size: 0x0004 */ Flags;
    /* 0x0000 */ unsigned long AllFlags;
  }; /* size: 0x0004 */
} MM_PREFETCH_FLAGS, *PMM_PREFETCH_FLAGS; /* size: 0x0004 */

typedef struct _BITMAP_RANGE
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ __int64 BasePage;
  /* 0x0018 */ unsigned long FirstDirtyPage;
  /* 0x001c */ unsigned long LastDirtyPage;
  /* 0x0020 */ unsigned long DirtyPages;
  /* 0x0024 */ long Padding_773;
  /* 0x0028 */ unsigned long* Bitmap;
} BITMAP_RANGE, *PBITMAP_RANGE; /* size: 0x0030 */

typedef struct _THREAD_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} THREAD_CYCLE_TIME_INFORMATION, *PTHREAD_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _VARIABLE_NAME_AND_VALUE
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long ValueOffset;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ struct _GUID VendorGuid;
  /* 0x0020 */ wchar_t Name[1];
  /* 0x0022 */ char __PADDING__[2];
} VARIABLE_NAME_AND_VALUE, *PVARIABLE_NAME_AND_VALUE; /* size: 0x0024 */

typedef struct _POLICY_AUDIT_FULL_QUERY_INFO
{
  /* 0x0000 */ unsigned char ShutDownOnFull;
  /* 0x0001 */ unsigned char LogIsFull;
} POLICY_AUDIT_FULL_QUERY_INFO, *PPOLICY_AUDIT_FULL_QUERY_INFO; /* size: 0x0002 */

typedef struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS
{
  /* 0x0000 */ void* KeyHandle;
  /* 0x0008 */ struct _UNICODE_STRING* ValueNamePointer;
  /* 0x0010 */ unsigned long* RequiredLengthPointer;
  /* 0x0018 */ unsigned char* Buffer;
  /* 0x0020 */ unsigned long BufferLength;
  /* 0x0024 */ unsigned long Type;
  /* 0x0028 */ unsigned char* AppendBuffer;
  /* 0x0030 */ unsigned long AppendBufferLength;
  /* 0x0034 */ unsigned char CreateIfDoesntExist;
  /* 0x0035 */ unsigned char TruncateExistingValue;
  /* 0x0036 */ char __PADDING__[2];
} SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS, *PSYSTEM_REGISTRY_APPEND_STRING_PARAMETERS; /* size: 0x0038 */

typedef struct _CPU_INFO
{
  /* 0x0000 */ unsigned long Eax;
  /* 0x0004 */ unsigned long Ebx;
  /* 0x0008 */ unsigned long Ecx;
  /* 0x000c */ unsigned long Edx;
} CPU_INFO, *PCPU_INFO; /* size: 0x0010 */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX
{
  /* 0x0000 */ unsigned long PreferredNode;
  /* 0x0004 */ unsigned long Reserved0;
  /* 0x0008 */ unsigned long Reserved1;
  /* 0x000c */ unsigned long Reserved2;
  /* 0x0010 */ struct _PROCESS_STACK_ALLOCATION_INFORMATION AllocInfo;
} PROCESS_STACK_ALLOCATION_INFORMATION_EX, *PPROCESS_STACK_ALLOCATION_INFORMATION_EX; /* size: 0x0028 */

typedef struct _DEBUG_OBJECT
{
  /* 0x0000 */ struct _KEVENT EventsPresent;
  /* 0x0018 */ struct _FAST_MUTEX Mutex;
  /* 0x0050 */ struct _LIST_ENTRY EventList;
  /* 0x0060 */ unsigned long Flags;
  /* 0x0064 */ long __PADDING__[1];
} DEBUG_OBJECT, *PDEBUG_OBJECT; /* size: 0x0068 */

typedef struct _ALPHA_NT5_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _ALPHA_NT5_CONTEXT ContextFrame;
} ALPHA_NT5_KPROCESSOR_STATE, *PALPHA_NT5_KPROCESSOR_STATE; /* size: 0x0230 */

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
  /* 0x0000 */ unsigned long LogPathLength;
  /* 0x0004 */ wchar_t LogPath[1];
  /* 0x0006 */ char __PADDING__[2];
} TRANSACTIONMANAGER_LOGPATH_INFORMATION, *PTRANSACTIONMANAGER_LOGPATH_INFORMATION; /* size: 0x0008 */

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long NumberOfIdentifiers;
  /* 0x000c */ unsigned char Identifiers[1];
  /* 0x000d */ char __PADDING__[3];
} STORAGE_DEVICE_ID_DESCRIPTOR, *PSTORAGE_DEVICE_ID_DESCRIPTOR; /* size: 0x0010 */

typedef struct _HV_INPUT_INVOKE_HYPERVISOR_DEBUGGER
{
  /* 0x0000 */ unsigned __int64 Reason;
  /* 0x0008 */ unsigned __int64 SupplementalCode;
} HV_INPUT_INVOKE_HYPERVISOR_DEBUGGER, *PHV_INPUT_INVOKE_HYPERVISOR_DEBUGGER; /* size: 0x0010 */

typedef struct _NV_FEATURE_PARAMETER
{
  /* 0x0000 */ unsigned short NVPowerModeEnabled;
  /* 0x0002 */ unsigned short NVParameterReserv1;
  /* 0x0004 */ unsigned short NVCmdEnabled;
  /* 0x0006 */ unsigned short NVParameterReserv2;
  /* 0x0008 */ unsigned short NVPowerModeVer;
  /* 0x000a */ unsigned short NVCmdVer;
  /* 0x000c */ unsigned long NVSize;
  /* 0x0010 */ unsigned short NVReadSpeed;
  /* 0x0012 */ unsigned short NVWrtSpeed;
  /* 0x0014 */ unsigned long DeviceSpinUpTime;
} NV_FEATURE_PARAMETER, *PNV_FEATURE_PARAMETER; /* size: 0x0018 */

typedef struct _THREAD_TEB_INFORMATION
{
  /* 0x0000 */ void* TebInformation;
  /* 0x0008 */ unsigned long TebOffset;
  /* 0x000c */ unsigned long BytesToRead;
} THREAD_TEB_INFORMATION, *PTHREAD_TEB_INFORMATION; /* size: 0x0010 */

typedef struct _TRANSACTION_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Outcome;
} TRANSACTION_BASIC_INFORMATION, *PTRANSACTION_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _SMP_LOG_BUFFER
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long EntryCount : 16; /* bit position: 0 */
    /* 0x0008 */ unsigned long EntryMax : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x000c */ long __PADDING__[1];
} SMP_LOG_BUFFER, *PSMP_LOG_BUFFER; /* size: 0x0010 */

typedef union _PCI_EXPRESS_PME_REQUESTOR_ID
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short FunctionNumber : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned short DeviceNumber : 5; /* bit position: 3 */
      /* 0x0000 */ unsigned short BusNumber : 8; /* bit position: 8 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_PME_REQUESTOR_ID, *PPCI_EXPRESS_PME_REQUESTOR_ID; /* size: 0x0002 */

typedef struct _ATA_PASS_THROUGH_EX32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short AtaFlags;
  /* 0x0004 */ unsigned char PathId;
  /* 0x0005 */ unsigned char TargetId;
  /* 0x0006 */ unsigned char Lun;
  /* 0x0007 */ unsigned char ReservedAsUchar;
  /* 0x0008 */ unsigned long DataTransferLength;
  /* 0x000c */ unsigned long TimeOutValue;
  /* 0x0010 */ unsigned long ReservedAsUlong;
  /* 0x0014 */ unsigned int DataBufferOffset;
  /* 0x0018 */ unsigned char PreviousTaskFile[8];
  /* 0x0020 */ unsigned char CurrentTaskFile[8];
} ATA_PASS_THROUGH_EX32, *PATA_PASS_THROUGH_EX32; /* size: 0x0028 */

typedef struct _FORMAT_PARAMETERS
{
  /* 0x0000 */ enum _MEDIA_TYPE MediaType;
  /* 0x0004 */ unsigned long StartCylinderNumber;
  /* 0x0008 */ unsigned long EndCylinderNumber;
  /* 0x000c */ unsigned long StartHeadNumber;
  /* 0x0010 */ unsigned long EndHeadNumber;
} FORMAT_PARAMETERS, *PFORMAT_PARAMETERS; /* size: 0x0014 */

typedef struct _REG_REPLACE_KEY_INFORMATION
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ struct _UNICODE_STRING* OldFileName;
  /* 0x0010 */ struct _UNICODE_STRING* NewFileName;
  /* 0x0018 */ void* CallContext;
  /* 0x0020 */ void* ObjectContext;
  /* 0x0028 */ void* Reserved;
} REG_REPLACE_KEY_INFORMATION, *PREG_REPLACE_KEY_INFORMATION; /* size: 0x0030 */

typedef struct _PERFINFO_CCSWAP_BUFFER
{
  /* 0x0000 */ __int64 FirstTimeStamp;
  /* 0x0008 */ unsigned long TidTable[16];
  /* 0x0048 */ char ThreadBasePriority[16];
} PERFINFO_CCSWAP_BUFFER, *PPERFINFO_CCSWAP_BUFFER; /* size: 0x0058 */

typedef struct _CONTEXTSWAP_CACHE
{
  /* 0x0000 */ unsigned long CurrentOffset;
  /* 0x0004 */ unsigned long BufferStartTick;
  /* 0x0008 */ __int64 PreviousTimeStamp;
  /* 0x0010 */ struct _PERFINFO_CCSWAP_BUFFER Buffer;
} CONTEXTSWAP_CACHE, *PCONTEXTSWAP_CACHE; /* size: 0x0068 */

typedef struct _SCSI_BUS_DATA
{
  /* 0x0000 */ unsigned char NumberOfLogicalUnits;
  /* 0x0001 */ unsigned char InitiatorBusId;
  /* 0x0002 */ char Padding_774[2];
  /* 0x0004 */ unsigned long InquiryDataOffset;
} SCSI_BUS_DATA, *PSCSI_BUS_DATA; /* size: 0x0008 */

typedef struct _SCSI_ADAPTER_BUS_INFO
{
  /* 0x0000 */ unsigned char NumberOfBuses;
  /* 0x0001 */ char Padding_775[3];
  /* 0x0004 */ struct _SCSI_BUS_DATA BusData[1];
} SCSI_ADAPTER_BUS_INFO, *PSCSI_ADAPTER_BUS_INFO; /* size: 0x000c */

typedef struct _FILE_ID_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ long Padding_776;
  /* 0x0048 */ union _LARGE_INTEGER FileId;
  /* 0x0050 */ wchar_t FileName[1];
  /* 0x0052 */ char __PADDING__[6];
} FILE_ID_FULL_DIR_INFORMATION, *PFILE_ID_FULL_DIR_INFORMATION; /* size: 0x0058 */

typedef struct _IOP_IRP_STACK_PROFILER
{
  /* 0x0000 */ unsigned long Profile[20];
  /* 0x0050 */ struct _KTIMER Timer;
  /* 0x0090 */ struct _KDPC Dpc;
  /* 0x00d0 */ unsigned long Flags;
  /* 0x00d4 */ unsigned long TriggerCount;
  /* 0x00d8 */ unsigned long ProfileDuration;
  /* 0x00dc */ long __PADDING__[1];
} IOP_IRP_STACK_PROFILER, *PIOP_IRP_STACK_PROFILER; /* size: 0x00e0 */

typedef struct _ETW_SYSTEMTIME
{
  /* 0x0000 */ unsigned short Year;
  /* 0x0002 */ unsigned short Month;
  /* 0x0004 */ unsigned short DayOfWeek;
  /* 0x0006 */ unsigned short Day;
  /* 0x0008 */ unsigned short Hour;
  /* 0x000a */ unsigned short Minute;
  /* 0x000c */ unsigned short Second;
  /* 0x000e */ unsigned short Milliseconds;
} ETW_SYSTEMTIME, *PETW_SYSTEMTIME; /* size: 0x0010 */

typedef struct _KBALANCE_CONTEXT
{
  /* 0x0000 */ unsigned long ReadyScanLast;
  /* 0x0004 */ unsigned long ReadyScanPeriod;
  /* 0x0008 */ unsigned long BalanceNodeLast;
  /* 0x000c */ unsigned long Pad;
  /* 0x0010 */ unsigned __int64 BalanceMask;
  /* 0x0018 */ struct _KTIMER PeriodTimer;
  /* 0x0058 */ struct _KEVENT ReadyEvent;
  /* 0x0070 */ struct _KDPC ScanDpc;
} KBALANCE_CONTEXT, *PKBALANCE_CONTEXT; /* size: 0x00b0 */

struct PROCESSOR_PERFSTATE_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char MaxThrottle;
  /* 0x0005 */ unsigned char MinThrottle;
  /* 0x0006 */ unsigned char BusyAdjThreshold;
  union
  {
    /* 0x0007 */ unsigned char Spare;
    union
    {
      union
      {
        /* 0x0007 */ unsigned char AsUCHAR;
        struct /* bitfield */
        {
          /* 0x0007 */ unsigned char NoDomainAccounting : 1; /* bit position: 0 */
          /* 0x0007 */ unsigned char IncreasePolicy : 2; /* bit position: 1 */
          /* 0x0007 */ unsigned char DecreasePolicy : 2; /* bit position: 3 */
          /* 0x0007 */ unsigned char Reserved : 3; /* bit position: 5 */
        }; /* bitfield */
      }; /* size: 0x0001 */
    } /* size: 0x0001 */ Flags;
  }; /* size: 0x0001 */
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ unsigned long IncreasePercent;
  /* 0x0018 */ unsigned long DecreasePercent;
}; /* size: 0x001c */

typedef struct _ETW_SPINLOCK_ENTRY
{
  /* 0x0000 */ unsigned __int64 AcquireTime;
  /* 0x0008 */ void* SpinLockAddress;
  /* 0x0010 */ unsigned long WaitTimeInCycles;
  /* 0x0014 */ unsigned long SpinCount;
  /* 0x0018 */ unsigned long InterruptCount;
  /* 0x001c */ unsigned char AcquireMode;
  /* 0x001d */ char __PADDING__[3];
} ETW_SPINLOCK_ENTRY, *PETW_SPINLOCK_ENTRY; /* size: 0x0020 */

typedef struct _DISPATCHER_HEADER32
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Absolute;
  /* 0x0002 */ unsigned char Size;
  /* 0x0003 */ unsigned char Inserted;
  /* 0x0004 */ long SignalState;
  /* 0x0008 */ struct LIST_ENTRY32 WaitListHead;
} DISPATCHER_HEADER32, *PDISPATCHER_HEADER32; /* size: 0x0010 */

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_
{
  /* 0x0000 */ void* TargetFileObject;
  /* 0x0008 */ unsigned long TargetLinkTrackingInformationLength;
  /* 0x000c */ unsigned char TargetLinkTrackingInformationBuffer[1];
  /* 0x000d */ char __PADDING__[3];
} REMOTE_LINK_TRACKING_INFORMATION_, *PREMOTE_LINK_TRACKING_INFORMATION_; /* size: 0x0010 */

typedef union _RTL_RUN_ONCE
{
  union
  {
    /* 0x0000 */ void* Ptr;
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ unsigned __int64 State : 2; /* bit position: 0 */
  }; /* size: 0x0008 */
} RTL_RUN_ONCE, *PRTL_RUN_ONCE; /* size: 0x0008 */

typedef struct _WHEA_MEMORY_ERROR_SECTION
{
  /* 0x0000 */ union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS ValidBits;
  /* 0x0008 */ union _WHEA_ERROR_STATUS ErrorStatus;
  /* 0x0010 */ unsigned __int64 PhysicalAddress;
  /* 0x0018 */ unsigned __int64 PhysicalAddressMask;
  /* 0x0020 */ unsigned short Node;
  /* 0x0022 */ unsigned short Card;
  /* 0x0024 */ unsigned short Module;
  /* 0x0026 */ unsigned short Bank;
  /* 0x0028 */ unsigned short Device;
  /* 0x002a */ unsigned short Row;
  /* 0x002c */ unsigned short Column;
  /* 0x002e */ unsigned short BitPosition;
  /* 0x0030 */ unsigned __int64 RequesterId;
  /* 0x0038 */ unsigned __int64 ResponderId;
  /* 0x0040 */ unsigned __int64 TargetId;
  /* 0x0048 */ unsigned char ErrorType;
} WHEA_MEMORY_ERROR_SECTION, *PWHEA_MEMORY_ERROR_SECTION; /* size: 0x0049 */

typedef union _WHEA_PCIXBUS_ID
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char BusNumber;
      /* 0x0001 */ unsigned char BusSegment;
    }; /* size: 0x0002 */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} WHEA_PCIXBUS_ID, *PWHEA_PCIXBUS_ID; /* size: 0x0002 */

typedef union _WHEA_PCIXBUS_COMMAND
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Command : 56; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 PCIXCommand : 1; /* bit position: 56 */
      /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 AsULONGLONG;
  }; /* size: 0x0008 */
} WHEA_PCIXBUS_COMMAND, *PWHEA_PCIXBUS_COMMAND; /* size: 0x0008 */

typedef struct _WHEA_PCIXBUS_ERROR_SECTION
{
  /* 0x0000 */ union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS ValidBits;
  /* 0x0008 */ union _WHEA_ERROR_STATUS ErrorStatus;
  /* 0x0010 */ unsigned short ErrorType;
  /* 0x0012 */ union _WHEA_PCIXBUS_ID BusId;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ unsigned __int64 BusAddress;
  /* 0x0020 */ unsigned __int64 BusData;
  /* 0x0028 */ union _WHEA_PCIXBUS_COMMAND BusCommand;
  /* 0x0030 */ unsigned __int64 RequesterId;
  /* 0x0038 */ unsigned __int64 CompleterId;
  /* 0x0040 */ unsigned __int64 TargetId;
} WHEA_PCIXBUS_ERROR_SECTION, *PWHEA_PCIXBUS_ERROR_SECTION; /* size: 0x0048 */

typedef struct _HEADLESS_CMD_SET_COLOR
{
  /* 0x0000 */ unsigned long FgColor;
  /* 0x0004 */ unsigned long BkgColor;
} HEADLESS_CMD_SET_COLOR, *PHEADLESS_CMD_SET_COLOR; /* size: 0x0008 */

typedef struct _POOL_TRACKER_BIG_PAGES
{
  /* 0x0000 */ void* Va;
  /* 0x0008 */ unsigned long Key;
  /* 0x000c */ unsigned long PoolType;
  /* 0x0010 */ unsigned __int64 NumberOfBytes;
} POOL_TRACKER_BIG_PAGES, *PPOOL_TRACKER_BIG_PAGES; /* size: 0x0018 */

typedef struct _FILE_FS_OBJECTID_INFORMATION
{
  /* 0x0000 */ unsigned char ObjectId[16];
  /* 0x0010 */ unsigned char ExtendedInfo[48];
} FILE_FS_OBJECTID_INFORMATION, *PFILE_FS_OBJECTID_INFORMATION; /* size: 0x0040 */

typedef struct _HEADLESS_RSP_QUERY_INFO
{
  /* 0x0000 */ enum _HEADLESS_TERM_PORT_TYPE PortType;
  /* 0x0004 */ long Padding_777;
  struct
  {
    /* 0x0008 */ unsigned char TerminalAttached;
    /* 0x0009 */ unsigned char UsedBiosSettings;
    /* 0x0002 */ char Padding_778[2];
    /* 0x000c */ enum _HEADLESS_TERM_SERIAL_PORT TerminalPort;
    /* 0x0010 */ unsigned char* TerminalPortBaseAddress;
    /* 0x0018 */ unsigned long TerminalBaudRate;
    /* 0x001c */ unsigned char TerminalType;
    /* 0x001d */ char __PADDING__[3];
  } /* size: 0x0018 */ Serial;
} HEADLESS_RSP_QUERY_INFO, *PHEADLESS_RSP_QUERY_INFO; /* size: 0x0020 */

typedef struct _WHEA_ERROR_PACKET_V1
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ union _WHEA_ERROR_PACKET_FLAGS Flags;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long RawDataLength;
  /* 0x0010 */ unsigned __int64 Reserved1;
  /* 0x0018 */ unsigned __int64 Context;
  /* 0x0020 */ enum _WHEA_ERROR_TYPE ErrorType;
  /* 0x0024 */ enum _WHEA_ERROR_SEVERITY ErrorSeverity;
  /* 0x0028 */ unsigned long ErrorSourceId;
  /* 0x002c */ enum _WHEA_ERROR_SOURCE_TYPE ErrorSourceType;
  /* 0x0030 */ unsigned long Reserved2;
  /* 0x0034 */ unsigned long Version;
  /* 0x0038 */ unsigned __int64 Cpu;
  union
  {
    union
    {
      /* 0x0040 */ struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION ProcessorError;
      /* 0x0040 */ struct _WHEA_MEMORY_ERROR_SECTION MemoryError;
      /* 0x0040 */ struct _WHEA_NMI_ERROR_SECTION NmiError;
      /* 0x0040 */ struct _WHEA_PCIEXPRESS_ERROR_SECTION PciExpressError;
      /* 0x0040 */ struct _WHEA_PCIXBUS_ERROR_SECTION PciXBusError;
      /* 0x0040 */ struct _WHEA_PCIXDEVICE_ERROR_SECTION PciXDeviceError;
    }; /* size: 0x00d0 */
  } /* size: 0x00d0 */ u;
  /* 0x0110 */ enum _WHEA_RAW_DATA_FORMAT RawDataFormat;
  /* 0x0114 */ unsigned long RawDataOffset;
  /* 0x0118 */ unsigned char RawData[1];
} WHEA_ERROR_PACKET_V1, *PWHEA_ERROR_PACKET_V1; /* size: 0x0119 */

typedef struct _ETW_REALTIME_LOGFILE_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long SpareUlong;
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long NumberOfProcessors;
  /* 0x0010 */ struct _ETW_REF_CLOCK ReferenceTime;
  /* 0x0020 */ unsigned long BuffersSaved;
  /* 0x0024 */ unsigned long BufferSize;
  /* 0x0028 */ union _LARGE_INTEGER ReadOffset;
  /* 0x0030 */ union _LARGE_INTEGER WriteOffset;
  /* 0x0038 */ union _LARGE_INTEGER LogfileSize;
  /* 0x0040 */ unsigned __int64 LogfileUsage;
} ETW_REALTIME_LOGFILE_HEADER, *PETW_REALTIME_LOGFILE_HEADER; /* size: 0x0048 */

typedef struct _SYSDBG_BUS_DATA
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ long Padding_779;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _BUS_DATA_TYPE BusDataType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long SlotNumber;
} SYSDBG_BUS_DATA, *PSYSDBG_BUS_DATA; /* size: 0x0020 */

typedef struct _ETW_DFSS_RELEASE_THREAD_ON_IDLE
{
  /* 0x0000 */ unsigned long CurrentGeneration;
  /* 0x0004 */ unsigned long SessionSelectedToRun;
  /* 0x0008 */ unsigned __int64 CycleBaseAllowance;
  /* 0x0010 */ __int64 CyclesRemaining;
} ETW_DFSS_RELEASE_THREAD_ON_IDLE, *PETW_DFSS_RELEASE_THREAD_ON_IDLE; /* size: 0x0018 */

typedef struct _AMD64_UNWIND_INFO
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Version : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Flags : 5; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0001 */ unsigned char SizeOfProlog;
  /* 0x0002 */ unsigned char CountOfCodes;
  struct /* bitfield */
  {
    /* 0x0003 */ unsigned char FrameRegister : 4; /* bit position: 0 */
    /* 0x0003 */ unsigned char FrameOffset : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ union _AMD64_UNWIND_CODE UnwindCode[1];
} AMD64_UNWIND_INFO, *PAMD64_UNWIND_INFO; /* size: 0x0006 */

typedef struct _MBCB
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeIsInZone;
  /* 0x0004 */ unsigned long PagesToWrite;
  /* 0x0008 */ unsigned long DirtyPages;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ struct _LIST_ENTRY BitmapRanges;
  /* 0x0020 */ __int64 ResumeWritePage;
  /* 0x0028 */ __int64 MostRecentlyDirtiedPage;
  /* 0x0030 */ struct _BITMAP_RANGE BitmapRange1;
  /* 0x0060 */ struct _BITMAP_RANGE BitmapRange2;
  /* 0x0090 */ struct _BITMAP_RANGE BitmapRange3;
} MBCB, *PMBCB; /* size: 0x00c0 */

typedef struct _BCB
{
  union
  {
    /* 0x0000 */ struct _MBCB Dummy;
    struct
    {
      /* 0x0000 */ short NodeTypeCode;
      /* 0x0002 */ unsigned char Dirty;
      /* 0x0003 */ unsigned char Reserved;
      /* 0x0004 */ unsigned long ByteLength;
      /* 0x0008 */ union _LARGE_INTEGER FileOffset;
      /* 0x0010 */ struct _LIST_ENTRY BcbLinks;
      /* 0x0020 */ union _LARGE_INTEGER BeyondLastByte;
      /* 0x0028 */ union _LARGE_INTEGER OldestLsn;
      /* 0x0030 */ union _LARGE_INTEGER NewestLsn;
      /* 0x0038 */ struct _VACB* Vacb;
      /* 0x0040 */ unsigned long PinCount;
      /* 0x0044 */ long Padding_780;
      /* 0x0048 */ struct _ERESOURCE Resource;
      /* 0x00b0 */ struct _SHARED_CACHE_MAP* SharedCacheMap;
      /* 0x00b8 */ void* BaseAddress;
    }; /* size: 0x00bc */
  }; /* size: 0x00c0 */
} BCB, *PBCB; /* size: 0x00c0 */

typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA
{
  /* 0x0000 */ void* InBuffer;
  /* 0x0008 */ unsigned long InBufferLength;
  /* 0x000c */ unsigned long MaximumAllowed;
  /* 0x0010 */ struct _GUID Guid;
  /* 0x0020 */ void* OutBuffer;
  /* 0x0028 */ unsigned long OutBufferLength;
  /* 0x002c */ long __PADDING__[1];
} KBUGCHECK_SECONDARY_DUMP_DATA, *PKBUGCHECK_SECONDARY_DUMP_DATA; /* size: 0x0030 */

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
  /* 0x0008 */ unsigned long TableID;
  /* 0x000c */ unsigned long TableBufferLength;
  /* 0x0010 */ unsigned char TableBuffer[1];
  /* 0x0011 */ char __PADDING__[3];
} SYSTEM_FIRMWARE_TABLE_INFORMATION, *PSYSTEM_FIRMWARE_TABLE_INFORMATION; /* size: 0x0014 */

typedef struct _PERFINFO_PO_SESSION_CALLOUT
{
  /* 0x0000 */ enum POWER_ACTION SystemAction;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE MinSystemState;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long PowerStateTask;
} PERFINFO_PO_SESSION_CALLOUT, *PPERFINFO_PO_SESSION_CALLOUT; /* size: 0x0010 */

struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY
{
  /* 0x0000 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE* Node;
  union
  {
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY* LeafEntry;
    /* 0x0008 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::INDEX_ENTRY* IndexEntry;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::ITERATOR
{
  /* 0x0000 */ struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY Entry;
}; /* size: 0x0010 */

typedef struct _REQUEST_RAW_ENCRYPTED_DATA
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} REQUEST_RAW_ENCRYPTED_DATA, *PREQUEST_RAW_ENCRYPTED_DATA; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  /* 0x0000 */ unsigned long ulAssemblyIndex;
  /* 0x0004 */ unsigned long ulFileIndexInAssembly;
} ACTIVATION_CONTEXT_QUERY_INDEX, *PACTIVATION_CONTEXT_QUERY_INDEX; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorNumber;
  /* 0x0004 */ unsigned long StateCount;
  /* 0x0008 */ struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
} SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION; /* size: 0x0010 */

typedef struct _ARM_FIBER
{
  /* 0x0000 */ unsigned long FiberData;
  /* 0x0004 */ unsigned long ExceptionList;
  /* 0x0008 */ unsigned long StackBase;
  /* 0x000c */ unsigned long StackLimit;
  /* 0x0010 */ unsigned long DeallocationStack;
  /* 0x0014 */ struct _ARM_CONTEXT FiberContext;
} ARM_FIBER, *PARM_FIBER; /* size: 0x005c */

typedef struct _ALPC_HANDLE_ENTRY
{
  /* 0x0000 */ void* Object;
} ALPC_HANDLE_ENTRY, *PALPC_HANDLE_ENTRY; /* size: 0x0008 */

typedef struct _SE_ACCESS_REQUEST
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_781;
  /* 0x0008 */ struct _SE_SECURITY_DESCRIPTOR* SeSecurityDescriptor;
  /* 0x0010 */ unsigned long DesiredAccess;
  /* 0x0014 */ unsigned long PreviouslyGrantedAccess;
  /* 0x0018 */ void* PrincipalSelfSid;
  /* 0x0020 */ struct _GENERIC_MAPPING* GenericMapping;
  /* 0x0028 */ unsigned long ObjectTypeListCount;
  /* 0x002c */ long Padding_782;
  /* 0x0030 */ struct _OBJECT_TYPE_LIST* ObjectTypeList;
} SE_ACCESS_REQUEST, *PSE_ACCESS_REQUEST; /* size: 0x0038 */

typedef struct _NONOPAQUE_BASE_MCB
{
  /* 0x0000 */ unsigned long MaximumPairCount;
  /* 0x0004 */ unsigned long PairCount;
  /* 0x0008 */ unsigned short PoolType;
  /* 0x000a */ unsigned short Flags;
  /* 0x000c */ long Padding_783;
  /* 0x0010 */ struct _MAPPING* Mapping;
} NONOPAQUE_BASE_MCB, *PNONOPAQUE_BASE_MCB; /* size: 0x0018 */

struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::_B_TREE_DESERIALIZE_CTX;

typedef struct _OBJECT_TYPE_LIST
{
  /* 0x0000 */ unsigned short Level;
  /* 0x0002 */ unsigned short Sbz;
  /* 0x0004 */ long Padding_784;
  /* 0x0008 */ struct _GUID* ObjectType;
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST; /* size: 0x0010 */

struct NTFS_FILE_RECORD_OUTPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
  /* 0x0008 */ unsigned long FileRecordLength;
  /* 0x000c */ unsigned char FileRecordBuffer[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _RTL_PROCESS_LOCKS
{
  /* 0x0000 */ unsigned long NumberOfLocks;
  /* 0x0004 */ long Padding_785;
  /* 0x0008 */ struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
} RTL_PROCESS_LOCKS, *PRTL_PROCESS_LOCKS; /* size: 0x0038 */

typedef struct _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListEntry;
  /* 0x0008 */ struct _IO_MINI_COMPLETION_PACKET_USER* Packet;
  /* 0x0010 */ struct _ALPC_COMPLETION_PACKET_LOOKASIDE* Lookaside;
} ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY, *PALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY; /* size: 0x0018 */

typedef struct _HEAP_RANGE_LOG
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ struct _HEAP_EVENT_RANGE Range;
} HEAP_RANGE_LOG, *PHEAP_RANGE_LOG; /* size: 0x0038 */

typedef struct _PERFINFO_FILE_CREATE
{
  /* 0x0000 */ unsigned __int64 Irp;
  /* 0x0008 */ unsigned __int64 ThreadId;
  /* 0x0010 */ unsigned __int64 FileObject;
  /* 0x0018 */ unsigned long Options;
  /* 0x001c */ unsigned long Attributes;
  /* 0x0020 */ unsigned long ShareAccess;
  /* 0x0024 */ wchar_t OpenPath[1];
  /* 0x0026 */ char __PADDING__[2];
} PERFINFO_FILE_CREATE, *PPERFINFO_FILE_CREATE; /* size: 0x0028 */

typedef struct _VOLUME_CACHE_MAP
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteCode;
  /* 0x0004 */ unsigned long UseCount;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ struct _LIST_ENTRY VolumeCacheMapLinks;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long Padding_786;
  /* 0x0028 */ unsigned __int64 DirtyPages;
  /* 0x0030 */ unsigned long PagesQueuedToDisk;
  /* 0x0034 */ long __PADDING__[1];
} VOLUME_CACHE_MAP, *PVOLUME_CACHE_MAP; /* size: 0x0038 */

typedef struct _INDEX_RECORD
{
  /* 0x0000 */ unsigned __int64 ullKey;
  /* 0x0008 */ unsigned long tiRef;
} INDEX_RECORD, *PINDEX_RECORD; /* size: 0x000c */

typedef struct _INT_ROUTE_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_787;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* GetInterruptRouting /* function */;
  /* 0x0028 */ void* SetInterruptRoutingToken /* function */;
  /* 0x0030 */ void* UpdateInterruptLine /* function */;
} INT_ROUTE_INTERFACE_STANDARD, *PINT_ROUTE_INTERFACE_STANDARD; /* size: 0x0038 */

typedef struct _IO_SESSION_STATE_NOTIFICATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ void* IoObject;
  /* 0x0010 */ unsigned long EventMask;
  /* 0x0014 */ long Padding_788;
  /* 0x0018 */ void* Context;
} IO_SESSION_STATE_NOTIFICATION, *PIO_SESSION_STATE_NOTIFICATION; /* size: 0x0020 */

typedef struct _SYSPTES_HEADER
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
  /* 0x0010 */ unsigned __int64 Count;
  /* 0x0018 */ unsigned __int64 NumberOfEntries;
  /* 0x0020 */ unsigned __int64 NumberOfEntriesPeak;
} SYSPTES_HEADER, *PSYSPTES_HEADER; /* size: 0x0028 */

typedef struct _ST_IO_SAMPLE_RATE
{
  /* 0x0000 */ unsigned short MinSamples;
  /* 0x0002 */ unsigned short SampleMask;
} ST_IO_SAMPLE_RATE, *PST_IO_SAMPLE_RATE; /* size: 0x0004 */

typedef struct _NETWORK_OPEN_ECP_CONTEXT
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Reserved;
  struct
  {
    /* 0x0004 */ enum NETWORK_OPEN_LOCATION_QUALIFIER Location;
    /* 0x0008 */ enum NETWORK_OPEN_INTEGRITY_QUALIFIER Integrity;
    /* 0x000c */ unsigned long Flags;
  } /* size: 0x000c */ in;
  struct
  {
    /* 0x0010 */ enum NETWORK_OPEN_LOCATION_QUALIFIER Location;
    /* 0x0014 */ enum NETWORK_OPEN_INTEGRITY_QUALIFIER Integrity;
    /* 0x0018 */ unsigned long Flags;
  } /* size: 0x000c */ out;
} NETWORK_OPEN_ECP_CONTEXT, *PNETWORK_OPEN_ECP_CONTEXT; /* size: 0x001c */

struct ROUTING_TOKEN
{
  /* 0x0000 */ void* LinkNode;
  /* 0x0008 */ unsigned long StaticVector;
  /* 0x000c */ unsigned char Flags;
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _HV_INPUT_MAP_STATS_PAGE
{
  /* 0x0000 */ enum _HV_STATS_OBJECT_TYPE StatsType;
  /* 0x0004 */ long Padding_789;
  /* 0x0008 */ union _HV_STATS_OBJECT_IDENTITY ObjectIdentity;
  /* 0x0018 */ unsigned __int64 MapLocation;
} HV_INPUT_MAP_STATS_PAGE, *PHV_INPUT_MAP_STATS_PAGE; /* size: 0x0020 */

typedef struct _RTL_STD_LIST_ENTRY
{
  /* 0x0000 */ struct _RTL_STD_LIST_ENTRY* Next;
} RTL_STD_LIST_ENTRY, *PRTL_STD_LIST_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_790;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ void* CreatorUniqueProcess;
  /* 0x0018 */ unsigned short CreatorBackTraceIndex;
  /* 0x001a */ unsigned short Flags;
  /* 0x001c */ long PointerCount;
  /* 0x0020 */ long HandleCount;
  /* 0x0024 */ unsigned long PagedPoolCharge;
  /* 0x0028 */ unsigned long NonPagedPoolCharge;
  /* 0x002c */ long Padding_791;
  /* 0x0030 */ void* ExclusiveProcessId;
  /* 0x0038 */ void* SecurityDescriptor;
  /* 0x0040 */ struct _OBJECT_NAME_INFORMATION NameInfo;
} SYSTEM_OBJECT_INFORMATION, *PSYSTEM_OBJECT_INFORMATION; /* size: 0x0050 */

struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::PATH_ENTRY
{
  /* 0x0000 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE* Node;
  union
  {
    /* 0x0008 */ struct SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY* LeafEntry;
    /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::INDEX_ENTRY* IndexEntry;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

typedef struct _PERFINFO_FILE_OPERATION_END
{
  /* 0x0000 */ unsigned __int64 Irp;
  /* 0x0008 */ unsigned __int64 ExtraInformation;
  /* 0x0010 */ long Status;
} PERFINFO_FILE_OPERATION_END, *PPERFINFO_FILE_OPERATION_END; /* size: 0x0014 */

typedef struct _EVENT_TRACE_HEAP_TRACING_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ unsigned long ProcessId[1];
} EVENT_TRACE_HEAP_TRACING_INFORMATION, *PEVENT_TRACE_HEAP_TRACING_INFORMATION; /* size: 0x0008 */

typedef struct _PERFINFO_SET_DEVICES_STATE
{
  /* 0x0000 */ unsigned long SystemState;
  /* 0x0004 */ unsigned char Waking;
  /* 0x0005 */ unsigned char Shutdown;
  /* 0x0006 */ unsigned char IrpMinor;
  /* 0x0007 */ char __PADDING__[1];
} PERFINFO_SET_DEVICES_STATE, *PPERFINFO_SET_DEVICES_STATE; /* size: 0x0008 */

typedef union _UCHAR4
{
  union
  {
    /* 0x0000 */ unsigned char Uchar[4];
    /* 0x0000 */ unsigned long ForceAlignment;
  }; /* size: 0x0004 */
} UCHAR4, *PUCHAR4; /* size: 0x0004 */

typedef struct _FILE_FS_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER AvailableAllocationUnits;
  /* 0x0010 */ unsigned long SectorsPerAllocationUnit;
  /* 0x0014 */ unsigned long BytesPerSector;
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION; /* size: 0x0018 */

typedef struct _PO_WAKE_SOURCE_DEVICE
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ wchar_t InstancePath[1];
  /* 0x000a */ char __PADDING__[2];
} PO_WAKE_SOURCE_DEVICE, *PPO_WAKE_SOURCE_DEVICE; /* size: 0x000c */

struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::_B_TREE_DESERIALIZE_CTX;

typedef struct _LDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY64 InMemoryOrderLinks;
  /* 0x0020 */ struct LIST_ENTRY64 InInitializationOrderLinks;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_792;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct LIST_ENTRY64 HashLinks;
    struct
    {
      /* 0x0070 */ unsigned __int64 SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ unsigned __int64 LoadedImports;
  }; /* size: 0x0008 */
} LDR_DATA_TABLE_ENTRY64, *PLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _NIC_RECORD
{
  /* 0x0000 */ wchar_t NICName[256];
  /* 0x0200 */ unsigned long Index;
  /* 0x0204 */ unsigned long PhysicalAddrLen;
  /* 0x0208 */ wchar_t PhysicalAddr[8];
  /* 0x0218 */ unsigned long Size;
  /* 0x021c */ long IpAddress;
  /* 0x0220 */ long SubnetMask;
  /* 0x0224 */ long DhcpServer;
  /* 0x0228 */ long Gateway;
  /* 0x022c */ long PrimaryWinsServer;
  /* 0x0230 */ long SecondaryWinsServer;
  /* 0x0234 */ long DnsServer[4];
  /* 0x0244 */ unsigned long Data;
} NIC_RECORD, *PNIC_RECORD; /* size: 0x0248 */

typedef struct _ALPC_HANDLE_TABLE
{
  /* 0x0000 */ struct _ALPC_HANDLE_ENTRY* Handles;
  /* 0x0008 */ unsigned long TotalHandles;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ struct _EX_PUSH_LOCK Lock;
} ALPC_HANDLE_TABLE, *PALPC_HANDLE_TABLE; /* size: 0x0018 */

typedef struct _CLS_SCAN_CONTEXT
{
  /* 0x0000 */ struct _CLFS_NODE_ID cidNode;
  /* 0x0008 */ struct _FILE_OBJECT* plfoLog;
  /* 0x0010 */ unsigned long cIndex;
  /* 0x0014 */ long Padding_793;
  /* 0x0018 */ unsigned long cContainers;
  /* 0x001c */ long Padding_794;
  /* 0x0020 */ unsigned long cContainersReturned;
  /* 0x0024 */ long Padding_795;
  /* 0x0028 */ unsigned char eScanMode;
  /* 0x0029 */ char Padding_796[7];
  /* 0x0030 */ struct _CLS_CONTAINER_INFORMATION* pinfoContainer;
} CLS_SCAN_CONTEXT, *PCLS_SCAN_CONTEXT; /* size: 0x0038 */

typedef union _UCHAR2
{
  union
  {
    /* 0x0000 */ unsigned char Uchar[2];
    /* 0x0000 */ unsigned short ForceAlignment;
  }; /* size: 0x0002 */
} UCHAR2, *PUCHAR2; /* size: 0x0002 */

typedef union _PS_QUOTA_LIMIT
{
  union
  {
    /* 0x0000 */ unsigned long Limit;
    /* 0x0000 */ union _RATE_QUOTA_LIMIT RateLimit;
  }; /* size: 0x0004 */
} PS_QUOTA_LIMIT, *PPS_QUOTA_LIMIT; /* size: 0x0004 */

typedef struct _WMI_OSVERSION_RECORD
{
  /* 0x0000 */ unsigned long MajorVersion;
  /* 0x0004 */ unsigned long MinorVersion;
  /* 0x0008 */ unsigned long BuildNumber;
  /* 0x000c */ unsigned long PlatformId;
  /* 0x0010 */ short ServicePackMajor;
  /* 0x0012 */ short ServicePackMinor;
  /* 0x0014 */ short SuiteMask;
  /* 0x0016 */ short ProductType;
} WMI_OSVERSION_RECORD, *PWMI_OSVERSION_RECORD; /* size: 0x0018 */

typedef struct _KD_PACKET
{
  /* 0x0000 */ unsigned long PacketLeader;
  /* 0x0004 */ unsigned short PacketType;
  /* 0x0006 */ unsigned short ByteCount;
  /* 0x0008 */ unsigned long PacketId;
  /* 0x000c */ unsigned long Checksum;
} KD_PACKET, *PKD_PACKET; /* size: 0x0010 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
  /* 0x0010 */ unsigned short ClientComputerNameLength;
  /* 0x0012 */ wchar_t ClientComputerBuffer[16];
  /* 0x0032 */ char __PADDING__[6];
} FILE_PIPE_CLIENT_PROCESS_BUFFER_EX, *PFILE_PIPE_CLIENT_PROCESS_BUFFER_EX; /* size: 0x0038 */

typedef struct _WDBGEXTS_THREAD_OS_INFO
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned long ExitStatus;
  /* 0x0008 */ unsigned long PriorityClass;
  /* 0x000c */ unsigned long Priority;
  /* 0x0010 */ unsigned __int64 CreateTime;
  /* 0x0018 */ unsigned __int64 ExitTime;
  /* 0x0020 */ unsigned __int64 KernelTime;
  /* 0x0028 */ unsigned __int64 UserTime;
  /* 0x0030 */ unsigned __int64 StartOffset;
  /* 0x0038 */ unsigned __int64 Affinity;
} WDBGEXTS_THREAD_OS_INFO, *PWDBGEXTS_THREAD_OS_INFO; /* size: 0x0040 */

typedef struct _GET_MEDIA_TYPES
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long MediaInfoCount;
  /* 0x0008 */ struct _DEVICE_MEDIA_INFO MediaInfo[1];
} GET_MEDIA_TYPES, *PGET_MEDIA_TYPES; /* size: 0x0028 */

struct POWER_STATE_HANDLER
{
  /* 0x0000 */ enum POWER_STATE_HANDLER_TYPE Type;
  /* 0x0004 */ unsigned char RtcWake;
  /* 0x0005 */ unsigned char Spare[3];
  /* 0x0008 */ void* Handler /* function */;
  /* 0x0010 */ void* Context;
}; /* size: 0x0018 */

typedef union _BCDE_UNPACKED_DATA_TYPE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long SubType : 24; /* bit position: 0 */
      /* 0x0000 */ unsigned long Format : 4; /* bit position: 24 */
      /* 0x0000 */ unsigned long Class : 4; /* bit position: 28 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long PackedValue;
  }; /* size: 0x0004 */
} BCDE_UNPACKED_DATA_TYPE, *PBCDE_UNPACKED_DATA_TYPE; /* size: 0x0004 */

typedef struct _DISK_PARTITION_INFO
{
  /* 0x0000 */ unsigned long SizeOfPartitionInfo;
  /* 0x0004 */ enum _PARTITION_STYLE PartitionStyle;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Signature;
      /* 0x000c */ unsigned long CheckSum;
    } /* size: 0x0008 */ Mbr;
    struct
    {
      /* 0x0008 */ struct _GUID DiskId;
    } /* size: 0x0010 */ Gpt;
  }; /* size: 0x0010 */
} DISK_PARTITION_INFO, *PDISK_PARTITION_INFO; /* size: 0x0018 */

typedef struct _IOP_REGISTRY_CALLBACK
{
  /* 0x0000 */ unsigned short* KeyName;
  /* 0x0008 */ unsigned long Operations;
  /* 0x000c */ long Padding_797;
  /* 0x0010 */ void* CallbackRoutine /* function */;
  /* 0x0018 */ void* NotifyContext;
  /* 0x0020 */ void* NotifyHandle;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_798;
  /* 0x0030 */ void* InitCallbackRoutine /* function */;
  /* 0x0038 */ void* CleanupCallbackRoutine /* function */;
  /* 0x0040 */ struct _WORK_QUEUE_ITEM NotifyWorkItem;
  /* 0x0060 */ struct _IO_STATUS_BLOCK Iosb;
} IOP_REGISTRY_CALLBACK, *PIOP_REGISTRY_CALLBACK; /* size: 0x0070 */

typedef struct _SYSTEM_AUDIT_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE; /* size: 0x0030 */

typedef struct _WMI_EXTENDED_THREAD_INFORMATION
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ThreadId;
  /* 0x0008 */ void* StackBase;
  /* 0x0010 */ void* StackLimit;
  /* 0x0018 */ void* UserStackBase;
  /* 0x0020 */ void* UserStackLimit;
  union
  {
    /* 0x0028 */ void* StartAddr;
    /* 0x0028 */ unsigned __int64 Affinity;
  }; /* size: 0x0008 */
  /* 0x0030 */ void* Win32StartAddr;
  /* 0x0038 */ void* TebBase;
  /* 0x0040 */ unsigned long SubProcessTag;
  /* 0x0044 */ char BasePriority;
  /* 0x0045 */ unsigned char PagePriority;
  /* 0x0046 */ unsigned char IoPriority;
  /* 0x0047 */ unsigned char Flags;
} WMI_EXTENDED_THREAD_INFORMATION, *PWMI_EXTENDED_THREAD_INFORMATION; /* size: 0x0048 */

typedef union _HV_X64_HYPERCALL_INPUT
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned int CallCode : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned int IsFast : 1; /* bit position: 16 */
        /* 0x0000 */ unsigned int Reserved1 : 15; /* bit position: 17 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned int CountOfElements : 12; /* bit position: 0 */
        /* 0x0004 */ unsigned int Reserved2 : 4; /* bit position: 12 */
        /* 0x0004 */ unsigned int RepStartIndex : 12; /* bit position: 16 */
        /* 0x0004 */ unsigned int Reserved3 : 4; /* bit position: 28 */
      }; /* bitfield */
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 AsUINT64;
  }; /* size: 0x0008 */
} HV_X64_HYPERCALL_INPUT, *PHV_X64_HYPERCALL_INPUT; /* size: 0x0008 */

typedef struct _ATA_PASS_THROUGH_EX
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short AtaFlags;
  /* 0x0004 */ unsigned char PathId;
  /* 0x0005 */ unsigned char TargetId;
  /* 0x0006 */ unsigned char Lun;
  /* 0x0007 */ unsigned char ReservedAsUchar;
  /* 0x0008 */ unsigned long DataTransferLength;
  /* 0x000c */ unsigned long TimeOutValue;
  /* 0x0010 */ unsigned long ReservedAsUlong;
  /* 0x0014 */ long Padding_799;
  /* 0x0018 */ unsigned __int64 DataBufferOffset;
  /* 0x0020 */ unsigned char PreviousTaskFile[8];
  /* 0x0028 */ unsigned char CurrentTaskFile[8];
} ATA_PASS_THROUGH_EX, *PATA_PASS_THROUGH_EX; /* size: 0x0030 */

typedef struct _NBQUEUE_BLOCK
{
  /* 0x0000 */ struct _SLIST_ENTRY SListEntry;
  /* 0x0010 */ unsigned __int64 Next;
  /* 0x0018 */ unsigned __int64 Data;
} NBQUEUE_BLOCK, *PNBQUEUE_BLOCK; /* size: 0x0020 */

typedef struct _WORK_QUEUE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY WorkQueueLinks;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ struct _FILE_OBJECT* FileObject;
      } /* size: 0x0008 */ Read;
      struct
      {
        /* 0x0010 */ struct _SHARED_CACHE_MAP* SharedCacheMap;
      } /* size: 0x0008 */ Write;
      struct
      {
        /* 0x0010 */ struct _KEVENT* Event;
      } /* size: 0x0008 */ Event;
      struct
      {
        /* 0x0010 */ unsigned long Reason;
      } /* size: 0x0004 */ Notification;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Parameters;
  /* 0x0018 */ unsigned char Function;
  /* 0x0019 */ char __PADDING__[7];
} WORK_QUEUE_ENTRY, *PWORK_QUEUE_ENTRY; /* size: 0x0020 */

typedef struct _NOTIFICATION_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0018 */ void* NotificationRoutine /* function */;
} NOTIFICATION_PACKET, *PNOTIFICATION_PACKET; /* size: 0x0020 */

typedef struct _ENTRYHEADER
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY FreeEntryList;
    /* 0x0000 */ struct _LIST_ENTRY InUseEntryList;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct CHUNKHEADER* Chunk;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long RefCount;
  /* 0x0020 */ unsigned long Signature;
  /* 0x0024 */ long __PADDING__[1];
} ENTRYHEADER, *PENTRYHEADER; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA
{
  /* 0x0000 */ unsigned long DeviceInstanceLength;
  /* 0x0004 */ long Padding_800;
  /* 0x0008 */ unsigned short* DeviceInstance;
} PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA, *PPLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA; /* size: 0x0010 */

typedef struct _HEAP_COMMIT_DECOMMIT
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ struct _HEAP_EVENT_COMMIT_DECOMMIT Event;
} HEAP_COMMIT_DECOMMIT, *PHEAP_COMMIT_DECOMMIT; /* size: 0x0040 */

typedef struct _PCI_TYPE1_CFG_BITS
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long Reserved1 : 2; /* bit position: 0 */
          /* 0x0000 */ unsigned long RegisterNumber : 6; /* bit position: 2 */
          /* 0x0000 */ unsigned long FunctionNumber : 3; /* bit position: 8 */
          /* 0x0000 */ unsigned long DeviceNumber : 5; /* bit position: 11 */
          /* 0x0000 */ unsigned long BusNumber : 8; /* bit position: 16 */
          /* 0x0000 */ unsigned long Reserved2 : 7; /* bit position: 24 */
          /* 0x0000 */ unsigned long Enable : 1; /* bit position: 31 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0000 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} PCI_TYPE1_CFG_BITS, *PPCI_TYPE1_CFG_BITS; /* size: 0x0004 */

typedef struct _SET_PARTITION_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned char Persist;
  /* 0x0005 */ unsigned char Reserved1[3];
  /* 0x0008 */ unsigned __int64 Attributes;
  /* 0x0010 */ unsigned __int64 AttributesMask;
} SET_PARTITION_ATTRIBUTES, *PSET_PARTITION_ATTRIBUTES; /* size: 0x0018 */

typedef struct _FILE_PIPE_REMOTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CollectDataTime;
  /* 0x0008 */ unsigned long MaximumCollectionCount;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_REMOTE_INFORMATION, *PFILE_PIPE_REMOTE_INFORMATION; /* size: 0x0010 */

typedef struct _OPLOCK_KEY_ECP_CONTEXT
{
  /* 0x0000 */ struct _GUID OplockKey;
  /* 0x0010 */ unsigned long Reserved;
} OPLOCK_KEY_ECP_CONTEXT, *POPLOCK_KEY_ECP_CONTEXT; /* size: 0x0014 */

typedef struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_MULTIPLE_INPUT
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_801;
  /* 0x0008 */ struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_INPUT* Mappings;
} LSA_SID_NAME_MAPPING_OPERATION_ADD_MULTIPLE_INPUT, *PLSA_SID_NAME_MAPPING_OPERATION_ADD_MULTIPLE_INPUT; /* size: 0x0010 */

typedef struct _PERFINFO_PPM_IDLE_STATE_CHANGE
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned long OldState;
  /* 0x0008 */ unsigned __int64 Processors;
} PERFINFO_PPM_IDLE_STATE_CHANGE, *PPERFINFO_PPM_IDLE_STATE_CHANGE; /* size: 0x0010 */

typedef struct _IDEREGS
{
  /* 0x0000 */ unsigned char bFeaturesReg;
  /* 0x0001 */ unsigned char bSectorCountReg;
  /* 0x0002 */ unsigned char bSectorNumberReg;
  /* 0x0003 */ unsigned char bCylLowReg;
  /* 0x0004 */ unsigned char bCylHighReg;
  /* 0x0005 */ unsigned char bDriveHeadReg;
  /* 0x0006 */ unsigned char bCommandReg;
  /* 0x0007 */ unsigned char bReserved;
} IDEREGS, *PIDEREGS; /* size: 0x0008 */

typedef struct _MAPPED_ADDRESS
{
  /* 0x0000 */ struct _MAPPED_ADDRESS* NextMappedAddress;
  /* 0x0008 */ void* MappedAddress;
  /* 0x0010 */ unsigned long NumberOfBytes;
  /* 0x0014 */ long Padding_802;
  /* 0x0018 */ union _LARGE_INTEGER IoAddress;
  /* 0x0020 */ unsigned long BusNumber;
  /* 0x0024 */ long __PADDING__[1];
} MAPPED_ADDRESS, *PMAPPED_ADDRESS; /* size: 0x0028 */

typedef struct _ALPC_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long SequenceNo;
  /* 0x0008 */ void* PortContext;
} ALPC_BASIC_INFORMATION, *PALPC_BASIC_INFORMATION; /* size: 0x0010 */

struct KERNEL_ERROR_HANDLER_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Padding;
  /* 0x0008 */ void* KernelMcaDelivery /* function */;
  /* 0x0010 */ void* KernelCmcDelivery /* function */;
  /* 0x0018 */ void* KernelCpeDelivery /* function */;
  /* 0x0020 */ void* KernelMceDelivery /* function */;
}; /* size: 0x0028 */

typedef struct _UDP_IDENTIFIER
{
  /* 0x0000 */ unsigned long HwType;
  /* 0x0004 */ unsigned char HwAddress[16];
} UDP_IDENTIFIER, *PUDP_IDENTIFIER; /* size: 0x0014 */

typedef struct _MOUNTMGR_QUERY_AUTO_MOUNT
{
  /* 0x0000 */ enum _MOUNTMGR_AUTO_MOUNT_STATE CurrentState;
} MOUNTMGR_QUERY_AUTO_MOUNT, *PMOUNTMGR_QUERY_AUTO_MOUNT; /* size: 0x0004 */

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long RegistryQuotaAllowed;
  /* 0x0004 */ unsigned long RegistryQuotaUsed;
  /* 0x0008 */ unsigned __int64 PagedPoolSize;
} SYSTEM_REGISTRY_QUOTA_INFORMATION, *PSYSTEM_REGISTRY_QUOTA_INFORMATION; /* size: 0x0010 */

typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NumFileTypeIDs;
  /* 0x000c */ struct _GUID FileTypeID[1];
} DEVICE_DSM_NOTIFICATION_PARAMETERS, *PDEVICE_DSM_NOTIFICATION_PARAMETERS; /* size: 0x001c */

typedef struct _PO_RELATION
{
  /* 0x0000 */ struct _LIST_ENTRY ChildLink;
  /* 0x0010 */ struct _PO_DEVICE_NOTIFY* ChildNotify;
  /* 0x0018 */ struct _LIST_ENTRY ParentLink;
  /* 0x0028 */ struct _PO_DEVICE_NOTIFY* ParentNotify;
} PO_RELATION, *PPO_RELATION; /* size: 0x0030 */

struct POP_FLUSH_VOLUME
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0010 */ long Count;
  /* 0x0014 */ long Padding_803;
  /* 0x0018 */ struct _KEVENT Wait;
}; /* size: 0x0030 */

typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned char IsRemote;
} FILE_IS_REMOTE_DEVICE_INFORMATION, *PFILE_IS_REMOTE_DEVICE_INFORMATION; /* size: 0x0001 */

typedef struct _PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long Number;
  /* 0x0004 */ unsigned long MaxMhz;
  /* 0x0008 */ unsigned long CurrentMhz;
  /* 0x000c */ unsigned long MhzLimit;
  /* 0x0010 */ unsigned long MaxIdleState;
  /* 0x0014 */ unsigned long CurrentIdleState;
} PROCESSOR_POWER_INFORMATION, *PPROCESSOR_POWER_INFORMATION; /* size: 0x0018 */

typedef struct _LDR_SECTION_INFO
{
  /* 0x0000 */ void* SectionHandle;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ long Padding_804;
  /* 0x0010 */ struct _OBJECT_ATTRIBUTES* ObjA;
  /* 0x0018 */ unsigned long SectionPageProtection;
  /* 0x001c */ unsigned long AllocationAttributes;
} LDR_SECTION_INFO, *PLDR_SECTION_INFO; /* size: 0x0020 */

typedef struct _VF_BUGCHECK_WORKAROUND_LOG_ENTRY
{
  /* 0x0000 */ enum VfBugcheckWorkaroundType Type;
  /* 0x0004 */ long Padding_805;
  /* 0x0008 */ unsigned __int64 Param1;
  /* 0x0010 */ unsigned __int64 Param2;
} VF_BUGCHECK_WORKAROUND_LOG_ENTRY, *PVF_BUGCHECK_WORKAROUND_LOG_ENTRY; /* size: 0x0018 */

typedef struct _OB_CALLBACK_CONTEXT_CALL_INSTANCE
{
  /* 0x0000 */ struct _LIST_ENTRY ThreadListEntry;
  /* 0x0010 */ struct _OB_CALLBACK_CONTEXT_BLOCK* ContextBlock;
  /* 0x0018 */ void* CallContext;
} OB_CALLBACK_CONTEXT_CALL_INSTANCE, *POB_CALLBACK_CONTEXT_CALL_INSTANCE; /* size: 0x0020 */

typedef struct _KALPC_HANDLE_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ObjectType;
  /* 0x0008 */ struct _OB_DUPLICATE_OBJECT_STATE* DuplicateContext;
} KALPC_HANDLE_DATA, *PKALPC_HANDLE_DATA; /* size: 0x0010 */

typedef struct _BI_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeSerialNumber;
  /* 0x0004 */ long Padding_806;
  /* 0x0008 */ union _LARGE_INTEGER FileIndex;
} BI_FILE_INFORMATION, *PBI_FILE_INFORMATION; /* size: 0x0010 */

typedef union _KIDT_HANDLER_ADDRESS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short OffsetLow;
      /* 0x0002 */ unsigned short OffsetMiddle;
      /* 0x0004 */ unsigned long OffsetHigh;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 Address;
  }; /* size: 0x0008 */
} KIDT_HANDLER_ADDRESS, *PKIDT_HANDLER_ADDRESS; /* size: 0x0008 */

struct PCI_X_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0002 */ unsigned short DataParityErrorRecoveryEnable : 1; /* bit position: 0 */
          /* 0x0002 */ unsigned short EnableRelaxedOrdering : 1; /* bit position: 1 */
          /* 0x0002 */ unsigned short MaxMemoryReadByteCount : 2; /* bit position: 2 */
          /* 0x0002 */ unsigned short MaxOutstandingSplitTransactions : 3; /* bit position: 4 */
          /* 0x0002 */ unsigned short Reserved : 9; /* bit position: 7 */
        }; /* bitfield */
      } /* size: 0x0002 */ bits;
      /* 0x0002 */ unsigned short AsUSHORT;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Command;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long FunctionNumber : 3; /* bit position: 0 */
          /* 0x0004 */ unsigned long DeviceNumber : 5; /* bit position: 3 */
          /* 0x0004 */ unsigned long BusNumber : 8; /* bit position: 8 */
          /* 0x0004 */ unsigned long Device64Bit : 1; /* bit position: 16 */
          /* 0x0004 */ unsigned long Capable133MHz : 1; /* bit position: 17 */
          /* 0x0004 */ unsigned long SplitCompletionDiscarded : 1; /* bit position: 18 */
          /* 0x0004 */ unsigned long UnexpectedSplitCompletion : 1; /* bit position: 19 */
          /* 0x0004 */ unsigned long DeviceComplexity : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long DesignedMaxMemoryReadByteCount : 2; /* bit position: 21 */
          /* 0x0004 */ unsigned long DesignedMaxOutstandingSplitTransactions : 3; /* bit position: 23 */
          /* 0x0004 */ unsigned long DesignedMaxCumulativeReadSize : 3; /* bit position: 26 */
          /* 0x0004 */ unsigned long ReceivedSplitCompletionErrorMessage : 1; /* bit position: 29 */
          /* 0x0004 */ unsigned long CapablePCIX266 : 1; /* bit position: 30 */
          /* 0x0004 */ unsigned long CapablePCIX533 : 1; /* bit position: 31 */
        }; /* bitfield */
      } /* size: 0x0004 */ bits;
      /* 0x0004 */ unsigned long AsULONG;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Status;
}; /* size: 0x0008 */

struct STORAGE_BREAK_RESERVATION_REQUEST
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char _unused;
  /* 0x0005 */ unsigned char PathId;
  /* 0x0006 */ unsigned char TargetId;
  /* 0x0007 */ unsigned char Lun;
}; /* size: 0x0008 */

typedef struct _WINDBG_EXTENSION_APIS64
{
  /* 0x0000 */ unsigned long nSize;
  /* 0x0004 */ long Padding_807;
  /* 0x0008 */ void* lpOutputRoutine /* function */;
  /* 0x0010 */ void* lpGetExpressionRoutine /* function */;
  /* 0x0018 */ void* lpGetSymbolRoutine /* function */;
  /* 0x0020 */ void* lpDisasmRoutine /* function */;
  /* 0x0028 */ void* lpCheckControlCRoutine /* function */;
  /* 0x0030 */ void* lpReadProcessMemoryRoutine /* function */;
  /* 0x0038 */ void* lpWriteProcessMemoryRoutine /* function */;
  /* 0x0040 */ void* lpGetThreadContextRoutine /* function */;
  /* 0x0048 */ void* lpSetThreadContextRoutine /* function */;
  /* 0x0050 */ void* lpIoctlRoutine /* function */;
  /* 0x0058 */ void* lpStackTraceRoutine /* function */;
} WINDBG_EXTENSION_APIS64, *PWINDBG_EXTENSION_APIS64; /* size: 0x0060 */

struct _PCW_INSTANCE;

typedef struct _KINTERRUPT_ALIGNED
{
  union
  {
    /* 0x0000 */ struct _SLIST_ENTRY ListEntry;
    /* 0x0000 */ struct _KINTERRUPT Interrupt;
  }; /* size: 0x00a0 */
  /* 0x00a0 */ struct _KPRCB* Prcb;
  /* 0x00a8 */ long __PADDING__[6];
} KINTERRUPT_ALIGNED, *PKINTERRUPT_ALIGNED; /* size: 0x00c0 */

typedef struct _POOL_DESCRIPTOR
{
  /* 0x0000 */ enum _POOL_TYPE PoolType;
  /* 0x0004 */ long Padding_808;
  union
  {
    /* 0x0008 */ struct _KGUARDED_MUTEX PagedLock;
    /* 0x0008 */ unsigned __int64 NonPagedLock;
  }; /* size: 0x0038 */
  /* 0x0040 */ volatile long RunningAllocs;
  /* 0x0044 */ volatile long RunningDeAllocs;
  /* 0x0048 */ volatile long TotalBigPages;
  /* 0x004c */ volatile long ThreadsProcessingDeferrals;
  /* 0x0050 */ volatile unsigned __int64 TotalBytes;
  /* 0x0058 */ long Padding_809[10];
  /* 0x0080 */ unsigned long PoolIndex;
  /* 0x0084 */ long Padding_810[15];
  /* 0x00c0 */ volatile long TotalPages;
  /* 0x00c4 */ long Padding_811[15];
  /* 0x0100 */ void** volatile PendingFrees;
  /* 0x0108 */ volatile long PendingFreeDepth;
  /* 0x010c */ long Padding_812[13];
  /* 0x0140 */ struct _LIST_ENTRY ListHeads[256];
} POOL_DESCRIPTOR, *PPOOL_DESCRIPTOR; /* size: 0x1140 */

typedef struct _KCRMPROTOCOL
{
  /* 0x0000 */ unsigned long cookie;
  /* 0x0004 */ long RefCount;
  /* 0x0008 */ struct _GUID ProtocolId;
  /* 0x0018 */ struct _KMUTANT Mutex;
  /* 0x0050 */ struct _LIST_ENTRY NextSameRm;
  /* 0x0060 */ struct _LIST_ENTRY ProtocolsListEntry;
  /* 0x0070 */ struct _KRESOURCEMANAGER* ResourceManager;
  /* 0x0078 */ unsigned long StaticInfoLength;
  /* 0x007c */ long Padding_813;
  /* 0x0080 */ void* StaticInfoBuffer;
} KCRMPROTOCOL, *PKCRMPROTOCOL; /* size: 0x0088 */

typedef struct _ETW_SESSION_PERF_COUNTERS
{
  /* 0x0000 */ long BufferMemoryPagedPool;
  /* 0x0004 */ long BufferMemoryNonPagedPool;
  /* 0x0008 */ unsigned __int64 EventsLoggedCount;
  /* 0x0010 */ long EventsLost;
  /* 0x0014 */ long NumConsumers;
} ETW_SESSION_PERF_COUNTERS, *PETW_SESSION_PERF_COUNTERS; /* size: 0x0018 */

typedef struct _MMSESSION
{
  /* 0x0000 */ struct _KGUARDED_MUTEX SystemSpaceViewLock;
  /* 0x0038 */ struct _KGUARDED_MUTEX* SystemSpaceViewLockPointer;
  /* 0x0040 */ struct _MMVIEW* SystemSpaceViewTable;
  /* 0x0048 */ unsigned long SystemSpaceHashSize;
  /* 0x004c */ unsigned long SystemSpaceHashEntries;
  /* 0x0050 */ unsigned long SystemSpaceHashKey;
  /* 0x0054 */ unsigned long BitmapFailures;
} MMSESSION, *PMMSESSION; /* size: 0x0058 */

typedef struct _MM_PAGED_POOL_INFO
{
  /* 0x0000 */ struct _KGUARDED_MUTEX Mutex;
  /* 0x0038 */ struct _RTL_BITMAP PagedPoolAllocationMap;
  /* 0x0048 */ struct _MMPTE* FirstPteForPagedPool;
  /* 0x0050 */ unsigned long PagedPoolHint;
  /* 0x0054 */ long Padding_814;
  /* 0x0058 */ volatile unsigned __int64 PagedPoolCommit;
  /* 0x0060 */ volatile unsigned __int64 AllocatedPagedPool;
} MM_PAGED_POOL_INFO, *PMM_PAGED_POOL_INFO; /* size: 0x0068 */

typedef struct _MI_SPECIAL_POOL
{
  /* 0x0000 */ struct _MMPTE* PteBase;
  /* 0x0008 */ unsigned __int64 Lock;
  /* 0x0010 */ struct _MI_SPECIAL_POOL_PTE_LIST Paged;
  /* 0x0020 */ struct _MI_SPECIAL_POOL_PTE_LIST NonPaged;
  /* 0x0030 */ volatile __int64 PagesInUse;
  /* 0x0038 */ struct _RTL_BITMAP SpecialPoolPdes;
} MI_SPECIAL_POOL, *PMI_SPECIAL_POOL; /* size: 0x0048 */

typedef struct _MI_SYSTEM_PTE_TYPE
{
  /* 0x0000 */ struct _RTL_BITMAP Bitmap;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Hint;
  /* 0x0018 */ struct _MMPTE* BasePte;
  /* 0x0020 */ unsigned long* FailureCount;
  /* 0x0028 */ struct _MMSUPPORT* Vm;
  /* 0x0030 */ volatile long TotalSystemPtes;
  /* 0x0034 */ volatile long TotalFreeSystemPtes;
  /* 0x0038 */ volatile long CachedPteCount;
  /* 0x003c */ unsigned long PteFailures;
  union
  {
    /* 0x0040 */ unsigned __int64 SpinLock;
    /* 0x0040 */ struct _KGUARDED_MUTEX* GlobalMutex;
  }; /* size: 0x0008 */
} MI_SYSTEM_PTE_TYPE, *PMI_SYSTEM_PTE_TYPE; /* size: 0x0048 */

typedef struct _MM_SESSION_SPACE
{
  /* 0x0000 */ volatile long ReferenceCount;
  union
  {
    union
    {
      /* 0x0004 */ unsigned long LongFlags;
      /* 0x0004 */ struct _MM_SESSION_SPACE_FLAGS Flags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ volatile long ProcessReferenceToSession;
  /* 0x0010 */ struct _LIST_ENTRY ProcessList;
  /* 0x0020 */ union _LARGE_INTEGER LastProcessSwappedOutTime;
  /* 0x0028 */ unsigned __int64 SessionPageDirectoryIndex;
  /* 0x0030 */ volatile unsigned __int64 NonPagablePages;
  /* 0x0038 */ volatile unsigned __int64 CommittedPages;
  /* 0x0040 */ void* PagedPoolStart;
  /* 0x0048 */ void* PagedPoolEnd;
  /* 0x0050 */ void* SessionObject;
  /* 0x0058 */ void* SessionObjectHandle;
  /* 0x0060 */ volatile long ResidentProcessCount;
  /* 0x0064 */ unsigned long SessionPoolAllocationFailures[4];
  /* 0x0074 */ long Padding_815;
  /* 0x0078 */ struct _LIST_ENTRY ImageList;
  /* 0x0088 */ unsigned long LocaleId;
  /* 0x008c */ unsigned long AttachCount;
  /* 0x0090 */ struct _KGATE AttachGate;
  /* 0x00a8 */ struct _LIST_ENTRY WsListEntry;
  /* 0x00b8 */ long Padding_816[2];
  /* 0x00c0 */ struct _GENERAL_LOOKASIDE Lookaside[21];
  /* 0x0b40 */ struct _MMSESSION Session;
  /* 0x0b98 */ struct _MM_PAGED_POOL_INFO PagedPoolInfo;
  /* 0x0c00 */ struct _MMSUPPORT Vm;
  /* 0x0c88 */ struct _MMWSLE* Wsle;
  /* 0x0c90 */ void* volatile DriverUnload /* function */;
  /* 0x0c98 */ long Padding_817[10];
  /* 0x0cc0 */ struct _POOL_DESCRIPTOR PagedPool;
  /* 0x1e00 */ struct _MMPTE PageDirectory;
  /* 0x1e08 */ struct _KGUARDED_MUTEX SessionVaLock;
  /* 0x1e40 */ struct _RTL_BITMAP DynamicVaBitMap;
  /* 0x1e50 */ unsigned long DynamicVaHint;
  /* 0x1e54 */ long Padding_818;
  /* 0x1e58 */ struct _MI_SPECIAL_POOL SpecialPool;
  /* 0x1ea0 */ struct _KGUARDED_MUTEX SessionPteLock;
  /* 0x1ed8 */ long PoolBigEntriesInUse;
  /* 0x1edc */ unsigned long PagedPoolPdeCount;
  /* 0x1ee0 */ unsigned long SpecialPoolPdeCount;
  /* 0x1ee4 */ unsigned long DynamicSessionPdeCount;
  /* 0x1ee8 */ struct _MI_SYSTEM_PTE_TYPE SystemPteInfo;
  /* 0x1f30 */ void* PoolTrackTableExpansion;
  /* 0x1f38 */ unsigned __int64 PoolTrackTableExpansionSize;
  /* 0x1f40 */ void* PoolTrackBigPages;
  /* 0x1f48 */ unsigned __int64 PoolTrackBigPagesSize;
  /* 0x1f50 */ enum _IO_SESSION_STATE IoState;
  /* 0x1f54 */ unsigned long IoStateSequence;
  /* 0x1f58 */ struct _KEVENT IoNotificationEvent;
  /* 0x1f70 */ struct _PS_CPU_QUOTA_BLOCK* CpuQuotaBlock;
  /* 0x1f78 */ long __PADDING__[2];
} MM_SESSION_SPACE, *PMM_SESSION_SPACE; /* size: 0x1f80 */

typedef struct _KAPC_RECORD
{
  /* 0x0000 */ void* NormalRoutine /* function */;
  /* 0x0008 */ void* NormalContext;
  /* 0x0010 */ void* SystemArgument1;
  /* 0x0018 */ void* SystemArgument2;
} KAPC_RECORD, *PKAPC_RECORD; /* size: 0x0020 */

struct PPM_IDLESTATE_EVENT
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned long OldState;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

struct PPM_WMI_LEGACY_PERFSTATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long PercentFrequency;
}; /* size: 0x000c */

typedef struct _OBCB
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteSize;
  /* 0x0004 */ unsigned long ByteLength;
  /* 0x0008 */ union _LARGE_INTEGER FileOffset;
  /* 0x0010 */ struct _BCB* Bcbs[1];
} OBCB, *POBCB; /* size: 0x0018 */

typedef struct _DEVICE_TRIM_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char TrimEnabled;
  /* 0x0009 */ char __PADDING__[3];
} DEVICE_TRIM_DESCRIPTOR, *PDEVICE_TRIM_DESCRIPTOR; /* size: 0x000c */

struct MOVE_FILE_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _FILE_DIRECTORY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ wchar_t FileName[1];
  /* 0x0042 */ char __PADDING__[6];
} FILE_DIRECTORY_INFORMATION, *PFILE_DIRECTORY_INFORMATION; /* size: 0x0048 */

struct CREATE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 MaximumSize;
  /* 0x0008 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0010 */

typedef struct _TP_CALLBACK_ENVIRON_V3
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_819;
  /* 0x0008 */ struct _TP_POOL* Pool;
  /* 0x0010 */ struct _TP_CLEANUP_GROUP* CleanupGroup;
  /* 0x0018 */ void* CleanupGroupCancelCallback /* function */;
  /* 0x0020 */ void* RaceDll;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0030 */ void* FinalizationCallback /* function */;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long Flags;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0038 */ unsigned long LongFunction : 1; /* bit position: 0 */
          /* 0x0038 */ unsigned long Persistent : 1; /* bit position: 1 */
          /* 0x0038 */ unsigned long Private : 30; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ s;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x003c */ enum _TP_CALLBACK_PRIORITY CallbackPriority;
  /* 0x0040 */ unsigned long Size;
  /* 0x0044 */ long __PADDING__[1];
} TP_CALLBACK_ENVIRON_V3, *PTP_CALLBACK_ENVIRON_V3; /* size: 0x0048 */

typedef struct _SCSI_PASS_THROUGH
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned char ScsiStatus;
  /* 0x0003 */ unsigned char PathId;
  /* 0x0004 */ unsigned char TargetId;
  /* 0x0005 */ unsigned char Lun;
  /* 0x0006 */ unsigned char CdbLength;
  /* 0x0007 */ unsigned char SenseInfoLength;
  /* 0x0008 */ unsigned char DataIn;
  /* 0x0009 */ char Padding_820[3];
  /* 0x000c */ unsigned long DataTransferLength;
  /* 0x0010 */ unsigned long TimeOutValue;
  /* 0x0014 */ long Padding_821;
  /* 0x0018 */ unsigned __int64 DataBufferOffset;
  /* 0x0020 */ unsigned long SenseInfoOffset;
  /* 0x0024 */ unsigned char Cdb[16];
  /* 0x0034 */ long __PADDING__[1];
} SCSI_PASS_THROUGH, *PSCSI_PASS_THROUGH; /* size: 0x0038 */

struct PPM_THERMAL_POLICY_EVENT
{
  /* 0x0000 */ unsigned char Mode;
  /* 0x0001 */ char Padding_822[7];
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short CorrectableErrorEnable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short NonFatalErrorEnable : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short FatalErrorEnable : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short UnsupportedRequestErrorEnable : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short EnableRelaxedOrder : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned short MaxPayloadSize : 3; /* bit position: 5 */
      /* 0x0000 */ unsigned short ExtendedTagEnable : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned short PhantomFunctionsEnable : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned short AuxPowerEnable : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned short NoSnoopEnable : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned short MaxReadRequestSize : 3; /* bit position: 12 */
      /* 0x0000 */ unsigned short BridgeConfigRetryEnable : 1; /* bit position: 15 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_DEVICE_CONTROL_REGISTER, *PPCI_EXPRESS_DEVICE_CONTROL_REGISTER; /* size: 0x0002 */

typedef union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long MaximumLinkSpeed : 4; /* bit position: 0 */
      /* 0x0000 */ unsigned long MaximumLinkWidth : 6; /* bit position: 4 */
      /* 0x0000 */ unsigned long ActiveStatePMSupport : 2; /* bit position: 10 */
      /* 0x0000 */ unsigned long L0sExitLatency : 3; /* bit position: 12 */
      /* 0x0000 */ unsigned long L1ExitLatency : 3; /* bit position: 15 */
      /* 0x0000 */ unsigned long ClockPowerManagement : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long SurpriseDownErrorReportingCapable : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long DataLinkLayerActiveReportingCapable : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long Rsvd : 3; /* bit position: 21 */
      /* 0x0000 */ unsigned long PortNumber : 8; /* bit position: 24 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_LINK_CAPABILITIES_REGISTER, *PPCI_EXPRESS_LINK_CAPABILITIES_REGISTER; /* size: 0x0004 */

typedef union _PCI_EXPRESS_LINK_STATUS_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short LinkSpeed : 4; /* bit position: 0 */
      /* 0x0000 */ unsigned short LinkWidth : 6; /* bit position: 4 */
      /* 0x0000 */ unsigned short Undefined : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned short LinkTraining : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned short SlotClockConfig : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned short DataLinkLayerActive : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned short Rsvd : 2; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AsUSHORT;
  }; /* size: 0x0002 */
} PCI_EXPRESS_LINK_STATUS_REGISTER, *PPCI_EXPRESS_LINK_STATUS_REGISTER; /* size: 0x0002 */

typedef union _PCI_EXPRESS_ROOT_STATUS_REGISTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long PMERequestorId : 16; /* bit position: 0 */
      /* 0x0000 */ unsigned long PMEStatus : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long PMEPending : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long Rsvd : 14; /* bit position: 18 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} PCI_EXPRESS_ROOT_STATUS_REGISTER, *PPCI_EXPRESS_ROOT_STATUS_REGISTER; /* size: 0x0004 */

typedef struct _PCI_EXPRESS_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  /* 0x0002 */ union _PCI_EXPRESS_CAPABILITIES_REGISTER ExpressCapabilities;
  /* 0x0004 */ union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER DeviceCapabilities;
  /* 0x0008 */ union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER DeviceControl;
  /* 0x000a */ union _PCI_EXPRESS_DEVICE_STATUS_REGISTER DeviceStatus;
  /* 0x000c */ union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER LinkCapabilities;
  /* 0x0010 */ union _PCI_EXPRESS_LINK_CONTROL_REGISTER LinkControl;
  /* 0x0012 */ union _PCI_EXPRESS_LINK_STATUS_REGISTER LinkStatus;
  /* 0x0014 */ union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER SlotCapabilities;
  /* 0x0018 */ union _PCI_EXPRESS_SLOT_CONTROL_REGISTER SlotControl;
  /* 0x001a */ union _PCI_EXPRESS_SLOT_STATUS_REGISTER SlotStatus;
  /* 0x001c */ union _PCI_EXPRESS_ROOT_CONTROL_REGISTER RootControl;
  /* 0x001e */ union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER RootCapabilities;
  /* 0x0020 */ union _PCI_EXPRESS_ROOT_STATUS_REGISTER RootStatus;
} PCI_EXPRESS_CAPABILITY, *PPCI_EXPRESS_CAPABILITY; /* size: 0x0024 */

typedef struct _DISK_HISTOGRAM
{
  /* 0x0000 */ union _LARGE_INTEGER DiskSize;
  /* 0x0008 */ union _LARGE_INTEGER Start;
  /* 0x0010 */ union _LARGE_INTEGER End;
  /* 0x0018 */ union _LARGE_INTEGER Average;
  /* 0x0020 */ union _LARGE_INTEGER AverageRead;
  /* 0x0028 */ union _LARGE_INTEGER AverageWrite;
  /* 0x0030 */ unsigned long Granularity;
  /* 0x0034 */ unsigned long Size;
  /* 0x0038 */ unsigned long ReadCount;
  /* 0x003c */ unsigned long WriteCount;
  /* 0x0040 */ struct _HISTOGRAM_BUCKET* Histogram;
} DISK_HISTOGRAM, *PDISK_HISTOGRAM; /* size: 0x0048 */

typedef struct _IOV_IRP_TRACE
{
  /* 0x0000 */ struct _IRP* Irp;
  /* 0x0008 */ struct _KTHREAD* Thread;
  union
  {
    struct
    {
      /* 0x0010 */ short KernelApcDisable;
      /* 0x0012 */ short SpecialApcDisable;
    }; /* size: 0x0004 */
    /* 0x0010 */ unsigned long CombinedApcDisable;
  }; /* size: 0x0004 */
  /* 0x0014 */ unsigned char Irql;
  /* 0x0015 */ char Padding_823[3];
  /* 0x0018 */ void* StackTrace[13];
} IOV_IRP_TRACE, *PIOV_IRP_TRACE; /* size: 0x0080 */

typedef struct _DUMP_UNLOADED_DRIVERS
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ wchar_t DriverName[12];
  /* 0x0028 */ void* StartAddress;
  /* 0x0030 */ void* EndAddress;
} DUMP_UNLOADED_DRIVERS, *PDUMP_UNLOADED_DRIVERS; /* size: 0x0038 */

typedef struct _POP_POWER_SETTING_VALUES
{
  /* 0x0000 */ unsigned long StructureSize;
  /* 0x0004 */ struct _SYSTEM_POWER_POLICY PopPolicy;
  /* 0x00ec */ enum SYSTEM_POWER_CONDITION CurrentAcDcPowerState;
  /* 0x00f0 */ unsigned char AwayModeEnabled;
  /* 0x00f1 */ unsigned char AwayModeEngaged;
  /* 0x00f2 */ unsigned char AwayModePolicyAllowed;
  /* 0x00f3 */ char Padding_824;
  /* 0x00f4 */ volatile long AwayModeIgnoreUserPresent;
  /* 0x00f8 */ volatile long AwayModeIgnoreAction;
  /* 0x00fc */ unsigned char DisableFastS4;
  /* 0x00fd */ unsigned char DisableStandbyStates;
  /* 0x00fe */ unsigned char DisableRTCWake;
  /* 0x00ff */ char Padding_825;
  /* 0x0100 */ unsigned long UnattendSleepTimeout;
  /* 0x0104 */ volatile unsigned long DiskIgnoreTime;
  /* 0x0108 */ volatile unsigned long DeviceIdlePolicy;
  /* 0x010c */ unsigned char AllowThrottling;
  /* 0x010d */ unsigned char PerfHistoryCount;
  /* 0x010e */ char Padding_826[2];
  /* 0x0110 */ unsigned long PerfTimeCheck;
  /* 0x0114 */ unsigned long PerfIncreaseTime;
  /* 0x0118 */ unsigned long PerfDecreaseTime;
  /* 0x011c */ unsigned char PerfIncreaseThreshold;
  /* 0x011d */ unsigned char PerfDecreaseThreshold;
  /* 0x011e */ unsigned char PerfIncreasePolicy;
  /* 0x011f */ unsigned char PerfDecreasePolicy;
  /* 0x0120 */ unsigned char PerfMinPolicy;
  /* 0x0121 */ unsigned char PerfMaxPolicy;
  /* 0x0122 */ char Padding_827[2];
  /* 0x0124 */ unsigned long PerfBoostPolicy;
  /* 0x0128 */ unsigned char CoreParkingIncreaseThreshold;
  /* 0x0129 */ unsigned char CoreParkingDecreaseThreshold;
  /* 0x012a */ unsigned char CoreParkingMaxCores;
  /* 0x012b */ unsigned char CoreParkingMinCores;
  /* 0x012c */ unsigned char CoreParkingIncreasePolicy;
  /* 0x012d */ unsigned char CoreParkingDecreasePolicy;
  /* 0x012e */ char Padding_828[2];
  /* 0x0130 */ unsigned long CoreParkingIncreaseTime;
  /* 0x0134 */ unsigned long CoreParkingDecreaseTime;
  /* 0x0138 */ unsigned char CoreParkingAffinityHistoryDecreaseFactor;
  /* 0x0139 */ char Padding_829;
  /* 0x013a */ unsigned short CoreParkingAffinityHistoryThreshold;
  /* 0x013c */ unsigned short CoreParkingAffinityWeighting;
  /* 0x013e */ unsigned char CoreParkingOverUtilizationHistoryDecreaseFactor;
  /* 0x013f */ char Padding_830;
  /* 0x0140 */ unsigned short CoreParkingOverUtilizationHistoryThreshold;
  /* 0x0142 */ unsigned short CoreParkingOverUtilizationWeighting;
  /* 0x0144 */ unsigned char CoreParkingOverUtilizationThreshold;
  /* 0x0145 */ unsigned char ParkingCoreOverride;
  /* 0x0146 */ unsigned char ParkingPerfState;
  /* 0x0147 */ char Padding_831;
  /* 0x0148 */ unsigned long VideoDimTimeout;
  /* 0x014c */ unsigned long VideoNormalBrightness;
  /* 0x0150 */ unsigned long VideoDimBrightness;
  /* 0x0154 */ unsigned char SwitchShutdownForced;
  /* 0x0155 */ char __PADDING__[3];
} POP_POWER_SETTING_VALUES, *PPOP_POWER_SETTING_VALUES; /* size: 0x0158 */

typedef struct _GET_PARTITION_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Reserved1;
  /* 0x0008 */ unsigned __int64 Attributes;
} GET_PARTITION_ATTRIBUTES, *PGET_PARTITION_ATTRIBUTES; /* size: 0x0010 */

typedef struct _IMAGE_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long StartingAddress;
  /* 0x0004 */ unsigned long EndingAddress;
  /* 0x0008 */ unsigned long EndOfPrologue;
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY; /* size: 0x000c */

typedef struct _WMI_SYSTEMRANGE_RECORD
{
  /* 0x0000 */ unsigned __int64 SystemRangeStart;
  /* 0x0008 */ unsigned __int64 Reserved;
} WMI_SYSTEMRANGE_RECORD, *PWMI_SYSTEMRANGE_RECORD; /* size: 0x0010 */

struct PPM_THERMALCHANGE_EVENT
{
  /* 0x0000 */ unsigned long ThermalConstraint;
  /* 0x0004 */ long Padding_832;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct _IDLE_DETECTOR
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ void* IdleDetectionWorker /* function */;
} IDLE_DETECTOR, *PIDLE_DETECTOR; /* size: 0x0018 */

typedef struct _MOUNTDEV_NAME
{
  /* 0x0000 */ unsigned short NameLength;
  /* 0x0002 */ wchar_t Name[1];
} MOUNTDEV_NAME, *PMOUNTDEV_NAME; /* size: 0x0004 */

typedef struct _WMI_IMAGEID_INFORMATION
{
  /* 0x0000 */ void* ImageBase;
  /* 0x0008 */ unsigned __int64 ImageSize;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ wchar_t OriginalFileName[1];
  /* 0x001a */ char __PADDING__[6];
} WMI_IMAGEID_INFORMATION, *PWMI_IMAGEID_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP
{
  /* 0x0000 */ unsigned long NodeProximityId;
  /* 0x0004 */ unsigned short NodeNumber;
  /* 0x0006 */ char __PADDING__[2];
} SYSTEM_NUMA_PROXIMITY_MAP, *PSYSTEM_NUMA_PROXIMITY_MAP; /* size: 0x0008 */

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_833;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ union _LARGE_INTEGER OldLastWriteTime;
  /* 0x0030 */ union _LARGE_INTEGER NewLastWriteTime;
} JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION, *PJOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION; /* size: 0x0038 */

typedef struct _STORAGE_PREDICT_FAILURE
{
  /* 0x0000 */ unsigned long PredictFailure;
  /* 0x0004 */ unsigned char VendorSpecific[512];
} STORAGE_PREDICT_FAILURE, *PSTORAGE_PREDICT_FAILURE; /* size: 0x0204 */

typedef struct _WINDBG_OLDKD_EXTENSION_APIS
{
  /* 0x0000 */ unsigned long nSize;
  /* 0x0004 */ long Padding_834;
  /* 0x0008 */ void* lpOutputRoutine /* function */;
  /* 0x0010 */ void* lpGetExpressionRoutine /* function */;
  /* 0x0018 */ void* lpGetSymbolRoutine /* function */;
  /* 0x0020 */ void* lpDisasmRoutine /* function */;
  /* 0x0028 */ void* lpCheckControlCRoutine /* function */;
  /* 0x0030 */ void* lpReadVirtualMemRoutine /* function */;
  /* 0x0038 */ void* lpWriteVirtualMemRoutine /* function */;
  /* 0x0040 */ void* lpReadPhysicalMemRoutine /* function */;
  /* 0x0048 */ void* lpWritePhysicalMemRoutine /* function */;
} WINDBG_OLDKD_EXTENSION_APIS, *PWINDBG_OLDKD_EXTENSION_APIS; /* size: 0x0050 */

typedef struct _SCSI_PASS_THROUGH32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned char ScsiStatus;
  /* 0x0003 */ unsigned char PathId;
  /* 0x0004 */ unsigned char TargetId;
  /* 0x0005 */ unsigned char Lun;
  /* 0x0006 */ unsigned char CdbLength;
  /* 0x0007 */ unsigned char SenseInfoLength;
  /* 0x0008 */ unsigned char DataIn;
  /* 0x0009 */ char Padding_835[3];
  /* 0x000c */ unsigned long DataTransferLength;
  /* 0x0010 */ unsigned long TimeOutValue;
  /* 0x0014 */ unsigned int DataBufferOffset;
  /* 0x0018 */ unsigned long SenseInfoOffset;
  /* 0x001c */ unsigned char Cdb[16];
} SCSI_PASS_THROUGH32, *PSCSI_PASS_THROUGH32; /* size: 0x002c */

typedef struct _SUMMARY_DUMP64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long ValidDump;
  /* 0x0008 */ unsigned long DumpOptions;
  /* 0x000c */ unsigned long HeaderSize;
  /* 0x0010 */ unsigned long BitmapSize;
  /* 0x0014 */ unsigned long Pages;
  struct
  {
    /* 0x0018 */ unsigned long SizeOfBitMap;
    /* 0x0004 */ long Padding_836;
    /* 0x0020 */ unsigned __int64 _reserved0;
    /* 0x0028 */ unsigned long* Buffer /* zero-length array */;
  } /* size: 0x0010 */ Bitmap;
} SUMMARY_DUMP64, *PSUMMARY_DUMP64; /* size: 0x0028 */

typedef struct _TRIAGE_DUMP64
{
  /* 0x0000 */ unsigned long ServicePackBuild;
  /* 0x0004 */ unsigned long SizeOfDump;
  /* 0x0008 */ unsigned long ValidOffset;
  /* 0x000c */ unsigned long ContextOffset;
  /* 0x0010 */ unsigned long ExceptionOffset;
  /* 0x0014 */ unsigned long MmOffset;
  /* 0x0018 */ unsigned long UnloadedDriversOffset;
  /* 0x001c */ unsigned long PrcbOffset;
  /* 0x0020 */ unsigned long ProcessOffset;
  /* 0x0024 */ unsigned long ThreadOffset;
  /* 0x0028 */ unsigned long CallStackOffset;
  /* 0x002c */ unsigned long SizeOfCallStack;
  /* 0x0030 */ unsigned long DriverListOffset;
  /* 0x0034 */ unsigned long DriverCount;
  /* 0x0038 */ unsigned long StringPoolOffset;
  /* 0x003c */ unsigned long StringPoolSize;
  /* 0x0040 */ unsigned long BrokenDriverOffset;
  /* 0x0044 */ unsigned long TriageOptions;
  /* 0x0048 */ unsigned __int64 TopOfStack;
  union
  {
    struct
    {
      /* 0x0050 */ unsigned long BStoreOffset;
      /* 0x0054 */ unsigned long SizeOfBStore;
      /* 0x0058 */ unsigned __int64 LimitOfBStore;
    } /* size: 0x0010 */ Ia64;
  } /* size: 0x0010 */ ArchitectureSpecific;
  /* 0x0060 */ unsigned __int64 DataPageAddress;
  /* 0x0068 */ unsigned long DataPageOffset;
  /* 0x006c */ unsigned long DataPageSize;
  /* 0x0070 */ unsigned long DebuggerDataOffset;
  /* 0x0074 */ unsigned long DebuggerDataSize;
  /* 0x0078 */ unsigned long DataBlocksOffset;
  /* 0x007c */ unsigned long DataBlocksCount;
} TRIAGE_DUMP64, *PTRIAGE_DUMP64; /* size: 0x0080 */

typedef struct _MEMORY_DUMP64
{
  /* 0x0000 */ struct _DUMP_HEADER64 Header;
  union
  {
    /* 0x2000 */ struct _FULL_DUMP64 Full;
    /* 0x2000 */ struct _SUMMARY_DUMP64 Summary;
    /* 0x2000 */ struct _TRIAGE_DUMP64 Triage;
  }; /* size: 0x0080 */
} MEMORY_DUMP64, *PMEMORY_DUMP64; /* size: 0x2080 */

typedef struct _FILE_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef struct _PREVENT_MEDIA_REMOVAL
{
  /* 0x0000 */ unsigned char PreventMediaRemoval;
} PREVENT_MEDIA_REMOVAL, *PPREVENT_MEDIA_REMOVAL; /* size: 0x0001 */

typedef struct _FAR_TARGET_32
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned short Selector;
} FAR_TARGET_32, *PFAR_TARGET_32; /* size: 0x0006 */

typedef struct _PROCESSOR_START_BLOCK
{
  /* 0x0000 */ struct _FAR_JMP_16 Jmp;
  /* 0x0004 */ unsigned long CompletionFlag;
  /* 0x0008 */ struct _PSEUDO_DESCRIPTOR_32 Gdt32;
  /* 0x000e */ struct _PSEUDO_DESCRIPTOR_32 Idt32;
  /* 0x0014 */ long Padding_837;
  /* 0x0018 */ union _KGDTENTRY64 Gdt[4];
  /* 0x0058 */ unsigned __int64 TiledCr3;
  /* 0x0060 */ struct _FAR_TARGET_32 PmTarget;
  /* 0x0066 */ struct _FAR_TARGET_32 LmIdentityTarget;
  /* 0x006c */ long Padding_838;
  /* 0x0070 */ void* LmTarget;
  /* 0x0078 */ struct _PROCESSOR_START_BLOCK* SelfMap;
  /* 0x0080 */ unsigned __int64 MsrPat;
  /* 0x0088 */ unsigned __int64 MsrEFER;
  /* 0x0090 */ struct _KPROCESSOR_STATE ProcessorState;
} PROCESSOR_START_BLOCK, *PPROCESSOR_START_BLOCK; /* size: 0x0640 */

typedef struct _RM_SEND_COMMAND_TO_LSA_PARAMS
{
  /* 0x0000 */ enum _LSA_COMMAND_NUMBER LsaCommandNumber;
  /* 0x0004 */ unsigned long LsaCommandParamsLength;
  /* 0x0008 */ unsigned char LsaCommandParams[464];
} RM_SEND_COMMAND_TO_LSA_PARAMS, *PRM_SEND_COMMAND_TO_LSA_PARAMS; /* size: 0x01d8 */

typedef struct _RTL_UNLOAD_EVENT_TRACE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ unsigned long Version[2];
  /* 0x0064 */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE, *PRTL_UNLOAD_EVENT_TRACE; /* size: 0x0068 */

struct POP_POWER_SETTING_REGISTRATION
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned long Tag;
  /* 0x0014 */ long Padding_839;
  /* 0x0018 */ struct _KTHREAD* volatile CallbackThread;
  /* 0x0020 */ volatile unsigned char UnregisterOnReturn;
  /* 0x0021 */ volatile unsigned char UnregisterPending;
  /* 0x0022 */ char Padding_840[2];
  /* 0x0024 */ struct _GUID Guid;
  /* 0x0034 */ long Padding_841;
  /* 0x0038 */ struct POP_POWER_SETTING_VALUE* LastValue;
  /* 0x0040 */ void* Callback /* function */;
  /* 0x0048 */ void* Context;
  /* 0x0050 */ struct _DEVICE_OBJECT* DeviceObject;
}; /* size: 0x0058 */

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
  /* 0x0008 */ unsigned long UiAccess;
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION; /* size: 0x000c */

typedef struct _SEP_LOGON_SESSION_TOKEN
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _TOKEN* Token;
} SEP_LOGON_SESSION_TOKEN, *PSEP_LOGON_SESSION_TOKEN; /* size: 0x0018 */

typedef struct _WMIP_SYNCHRONOUS_ETW
{
  /* 0x0000 */ struct _LIST_ENTRY EtwHead;
  /* 0x0010 */ struct _LIST_ENTRY WaitHead;
} WMIP_SYNCHRONOUS_ETW, *PWMIP_SYNCHRONOUS_ETW; /* size: 0x0020 */

typedef struct _DBGKD_WAIT_STATE_CHANGE32
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  /* 0x0008 */ unsigned long NumberProcessors;
  /* 0x000c */ unsigned long Thread;
  /* 0x0010 */ unsigned long ProgramCounter;
  union
  {
    union
    {
      /* 0x0014 */ struct _DBGKM_EXCEPTION32 Exception;
      /* 0x0014 */ struct _DBGKD_LOAD_SYMBOLS32 LoadSymbols;
    }; /* size: 0x0054 */
  } /* size: 0x0054 */ u;
} DBGKD_WAIT_STATE_CHANGE32, *PDBGKD_WAIT_STATE_CHANGE32; /* size: 0x0068 */

typedef struct _ALPC_SERVER_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* ThreadHandle;
    } /* size: 0x0008 */ In;
    struct
    {
      /* 0x0000 */ unsigned char ThreadBlocked;
      /* 0x0001 */ char Padding_842[7];
      /* 0x0008 */ void* ConnectedProcessId;
      /* 0x0010 */ struct _UNICODE_STRING ConnectionPortName;
    } /* size: 0x0020 */ Out;
  }; /* size: 0x0020 */
} ALPC_SERVER_INFORMATION, *PALPC_SERVER_INFORMATION; /* size: 0x0020 */

struct CM_SET_VALUE_NEW_LOGREC
{
  /* 0x0000 */ struct CM_LOGREC Header;
  /* 0x0030 */ struct _UNICODE_STRING ValueName;
  /* 0x0040 */ unsigned long ValueType;
  /* 0x0044 */ unsigned long DataSize;
  /* 0x0048 */ void* Data;
}; /* size: 0x0050 */

typedef struct _WIN32_OKAYTOCLOSEMETHOD_PARAMETERS
{
  /* 0x0000 */ struct _EPROCESS* Process;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ void* Handle;
  /* 0x0018 */ char PreviousMode;
  /* 0x0019 */ char __PADDING__[7];
} WIN32_OKAYTOCLOSEMETHOD_PARAMETERS, *PWIN32_OKAYTOCLOSEMETHOD_PARAMETERS; /* size: 0x0020 */

typedef struct _RTL_DEBUG_INFORMATION
{
  /* 0x0000 */ void* SectionHandleClient;
  /* 0x0008 */ void* ViewBaseClient;
  /* 0x0010 */ void* ViewBaseTarget;
  /* 0x0018 */ unsigned __int64 ViewBaseDelta;
  /* 0x0020 */ void* EventPairClient;
  /* 0x0028 */ void* EventPairTarget;
  /* 0x0030 */ void* TargetProcessId;
  /* 0x0038 */ void* TargetThreadHandle;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ long Padding_843;
  /* 0x0048 */ unsigned __int64 OffsetFree;
  /* 0x0050 */ unsigned __int64 CommitSize;
  /* 0x0058 */ unsigned __int64 ViewSize;
  union
  {
    /* 0x0060 */ struct _RTL_PROCESS_MODULES* Modules;
    /* 0x0060 */ struct _RTL_PROCESS_MODULE_INFORMATION_EX* ModulesEx;
  }; /* size: 0x0008 */
  /* 0x0068 */ struct _RTL_PROCESS_BACKTRACES* BackTraces;
  /* 0x0070 */ struct _RTL_PROCESS_HEAPS* Heaps;
  /* 0x0078 */ struct _RTL_PROCESS_LOCKS* Locks;
  /* 0x0080 */ void* SpecificHeap;
  /* 0x0088 */ void* TargetProcessHandle;
  /* 0x0090 */ struct _RTL_PROCESS_VERIFIER_OPTIONS* VerifierOptions;
  /* 0x0098 */ void* ProcessHeap;
  /* 0x00a0 */ void* CriticalSectionHandle;
  /* 0x00a8 */ void* CriticalSectionOwnerThread;
  /* 0x00b0 */ void* Reserved[4];
} RTL_DEBUG_INFORMATION, *PRTL_DEBUG_INFORMATION; /* size: 0x00d0 */

typedef struct _wfinddata_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_844;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata_t, *Pwfinddata_t; /* size: 0x0230 */

typedef struct _PERFINFO_PPM_PERF_STATE_CHANGE
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long NewState;
  /* 0x0008 */ unsigned long OldState;
  /* 0x000c */ long Result;
  /* 0x0010 */ unsigned __int64 Processors;
} PERFINFO_PPM_PERF_STATE_CHANGE, *PPERFINFO_PPM_PERF_STATE_CHANGE; /* size: 0x0018 */

typedef struct _X86_KTSS
{
  /* 0x0000 */ unsigned long Previous;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long Esp;
    /* 0x0008 */ unsigned long Ss;
  } /* size: 0x0008 */ Ring[3];
  /* 0x001c */ unsigned long Cr3;
  /* 0x0020 */ unsigned long Eip;
  /* 0x0024 */ unsigned long EFlags;
  /* 0x0028 */ unsigned long Eax;
  /* 0x002c */ unsigned long Ecx;
  /* 0x0030 */ unsigned long Edx;
  /* 0x0034 */ unsigned long Ebx;
  /* 0x0038 */ unsigned long Esp;
  /* 0x003c */ unsigned long Ebp;
  /* 0x0040 */ unsigned long Esi;
  /* 0x0044 */ unsigned long Edi;
  /* 0x0048 */ unsigned long Es;
  /* 0x004c */ unsigned long Cs;
  /* 0x0050 */ unsigned long Ss;
  /* 0x0054 */ unsigned long Ds;
  /* 0x0058 */ unsigned long Fs;
  /* 0x005c */ unsigned long Gs;
  /* 0x0060 */ unsigned long Ldt;
  /* 0x0064 */ unsigned short T;
  /* 0x0066 */ unsigned short IoMapBase;
} X86_KTSS, *PX86_KTSS; /* size: 0x0068 */

typedef struct _RTL_RELATIVE_NAME_U
{
  /* 0x0000 */ struct _UNICODE_STRING RelativeName;
  /* 0x0010 */ void* ContainingDirectory;
  /* 0x0018 */ struct _RTLP_CURDIR_REF* CurDirRef;
} RTL_RELATIVE_NAME_U, *PRTL_RELATIVE_NAME_U; /* size: 0x0020 */

typedef struct _QUERY_OPEN_SUBKEYS_CONTEXT
{
  /* 0x0000 */ unsigned long BufferLength;
  /* 0x0004 */ long Padding_845;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long RequiredSize;
  /* 0x0014 */ long StatusCode;
  /* 0x0018 */ unsigned long UsedLength;
  /* 0x001c */ long Padding_846;
  /* 0x0020 */ void* KeyBodyToIgnore;
  /* 0x0028 */ void* CurrentNameBuffer;
} QUERY_OPEN_SUBKEYS_CONTEXT, *PQUERY_OPEN_SUBKEYS_CONTEXT; /* size: 0x0030 */

typedef struct _WDIP_SEM_DISABLED_SCENARIO_TABLE
{
  /* 0x0000 */ struct _GUID ScenarioIds[64];
  /* 0x0400 */ unsigned long TableSize;
} WDIP_SEM_DISABLED_SCENARIO_TABLE, *PWDIP_SEM_DISABLED_SCENARIO_TABLE; /* size: 0x0404 */

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  /* 0x0000 */ unsigned long NumberOfAssignedProcesses;
  /* 0x0004 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST; /* size: 0x0010 */

struct HICON__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _WMIP_SYNCHRONOUS_ETW_WAITER
{
  /* 0x0000 */ struct _LIST_ENTRY WaitLink;
  /* 0x0010 */ struct _LIST_ENTRY GuidLink;
  /* 0x0020 */ struct _KEVENT Event;
} WMIP_SYNCHRONOUS_ETW_WAITER, *PWMIP_SYNCHRONOUS_ETW_WAITER; /* size: 0x0038 */

typedef struct _SYSID_UUID
{
  /* 0x0000 */ unsigned char Uuid[16];
} SYSID_UUID, *PSYSID_UUID; /* size: 0x0010 */

typedef struct _WMI_DISKIO_READWRITE
{
  /* 0x0000 */ unsigned long DiskNumber;
  /* 0x0004 */ unsigned long IrpFlags;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned __int64 ByteOffset;
  /* 0x0018 */ void* FileObject;
  /* 0x0020 */ void* IrpAddr;
  /* 0x0028 */ unsigned __int64 HighResResponseTime;
} WMI_DISKIO_READWRITE, *PWMI_DISKIO_READWRITE; /* size: 0x0030 */

struct HRGN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _EISA_DMA_CONFIGURATION
{
  /* 0x0000 */ struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
  /* 0x0001 */ struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION; /* size: 0x0002 */

typedef struct _CM_EISA_FUNCTION_INFORMATION
{
  /* 0x0000 */ unsigned long CompressedId;
  /* 0x0004 */ unsigned char IdSlotFlags1;
  /* 0x0005 */ unsigned char IdSlotFlags2;
  /* 0x0006 */ unsigned char MinorRevision;
  /* 0x0007 */ unsigned char MajorRevision;
  /* 0x0008 */ unsigned char Selections[26];
  /* 0x0022 */ unsigned char FunctionFlags;
  /* 0x0023 */ unsigned char TypeString[80];
  /* 0x0073 */ struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
  /* 0x00b2 */ struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
  /* 0x00c0 */ struct _EISA_DMA_CONFIGURATION EisaDma[4];
  /* 0x00c8 */ struct _EISA_PORT_CONFIGURATION EisaPort[20];
  /* 0x0104 */ unsigned char InitializationData[60];
} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION; /* size: 0x0140 */

typedef struct _DEVICE_DATA_SET_RANGE
{
  /* 0x0000 */ __int64 StartingOffset;
  /* 0x0008 */ unsigned __int64 LengthInBytes;
} DEVICE_DATA_SET_RANGE, *PDEVICE_DATA_SET_RANGE; /* size: 0x0010 */

typedef struct _FILE_LOCK_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER StartingByte;
  /* 0x0008 */ union _LARGE_INTEGER Length;
  /* 0x0010 */ unsigned char ExclusiveLock;
  /* 0x0011 */ char Padding_847[3];
  /* 0x0014 */ unsigned long Key;
  /* 0x0018 */ struct _FILE_OBJECT* FileObject;
  /* 0x0020 */ void* ProcessId;
  /* 0x0028 */ union _LARGE_INTEGER EndingByte;
} FILE_LOCK_INFO, *PFILE_LOCK_INFO; /* size: 0x0030 */

typedef struct _WMI_BUFFER_HEADER
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ unsigned long SavedOffset;
  /* 0x0008 */ volatile unsigned long CurrentOffset;
  /* 0x000c */ volatile long ReferenceCount;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ __int64 SequenceNumber;
  union
  {
    /* 0x0020 */ unsigned long Padding0[2];
    /* 0x0020 */ struct _SINGLE_LIST_ENTRY SlistEntry;
    /* 0x0020 */ struct _WMI_BUFFER_HEADER* NextBuffer;
  }; /* size: 0x0008 */
  /* 0x0028 */ struct _ETW_BUFFER_CONTEXT ClientContext;
  /* 0x002c */ enum _ETW_BUFFER_STATE State;
  /* 0x0030 */ unsigned long Offset;
  /* 0x0034 */ unsigned short BufferFlag;
  /* 0x0036 */ unsigned short BufferType;
  union
  {
    /* 0x0038 */ unsigned long Padding1[4];
    /* 0x0038 */ struct _ETW_REF_CLOCK ReferenceTime;
    /* 0x0038 */ struct _LIST_ENTRY GlobalEntry;
    struct
    {
      /* 0x0038 */ void* Pointer0;
      /* 0x0040 */ void* Pointer1;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} WMI_BUFFER_HEADER, *PWMI_BUFFER_HEADER; /* size: 0x0048 */

typedef struct _MM_DRIVER_VERIFIER_DATA
{
  /* 0x0000 */ volatile unsigned long Level;
  /* 0x0004 */ volatile unsigned long RaiseIrqls;
  /* 0x0008 */ volatile unsigned long AcquireSpinLocks;
  /* 0x000c */ volatile unsigned long SynchronizeExecutions;
  /* 0x0010 */ volatile unsigned long AllocationsAttempted;
  /* 0x0014 */ volatile unsigned long AllocationsSucceeded;
  /* 0x0018 */ volatile unsigned long AllocationsSucceededSpecialPool;
  /* 0x001c */ volatile unsigned long AllocationsWithNoTag;
  /* 0x0020 */ volatile unsigned long TrimRequests;
  /* 0x0024 */ volatile unsigned long Trims;
  /* 0x0028 */ volatile unsigned long AllocationsFailed;
  /* 0x002c */ volatile unsigned long AllocationsFailedDeliberately;
  /* 0x0030 */ volatile unsigned long Loads;
  /* 0x0034 */ volatile unsigned long Unloads;
  /* 0x0038 */ volatile unsigned long UnTrackedPool;
  /* 0x003c */ volatile unsigned long UserTrims;
  /* 0x0040 */ volatile unsigned long CurrentPagedPoolAllocations;
  /* 0x0044 */ volatile unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0048 */ volatile unsigned long PeakPagedPoolAllocations;
  /* 0x004c */ volatile unsigned long PeakNonPagedPoolAllocations;
  /* 0x0050 */ volatile unsigned __int64 PagedBytes;
  /* 0x0058 */ volatile unsigned __int64 NonPagedBytes;
  /* 0x0060 */ volatile unsigned __int64 PeakPagedBytes;
  /* 0x0068 */ volatile unsigned __int64 PeakNonPagedBytes;
  /* 0x0070 */ volatile unsigned long BurstAllocationsFailedDeliberately;
  /* 0x0074 */ volatile unsigned long SessionTrims;
  /* 0x0078 */ volatile unsigned long OptionChanges;
  /* 0x007c */ volatile unsigned long VerifyMode;
  /* 0x0080 */ struct _UNICODE_STRING PreviousBucketName;
  /* 0x0090 */ volatile unsigned long ActivityCounter;
  /* 0x0094 */ volatile unsigned long PreviousActivityCounter;
  /* 0x0098 */ volatile unsigned long WorkerTrimRequests;
  /* 0x009c */ long __PADDING__[1];
} MM_DRIVER_VERIFIER_DATA, *PMM_DRIVER_VERIFIER_DATA; /* size: 0x00a0 */

typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char IncursSeekPenalty;
  /* 0x0009 */ char __PADDING__[3];
} DEVICE_SEEK_PENALTY_DESCRIPTOR, *PDEVICE_SEEK_PENALTY_DESCRIPTOR; /* size: 0x000c */

typedef struct _ATOM_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAtoms;
  /* 0x0004 */ unsigned short Atoms[1];
  /* 0x0006 */ char __PADDING__[2];
} ATOM_TABLE_INFORMATION, *PATOM_TABLE_INFORMATION; /* size: 0x0008 */

typedef struct _WMI_IRQ_RECORD
{
  /* 0x0000 */ unsigned __int64 IRQAffinity;
  /* 0x0008 */ unsigned short IRQGroup;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long IRQNum;
  /* 0x0010 */ unsigned long DeviceDescriptionLen;
  /* 0x0014 */ wchar_t DeviceDescription[1];
  /* 0x0016 */ char __PADDING__[2];
} WMI_IRQ_RECORD, *PWMI_IRQ_RECORD; /* size: 0x0018 */

typedef struct _TIMER_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER RemainingTime;
  /* 0x0008 */ unsigned char TimerState;
  /* 0x0009 */ char __PADDING__[7];
} TIMER_BASIC_INFORMATION, *PTIMER_BASIC_INFORMATION; /* size: 0x0010 */

typedef struct _POP_CURRENT_BROADCAST
{
  /* 0x0000 */ unsigned char InProgress;
  /* 0x0001 */ char Padding_848[3];
  /* 0x0004 */ struct _SYSTEM_POWER_STATE_CONTEXT SystemContext;
  /* 0x0008 */ enum POWER_ACTION PowerAction;
  /* 0x000c */ long Padding_849;
  /* 0x0010 */ struct _POP_DEVICE_SYS_STATE* DeviceState;
} POP_CURRENT_BROADCAST, *PPOP_CURRENT_BROADCAST; /* size: 0x0018 */

struct TUNNEL
{
  /* 0x0000 */ struct _FAST_MUTEX Mutex;
  /* 0x0038 */ struct _RTL_SPLAY_LINKS* Cache;
  /* 0x0040 */ struct _LIST_ENTRY TimerQueue;
  /* 0x0050 */ unsigned short NumEntries;
  /* 0x0052 */ char __PADDING__[6];
}; /* size: 0x0058 */

typedef struct _EM_CALLBACK_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* CallbackGuid;
  /* 0x0008 */ void* CallbackFunction /* function */;
  /* 0x0010 */ void* Context;
} EM_CALLBACK_REGISTRATION, *PEM_CALLBACK_REGISTRATION; /* size: 0x0018 */

typedef struct _FSRTL_COMMON_FCB_HEADER
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NodeByteSize;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char IsFastIoPossible;
  /* 0x0006 */ unsigned char Flags2;
  struct /* bitfield */
  {
    /* 0x0007 */ unsigned char Reserved : 4; /* bit position: 0 */
    /* 0x0007 */ unsigned char Version : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0008 */ struct _ERESOURCE* Resource;
  /* 0x0010 */ struct _ERESOURCE* PagingIoResource;
  /* 0x0018 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0020 */ union _LARGE_INTEGER FileSize;
  /* 0x0028 */ union _LARGE_INTEGER ValidDataLength;
} FSRTL_COMMON_FCB_HEADER, *PFSRTL_COMMON_FCB_HEADER; /* size: 0x0030 */

typedef struct _TRACE_LOGFILE_HEADER64
{
  /* 0x0000 */ unsigned long BufferSize;
  union
  {
    /* 0x0004 */ unsigned long Version;
    struct
    {
      /* 0x0004 */ unsigned char MajorVersion;
      /* 0x0005 */ unsigned char MinorVersion;
      /* 0x0006 */ unsigned char SubVersion;
      /* 0x0007 */ unsigned char SubMinorVersion;
    } /* size: 0x0004 */ VersionDetail;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ProviderVersion;
  /* 0x000c */ unsigned long NumberOfProcessors;
  /* 0x0010 */ union _LARGE_INTEGER EndTime;
  /* 0x0018 */ unsigned long TimerResolution;
  /* 0x001c */ unsigned long MaximumFileSize;
  /* 0x0020 */ unsigned long LogFileMode;
  /* 0x0024 */ unsigned long BuffersWritten;
  union
  {
    /* 0x0028 */ struct _GUID LogInstanceGuid;
    struct
    {
      /* 0x0028 */ unsigned long StartBuffers;
      /* 0x002c */ unsigned long PointerSize;
      /* 0x0030 */ unsigned long EventsLost;
      /* 0x0034 */ unsigned long CpuSpeedInMHz;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0038 */ unsigned __int64 LoggerName;
  /* 0x0040 */ unsigned __int64 LogFileName;
  /* 0x0048 */ struct _RTL_TIME_ZONE_INFORMATION TimeZone;
  /* 0x00f4 */ long Padding_850;
  /* 0x00f8 */ union _LARGE_INTEGER BootTime;
  /* 0x0100 */ union _LARGE_INTEGER PerfFreq;
  /* 0x0108 */ union _LARGE_INTEGER StartTime;
  /* 0x0110 */ unsigned long ReservedFlags;
  /* 0x0114 */ unsigned long BuffersLost;
} TRACE_LOGFILE_HEADER64, *PTRACE_LOGFILE_HEADER64; /* size: 0x0118 */

typedef struct _LDR_IMPORT_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _LDR_DATA_TABLE_ENTRY* Entry;
  /* 0x0018 */ unsigned long Count;
  /* 0x001c */ long __PADDING__[1];
} LDR_IMPORT_RECORD, *PLDR_IMPORT_RECORD; /* size: 0x0020 */

typedef struct _MOUNTMGR_DRIVE_LETTER_TARGET
{
  /* 0x0000 */ unsigned short DeviceNameLength;
  /* 0x0002 */ wchar_t DeviceName[1];
} MOUNTMGR_DRIVE_LETTER_TARGET, *PMOUNTMGR_DRIVE_LETTER_TARGET; /* size: 0x0004 */

typedef struct _VF_BUGCHECK_ATTRIBUTES
{
  /* 0x0000 */ unsigned long BugcheckCode;
  /* 0x0004 */ unsigned long BugcheckParam1;
  /* 0x0008 */ enum VERIFIER_MODE MinimumVerifierMode;
} VF_BUGCHECK_ATTRIBUTES, *PVF_BUGCHECK_ATTRIBUTES; /* size: 0x000c */

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER
{
  /* 0x0000 */ unsigned char Disable;
} FILE_SET_DEFECT_MGMT_BUFFER, *PFILE_SET_DEFECT_MGMT_BUFFER; /* size: 0x0001 */

typedef struct _RTL_PERTHREAD_CURDIR
{
  /* 0x0000 */ struct _RTL_DRIVE_LETTER_CURDIR* CurrentDirectories;
  /* 0x0008 */ struct _UNICODE_STRING* ImageName;
  /* 0x0010 */ void* Environment;
} RTL_PERTHREAD_CURDIR, *PRTL_PERTHREAD_CURDIR; /* size: 0x0018 */

typedef struct _MOUNTMGR_MOUNT_POINTS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long NumberOfMountPoints;
  /* 0x0008 */ struct _MOUNTMGR_MOUNT_POINT MountPoints[1];
} MOUNTMGR_MOUNT_POINTS, *PMOUNTMGR_MOUNT_POINTS; /* size: 0x0020 */

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION
{
  /* 0x0000 */ char FileSystem[9];
} FILE_SYSTEM_RECOGNITION_INFORMATION, *PFILE_SYSTEM_RECOGNITION_INFORMATION; /* size: 0x0009 */

typedef struct _UNICODE_PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_851;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* LastNextEntry;
} UNICODE_PREFIX_TABLE, *PUNICODE_PREFIX_TABLE; /* size: 0x0018 */

typedef struct _WHEA_ERROR_SOURCE_CONFIGURATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_852;
  /* 0x0008 */ void* Correct /* function */;
  /* 0x0010 */ void* Initialize /* function */;
  /* 0x0018 */ void* CreateRecord /* function */;
  /* 0x0020 */ void* Recover /* function */;
} WHEA_ERROR_SOURCE_CONFIGURATION, *PWHEA_ERROR_SOURCE_CONFIGURATION; /* size: 0x0028 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_853;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC; /* size: 0x0028 */

typedef struct _RTL_HEAP_TAG_INFO
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
} RTL_HEAP_TAG_INFO, *PRTL_HEAP_TAG_INFO; /* size: 0x0010 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE
{
  /* 0x0000 */ unsigned __int64 Version;
  /* 0x0008 */ struct _UNICODE_STRING Name;
} TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE, *PTOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE; /* size: 0x0018 */

typedef struct _DUMP_POINTERS
{
  /* 0x0000 */ struct _ADAPTER_OBJECT* AdapterObject;
  /* 0x0008 */ void* MappedRegisterBase;
  /* 0x0010 */ void* DumpData;
  /* 0x0018 */ void* CommonBufferVa;
  /* 0x0020 */ union _LARGE_INTEGER CommonBufferPa;
  /* 0x0028 */ unsigned long CommonBufferSize;
  /* 0x002c */ unsigned char AllocateCommonBuffers;
  /* 0x002d */ unsigned char UseDiskDump;
  /* 0x002e */ unsigned char Spare1[2];
  /* 0x0030 */ void* DeviceObject;
} DUMP_POINTERS, *PDUMP_POINTERS; /* size: 0x0038 */

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT
{
  /* 0x0000 */ unsigned long MediaChangeCount;
  /* 0x0004 */ unsigned long NewState;
} CLASS_MEDIA_CHANGE_CONTEXT, *PCLASS_MEDIA_CHANGE_CONTEXT; /* size: 0x0008 */

typedef struct _MM_ZERO_PAGEFILE_CONTEXT
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ struct _MMPAGING_FILE* PagingFile;
  /* 0x0028 */ void* ZeroVa;
  /* 0x0030 */ struct _KEVENT* AllDone;
} MM_ZERO_PAGEFILE_CONTEXT, *PMM_ZERO_PAGEFILE_CONTEXT; /* size: 0x0038 */

typedef struct _SYSDBG_PHYSICAL
{
  /* 0x0000 */ union _LARGE_INTEGER Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_PHYSICAL, *PSYSDBG_PHYSICAL; /* size: 0x0018 */

typedef struct _LONGDOUBLE
{
  /* 0x0000 */ double x;
} LONGDOUBLE, *PLONGDOUBLE; /* size: 0x0008 */

typedef struct _IOP_FOEXT_DEVOBJHINT
{
  /* 0x0000 */ struct _DEVICE_OBJECT* TopDeviceObjectHint;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY ProcessLocks;
} IOP_FOEXT_DEVOBJHINT, *PIOP_FOEXT_DEVOBJHINT; /* size: 0x0010 */

typedef struct _MI_PER_SESSION_PROTOS
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMADDRESS_NODE* Parent;
      /* 0x0000 */ struct _MI_PER_SESSION_PROTOS* NextToFree;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMADDRESS_NODE* LeftChild;
  /* 0x0010 */ struct _MMADDRESS_NODE* RightChild;
  union
  {
    /* 0x0018 */ unsigned long SessionId;
    /* 0x0018 */ unsigned __int64 StartingVpn;
    /* 0x0018 */ struct _SUBSECTION* Subsection;
  }; /* size: 0x0008 */
  /* 0x0020 */ unsigned __int64 EndingVpn;
  /* 0x0028 */ struct _MMPTE* SubsectionBase;
  union
  {
    union
    {
      /* 0x0030 */ unsigned long ReferenceCount;
      /* 0x0030 */ unsigned long NumberOfPtesToFree;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  /* 0x0034 */ long __PADDING__[1];
} MI_PER_SESSION_PROTOS, *PMI_PER_SESSION_PROTOS; /* size: 0x0038 */

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long FindAny;
  /* 0x0008 */ unsigned long FindLast;
  /* 0x000c */ unsigned long FindIdeal;
  /* 0x0010 */ unsigned long IdleAny;
  /* 0x0014 */ unsigned long IdleCurrent;
  /* 0x0018 */ unsigned long IdleLast;
  /* 0x001c */ unsigned long IdleIdeal;
  /* 0x0020 */ unsigned long PreemptAny;
  /* 0x0024 */ unsigned long PreemptCurrent;
  /* 0x0028 */ unsigned long PreemptLast;
  /* 0x002c */ unsigned long SwitchToIdle;
} SYSTEM_CONTEXT_SWITCH_INFORMATION, *PSYSTEM_CONTEXT_SWITCH_INFORMATION; /* size: 0x0030 */

typedef struct _CROSS_PLATFORM_FIBER
{
  union
  {
    /* 0x0000 */ struct _X86_FIBER X86Fiber;
    /* 0x0000 */ struct _IA64_FIBER IA64Fiber;
    /* 0x0000 */ struct _AMD64_FIBER Amd64Fiber;
    struct
    {
      /* 0x0000 */ struct _ARM_FIBER ArmFiber;
      /* 0x005c */ long __PADDING__[661];
    }; /* size: 0x0ab0 */
  }; /* size: 0x0ab0 */
} CROSS_PLATFORM_FIBER, *PCROSS_PLATFORM_FIBER; /* size: 0x0ab0 */

typedef struct _PHYSICAL_MEMORY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long NumberOfRuns;
  /* 0x0004 */ long Padding_854;
  /* 0x0008 */ unsigned __int64 NumberOfPages;
  /* 0x0010 */ struct _PHYSICAL_MEMORY_RUN Run[1];
} PHYSICAL_MEMORY_DESCRIPTOR, *PPHYSICAL_MEMORY_DESCRIPTOR; /* size: 0x0020 */

typedef struct _SCSI_ADDRESS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char PortNumber;
  /* 0x0005 */ unsigned char PathId;
  /* 0x0006 */ unsigned char TargetId;
  /* 0x0007 */ unsigned char Lun;
} SCSI_ADDRESS, *PSCSI_ADDRESS; /* size: 0x0008 */

typedef struct _CONTEXT_EX
{
  /* 0x0000 */ struct _CONTEXT_CHUNK All;
  /* 0x0008 */ struct _CONTEXT_CHUNK Legacy;
  /* 0x0010 */ struct _CONTEXT_CHUNK XState;
} CONTEXT_EX, *PCONTEXT_EX; /* size: 0x0018 */

typedef struct _ZONE_HEADER
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY FreeList;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY SegmentList;
  /* 0x0010 */ unsigned long BlockSize;
  /* 0x0014 */ unsigned long TotalSegmentSize;
} ZONE_HEADER, *PZONE_HEADER; /* size: 0x0018 */

typedef struct _PERFINFO_WORKER_THREAD_ITEM
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ long Padding_855;
  /* 0x0008 */ unsigned __int64 InitialTime;
  /* 0x0010 */ void* WorkerRoutine;
} PERFINFO_WORKER_THREAD_ITEM, *PPERFINFO_WORKER_THREAD_ITEM; /* size: 0x0018 */

typedef struct _CLFS_LOG_NAME_INFORMATION
{
  /* 0x0000 */ unsigned short NameLengthInBytes;
  /* 0x0002 */ wchar_t Name[1];
} CLFS_LOG_NAME_INFORMATION, *PCLFS_LOG_NAME_INFORMATION; /* size: 0x0004 */

typedef struct _KTHREAD_SWITCH_COUNTERS
{
  /* 0x0000 */ unsigned long FindAny;
  /* 0x0004 */ unsigned long FindIdeal;
  /* 0x0008 */ unsigned long FindLast;
  /* 0x000c */ unsigned long IdleAny;
  /* 0x0010 */ unsigned long IdleCurrent;
  /* 0x0014 */ unsigned long IdleIdeal;
  /* 0x0018 */ unsigned long IdleLast;
  /* 0x001c */ unsigned long PreemptAny;
  /* 0x0020 */ unsigned long PreemptCurrent;
  /* 0x0024 */ unsigned long PreemptLast;
  /* 0x0028 */ unsigned long SwitchToIdle;
} KTHREAD_SWITCH_COUNTERS, *PKTHREAD_SWITCH_COUNTERS; /* size: 0x002c */

typedef struct _MM_LDW_WORK_CONTEXT
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ struct _FILE_OBJECT* FileObject;
  /* 0x0028 */ long ErrorStatus;
  /* 0x002c */ volatile long Active;
} MM_LDW_WORK_CONTEXT, *PMM_LDW_WORK_CONTEXT; /* size: 0x0030 */

typedef struct _iobuf
{
  /* 0x0000 */ char* _ptr;
  /* 0x0008 */ int _cnt;
  /* 0x000c */ long Padding_856;
  /* 0x0010 */ char* _base;
  /* 0x0018 */ int _flag;
  /* 0x001c */ int _file;
  /* 0x0020 */ int _charbuf;
  /* 0x0024 */ int _bufsiz;
  /* 0x0028 */ char* _tmpfname;
} iobuf, *Piobuf; /* size: 0x0030 */

typedef struct _PERFINFO_IDLE_STATE_CHANGE
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Throttle;
  /* 0x0008 */ unsigned long Direction;
} PERFINFO_IDLE_STATE_CHANGE, *PPERFINFO_IDLE_STATE_CHANGE; /* size: 0x000c */

typedef struct _KLDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ unsigned long __Undefined1;
  /* 0x000c */ unsigned long __Undefined2;
  /* 0x0010 */ unsigned long __Undefined3;
  /* 0x0014 */ unsigned long NonPagedDebugInfo;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short __Undefined5;
  /* 0x003c */ unsigned long __Undefined6;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY32, *PKLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

struct tagWNODE_ALL_DATA
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
  /* 0x0030 */ unsigned long DataBlockOffset;
  /* 0x0034 */ unsigned long InstanceCount;
  /* 0x0038 */ unsigned long OffsetInstanceNameOffsets;
  union
  {
    /* 0x003c */ unsigned long FixedInstanceSize;
    /* 0x003c */ struct OFFSETINSTANCEDATAANDLENGTH* OffsetInstanceDataAndLength /* zero-length array */;
    /* 0x003c */ long __PADDING__[3];
  }; /* size: 0x000c */
}; /* size: 0x0048 */

typedef struct _PS_CREATE_NOTIFY_INFO
{
  /* 0x0000 */ unsigned __int64 Size;
  union
  {
    /* 0x0008 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0008 */ unsigned long FileOpenNameAvailable : 1; /* bit position: 0 */
      /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x000c */ long Padding_857;
  /* 0x0010 */ void* ParentProcessId;
  /* 0x0018 */ struct _CLIENT_ID CreatingThreadId;
  /* 0x0028 */ struct _FILE_OBJECT* FileObject;
  /* 0x0030 */ const struct _UNICODE_STRING* ImageFileName;
  /* 0x0038 */ const struct _UNICODE_STRING* CommandLine;
  /* 0x0040 */ long CreationStatus;
  /* 0x0044 */ long __PADDING__[1];
} PS_CREATE_NOTIFY_INFO, *PPS_CREATE_NOTIFY_INFO; /* size: 0x0048 */

typedef struct _CC_FILE_SIZES
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER FileSize;
  /* 0x0010 */ union _LARGE_INTEGER ValidDataLength;
} CC_FILE_SIZES, *PCC_FILE_SIZES; /* size: 0x0018 */

typedef struct _ETW_POOL_EVENT
{
  /* 0x0000 */ unsigned long PoolType;
  /* 0x0004 */ unsigned long Tag;
  /* 0x0008 */ unsigned __int64 NumberOfBytes;
  /* 0x0010 */ void* Entry;
} ETW_POOL_EVENT, *PETW_POOL_EVENT; /* size: 0x0018 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned __int64 RootIndex;
  /* 0x0010 */ unsigned char CancelResolution;
  /* 0x0011 */ unsigned char NoMoreEntries;
  /* 0x0012 */ char Padding_858[6];
  /* 0x0018 */ struct _UNICODE_STRING Root;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT; /* size: 0x0028 */

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_859;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long SecurityDescriptorLength;
  /* 0x002c */ long Padding_860;
  /* 0x0030 */ void* SecurityDescriptor;
  /* 0x0038 */ unsigned short ClassLength;
  /* 0x003a */ char Padding_861[6];
  /* 0x0040 */ void* ClassData;
  /* 0x0048 */ unsigned char SymbolicLink;
  /* 0x0049 */ char __PADDING__[7];
} JOURNAL_CREATE_DELETE_KEY_INFORMATION, *PJOURNAL_CREATE_DELETE_KEY_INFORMATION; /* size: 0x0050 */

typedef union _WHEAP_ERROR_RECORD_WRAPPER_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Preallocated : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long FromPersistentStore : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long PlatformPfaControl : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long PlatformDirectedOffline : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long Reserved : 28; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} WHEAP_ERROR_RECORD_WRAPPER_FLAGS, *PWHEAP_ERROR_RECORD_WRAPPER_FLAGS; /* size: 0x0004 */

typedef struct _WHEAP_ERROR_RECORD_WRAPPER
{
  /* 0x0000 */ struct _LIST_ENTRY WorkEntry;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ unsigned long ProcessorNumber;
  /* 0x0018 */ union _WHEAP_ERROR_RECORD_WRAPPER_FLAGS Flags;
  /* 0x001c */ volatile long InUse;
  /* 0x0020 */ struct _WHEAP_ERROR_SOURCE* ErrorSource;
  /* 0x0028 */ struct _WHEA_ERROR_RECORD ErrorRecord;
} WHEAP_ERROR_RECORD_WRAPPER, *PWHEAP_ERROR_RECORD_WRAPPER; /* size: 0x00f0 */

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned char* IoStatusBlockRange;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} FILE_IOSTATUSBLOCK_RANGE_INFORMATION, *PFILE_IOSTATUSBLOCK_RANGE_INFORMATION; /* size: 0x0010 */

typedef struct _SUPPORTED_OS_INFO
{
  /* 0x0000 */ unsigned short OsCount;
  /* 0x0002 */ unsigned short MitigationExist;
  /* 0x0004 */ unsigned short OsList[4];
} SUPPORTED_OS_INFO, *PSUPPORTED_OS_INFO; /* size: 0x000c */

typedef struct _KEY_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
} KEY_WRITE_TIME_INFORMATION, *PKEY_WRITE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _GET_TEB_ADDRESS
{
  /* 0x0000 */ unsigned __int64 Address;
} GET_TEB_ADDRESS, *PGET_TEB_ADDRESS; /* size: 0x0008 */

typedef struct _EX_HOST_REGISTRATION_1
{
  /* 0x0000 */ unsigned short ExtensionId;
  /* 0x0002 */ unsigned short ExtensionVersion;
  /* 0x0004 */ unsigned short FunctionCount;
  /* 0x0006 */ char Padding_862[2];
  /* 0x0008 */ enum _POOL_TYPE PoolType;
  /* 0x000c */ long Padding_863;
  /* 0x0010 */ const void* HostTable;
  /* 0x0018 */ void* Callback /* function */;
  /* 0x0020 */ void* CallbackContext;
} EX_HOST_REGISTRATION_1, *PEX_HOST_REGISTRATION_1; /* size: 0x0028 */

typedef struct _RTL_RXACT_LOG
{
  /* 0x0000 */ unsigned long OperationCount;
  /* 0x0004 */ unsigned long LogSize;
  /* 0x0008 */ unsigned long LogSizeInUse;
  /* 0x000c */ unsigned long Alignment;
} RTL_RXACT_LOG, *PRTL_RXACT_LOG; /* size: 0x0010 */

struct tagWNODE_SINGLE_ITEM
{
  /* 0x0000 */ struct _WNODE_HEADER WnodeHeader;
  /* 0x0030 */ unsigned long OffsetInstanceName;
  /* 0x0034 */ unsigned long InstanceIndex;
  /* 0x0038 */ unsigned long ItemId;
  /* 0x003c */ unsigned long DataBlockOffset;
  /* 0x0040 */ unsigned long SizeDataItem;
  union
  {
    /* 0x0044 */ unsigned char* VariableData /* zero-length array */;
    /* 0x0044 */ long __PADDING__[1];
  }; /* size: 0x0004 */
}; /* size: 0x0048 */

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION
{
  /* 0x0000 */ unsigned long FileSystemAttributes;
  /* 0x0004 */ long MaximumComponentNameLength;
  /* 0x0008 */ unsigned long FileSystemNameLength;
  /* 0x000c */ wchar_t FileSystemName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_FS_ATTRIBUTE_INFORMATION, *PFILE_FS_ATTRIBUTE_INFORMATION; /* size: 0x0010 */

typedef struct _MI_DLL_SHARED
{
  /* 0x0000 */ struct _MI_DLL_SHARED* Next;
  /* 0x0008 */ unsigned long StartBit;
  /* 0x000c */ unsigned long ShareCount;
  /* 0x0010 */ unsigned long BitMap64;
  /* 0x0014 */ long __PADDING__[1];
} MI_DLL_SHARED, *PMI_DLL_SHARED; /* size: 0x0018 */

typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned __int64 MaximumRequestSize;
  /* 0x0010 */ unsigned long EstimatedTimePerRequest;
  /* 0x0014 */ unsigned long NumOutStandingRequests;
  /* 0x0018 */ unsigned __int64 RequestSize;
} STORAGE_GET_BC_PROPERTIES_OUTPUT, *PSTORAGE_GET_BC_PROPERTIES_OUTPUT; /* size: 0x0020 */

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _ACTIVATION_CONTEXT* ActivationContext;
    /* 0x0000 */ void* hActCtx;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ unsigned long Flags;
    /* 0x0008 */ unsigned long dwFlags;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION; /* size: 0x0010 */

struct tagSTOREDCACHEENTRY
{
  /* 0x0000 */ struct _UNICODE_STRING FileName;
  /* 0x0010 */ __int64 FileTime;
  /* 0x0018 */ struct tagShimCacheEntryData data;
}; /* size: 0x0030 */

typedef struct _SYSTEM_VDM_INSTEMUL_INFO
{
  /* 0x0000 */ unsigned long SegmentNotPresent;
  /* 0x0004 */ unsigned long VdmOpcode0F;
  /* 0x0008 */ unsigned long OpcodeESPrefix;
  /* 0x000c */ unsigned long OpcodeCSPrefix;
  /* 0x0010 */ unsigned long OpcodeSSPrefix;
  /* 0x0014 */ unsigned long OpcodeDSPrefix;
  /* 0x0018 */ unsigned long OpcodeFSPrefix;
  /* 0x001c */ unsigned long OpcodeGSPrefix;
  /* 0x0020 */ unsigned long OpcodeOPER32Prefix;
  /* 0x0024 */ unsigned long OpcodeADDR32Prefix;
  /* 0x0028 */ unsigned long OpcodeINSB;
  /* 0x002c */ unsigned long OpcodeINSW;
  /* 0x0030 */ unsigned long OpcodeOUTSB;
  /* 0x0034 */ unsigned long OpcodeOUTSW;
  /* 0x0038 */ unsigned long OpcodePUSHF;
  /* 0x003c */ unsigned long OpcodePOPF;
  /* 0x0040 */ unsigned long OpcodeINTnn;
  /* 0x0044 */ unsigned long OpcodeINTO;
  /* 0x0048 */ unsigned long OpcodeIRET;
  /* 0x004c */ unsigned long OpcodeINBimm;
  /* 0x0050 */ unsigned long OpcodeINWimm;
  /* 0x0054 */ unsigned long OpcodeOUTBimm;
  /* 0x0058 */ unsigned long OpcodeOUTWimm;
  /* 0x005c */ unsigned long OpcodeINB;
  /* 0x0060 */ unsigned long OpcodeINW;
  /* 0x0064 */ unsigned long OpcodeOUTB;
  /* 0x0068 */ unsigned long OpcodeOUTW;
  /* 0x006c */ unsigned long OpcodeLOCKPrefix;
  /* 0x0070 */ unsigned long OpcodeREPNEPrefix;
  /* 0x0074 */ unsigned long OpcodeREPPrefix;
  /* 0x0078 */ unsigned long OpcodeHLT;
  /* 0x007c */ unsigned long OpcodeCLI;
  /* 0x0080 */ unsigned long OpcodeSTI;
  /* 0x0084 */ unsigned long BopCount;
} SYSTEM_VDM_INSTEMUL_INFO, *PSYSTEM_VDM_INSTEMUL_INFO; /* size: 0x0088 */

typedef struct _ARBITER_PARAMETERS
{
  union
  {
    union
    {
      /* 0x0000 */ struct _ARBITER_TEST_ALLOCATION_PARAMETERS TestAllocation;
      /* 0x0000 */ struct _ARBITER_RETEST_ALLOCATION_PARAMETERS RetestAllocation;
      /* 0x0000 */ struct _ARBITER_BOOT_ALLOCATION_PARAMETERS BootAllocation;
      /* 0x0000 */ struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS QueryAllocatedResources;
      /* 0x0000 */ struct _ARBITER_QUERY_CONFLICT_PARAMETERS QueryConflict;
      /* 0x0000 */ struct _ARBITER_QUERY_ARBITRATE_PARAMETERS QueryArbitrate;
      /* 0x0000 */ struct _ARBITER_ADD_RESERVED_PARAMETERS AddReserved;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ Parameters;
} ARBITER_PARAMETERS, *PARBITER_PARAMETERS; /* size: 0x0020 */

typedef struct _KDESCRIPTOR32
{
  /* 0x0000 */ unsigned short Pad[3];
  /* 0x0006 */ unsigned short Limit;
  /* 0x0008 */ unsigned long Base;
} KDESCRIPTOR32, *PKDESCRIPTOR32; /* size: 0x000c */

typedef struct _EX_CALLBACK
{
  /* 0x0000 */ struct _EX_FAST_REF RoutineBlock;
} EX_CALLBACK, *PEX_CALLBACK; /* size: 0x0008 */

typedef struct _LSARM_LOGON_ACCOUNT_INFO
{
  /* 0x0000 */ struct _LUID LogonId;
  /* 0x0008 */ struct _UNICODE_STRING AccountName;
  /* 0x0018 */ struct _UNICODE_STRING AuthorityName;
} LSARM_LOGON_ACCOUNT_INFO, *PLSARM_LOGON_ACCOUNT_INFO; /* size: 0x0028 */

typedef struct _SE_ADT_OBJECT_TYPE
{
  /* 0x0000 */ struct _GUID ObjectType;
  /* 0x0010 */ unsigned short Flags;
  /* 0x0012 */ unsigned short Level;
  /* 0x0014 */ unsigned long AccessMask;
} SE_ADT_OBJECT_TYPE, *PSE_ADT_OBJECT_TYPE; /* size: 0x0018 */

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0004 */ long Padding_864;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} FILE_PROCESS_IDS_USING_FILE_INFORMATION, *PFILE_PROCESS_IDS_USING_FILE_INFORMATION; /* size: 0x0010 */

typedef struct _PROCESS_HANDLE_TRACING_QUERY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_865;
  /* 0x0010 */ struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
} PROCESS_HANDLE_TRACING_QUERY, *PPROCESS_HANDLE_TRACING_QUERY; /* size: 0x00b0 */

typedef struct _KBUGCHECK_ADD_PAGES
{
  /* 0x0000 */ void* Context;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long BugCheckCode;
  /* 0x0010 */ unsigned __int64 Address;
  /* 0x0018 */ unsigned __int64 Count;
} KBUGCHECK_ADD_PAGES, *PKBUGCHECK_ADD_PAGES; /* size: 0x0020 */

typedef union _LSA_SID_NAME_MAPPING_OPERATION_INPUT
{
  union
  {
    /* 0x0000 */ struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_INPUT AddInput;
    /* 0x0000 */ struct _LSA_SID_NAME_MAPPING_OPERATION_REMOVE_INPUT RemoveInput;
    /* 0x0000 */ struct _LSA_SID_NAME_MAPPING_OPERATION_ADD_MULTIPLE_INPUT AddMultipleInput;
  }; /* size: 0x0030 */
} LSA_SID_NAME_MAPPING_OPERATION_INPUT, *PLSA_SID_NAME_MAPPING_OPERATION_INPUT; /* size: 0x0030 */

typedef struct _PNP_REPLACE_PROCESSOR_LIST_V1
{
  /* 0x0000 */ unsigned __int64 AffinityMask;
  /* 0x0008 */ unsigned long AllocatedCount;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ unsigned long ApicIds[1];
  /* 0x0014 */ long __PADDING__[1];
} PNP_REPLACE_PROCESSOR_LIST_V1, *PPNP_REPLACE_PROCESSOR_LIST_V1; /* size: 0x0018 */

struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;

typedef struct _SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ long Padding_866;
  /* 0x0008 */ void* Owner;
  /* 0x0010 */ void* Group;
  /* 0x0018 */ struct _ACL* Sacl;
  /* 0x0020 */ struct _ACL* Dacl;
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR; /* size: 0x0028 */

typedef struct _DBGKM_APIMSG64
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ enum _DBGKM_APINUMBER ApiNumber;
  /* 0x002c */ long ReturnedStatus;
  union
  {
    union
    {
      /* 0x0030 */ struct _DBGKM_EXCEPTION64 Exception;
      /* 0x0030 */ struct _DBGKM_CREATE_THREAD64 CreateThread;
      /* 0x0030 */ struct _DBGKM_CREATE_PROCESS64 CreateProcessInfo;
      /* 0x0030 */ struct _DBGKM_EXIT_THREAD ExitThread;
      /* 0x0030 */ struct _DBGKM_EXIT_PROCESS ExitProcess;
      /* 0x0030 */ struct _DBGKM_LOAD_DLL64 LoadDll;
      /* 0x0030 */ struct _DBGKM_UNLOAD_DLL64 UnloadDll;
      /* 0x0030 */ struct _DBGKM_ERROR_MSG64 ErrorMsg;
    }; /* size: 0x00e0 */
  } /* size: 0x00e0 */ u;
} DBGKM_APIMSG64, *PDBGKM_APIMSG64; /* size: 0x0110 */

typedef struct _EVENT_EXTENDED_ITEM_STACK_TRACE64
{
  /* 0x0000 */ unsigned __int64 MatchId;
  /* 0x0008 */ unsigned __int64 Address[1];
} EVENT_EXTENDED_ITEM_STACK_TRACE64, *PEVENT_EXTENDED_ITEM_STACK_TRACE64; /* size: 0x0010 */

struct KEY_PID_ARRAY
{
  /* 0x0000 */ void* PID;
  /* 0x0008 */ struct _UNICODE_STRING KeyName;
}; /* size: 0x0018 */

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_867;
  /* 0x0008 */ struct KEY_PID_ARRAY KeyArray[1];
} KEY_OPEN_SUBKEYS_INFORMATION, *PKEY_OPEN_SUBKEYS_INFORMATION; /* size: 0x0020 */

typedef struct _RTL_HANDLE_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    /* 0x0000 */ struct _RTL_HANDLE_TABLE_ENTRY* NextFree;
  }; /* size: 0x0008 */
} RTL_HANDLE_TABLE_ENTRY, *PRTL_HANDLE_TABLE_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION
{
  /* 0x0000 */ unsigned long Spare;
  /* 0x0004 */ unsigned long DpcQueueDepth;
  /* 0x0008 */ unsigned long MinimumDpcRate;
  /* 0x000c */ unsigned long AdjustDpcThreshold;
  /* 0x0010 */ unsigned long IdealDpcRate;
} SYSTEM_DPC_BEHAVIOR_INFORMATION, *PSYSTEM_DPC_BEHAVIOR_INFORMATION; /* size: 0x0014 */

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned long ExtendedCode;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
} EXTENDED_ENCRYPTED_DATA_INFO, *PEXTENDED_ENCRYPTED_DATA_INFO; /* size: 0x0010 */

typedef struct _RTL_HANDLE_TABLE
{
  /* 0x0000 */ unsigned long MaximumNumberOfHandles;
  /* 0x0004 */ unsigned long SizeOfHandleTableEntry;
  /* 0x0008 */ unsigned long Reserved[2];
  /* 0x0010 */ struct _RTL_HANDLE_TABLE_ENTRY* FreeHandles;
  /* 0x0018 */ struct _RTL_HANDLE_TABLE_ENTRY* CommittedHandles;
  /* 0x0020 */ struct _RTL_HANDLE_TABLE_ENTRY* UnCommittedHandles;
  /* 0x0028 */ struct _RTL_HANDLE_TABLE_ENTRY* MaxReservedHandles;
} RTL_HANDLE_TABLE, *PRTL_HANDLE_TABLE; /* size: 0x0030 */

typedef struct _TP_POOL_STACK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 StackReserve;
  /* 0x0008 */ unsigned __int64 StackCommit;
} TP_POOL_STACK_INFORMATION, *PTP_POOL_STACK_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_RESOURCE
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION CriticalSection;
  /* 0x0028 */ void* SharedSemaphore;
  /* 0x0030 */ volatile unsigned long NumberOfWaitingShared;
  /* 0x0034 */ long Padding_868;
  /* 0x0038 */ void* ExclusiveSemaphore;
  /* 0x0040 */ volatile unsigned long NumberOfWaitingExclusive;
  /* 0x0044 */ volatile long NumberOfActive;
  /* 0x0048 */ void* ExclusiveOwnerThread;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ long Padding_869;
  /* 0x0058 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
} RTL_RESOURCE, *PRTL_RESOURCE; /* size: 0x0060 */

typedef struct _WMI_EXTENDED_THREAD_INFORMATION64
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ unsigned long ThreadId;
  /* 0x0008 */ unsigned __int64 StackBase64;
  /* 0x0010 */ unsigned __int64 StackLimit64;
  /* 0x0018 */ unsigned __int64 UserStackBase64;
  /* 0x0020 */ unsigned __int64 UserStackLimit64;
  union
  {
    /* 0x0028 */ unsigned __int64 StartAddr64;
    /* 0x0028 */ unsigned __int64 Affinity;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned __int64 Win32StartAddr64;
  /* 0x0038 */ unsigned __int64 TebBase64;
  /* 0x0040 */ unsigned long SubProcessTag;
  /* 0x0044 */ char BasePriority;
  /* 0x0045 */ unsigned char PagePriority;
  /* 0x0046 */ unsigned char IoPriority;
  /* 0x0047 */ unsigned char Flags;
} WMI_EXTENDED_THREAD_INFORMATION64, *PWMI_EXTENDED_THREAD_INFORMATION64; /* size: 0x0048 */

typedef struct _HAL_PORT_RANGE_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_870;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* QueryAllocateRange /* function */;
  /* 0x0028 */ void* FreeRange /* function */;
} HAL_PORT_RANGE_INTERFACE, *PHAL_PORT_RANGE_INTERFACE; /* size: 0x0030 */

typedef struct _WMIP_LEGACY_WORK_HEADER
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ enum WMIP_LEGACY_WORK_TYPE Type;
  /* 0x0014 */ long __PADDING__[1];
} WMIP_LEGACY_WORK_HEADER, *PWMIP_LEGACY_WORK_HEADER; /* size: 0x0018 */

typedef struct _WMIP_LEGACY_WORK_CALLBACK
{
  /* 0x0000 */ struct _WMIP_LEGACY_WORK_HEADER Header;
  /* 0x0018 */ unsigned __int64 EnableContext;
  /* 0x0020 */ unsigned long DataSourceCount;
  /* 0x0024 */ unsigned char Enabled;
  /* 0x0025 */ char Padding_871[3];
  /* 0x0028 */ struct tagDATASOURCE* DataSources[1];
} WMIP_LEGACY_WORK_CALLBACK, *PWMIP_LEGACY_WORK_CALLBACK; /* size: 0x0030 */

typedef struct _SECURITY_SEED_AND_LENGTH
{
  /* 0x0000 */ unsigned char Length;
  /* 0x0001 */ unsigned char Seed;
} SECURITY_SEED_AND_LENGTH, *PSECURITY_SEED_AND_LENGTH; /* size: 0x0002 */

typedef struct _WDI_SEM_INFLIGHT_SCENARIO_INFO
{
  /* 0x0000 */ struct _GUID ProviderGuid;
  /* 0x0010 */ unsigned short Eid;
  /* 0x0012 */ unsigned short Reserved;
  /* 0x0014 */ unsigned long InflightCount;
} WDI_SEM_INFLIGHT_SCENARIO_INFO, *PWDI_SEM_INFLIGHT_SCENARIO_INFO; /* size: 0x0018 */

typedef struct _HMAP_ENTRY
{
  /* 0x0000 */ unsigned __int64 BlockAddress;
  /* 0x0008 */ unsigned __int64 BinAddress;
  /* 0x0010 */ struct _CM_VIEW_OF_FILE* CmView;
  /* 0x0018 */ unsigned long MemAlloc;
  /* 0x001c */ long __PADDING__[1];
} HMAP_ENTRY, *PHMAP_ENTRY; /* size: 0x0020 */

typedef struct _HMAP_TABLE
{
  /* 0x0000 */ struct _HMAP_ENTRY Table[512];
} HMAP_TABLE, *PHMAP_TABLE; /* size: 0x4000 */

typedef struct _HMAP_DIRECTORY
{
  /* 0x0000 */ struct _HMAP_TABLE* Directory[1024];
} HMAP_DIRECTORY, *PHMAP_DIRECTORY; /* size: 0x2000 */

typedef struct _GETSETBUSDATA
{
  /* 0x0000 */ unsigned long BusDataType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ unsigned long SlotNumber;
  /* 0x000c */ long Padding_872;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long Offset;
  /* 0x001c */ unsigned long Length;
} GETSETBUSDATA, *PGETSETBUSDATA; /* size: 0x0020 */

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ struct _RTL_TIME_ZONE_INFORMATION tzi;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} RTL_DYNAMIC_TIME_ZONE_INFORMATION, *PRTL_DYNAMIC_TIME_ZONE_INFORMATION; /* size: 0x01b0 */

typedef struct _CREATE_DISK_MBR
{
  /* 0x0000 */ unsigned long Signature;
} CREATE_DISK_MBR, *PCREATE_DISK_MBR; /* size: 0x0004 */

typedef struct _CREATE_DISK
{
  /* 0x0000 */ enum _PARTITION_STYLE PartitionStyle;
  union
  {
    /* 0x0004 */ struct _CREATE_DISK_MBR Mbr;
    /* 0x0004 */ struct _CREATE_DISK_GPT Gpt;
  }; /* size: 0x0014 */
} CREATE_DISK, *PCREATE_DISK; /* size: 0x0018 */

typedef struct _TXFS_MODIFY_RM
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long LogContainerCountMax;
  /* 0x0008 */ unsigned long LogContainerCountMin;
  /* 0x000c */ unsigned long LogContainerCount;
  /* 0x0010 */ unsigned long LogGrowthIncrement;
  /* 0x0014 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0018 */ unsigned __int64 Reserved;
  /* 0x0020 */ unsigned short LoggingMode;
  /* 0x0022 */ char __PADDING__[6];
} TXFS_MODIFY_RM, *PTXFS_MODIFY_RM; /* size: 0x0028 */

typedef struct _X86_KSWITCHFRAME
{
  /* 0x0000 */ unsigned long ExceptionList;
  /* 0x0004 */ unsigned long Eflags;
  /* 0x0008 */ unsigned long RetAddr;
} X86_KSWITCHFRAME, *PX86_KSWITCHFRAME; /* size: 0x000c */

struct EVENTWORKCONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _REGENTRY* RegEntry;
  /* 0x0018 */ struct _WNODE_HEADER* Wnode;
}; /* size: 0x0020 */

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION
{
  /* 0x0000 */ unsigned long Probability;
  /* 0x0004 */ unsigned long MaxProbability;
  /* 0x0008 */ struct _UNICODE_STRING PoolTags;
  /* 0x0018 */ struct _UNICODE_STRING Applications;
} SYSTEM_VERIFIER_FAULTS_INFORMATION, *PSYSTEM_VERIFIER_FAULTS_INFORMATION; /* size: 0x0028 */

typedef struct _ALPC_DATA_VIEW_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_873;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ void* ViewBase;
  /* 0x0018 */ unsigned __int64 ViewSize;
} ALPC_DATA_VIEW_ATTR, *PALPC_DATA_VIEW_ATTR; /* size: 0x0020 */

struct MARK_HANDLE_INFO32
{
  /* 0x0000 */ unsigned long UsnSourceInfo;
  /* 0x0004 */ unsigned int VolumeHandle;
  /* 0x0008 */ unsigned long HandleInfo;
}; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA
{
  /* 0x0000 */ void* UserFileHandle;
  /* 0x0008 */ long Status;
  /* 0x000c */ unsigned long DeviceInstanceLen;
  /* 0x0010 */ unsigned short* DeviceInstance;
} PLUGPLAY_CONTROL_TARGET_RELATION_DATA, *PPLUGPLAY_CONTROL_TARGET_RELATION_DATA; /* size: 0x0018 */

typedef struct _SEP_RM_STATE
{
  /* 0x0000 */ void* LsaCommandPortHandle;
  /* 0x0008 */ void* SepRmThreadHandle;
  /* 0x0010 */ void* RmCommandPortHandle;
  /* 0x0018 */ void* RmCommandServerPortHandle;
  /* 0x0020 */ unsigned long OperationalMode;
  /* 0x0024 */ long Padding_874;
  /* 0x0028 */ void* LsaCommandPortSectionHandle;
  /* 0x0030 */ union _LARGE_INTEGER LsaCommandPortSectionSize;
  /* 0x0038 */ void* LsaViewPortMemory;
  /* 0x0040 */ void* RmViewPortMemory;
  /* 0x0048 */ long LsaCommandPortMemoryDelta;
  /* 0x004c */ unsigned char LsaCommandPortActive;
  /* 0x004d */ char __PADDING__[3];
} SEP_RM_STATE, *PSEP_RM_STATE; /* size: 0x0050 */

typedef struct _PERFINFO_PO_NOTIFY_DEVICE
{
  /* 0x0000 */ void* Irp;
  /* 0x0008 */ void* DriverStart;
  /* 0x0010 */ unsigned char OrderLevel;
  /* 0x0011 */ unsigned char MajorFunction;
  /* 0x0012 */ unsigned char MinorFunction;
  /* 0x0013 */ char Padding_875;
  /* 0x0014 */ enum _POWER_STATE_TYPE Type;
  /* 0x0018 */ union _POWER_STATE State;
  /* 0x001c */ unsigned long DeviceNameLength;
  /* 0x0020 */ wchar_t DeviceName[1];
  /* 0x0022 */ char __PADDING__[6];
} PERFINFO_PO_NOTIFY_DEVICE, *PPERFINFO_PO_NOTIFY_DEVICE; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ enum _PNP_QUERY_RELATION Operation;
  /* 0x0014 */ unsigned long BufferLength;
  /* 0x0018 */ unsigned short* Buffer;
} PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA, *PPLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA; /* size: 0x0020 */

typedef struct _PO_WAKE_SOURCE_HISTORY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_HISTORY, *PPO_WAKE_SOURCE_HISTORY; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  /* 0x0000 */ unsigned long UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS; /* size: 0x0004 */

typedef struct _RTL_CONDITION_VARIABLE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 WakeCount : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Waking : 1; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE; /* size: 0x0008 */

typedef struct _PCC_INPUT_BUFFER
{
  /* 0x0000 */ unsigned char ControlEnabled;
  union
  {
    struct
    {
      /* 0x0001 */ unsigned char ReservedZ[3];
    } /* size: 0x0003 */ GetAverageFrequency;
    struct
    {
      /* 0x0001 */ unsigned char DesiredFrequency;
      /* 0x0002 */ unsigned char ReservedZ[2];
    } /* size: 0x0003 */ SetDesiredFrequency;
  }; /* size: 0x0003 */
} PCC_INPUT_BUFFER, *PPCC_INPUT_BUFFER; /* size: 0x0004 */

typedef struct _POINTER_SEARCH_PHYSICAL
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned __int64 Length;
  /* 0x0010 */ unsigned __int64 PointerMin;
  /* 0x0018 */ unsigned __int64 PointerMax;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long Padding_876;
  /* 0x0028 */ unsigned __int64* MatchOffsets;
  /* 0x0030 */ unsigned long MatchOffsetsSize;
  /* 0x0034 */ unsigned long MatchOffsetsCount;
} POINTER_SEARCH_PHYSICAL, *PPOINTER_SEARCH_PHYSICAL; /* size: 0x0038 */

typedef struct _FILE_NUMA_NODE_INFORMATION
{
  /* 0x0000 */ unsigned short NodeNumber;
} FILE_NUMA_NODE_INFORMATION, *PFILE_NUMA_NODE_INFORMATION; /* size: 0x0002 */

typedef union _RTLP_SAFE_MACHINE_FRAME_ENTRY
{
  union
  {
    /* 0x0000 */ void* FunctionAddress;
    /* 0x0000 */ struct _UNWIND_INFO* UnwindInfo;
  }; /* size: 0x0008 */
} RTLP_SAFE_MACHINE_FRAME_ENTRY, *PRTLP_SAFE_MACHINE_FRAME_ENTRY; /* size: 0x0008 */

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
{
  /* 0x0000 */ struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
  /* 0x0018 */ struct _LIST_ENTRY* ChainHead;
  /* 0x0020 */ unsigned long BucketIndex;
  /* 0x0024 */ long __PADDING__[1];
} RTL_DYNAMIC_HASH_TABLE_ENUMERATOR, *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR; /* size: 0x0028 */

typedef struct _MI_OVERLAPPED_FLUSH_ENTRY
{
  /* 0x0000 */ struct _MSUBSECTION* FirstSubsection;
  /* 0x0008 */ struct _MSUBSECTION* LastSubsection;
  /* 0x0010 */ volatile long NumberOfPendingIos;
  /* 0x0014 */ long Status;
  /* 0x0018 */ struct _IO_STATUS_BLOCK* CallerIoStatus;
  /* 0x0020 */ struct _KEVENT* Event;
  /* 0x0028 */ void* PoolForFlushArray;
} MI_OVERLAPPED_FLUSH_ENTRY, *PMI_OVERLAPPED_FLUSH_ENTRY; /* size: 0x0030 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION; /* size: 0x0028 */

typedef struct _PROCESS_WINDOW_INFORMATION
{
  /* 0x0000 */ unsigned long WindowFlags;
  /* 0x0004 */ unsigned short WindowTitleLength;
  /* 0x0006 */ wchar_t WindowTitle[1];
} PROCESS_WINDOW_INFORMATION, *PPROCESS_WINDOW_INFORMATION; /* size: 0x0008 */

typedef struct _PERFINFO_CCSWAP_LITE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DataType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long OldThreadIdIndex : 4; /* bit position: 2 */
    /* 0x0000 */ unsigned long OldThreadPriInc : 3; /* bit position: 6 */
    /* 0x0000 */ unsigned long OldThreadStateWr : 6; /* bit position: 9 */
    /* 0x0000 */ unsigned long TimeDelta : 17; /* bit position: 15 */
  }; /* bitfield */
} PERFINFO_CCSWAP_LITE, *PPERFINFO_CCSWAP_LITE; /* size: 0x0004 */

typedef union _MI_VA_DEPRIO_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long AllFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long WsHeld : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long RemoveFromWs : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long TargetPriority : 3; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_VA_DEPRIO_FLAGS, *PMI_VA_DEPRIO_FLAGS; /* size: 0x0004 */

typedef struct _WMI_LOGGER_INFORMATION
{
  /* 0x0000 */ struct _WNODE_HEADER Wnode;
  /* 0x0030 */ unsigned long BufferSize;
  /* 0x0034 */ unsigned long MinimumBuffers;
  /* 0x0038 */ unsigned long MaximumBuffers;
  /* 0x003c */ unsigned long MaximumFileSize;
  /* 0x0040 */ unsigned long LogFileMode;
  /* 0x0044 */ unsigned long FlushTimer;
  /* 0x0048 */ unsigned long EnableFlags;
  /* 0x004c */ long AgeLimit;
  /* 0x0050 */ unsigned long Wow;
  /* 0x0054 */ long Padding_877;
  union
  {
    /* 0x0058 */ void* LogFileHandle;
    /* 0x0058 */ unsigned __int64 LogFileHandle64;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0060 */ unsigned long NumberOfBuffers;
    /* 0x0060 */ unsigned long InstanceCount;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0064 */ unsigned long FreeBuffers;
    /* 0x0064 */ unsigned long InstanceId;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0068 */ unsigned long EventsLost;
    /* 0x0068 */ unsigned long NumberOfProcessors;
  }; /* size: 0x0004 */
  /* 0x006c */ unsigned long BuffersWritten;
  union
  {
    /* 0x0070 */ unsigned long LogBuffersLost;
    /* 0x0070 */ unsigned long Flags;
  }; /* size: 0x0004 */
  /* 0x0074 */ unsigned long RealTimeBuffersLost;
  union
  {
    /* 0x0078 */ void* LoggerThreadId;
    /* 0x0078 */ unsigned __int64 LoggerThreadId64;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0080 */ struct _UNICODE_STRING LogFileName;
    /* 0x0080 */ struct _STRING64 LogFileName64;
  }; /* size: 0x0010 */
  union
  {
    /* 0x0090 */ struct _UNICODE_STRING LoggerName;
    /* 0x0090 */ struct _STRING64 LoggerName64;
  }; /* size: 0x0010 */
  /* 0x00a0 */ unsigned long RealTimeConsumerCount;
  /* 0x00a4 */ unsigned long SpareUlong;
  union
  {
    /* 0x00a8 */ void* LoggerExtension;
    /* 0x00a8 */ unsigned __int64 LoggerExtension64;
  }; /* size: 0x0008 */
} WMI_LOGGER_INFORMATION, *PWMI_LOGGER_INFORMATION; /* size: 0x00b0 */

typedef struct _PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char HwCountersCount;
  /* 0x0004 */ unsigned long ContextSwitchCount;
  /* 0x0008 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0010 */ unsigned __int64 CycleTime;
  /* 0x0018 */ unsigned long RetryCount;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ struct _HARDWARE_COUNTER_DATA HwCounters[16];
} PERFORMANCE_DATA, *PPERFORMANCE_DATA; /* size: 0x0120 */

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL
{
  /* 0x0000 */ unsigned long ControlCode;
  /* 0x0004 */ unsigned long ControlSize;
  union
  {
    /* 0x0008 */ unsigned char ControlData[1];
    /* 0x0008 */ struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
  }; /* size: 0x0018 */
} RTL_PROCESS_BACKTRACES_CONTROL, *PRTL_PROCESS_BACKTRACES_CONTROL; /* size: 0x0020 */

typedef struct _POLICY_AUDIT_FULL_SET_INFO
{
  /* 0x0000 */ unsigned char ShutDownOnFull;
} POLICY_AUDIT_FULL_SET_INFO, *PPOLICY_AUDIT_FULL_SET_INFO; /* size: 0x0001 */

typedef struct _EVENT_EXTENDED_ITEM_TS_ID
{
  /* 0x0000 */ unsigned long SessionId;
} EVENT_EXTENDED_ITEM_TS_ID, *PEVENT_EXTENDED_ITEM_TS_ID; /* size: 0x0004 */

typedef struct _REG_CREATE_KEY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING* CompleteName;
  /* 0x0008 */ void* RootObject;
  /* 0x0010 */ void* ObjectType;
  /* 0x0018 */ unsigned long CreateOptions;
  /* 0x001c */ long Padding_878;
  /* 0x0020 */ struct _UNICODE_STRING* Class;
  /* 0x0028 */ void* SecurityDescriptor;
  /* 0x0030 */ void* SecurityQualityOfService;
  /* 0x0038 */ unsigned long DesiredAccess;
  /* 0x003c */ unsigned long GrantedAccess;
  /* 0x0040 */ unsigned long* Disposition;
  /* 0x0048 */ void** ResultObject;
  /* 0x0050 */ void* CallContext;
  /* 0x0058 */ void* RootObjectContext;
  /* 0x0060 */ void* Transaction;
  /* 0x0068 */ void* Reserved;
} REG_CREATE_KEY_INFORMATION, *PREG_CREATE_KEY_INFORMATION; /* size: 0x0070 */

typedef struct _WHEA_GENERIC_ERROR_DATA_ENTRY
{
  /* 0x0000 */ struct _GUID SectionType;
  /* 0x0010 */ enum _WHEA_ERROR_SEVERITY ErrorSeverity;
  /* 0x0014 */ union _WHEA_REVISION Revision;
  /* 0x0016 */ unsigned char ValidBits;
  /* 0x0017 */ unsigned char Flags;
  /* 0x0018 */ unsigned long ErrorDataLength;
  /* 0x001c */ struct _GUID FRUId;
  /* 0x002c */ unsigned char FRUText[20];
  /* 0x0040 */ unsigned char Data[1];
} WHEA_GENERIC_ERROR_DATA_ENTRY, *PWHEA_GENERIC_ERROR_DATA_ENTRY; /* size: 0x0041 */

typedef struct _IMAGE_OS2_HEADER
{
  /* 0x0000 */ unsigned short ne_magic;
  /* 0x0002 */ char ne_ver;
  /* 0x0003 */ char ne_rev;
  /* 0x0004 */ unsigned short ne_enttab;
  /* 0x0006 */ unsigned short ne_cbenttab;
  /* 0x0008 */ long ne_crc;
  /* 0x000c */ unsigned short ne_flags;
  /* 0x000e */ unsigned short ne_autodata;
  /* 0x0010 */ unsigned short ne_heap;
  /* 0x0012 */ unsigned short ne_stack;
  /* 0x0014 */ long ne_csip;
  /* 0x0018 */ long ne_sssp;
  /* 0x001c */ unsigned short ne_cseg;
  /* 0x001e */ unsigned short ne_cmod;
  /* 0x0020 */ unsigned short ne_cbnrestab;
  /* 0x0022 */ unsigned short ne_segtab;
  /* 0x0024 */ unsigned short ne_rsrctab;
  /* 0x0026 */ unsigned short ne_restab;
  /* 0x0028 */ unsigned short ne_modtab;
  /* 0x002a */ unsigned short ne_imptab;
  /* 0x002c */ long ne_nrestab;
  /* 0x0030 */ unsigned short ne_cmovent;
  /* 0x0032 */ unsigned short ne_align;
  /* 0x0034 */ unsigned short ne_cres;
  /* 0x0036 */ unsigned char ne_exetyp;
  /* 0x0037 */ unsigned char ne_flagsothers;
  /* 0x0038 */ unsigned short ne_pretthunks;
  /* 0x003a */ unsigned short ne_psegrefbytes;
  /* 0x003c */ unsigned short ne_swaparea;
  /* 0x003e */ unsigned short ne_expver;
} IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER; /* size: 0x0040 */

typedef struct _ALPC_MESSAGE_ATTRIBUTES
{
  /* 0x0000 */ unsigned long AllocatedAttributes;
  /* 0x0004 */ unsigned long ValidAttributes;
} ALPC_MESSAGE_ATTRIBUTES, *PALPC_MESSAGE_ATTRIBUTES; /* size: 0x0008 */

struct tagSWITCH_CONTEXT_PLATFORM_DETAILS
{
  /* 0x0000 */ enum SWITCH_CONTEXT_PLATFORM_ID Id;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ unsigned short Major;
  /* 0x0016 */ unsigned short Minor;
  /* 0x0018 */ const wchar_t* Name;
}; /* size: 0x0020 */

typedef struct _PORT_DATA_INFORMATION
{
  /* 0x0000 */ unsigned long CountDataEntries;
  /* 0x0004 */ long Padding_879;
  /* 0x0008 */ struct _PORT_DATA_ENTRY DataEntries[1];
} PORT_DATA_INFORMATION, *PPORT_DATA_INFORMATION; /* size: 0x0018 */

typedef struct _ALPC_HANDLE_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_880;
  /* 0x0008 */ void* Handle;
  /* 0x0010 */ unsigned long ObjectType;
  /* 0x0014 */ unsigned long DesiredAccess;
} ALPC_HANDLE_ATTR, *PALPC_HANDLE_ATTR; /* size: 0x0018 */

typedef struct _WDIP_SEM_SCENARIO_INSTANCE_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _GUID ScenarioInstanceId;
  /* 0x0020 */ struct _WDIP_SEM_SCENARIO_INFO* Scenario;
  /* 0x0028 */ unsigned long TimeoutCount;
  /* 0x002c */ enum WDIP_SEM_INSTANCE_STATE State;
  /* 0x0030 */ long StatusList[124];
} WDIP_SEM_SCENARIO_INSTANCE_INFO, *PWDIP_SEM_SCENARIO_INSTANCE_INFO; /* size: 0x0220 */

typedef struct _IA64_KPROCESSOR_STATE
{
  /* 0x0000 */ struct _IA64_CONTEXT ContextFrame;
  /* 0x0a70 */ struct _IA64_KSPECIAL_REGISTERS SpecialRegisters;
} IA64_KPROCESSOR_STATE, *PIA64_KPROCESSOR_STATE; /* size: 0x0eb0 */

typedef struct _wfinddatai64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_881;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddatai64_t, *Pwfinddatai64_t; /* size: 0x0230 */

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY NextEntry;
  /* 0x0010 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0020 */ struct _UNICODE_STRING FullDllName;
  /* 0x0030 */ unsigned long CoverageSectionSize;
  /* 0x0034 */ long Padding_882;
  /* 0x0038 */ void* CoverageSection;
} COVERAGE_UNLOADED_MODULE_ENTRY, *PCOVERAGE_UNLOADED_MODULE_ENTRY; /* size: 0x0040 */

typedef struct _WHEA_PSHED_INIT_PACKET
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
} WHEA_PSHED_INIT_PACKET, *PWHEA_PSHED_INIT_PACKET; /* size: 0x0008 */

typedef struct _NPAGED_LOOKASIDE_LIST
{
  /* 0x0000 */ struct _GENERAL_LOOKASIDE L;
} NPAGED_LOOKASIDE_LIST, *PNPAGED_LOOKASIDE_LIST; /* size: 0x0080 */

struct PROCESSOR_IDLESTATE_POLICY
{
  /* 0x0000 */ unsigned short Revision;
  union
  {
    union
    {
      /* 0x0002 */ unsigned short AsUSHORT;
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short AllowScaling : 1; /* bit position: 0 */
        /* 0x0002 */ unsigned short Disabled : 1; /* bit position: 1 */
        /* 0x0002 */ unsigned short Reserved : 14; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Flags;
  /* 0x0004 */ unsigned long PolicyCount;
  /* 0x0008 */ struct PROCESSOR_IDLESTATE_INFO Policy[3];
}; /* size: 0x0020 */

typedef struct _DISK_GROW_PARTITION
{
  /* 0x0000 */ unsigned long PartitionNumber;
  /* 0x0004 */ long Padding_883;
  /* 0x0008 */ union _LARGE_INTEGER BytesToGrow;
} DISK_GROW_PARTITION, *PDISK_GROW_PARTITION; /* size: 0x0010 */

typedef struct _CM_INDEX
{
  /* 0x0000 */ unsigned long Cell;
  union
  {
    /* 0x0004 */ unsigned char NameHint[4];
    /* 0x0004 */ unsigned long HashKey;
  }; /* size: 0x0004 */
} CM_INDEX, *PCM_INDEX; /* size: 0x0008 */

typedef struct _MPIO_PASS_THROUGH_PATH
{
  /* 0x0000 */ struct _SCSI_PASS_THROUGH PassThrough;
  /* 0x0038 */ unsigned long Version;
  /* 0x003c */ unsigned short Length;
  /* 0x003e */ unsigned char Flags;
  /* 0x003f */ unsigned char PortNumber;
  /* 0x0040 */ unsigned __int64 MpioPathId;
} MPIO_PASS_THROUGH_PATH, *PMPIO_PASS_THROUGH_PATH; /* size: 0x0048 */

typedef struct _SYSTEM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long TimerResolution;
  /* 0x0008 */ unsigned long PageSize;
  /* 0x000c */ unsigned long NumberOfPhysicalPages;
  /* 0x0010 */ unsigned long LowestPhysicalPageNumber;
  /* 0x0014 */ unsigned long HighestPhysicalPageNumber;
  /* 0x0018 */ unsigned long AllocationGranularity;
  /* 0x001c */ long Padding_884;
  /* 0x0020 */ unsigned __int64 MinimumUserModeAddress;
  /* 0x0028 */ unsigned __int64 MaximumUserModeAddress;
  /* 0x0030 */ unsigned __int64 ActiveProcessorsAffinityMask;
  /* 0x0038 */ char NumberOfProcessors;
  /* 0x0039 */ char __PADDING__[7];
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION; /* size: 0x0040 */

typedef struct _FILE_SFIO_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned long MinimumTransferSize;
} FILE_SFIO_VOLUME_INFORMATION, *PFILE_SFIO_VOLUME_INFORMATION; /* size: 0x000c */

typedef struct _CM_KEY_FAST_INDEX
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ struct _CM_INDEX List[1];
} CM_KEY_FAST_INDEX, *PCM_KEY_FAST_INDEX; /* size: 0x000c */

typedef struct _VF_KE_CRITICAL_REGION_TRACE
{
  /* 0x0000 */ struct _ETHREAD* Thread;
  /* 0x0008 */ void* StackTrace[7];
} VF_KE_CRITICAL_REGION_TRACE, *PVF_KE_CRITICAL_REGION_TRACE; /* size: 0x0040 */

typedef struct _TAPE_GET_STATISTICS
{
  /* 0x0000 */ unsigned long Operation;
} TAPE_GET_STATISTICS, *PTAPE_GET_STATISTICS; /* size: 0x0004 */

typedef struct _DISK_PERFORMANCE
{
  /* 0x0000 */ union _LARGE_INTEGER BytesRead;
  /* 0x0008 */ union _LARGE_INTEGER BytesWritten;
  /* 0x0010 */ union _LARGE_INTEGER ReadTime;
  /* 0x0018 */ union _LARGE_INTEGER WriteTime;
  /* 0x0020 */ union _LARGE_INTEGER IdleTime;
  /* 0x0028 */ unsigned long ReadCount;
  /* 0x002c */ unsigned long WriteCount;
  /* 0x0030 */ unsigned long QueueDepth;
  /* 0x0034 */ unsigned long SplitCount;
  /* 0x0038 */ union _LARGE_INTEGER QueryTime;
  /* 0x0040 */ unsigned long StorageDeviceNumber;
  /* 0x0044 */ wchar_t StorageManagerName[8];
  /* 0x0054 */ long __PADDING__[1];
} DISK_PERFORMANCE, *PDISK_PERFORMANCE; /* size: 0x0058 */

struct ANON_OBJECT_HEADER_V2
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
}; /* size: 0x002c */

typedef struct _MUTANT_OWNER_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
} MUTANT_OWNER_INFORMATION, *PMUTANT_OWNER_INFORMATION; /* size: 0x0010 */

typedef struct _IOPNP_DEVICE_EXTENSION
{
  /* 0x0000 */ unsigned short* CompatibleIdList;
  /* 0x0008 */ unsigned long CompatibleIdListSize;
  /* 0x000c */ long __PADDING__[1];
} IOPNP_DEVICE_EXTENSION, *PIOPNP_DEVICE_EXTENSION; /* size: 0x0010 */

struct READ_USN_JOURNAL_DATA
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
}; /* size: 0x0028 */

typedef struct _MMEXTEND_INFO
{
  /* 0x0000 */ unsigned __int64 CommittedSize;
  /* 0x0008 */ unsigned long ReferenceCount;
  /* 0x000c */ long __PADDING__[1];
} MMEXTEND_INFO, *PMMEXTEND_INFO; /* size: 0x0010 */

typedef struct _FSRTL_MUP_CALLS
{
  /* 0x0000 */ void* MupGetProviderInfoFromFileObject /* function */;
  /* 0x0008 */ void* MupGetProviderIdFromName /* function */;
} FSRTL_MUP_CALLS, *PFSRTL_MUP_CALLS; /* size: 0x0010 */

typedef struct _CM_INTENT_LOCK
{
  /* 0x0000 */ unsigned long OwnerCount;
  /* 0x0004 */ long Padding_885;
  /* 0x0008 */ struct _CM_KCB_UOW** OwnerTable;
} CM_INTENT_LOCK, *PCM_INTENT_LOCK; /* size: 0x0010 */

typedef struct _PNP_RESOURCE_REQUEST
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDevice;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ enum _ARBITER_REQUEST_SOURCE AllocationType;
  /* 0x0010 */ unsigned long Priority;
  /* 0x0014 */ unsigned long Position;
  /* 0x0018 */ struct _IO_RESOURCE_REQUIREMENTS_LIST* ResourceRequirements;
  /* 0x0020 */ void* ReqList;
  /* 0x0028 */ struct _CM_RESOURCE_LIST* ResourceAssignment;
  /* 0x0030 */ struct _CM_RESOURCE_LIST* TranslatedResourceAssignment;
  /* 0x0038 */ long Status;
  /* 0x003c */ long __PADDING__[1];
} PNP_RESOURCE_REQUEST, *PPNP_RESOURCE_REQUEST; /* size: 0x0040 */

typedef struct _PROCESSORINFO
{
  /* 0x0000 */ unsigned short Processor;
  /* 0x0002 */ unsigned short NumberProcessors;
} PROCESSORINFO, *PPROCESSORINFO; /* size: 0x0004 */

typedef struct _RTL_STACK_TRACE_ENTRY
{
  /* 0x0000 */ struct _RTL_STD_LIST_ENTRY HashChain;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned short TraceCount : 11; /* bit position: 0 */
    /* 0x0008 */ unsigned short BlockDepth : 5; /* bit position: 11 */
  }; /* bitfield */
  /* 0x000a */ unsigned short IndexHigh;
  /* 0x000c */ unsigned short Index;
  /* 0x000e */ unsigned short Depth;
  union
  {
    /* 0x0010 */ void* BackTrace[32];
    struct
    {
      /* 0x0010 */ struct _SLIST_ENTRY FreeChain;
      /* 0x0020 */ long __PADDING__[60];
    }; /* size: 0x0100 */
  }; /* size: 0x0100 */
} RTL_STACK_TRACE_ENTRY, *PRTL_STACK_TRACE_ENTRY; /* size: 0x0110 */

typedef struct _HAL_PROFILE_SOURCE_INFORMATION
{
  /* 0x0000 */ enum _KPROFILE_SOURCE Source;
  /* 0x0004 */ unsigned char Supported;
  /* 0x0005 */ char Padding_886[3];
  /* 0x0008 */ unsigned long Interval;
} HAL_PROFILE_SOURCE_INFORMATION, *PHAL_PROFILE_SOURCE_INFORMATION; /* size: 0x000c */

struct HMENU__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct BEST_DOCK_TO_EJECT
{
  /* 0x0000 */ unsigned long Depth;
  /* 0x0004 */ long Padding_887;
  /* 0x0008 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
}; /* size: 0x0010 */

typedef struct _PROCESS_IMAGE_INFO
{
  /* 0x0000 */ struct _FILE_OBJECT* FileObject;
  /* 0x0008 */ void* ImageBase;
  /* 0x0010 */ void* DefaultBase;
  /* 0x0018 */ unsigned __int64 ImageSize;
  /* 0x0020 */ unsigned long CheckSum;
  /* 0x0024 */ long __PADDING__[1];
} PROCESS_IMAGE_INFO, *PPROCESS_IMAGE_INFO; /* size: 0x0028 */

typedef struct _MTRR_VARIABLE_BASE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Type : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Reserved0 : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned __int64 Base : 28; /* bit position: 12 */
      /* 0x0000 */ unsigned __int64 Reserved1 : 24; /* bit position: 40 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MTRR_VARIABLE_BASE, *PMTRR_VARIABLE_BASE; /* size: 0x0008 */

typedef struct _TRACE_GUID_INFO
{
  /* 0x0000 */ unsigned long InstanceCount;
  /* 0x0004 */ unsigned long Reserved;
} TRACE_GUID_INFO, *PTRACE_GUID_INFO; /* size: 0x0008 */

typedef struct _CM_HIVE_HANDLES
{
  /* 0x0000 */ void* Primary;
  /* 0x0008 */ void* Log1;
  /* 0x0010 */ void* Log2;
  /* 0x0018 */ void* External;
} CM_HIVE_HANDLES, *PCM_HIVE_HANDLES; /* size: 0x0020 */

typedef struct _ETW_TP_EVENT_WORKER_NUMANODE_SWITCH
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* PoolId;
  /* 0x0028 */ unsigned long CurrentNode;
  /* 0x002c */ unsigned long NextNode;
  /* 0x0030 */ unsigned short CurrentGroup;
  /* 0x0032 */ unsigned short NextGroup;
  /* 0x0034 */ unsigned long CurrentWorkerCount;
  /* 0x0038 */ unsigned long NextWorkerCount;
  /* 0x003c */ long __PADDING__[1];
} ETW_TP_EVENT_WORKER_NUMANODE_SWITCH, *PETW_TP_EVENT_WORKER_NUMANODE_SWITCH; /* size: 0x0040 */

typedef struct _BCB_TRIM_NOTIFICATION_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ void* Callback /* function */;
} BCB_TRIM_NOTIFICATION_ENTRY, *PBCB_TRIM_NOTIFICATION_ENTRY; /* size: 0x0018 */

typedef struct _RANGE_LIST_ITERATOR
{
  /* 0x0000 */ struct _LIST_ENTRY* RangeListHead;
  /* 0x0008 */ struct _LIST_ENTRY* MergedHead;
  /* 0x0010 */ void* Current;
  /* 0x0018 */ unsigned long Stamp;
  /* 0x001c */ long __PADDING__[1];
} RANGE_LIST_ITERATOR, *PRANGE_LIST_ITERATOR; /* size: 0x0020 */

struct HHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ALPC_LOG_ENTRY_SEND_MESSAGE
{
  /* 0x0000 */ unsigned long MessageId;
} ALPC_LOG_ENTRY_SEND_MESSAGE, *PALPC_LOG_ENTRY_SEND_MESSAGE; /* size: 0x0004 */

struct HINSTANCE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ALPC_COMPLETION_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ struct _EPROCESS* OwnerProcess;
  /* 0x0018 */ struct _MDL* Mdl;
  /* 0x0020 */ void* UserVa;
  /* 0x0028 */ void* UserLimit;
  /* 0x0030 */ void* DataUserVa;
  /* 0x0038 */ void* SystemVa;
  /* 0x0040 */ unsigned __int64 TotalSize;
  /* 0x0048 */ struct _ALPC_COMPLETION_LIST_HEADER* Header;
  /* 0x0050 */ void* List;
  /* 0x0058 */ unsigned __int64 ListSize;
  /* 0x0060 */ void* Bitmap;
  /* 0x0068 */ unsigned __int64 BitmapSize;
  /* 0x0070 */ void* Data;
  /* 0x0078 */ unsigned __int64 DataSize;
  /* 0x0080 */ unsigned long BitmapLimit;
  /* 0x0084 */ unsigned long BitmapNextHint;
  /* 0x0088 */ unsigned long ConcurrencyCount;
  /* 0x008c */ unsigned long AttributeFlags;
  /* 0x0090 */ unsigned long AttributeSize;
  /* 0x0094 */ long __PADDING__[1];
} ALPC_COMPLETION_LIST, *PALPC_COMPLETION_LIST; /* size: 0x0098 */

typedef struct _IO_REMOVE_LOCK
{
  /* 0x0000 */ struct _IO_REMOVE_LOCK_COMMON_BLOCK Common;
} IO_REMOVE_LOCK, *PIO_REMOVE_LOCK; /* size: 0x0020 */

typedef struct _HAL_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long TBD;
} HAL_POWER_INFORMATION, *PHAL_POWER_INFORMATION; /* size: 0x0004 */

typedef struct _PATHNAME_BUFFER
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} PATHNAME_BUFFER, *PPATHNAME_BUFFER; /* size: 0x0008 */

typedef struct _VACB_ARRAY_HEADER
{
  /* 0x0000 */ unsigned long VacbArrayIndex;
  /* 0x0004 */ unsigned long MappingCount;
  /* 0x0008 */ unsigned long HighestMappedIndex;
  /* 0x000c */ unsigned long Reserved;
} VACB_ARRAY_HEADER, *PVACB_ARRAY_HEADER; /* size: 0x0010 */

typedef struct _RTL_GENERIC_TABLE
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* TableRoot;
  /* 0x0008 */ struct _LIST_ENTRY InsertOrderList;
  /* 0x0018 */ struct _LIST_ENTRY* OrderedPointer;
  /* 0x0020 */ unsigned long WhichOrderedElement;
  /* 0x0024 */ unsigned long NumberGenericTableElements;
  /* 0x0028 */ void* CompareRoutine /* function */;
  /* 0x0030 */ void* AllocateRoutine /* function */;
  /* 0x0038 */ void* FreeRoutine /* function */;
  /* 0x0040 */ void* TableContext;
} RTL_GENERIC_TABLE, *PRTL_GENERIC_TABLE; /* size: 0x0048 */

typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT
{
  /* 0x0000 */ unsigned __int64 RequestSize;
  /* 0x0008 */ unsigned long NumOutStandingRequests;
  /* 0x000c */ long __PADDING__[1];
} STORAGE_ALLOCATE_BC_STREAM_OUTPUT, *PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT; /* size: 0x0010 */

typedef struct _CM_SYNC_POST_BLOCK
{
  /* 0x0000 */ struct _KEVENT SystemEvent;
  /* 0x0018 */ long Status;
  /* 0x001c */ long __PADDING__[1];
} CM_SYNC_POST_BLOCK, *PCM_SYNC_POST_BLOCK; /* size: 0x0020 */

typedef struct _CM_ASYNC_USER_POST_BLOCK
{
  /* 0x0000 */ unsigned long Dummy;
  /* 0x0004 */ long Padding_888;
  /* 0x0008 */ struct _KEVENT* UserEvent;
  /* 0x0010 */ struct _KAPC Apc;
  /* 0x0068 */ struct _IO_STATUS_BLOCK* IoStatusBlock;
} CM_ASYNC_USER_POST_BLOCK, *PCM_ASYNC_USER_POST_BLOCK; /* size: 0x0070 */

typedef struct _CM_ASYNC_KERNEL_POST_BLOCK
{
  /* 0x0000 */ struct _KEVENT* Event;
  /* 0x0008 */ struct _WORK_QUEUE_ITEM* WorkItem;
  /* 0x0010 */ enum _WORK_QUEUE_TYPE QueueType;
  /* 0x0014 */ long __PADDING__[1];
} CM_ASYNC_KERNEL_POST_BLOCK, *PCM_ASYNC_KERNEL_POST_BLOCK; /* size: 0x0018 */

typedef union _CM_POST_BLOCK_UNION
{
  union
  {
    /* 0x0000 */ struct _CM_SYNC_POST_BLOCK Sync;
    /* 0x0000 */ struct _CM_ASYNC_USER_POST_BLOCK AsyncUser;
    /* 0x0000 */ struct _CM_ASYNC_KERNEL_POST_BLOCK AsyncKernel;
  }; /* size: 0x0070 */
} CM_POST_BLOCK_UNION, *PCM_POST_BLOCK_UNION; /* size: 0x0070 */

typedef struct _POOL_BLOCK
{
  /* 0x0000 */ unsigned char Fill[16];
} POOL_BLOCK, *PPOOL_BLOCK; /* size: 0x0010 */

typedef struct _SYSTEM_LOOKASIDE_INFORMATION
{
  /* 0x0000 */ unsigned short CurrentDepth;
  /* 0x0002 */ unsigned short MaximumDepth;
  /* 0x0004 */ unsigned long TotalAllocates;
  /* 0x0008 */ unsigned long AllocateMisses;
  /* 0x000c */ unsigned long TotalFrees;
  /* 0x0010 */ unsigned long FreeMisses;
  /* 0x0014 */ unsigned long Type;
  /* 0x0018 */ unsigned long Tag;
  /* 0x001c */ unsigned long Size;
} SYSTEM_LOOKASIDE_INFORMATION, *PSYSTEM_LOOKASIDE_INFORMATION; /* size: 0x0020 */

typedef struct _MUTANT_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ unsigned char OwnedByCaller;
  /* 0x0005 */ unsigned char AbandonedState;
  /* 0x0006 */ char __PADDING__[2];
} MUTANT_BASIC_INFORMATION, *PMUTANT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _stat64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_889[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_890;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stat64, *Pstat64; /* size: 0x0038 */

typedef struct _SYSTEM_FILECACHE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CurrentSize;
  /* 0x0008 */ unsigned __int64 PeakSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_891;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSet;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSet;
  /* 0x0028 */ unsigned __int64 CurrentSizeIncludingTransitionInPages;
  /* 0x0030 */ unsigned __int64 PeakSizeIncludingTransitionInPages;
  /* 0x0038 */ unsigned long TransitionRePurposeCount;
  /* 0x003c */ unsigned long Flags;
} SYSTEM_FILECACHE_INFORMATION, *PSYSTEM_FILECACHE_INFORMATION; /* size: 0x0040 */

typedef struct _STACK_TRACE_DATABASE
{
  union
  {
    /* 0x0000 */ char Reserved[104];
    /* 0x0000 */ struct _RTL_STACK_DATABASE_LOCK Lock;
  }; /* size: 0x0068 */
  /* 0x0068 */ void* Reserved2;
  /* 0x0070 */ unsigned __int64 PeakHashCollisionListLength;
  /* 0x0078 */ void* LowerMemoryStart;
  /* 0x0080 */ unsigned char PreCommitted;
  /* 0x0081 */ unsigned char DumpInProgress;
  /* 0x0082 */ char Padding_892[6];
  /* 0x0088 */ void* CommitBase;
  /* 0x0090 */ void* CurrentLowerCommitLimit;
  /* 0x0098 */ void* CurrentUpperCommitLimit;
  /* 0x00a0 */ char* NextFreeLowerMemory;
  /* 0x00a8 */ char* NextFreeUpperMemory;
  /* 0x00b0 */ unsigned long NumberOfEntriesLookedUp;
  /* 0x00b4 */ unsigned long NumberOfEntriesAdded;
  /* 0x00b8 */ struct _RTL_STACK_TRACE_ENTRY** EntryIndexArray;
  /* 0x00c0 */ unsigned long NumberOfEntriesAllocated;
  /* 0x00c4 */ unsigned long NumberOfEntriesAvailable;
  /* 0x00c8 */ unsigned long NumberOfAllocationFailures;
  /* 0x00cc */ long Padding_893;
  /* 0x00d0 */ union _SLIST_HEADER FreeLists[32];
  /* 0x02d0 */ unsigned long NumberOfBuckets;
  /* 0x02d4 */ long Padding_894;
  /* 0x02d8 */ struct _RTL_STD_LIST_HEAD* Buckets /* zero-length array */;
  /* 0x02d9 */ char Padding_895[15];
  /* 0x02e8 */ long __PADDING__[2];
} STACK_TRACE_DATABASE, *PSTACK_TRACE_DATABASE; /* size: 0x02f0 */

typedef struct _FILE_FS_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long Characteristics;
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION; /* size: 0x0008 */

typedef struct _KTM_RESTART_RECORD
{
  /* 0x0000 */ union _CLS_LSN Lsn;
  /* 0x0008 */ struct _LIST_ENTRY LsnOrderedEntry;
} KTM_RESTART_RECORD, *PKTM_RESTART_RECORD; /* size: 0x0018 */

typedef struct _DISK_DESCRIPTION
{
  /* 0x0000 */ unsigned short NumberOfPartitions;
  /* 0x0002 */ unsigned short ReservedShort;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ struct _DISK_PARTITION Partitions[1];
} DISK_DESCRIPTION, *PDISK_DESCRIPTION; /* size: 0x003c */

typedef struct _DISK_REGISTRY
{
  /* 0x0000 */ unsigned short NumberOfDisks;
  /* 0x0002 */ unsigned short ReservedShort;
  /* 0x0004 */ struct _DISK_DESCRIPTION Disks[1];
} DISK_REGISTRY, *PDISK_REGISTRY; /* size: 0x0040 */

typedef struct _ALPC_CONTEXT_ATTR
{
  /* 0x0000 */ void* PortContext;
  /* 0x0008 */ void* MessageContext;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long MessageId;
  /* 0x0018 */ unsigned long CallbackId;
  /* 0x001c */ long __PADDING__[1];
} ALPC_CONTEXT_ATTR, *PALPC_CONTEXT_ATTR; /* size: 0x0020 */

typedef struct _MEMORY_ALLOCATION_DESCRIPTOR
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _TYPE_OF_MEMORY MemoryType;
  /* 0x0014 */ long Padding_896;
  /* 0x0018 */ unsigned __int64 BasePage;
  /* 0x0020 */ unsigned __int64 PageCount;
} MEMORY_ALLOCATION_DESCRIPTOR, *PMEMORY_ALLOCATION_DESCRIPTOR; /* size: 0x0028 */

typedef struct _POLICY_LSA_SERVER_ROLE_INFO
{
  /* 0x0000 */ enum _POLICY_LSA_SERVER_ROLE LsaServerRole;
} POLICY_LSA_SERVER_ROLE_INFO, *PPOLICY_LSA_SERVER_ROLE_INFO; /* size: 0x0004 */

typedef struct _FT_SYNC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ union _LARGE_INTEGER ByteCount;
} FT_SYNC_INFORMATION, *PFT_SYNC_INFORMATION; /* size: 0x0010 */

typedef struct _LPCP_PORT_ZONE
{
  /* 0x0000 */ struct _KEVENT FreeEvent;
  /* 0x0018 */ unsigned long MaxPoolUsage;
  /* 0x001c */ unsigned long GrowSize;
  /* 0x0020 */ struct _ZONE_HEADER Zone;
} LPCP_PORT_ZONE, *PLPCP_PORT_ZONE; /* size: 0x0038 */

typedef struct _ALPC_LOG_ENTRY
{
  /* 0x0000 */ struct _CLIENT_ID Thread;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ long Padding_897;
  /* 0x0018 */ void** Data /* zero-length array */;
} ALPC_LOG_ENTRY, *PALPC_LOG_ENTRY; /* size: 0x0018 */

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION
{
  /* 0x0000 */ unsigned long CancelProbability;
  /* 0x0004 */ unsigned long CancelThreshold;
  /* 0x0008 */ unsigned long CompletionThreshold;
  /* 0x000c */ unsigned long CancellationVerifierDisabled;
  /* 0x0010 */ unsigned long AvailableIssues;
  /* 0x0014 */ long Padding_898;
  /* 0x0018 */ struct _SYSTEM_VERIFIER_ISSUE Issues[128];
} SYSTEM_VERIFIER_CANCELLATION_INFORMATION, *PSYSTEM_VERIFIER_CANCELLATION_INFORMATION; /* size: 0x1018 */

typedef struct _FXSAVE_FORMAT_WX86
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned short TagWord;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned long ErrorSelector;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned long DataSelector;
  /* 0x0018 */ unsigned long MXCsr;
  /* 0x001c */ unsigned long MXCsr_Mask;
  /* 0x0020 */ unsigned char RegisterArea[128];
  /* 0x00a0 */ unsigned char Reserved3[128];
  /* 0x0120 */ unsigned char Reserved4[224];
} FXSAVE_FORMAT_WX86, *PFXSAVE_FORMAT_WX86; /* size: 0x0200 */

typedef struct _MEMORY_REGION_INFORMATION
{
  /* 0x0000 */ void* AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionType;
  /* 0x0010 */ unsigned __int64 RegionSize;
} MEMORY_REGION_INFORMATION, *PMEMORY_REGION_INFORMATION; /* size: 0x0018 */

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR
{
  /* 0x0000 */ unsigned long Signature;
} DRIVE_LAYOUT_INFORMATION_MBR, *PDRIVE_LAYOUT_INFORMATION_MBR; /* size: 0x0004 */

typedef struct _IOP_APC_HARD_ERROR_PACKET
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM Item;
  /* 0x0020 */ struct _IRP* Irp;
  /* 0x0028 */ struct _VPB* Vpb;
  /* 0x0030 */ struct _DEVICE_OBJECT* RealDeviceObject;
} IOP_APC_HARD_ERROR_PACKET, *PIOP_APC_HARD_ERROR_PACKET; /* size: 0x0038 */

typedef struct _FILE_LOCK
{
  /* 0x0000 */ void* CompleteLockIrpRoutine /* function */;
  /* 0x0008 */ void* UnlockRoutine /* function */;
  /* 0x0010 */ unsigned char FastIoIsQuestionable;
  /* 0x0011 */ unsigned char SpareC[3];
  /* 0x0014 */ long Padding_899;
  /* 0x0018 */ void* LockInformation;
  /* 0x0020 */ struct _FILE_LOCK_INFO LastReturnedLockInfo;
  /* 0x0050 */ void* LastReturnedLock;
  /* 0x0058 */ volatile long LockRequestsInProgress;
  /* 0x005c */ long __PADDING__[1];
} FILE_LOCK, *PFILE_LOCK; /* size: 0x0060 */

typedef struct _LEGACY_DEVICE_DETECTION_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_900;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* LegacyDeviceDetection /* function */;
} LEGACY_DEVICE_DETECTION_INTERFACE, *PLEGACY_DEVICE_DETECTION_INTERFACE; /* size: 0x0028 */

typedef struct _SYSTEM_NUMA_INFORMATION
{
  /* 0x0000 */ unsigned long HighestNodeNumber;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    /* 0x0008 */ struct _GROUP_AFFINITY ActiveProcessorsGroupAffinity[64];
    /* 0x0008 */ unsigned __int64 AvailableMemory[64];
    /* 0x0008 */ unsigned __int64 Pad[128];
  }; /* size: 0x0400 */
} SYSTEM_NUMA_INFORMATION, *PSYSTEM_NUMA_INFORMATION; /* size: 0x0408 */

struct tagSWITCH_CONTEXT_DATA
{
  /* 0x0000 */ struct _GUID guPlatform;
  /* 0x0010 */ struct _GUID guMinPlatform;
  /* 0x0020 */ unsigned long ulElementCount;
  /* 0x0024 */ struct _GUID guElements[1];
}; /* size: 0x0034 */

typedef struct _NFS_OPEN_ECP_CONTEXT
{
  /* 0x0000 */ struct _UNICODE_STRING* ExportAlias;
  /* 0x0008 */ struct sockaddr_storage* ClientSocketAddress;
} NFS_OPEN_ECP_CONTEXT, *PNFS_OPEN_ECP_CONTEXT; /* size: 0x0010 */

typedef struct _SE_ADT_ACCESS_REASON
{
  /* 0x0000 */ unsigned long AccessMask;
  /* 0x0004 */ unsigned long AccessReasons[32];
  /* 0x0084 */ unsigned long ObjectTypeIndex;
  /* 0x0088 */ unsigned long AccessGranted;
  /* 0x008c */ long Padding_901;
  /* 0x0090 */ void* SecurityDescriptor;
} SE_ADT_ACCESS_REASON, *PSE_ADT_ACCESS_REASON; /* size: 0x0098 */

typedef struct _KEY_NODE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long NameLength;
  /* 0x0018 */ wchar_t Name[1];
  /* 0x001a */ char __PADDING__[6];
} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION; /* size: 0x0020 */

typedef struct _DISK_SNAPSHOT_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _DISK_SNAPSHOT_STATE State;
  /* 0x0008 */ struct _GUID SnapshotSetId;
  /* 0x0018 */ struct _GUID SnapshotId;
  /* 0x0028 */ struct _GUID LunId;
  /* 0x0038 */ union _LARGE_INTEGER CreationTimeStamp;
  /* 0x0040 */ unsigned long ImportCount;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ unsigned long AdditionalDataSize;
  /* 0x004c */ unsigned char AdditionalData[1];
  /* 0x004d */ char __PADDING__[3];
} DISK_SNAPSHOT_INFO, *PDISK_SNAPSHOT_INFO; /* size: 0x0050 */

typedef struct _DBGKM_APIMSG
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ enum _DBGKM_APINUMBER ApiNumber;
  /* 0x002c */ long ReturnedStatus;
  union
  {
    union
    {
      /* 0x0030 */ struct _DBGKM_EXCEPTION Exception;
      /* 0x0030 */ struct _DBGKM_CREATE_THREAD CreateThread;
      /* 0x0030 */ struct _DBGKM_CREATE_PROCESS CreateProcessInfo;
      /* 0x0030 */ struct _DBGKM_EXIT_THREAD ExitThread;
      /* 0x0030 */ struct _DBGKM_EXIT_PROCESS ExitProcess;
      /* 0x0030 */ struct _DBGKM_LOAD_DLL LoadDll;
      /* 0x0030 */ struct _DBGKM_UNLOAD_DLL UnloadDll;
      /* 0x0030 */ struct _DBGKM_ERROR_MSG ErrorMsg;
    }; /* size: 0x00e0 */
  } /* size: 0x00e0 */ u;
} DBGKM_APIMSG, *PDBGKM_APIMSG; /* size: 0x0110 */

typedef struct _DISK_CONFIG_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long CheckSum;
  /* 0x0008 */ unsigned char DirtyShutdown;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ unsigned long DiskInformationOffset;
  /* 0x0010 */ unsigned long DiskInformationSize;
  /* 0x0014 */ unsigned long FtInformationOffset;
  /* 0x0018 */ unsigned long FtInformationSize;
  /* 0x001c */ unsigned long FtStripeWidth;
  /* 0x0020 */ unsigned long FtPoolSize;
  /* 0x0024 */ unsigned long NameOffset;
  /* 0x0028 */ unsigned long NameSize;
} DISK_CONFIG_HEADER, *PDISK_CONFIG_HEADER; /* size: 0x002c */

struct ACPI_INTERFACE_STANDARD2
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_902;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* GpeConnectVector /* function */;
  /* 0x0028 */ void* GpeDisconnectVector /* function */;
  /* 0x0030 */ void* GpeEnableEvent /* function */;
  /* 0x0038 */ void* GpeDisableEvent /* function */;
  /* 0x0040 */ void* GpeClearStatus /* function */;
  /* 0x0048 */ void* RegisterForDeviceNotifications /* function */;
  /* 0x0050 */ void* UnregisterForDeviceNotifications /* function */;
}; /* size: 0x0058 */

struct tagSIZE
{
  /* 0x0000 */ long cx;
  /* 0x0004 */ long cy;
}; /* size: 0x0008 */

typedef struct _FS_FILTER_COMPLETION_STACK
{
  /* 0x0000 */ unsigned short StackLength;
  /* 0x0002 */ unsigned short NextStackPosition;
  /* 0x0004 */ long Padding_903;
  /* 0x0008 */ struct _FS_FILTER_COMPLETION_NODE* Stack;
  /* 0x0010 */ struct _FS_FILTER_COMPLETION_NODE DefaultStack[15];
} FS_FILTER_COMPLETION_STACK, *PFS_FILTER_COMPLETION_STACK; /* size: 0x01f0 */

typedef struct _FS_FILTER_CTRL
{
  /* 0x0000 */ struct _FS_FILTER_CALLBACK_DATA Data;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ unsigned long Reserved;
  /* 0x0048 */ struct _FS_FILTER_COMPLETION_STACK CompletionStack;
} FS_FILTER_CTRL, *PFS_FILTER_CTRL; /* size: 0x0238 */

typedef struct _FREE_DISPLAY
{
  /* 0x0000 */ unsigned long RealVectorSize;
  /* 0x0004 */ long Padding_904;
  /* 0x0008 */ struct _RTL_BITMAP Display;
} FREE_DISPLAY, *PFREE_DISPLAY; /* size: 0x0018 */

typedef struct _DUAL
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_905;
  /* 0x0008 */ struct _HMAP_DIRECTORY* Map;
  /* 0x0010 */ struct _HMAP_TABLE* SmallDir;
  /* 0x0018 */ unsigned long Guard;
  /* 0x001c */ long Padding_906;
  /* 0x0020 */ struct _FREE_DISPLAY FreeDisplay[24];
  /* 0x0260 */ unsigned long FreeSummary;
  /* 0x0264 */ long Padding_907;
  /* 0x0268 */ struct _LIST_ENTRY FreeBins;
} DUAL, *PDUAL; /* size: 0x0278 */

typedef struct _SET_DISK_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned char Persist;
  /* 0x0005 */ unsigned char RelinquishOwnership;
  /* 0x0006 */ unsigned char Reserved1[2];
  /* 0x0008 */ unsigned __int64 Attributes;
  /* 0x0010 */ unsigned __int64 AttributesMask;
  /* 0x0018 */ struct _GUID Owner;
} SET_DISK_ATTRIBUTES, *PSET_DISK_ATTRIBUTES; /* size: 0x0028 */

typedef struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_2
{
  /* 0x0000 */ unsigned int ProviderId;
  /* 0x0004 */ long Padding_908;
  /* 0x0008 */ struct _UNICODE_STRING ProviderName;
} FSRTL_MUP_PROVIDER_INFO_LEVEL_2, *PFSRTL_MUP_PROVIDER_INFO_LEVEL_2; /* size: 0x0018 */

typedef struct _IOP_HARD_ERROR_QUEUE
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM ExWorkItem;
  /* 0x0020 */ struct _LIST_ENTRY WorkQueue;
  /* 0x0030 */ unsigned __int64 WorkQueueSpinLock;
  /* 0x0038 */ struct _KSEMAPHORE WorkQueueSemaphore;
  /* 0x0058 */ unsigned char ThreadStarted;
  /* 0x0059 */ char Padding_909[3];
  /* 0x005c */ long NumPendingApcPopups;
} IOP_HARD_ERROR_QUEUE, *PIOP_HARD_ERROR_QUEUE; /* size: 0x0060 */

typedef struct _ENLISTMENT_CRM_INFORMATION
{
  /* 0x0000 */ struct _GUID CrmTransactionManagerId;
  /* 0x0010 */ struct _GUID CrmResourceManagerId;
  /* 0x0020 */ struct _GUID CrmEnlistmentId;
} ENLISTMENT_CRM_INFORMATION, *PENLISTMENT_CRM_INFORMATION; /* size: 0x0030 */

typedef struct _IOSPACE32
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Data;
} IOSPACE32, *PIOSPACE32; /* size: 0x000c */

typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long RequestsPerPeriod;
  /* 0x0008 */ unsigned long Period;
  /* 0x000c */ unsigned char RetryFailures;
  /* 0x000d */ unsigned char Discardable;
  /* 0x000e */ unsigned char Reserved1[2];
  /* 0x0010 */ unsigned long AccessType;
  /* 0x0014 */ unsigned long AccessMode;
} STORAGE_ALLOCATE_BC_STREAM_INPUT, *PSTORAGE_ALLOCATE_BC_STREAM_INPUT; /* size: 0x0018 */

typedef struct _KI_LOCAL_ARRAY4
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ unsigned char Fill5;
  /* 0x0005 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY4, *PKI_LOCAL_ARRAY4; /* size: 0x005d */

typedef struct _CM_KEY_REFERENCE
{
  /* 0x0000 */ unsigned long KeyCell;
  /* 0x0004 */ long Padding_910;
  /* 0x0008 */ struct _HHIVE* KeyHive;
} CM_KEY_REFERENCE, *PCM_KEY_REFERENCE; /* size: 0x0010 */

struct PPM_WMI_PERF_STATES_EX
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_911;
  /* 0x0028 */ void* TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

typedef struct _DISK_CACHE_INFORMATION
{
  /* 0x0000 */ unsigned char ParametersSavable;
  /* 0x0001 */ unsigned char ReadCacheEnabled;
  /* 0x0002 */ unsigned char WriteCacheEnabled;
  /* 0x0003 */ char Padding_912;
  /* 0x0004 */ enum DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;
  /* 0x0008 */ enum DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;
  /* 0x000c */ unsigned short DisablePrefetchTransferLength;
  /* 0x000e */ unsigned char PrefetchScalar;
  /* 0x000f */ char Padding_913;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned short Minimum;
      /* 0x0012 */ unsigned short Maximum;
      /* 0x0014 */ unsigned short MaximumBlocks;
    } /* size: 0x0006 */ ScalarPrefetch;
    struct
    {
      struct
      {
        /* 0x0010 */ unsigned short Minimum;
        /* 0x0012 */ unsigned short Maximum;
      } /* size: 0x0004 */ BlockPrefetch;
      /* 0x0014 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} DISK_CACHE_INFORMATION, *PDISK_CACHE_INFORMATION; /* size: 0x0018 */

typedef struct _LSA_TRANSLATED_SID
{
  /* 0x0000 */ enum _SID_NAME_USE Use;
  /* 0x0004 */ unsigned long RelativeId;
  /* 0x0008 */ long DomainIndex;
} LSA_TRANSLATED_SID, *PLSA_TRANSLATED_SID; /* size: 0x000c */

typedef struct _BATTERY_MANUFACTURE_DATE
{
  /* 0x0000 */ unsigned char Day;
  /* 0x0001 */ unsigned char Month;
  /* 0x0002 */ unsigned short Year;
} BATTERY_MANUFACTURE_DATE, *PBATTERY_MANUFACTURE_DATE; /* size: 0x0004 */

typedef struct _IOP_PRIORITY_CALLBACK_PARAMETERS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ struct _ETHREAD* Thread;
  /* 0x0010 */ enum _IO_PRIORITY_HINT TargetPriority;
  /* 0x0014 */ long __PADDING__[1];
} IOP_PRIORITY_CALLBACK_PARAMETERS, *PIOP_PRIORITY_CALLBACK_PARAMETERS; /* size: 0x0018 */

typedef struct _IOP_BOOST_THREAD_PARAMS
{
  /* 0x0000 */ struct _EX_CALLBACK_ROUTINE_BLOCK* Callback;
  /* 0x0008 */ struct _IOP_PRIORITY_CALLBACK_PARAMETERS Parameters;
  /* 0x0020 */ struct _IOP_BOOST_THREAD_PARAMS* Next;
  /* 0x0028 */ unsigned short CallbackIndex;
  /* 0x002a */ char __PADDING__[6];
} IOP_BOOST_THREAD_PARAMS, *PIOP_BOOST_THREAD_PARAMS; /* size: 0x0030 */

typedef struct _PNP_DEVICE_EVENT_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long Argument;
  /* 0x0014 */ long Padding_914;
  /* 0x0018 */ struct _KEVENT* CallerEvent;
  /* 0x0020 */ void* Callback /* function */;
  /* 0x0028 */ void* Context;
  /* 0x0030 */ enum _PNP_VETO_TYPE* VetoType;
  /* 0x0038 */ struct _UNICODE_STRING* VetoName;
  /* 0x0040 */ struct _PLUGPLAY_EVENT_BLOCK Data;
} PNP_DEVICE_EVENT_ENTRY, *PPNP_DEVICE_EVENT_ENTRY; /* size: 0x0090 */

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ unsigned char Register;
  /* 0x0005 */ char Padding_915[3];
  /* 0x0008 */ void* FirmwareTableHandler /* function */;
  /* 0x0010 */ void* DriverObject;
} SYSTEM_FIRMWARE_TABLE_HANDLER, *PSYSTEM_FIRMWARE_TABLE_HANDLER; /* size: 0x0018 */

typedef struct _MTRR_VARIABLE_MASK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Reserved0 : 11; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned __int64 Mask : 28; /* bit position: 12 */
      /* 0x0000 */ unsigned __int64 Reserved1 : 24; /* bit position: 40 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MTRR_VARIABLE_MASK, *PMTRR_VARIABLE_MASK; /* size: 0x0008 */

struct WMIOPENGUIDBLOCK
{
  /* 0x0000 */ struct _OBJECT_ATTRIBUTES* ObjectAttributes;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ long Padding_916;
  /* 0x0010 */ union HANDLE3264 Handle;
}; /* size: 0x0018 */

typedef struct _HAL_PLATFORM_TIMER_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _HAL_PLATFORM_TIMER_SOURCE ClockInterruptSource;
  /* 0x0008 */ enum _HAL_PLATFORM_TIMER_SOURCE PerformanceCounterSource;
} HAL_PLATFORM_TIMER_INFORMATION, *PHAL_PLATFORM_TIMER_INFORMATION; /* size: 0x000c */

typedef struct _ARBITER_ORDERING
{
  /* 0x0000 */ unsigned __int64 Start;
  /* 0x0008 */ unsigned __int64 End;
} ARBITER_ORDERING, *PARBITER_ORDERING; /* size: 0x0010 */

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT
{
  union
  {
    /* 0x0000 */ unsigned long BufferLength;
    struct
    {
      /* 0x0000 */ unsigned char Buffer[1];
      /* 0x0001 */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} TXFS_READ_BACKUP_INFORMATION_OUT, *PTXFS_READ_BACKUP_INFORMATION_OUT; /* size: 0x0004 */

typedef struct _LOADER_HIVE_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ unsigned short* FilePath;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_917;
  /* 0x0020 */ void* RegistryBase;
  /* 0x0028 */ unsigned long RegistryLength;
  /* 0x002c */ long Padding_918;
  /* 0x0030 */ unsigned short* RegistryName;
  /* 0x0038 */ unsigned short* RegistryParent;
} LOADER_HIVE_BLOCK, *PLOADER_HIVE_BLOCK; /* size: 0x0040 */

struct WMILANGUAGECHANGE
{
  /* 0x0000 */ wchar_t Language[256];
  /* 0x0200 */ unsigned long Flags;
}; /* size: 0x0204 */

typedef struct _EVENT_TRACE_SPINLOCK_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TRACE_INFORMATION_CLASS EventTraceInformationClass;
  /* 0x0004 */ unsigned long SpinLockSpinThreshold;
  /* 0x0008 */ unsigned long SpinLockAcquireSampleRate;
  /* 0x000c */ unsigned long SpinLockContentionSampleRate;
} EVENT_TRACE_SPINLOCK_INFORMATION, *PEVENT_TRACE_SPINLOCK_INFORMATION; /* size: 0x0010 */

typedef struct _TP_DEBUG_FREE_INFO
{
  /* 0x0000 */ unsigned long FreeListSize;
} TP_DEBUG_FREE_INFO, *PTP_DEBUG_FREE_INFO; /* size: 0x0004 */

typedef struct _SYM_DUMP_PARAM
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ long Padding_919;
  /* 0x0008 */ unsigned char* sName;
  /* 0x0010 */ unsigned long Options;
  /* 0x0014 */ long Padding_920;
  /* 0x0018 */ unsigned __int64 addr;
  /* 0x0020 */ struct _FIELD_INFO* listLink;
  union
  {
    /* 0x0028 */ void* Context;
    /* 0x0028 */ void* pBuffer;
  }; /* size: 0x0008 */
  /* 0x0030 */ void* CallbackRoutine /* function */;
  /* 0x0038 */ unsigned long nFields;
  /* 0x003c */ long Padding_921;
  /* 0x0040 */ struct _FIELD_INFO* Fields;
  /* 0x0048 */ unsigned __int64 ModBase;
  /* 0x0050 */ unsigned long TypeId;
  /* 0x0054 */ unsigned long TypeSize;
  /* 0x0058 */ unsigned long BufferSize;
  struct /* bitfield */
  {
    /* 0x005c */ unsigned long fPointer : 2; /* bit position: 0 */
    /* 0x005c */ unsigned long fArray : 1; /* bit position: 2 */
    /* 0x005c */ unsigned long fStruct : 1; /* bit position: 3 */
    /* 0x005c */ unsigned long fConstant : 1; /* bit position: 4 */
    /* 0x005c */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
} SYM_DUMP_PARAM, *PSYM_DUMP_PARAM; /* size: 0x0060 */

typedef struct _REASSIGN_BLOCKS_EX
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ union _LARGE_INTEGER BlockNumber[1];
} REASSIGN_BLOCKS_EX, *PREASSIGN_BLOCKS_EX; /* size: 0x000c */

typedef struct _DISK_LOGGING
{
  /* 0x0000 */ unsigned char Function;
  /* 0x0001 */ char Padding_922[7];
  /* 0x0008 */ void* BufferAddress;
  /* 0x0010 */ unsigned long BufferSize;
  /* 0x0014 */ long __PADDING__[1];
} DISK_LOGGING, *PDISK_LOGGING; /* size: 0x0018 */

struct POP_POWER_SETTING_CONFIGURATION
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _LIST_ENTRY RegisteredCallbacks;
  /* 0x0020 */ struct _GUID Guid;
  /* 0x0030 */ struct POP_POWER_SETTING_VALUE* Value[3];
}; /* size: 0x0048 */

typedef struct _KI_LOCAL_ARRAY3
{
  /* 0x0000 */ unsigned char Fill1;
  /* 0x0001 */ unsigned char Fill2;
  /* 0x0002 */ unsigned char Fill3;
  /* 0x0003 */ unsigned char Fill4;
  /* 0x0004 */ volatile unsigned __int64 LocalArray[11];
} KI_LOCAL_ARRAY3, *PKI_LOCAL_ARRAY3; /* size: 0x005c */

typedef struct _HIVE_ROUTINES
{
  /* 0x0000 */ void* AllocateRoutine /* function */;
  /* 0x0008 */ void* FreeRoutine /* function */;
  /* 0x0010 */ void* FileSetSizeRoutine /* function */;
  /* 0x0018 */ void* FileWriteRoutine /* function */;
  /* 0x0020 */ void* FileReadRoutine /* function */;
  /* 0x0028 */ void* FileFlushRoutine /* function */;
} HIVE_ROUTINES, *PHIVE_ROUTINES; /* size: 0x0030 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long NameFlags;
  /* 0x000c */ long Padding_923;
  /* 0x0010 */ __int64 FileId;
  /* 0x0018 */ unsigned long Reserved1;
  /* 0x001c */ unsigned long Reserved2;
  /* 0x0020 */ __int64 Reserved3;
  /* 0x0028 */ wchar_t FileName[1];
  /* 0x002a */ char __PADDING__[6];
} TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY, *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY; /* size: 0x0030 */

typedef struct _HAL_PROFILE_SOURCE_INFORMATION_EX
{
  /* 0x0000 */ enum _KPROFILE_SOURCE Source;
  /* 0x0004 */ unsigned char Supported;
  /* 0x0005 */ char Padding_924[3];
  /* 0x0008 */ unsigned __int64 Interval;
  /* 0x0010 */ unsigned __int64 DefInterval;
  /* 0x0018 */ unsigned __int64 MaxInterval;
  /* 0x0020 */ unsigned __int64 MinInterval;
} HAL_PROFILE_SOURCE_INFORMATION_EX, *PHAL_PROFILE_SOURCE_INFORMATION_EX; /* size: 0x0028 */

typedef struct _CMC_DRIVER_INFO
{
  /* 0x0000 */ void* ExceptionCallback /* function */;
  /* 0x0008 */ void* DpcCallback /* function */;
  /* 0x0010 */ void* DeviceContext;
} CMC_DRIVER_INFO, *PCMC_DRIVER_INFO; /* size: 0x0018 */

typedef struct _REASON_BUFFER
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_925;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned __int64 ResourceFileNameOffset;
      /* 0x0010 */ unsigned short ResourceReasonId;
      /* 0x0012 */ char Padding_926[2];
      /* 0x0014 */ unsigned long StringCount;
      /* 0x0018 */ unsigned __int64 SubstitutionStringsOffset;
    }; /* size: 0x0016 */
    struct
    {
      /* 0x0008 */ unsigned __int64 SimpleStringOffset;
      /* 0x0010 */ long __PADDING__[4];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
} REASON_BUFFER, *PREASON_BUFFER; /* size: 0x0020 */

typedef struct _NVCACHE_REQUEST_BLOCK
{
  /* 0x0000 */ unsigned long NRBSize;
  /* 0x0004 */ unsigned short Function;
  /* 0x0006 */ char Padding_927[2];
  /* 0x0008 */ unsigned long NRBFlags;
  /* 0x000c */ unsigned long NRBStatus;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long Padding_928;
  /* 0x0018 */ unsigned __int64 LBA;
  /* 0x0020 */ unsigned long DataBufSize;
  /* 0x0024 */ unsigned long NVCacheStatus;
  /* 0x0028 */ unsigned long NVCacheSubStatus;
  /* 0x002c */ long __PADDING__[1];
} NVCACHE_REQUEST_BLOCK, *PNVCACHE_REQUEST_BLOCK; /* size: 0x0030 */

typedef struct _CM_KEY_HASH
{
  /* 0x0000 */ unsigned long ConvKey;
  /* 0x0004 */ long Padding_929;
  /* 0x0008 */ struct _CM_KEY_HASH* NextHash;
  /* 0x0010 */ struct _HHIVE* KeyHive;
  /* 0x0018 */ unsigned long KeyCell;
  /* 0x001c */ long __PADDING__[1];
} CM_KEY_HASH, *PCM_KEY_HASH; /* size: 0x0020 */

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

typedef struct _WORKER_FACTORY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ union _LARGE_INTEGER RetryTimeout;
  /* 0x0010 */ union _LARGE_INTEGER IdleTimeout;
  /* 0x0018 */ unsigned char Paused;
  /* 0x0019 */ unsigned char TimerSet;
  /* 0x001a */ unsigned char QueuedToExWorker;
  /* 0x001b */ unsigned char MayCreate;
  /* 0x001c */ unsigned char CreateInProgress;
  /* 0x001d */ unsigned char InsertedIntoQueue;
  /* 0x001e */ unsigned char Shutdown;
  /* 0x001f */ char Padding_930;
  /* 0x0020 */ unsigned long BindingCount;
  /* 0x0024 */ unsigned long ThreadMinimum;
  /* 0x0028 */ unsigned long ThreadMaximum;
  /* 0x002c */ unsigned long PendingWorkerCount;
  /* 0x0030 */ unsigned long WaitingWorkerCount;
  /* 0x0034 */ unsigned long TotalWorkerCount;
  /* 0x0038 */ unsigned long ReleaseCount;
  /* 0x003c */ long Padding_931;
  /* 0x0040 */ __int64 InfiniteWaitGoal;
  /* 0x0048 */ void* StartRoutine /* function */;
  /* 0x0050 */ void* StartParameter;
  /* 0x0058 */ void* ProcessId;
  /* 0x0060 */ unsigned __int64 StackReserve;
  /* 0x0068 */ unsigned __int64 StackCommit;
  /* 0x0070 */ long LastThreadCreationStatus;
  /* 0x0074 */ long __PADDING__[1];
} WORKER_FACTORY_BASIC_INFORMATION, *PWORKER_FACTORY_BASIC_INFORMATION; /* size: 0x0078 */

typedef struct _MPIO_PASS_THROUGH_PATH32
{
  /* 0x0000 */ struct _SCSI_PASS_THROUGH32 PassThrough;
  /* 0x002c */ unsigned long Version;
  /* 0x0030 */ unsigned short Length;
  /* 0x0032 */ unsigned char Flags;
  /* 0x0033 */ unsigned char PortNumber;
  /* 0x0034 */ long Padding_932;
  /* 0x0038 */ unsigned __int64 MpioPathId;
} MPIO_PASS_THROUGH_PATH32, *PMPIO_PASS_THROUGH_PATH32; /* size: 0x0040 */

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short NumberOfModuleForwarderRefs;
} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR; /* size: 0x0008 */

typedef struct _ETW_APC_ENTRY
{
  /* 0x0000 */ struct _SLIST_ENTRY SListEntry;
  /* 0x0010 */ struct _KAPC Apc;
  /* 0x0068 */ unsigned long ProcessorNumber;
  /* 0x006c */ long __PADDING__[1];
} ETW_APC_ENTRY, *PETW_APC_ENTRY; /* size: 0x0070 */

typedef struct _ETW_STACK_TRACE_BLOCK
{
  /* 0x0000 */ long Flags;
  /* 0x0004 */ unsigned long LoggerId;
  /* 0x0008 */ struct _ETHREAD* Thread;
  /* 0x0010 */ struct _KDPC StackWalkDpc;
  /* 0x0050 */ union _SLIST_HEADER ApcListHead;
  /* 0x0060 */ struct _ETW_APC_ENTRY ApcEntry[12];
  /* 0x05a0 */ long CollidedDpcCount;
  /* 0x05a4 */ long CollidedApcCount;
  /* 0x05a8 */ long SuspendedThreadCount;
  /* 0x05ac */ long ApcReserveExhaustedCount;
  /* 0x05b0 */ long ApcNotQueueableCount;
  /* 0x05b4 */ long DpcInsertFailedCount;
  /* 0x05b8 */ long ApcInsertFailedCount;
  /* 0x05bc */ long TerminatingThreadCount;
  /* 0x05c0 */ long ExecutingInterruptCount;
  /* 0x05c4 */ long InvalidStackRangeCount;
  /* 0x05c8 */ long UnsupportedStackLimitsCount;
  /* 0x05cc */ long StackThresholdExceededCount;
  /* 0x05d0 */ long EmptyUserStackCount;
  /* 0x05d4 */ long EmptyKernelStackCount;
  /* 0x05d8 */ long EmptyStackCount;
  /* 0x05dc */ long ThreadChangedCount;
  /* 0x05e0 */ long ApcCount;
  /* 0x05e4 */ long MaxApcCount;
  /* 0x05e8 */ long __PADDING__[2];
} ETW_STACK_TRACE_BLOCK, *PETW_STACK_TRACE_BLOCK; /* size: 0x05f0 */

typedef struct _IOSPACE_EX
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Data;
  /* 0x000c */ unsigned long InterfaceType;
  /* 0x0010 */ unsigned long BusNumber;
  /* 0x0014 */ unsigned long AddressSpace;
} IOSPACE_EX, *PIOSPACE_EX; /* size: 0x0018 */

typedef struct _ATA_PASS_THROUGH_DIRECT
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short AtaFlags;
  /* 0x0004 */ unsigned char PathId;
  /* 0x0005 */ unsigned char TargetId;
  /* 0x0006 */ unsigned char Lun;
  /* 0x0007 */ unsigned char ReservedAsUchar;
  /* 0x0008 */ unsigned long DataTransferLength;
  /* 0x000c */ unsigned long TimeOutValue;
  /* 0x0010 */ unsigned long ReservedAsUlong;
  /* 0x0014 */ long Padding_933;
  /* 0x0018 */ void* DataBuffer;
  /* 0x0020 */ unsigned char PreviousTaskFile[8];
  /* 0x0028 */ unsigned char CurrentTaskFile[8];
} ATA_PASS_THROUGH_DIRECT, *PATA_PASS_THROUGH_DIRECT; /* size: 0x0030 */

typedef struct _EXT_MATCH_PATTERN_A
{
  /* 0x0000 */ const char* Str;
  /* 0x0008 */ const char* Pattern;
  /* 0x0010 */ unsigned long CaseSensitive;
  /* 0x0014 */ long __PADDING__[1];
} EXT_MATCH_PATTERN_A, *PEXT_MATCH_PATTERN_A; /* size: 0x0018 */

typedef struct _DBGKD_GET_STRING
{
  /* 0x0000 */ unsigned long LengthOfPromptString;
  /* 0x0004 */ unsigned long LengthOfStringRead;
} DBGKD_GET_STRING, *PDBGKD_GET_STRING; /* size: 0x0008 */

typedef struct _PNP_REPLACE_DRIVER_INTERFACE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_934;
  /* 0x0010 */ void* Unload /* function */;
  /* 0x0018 */ void* BeginReplace /* function */;
  /* 0x0020 */ void* EndReplace /* function */;
  /* 0x0028 */ void* MirrorPhysicalMemory /* function */;
  /* 0x0030 */ void* SetProcessorId /* function */;
  /* 0x0038 */ void* Swap /* function */;
  /* 0x0040 */ void* InitiateHardwareMirror /* function */;
  /* 0x0048 */ void* MirrorPlatformMemory /* function */;
  /* 0x0050 */ void* GetMemoryDestination /* function */;
  /* 0x0058 */ void* EnableDisableHardwareQuiesce /* function */;
} PNP_REPLACE_DRIVER_INTERFACE, *PPNP_REPLACE_DRIVER_INTERFACE; /* size: 0x0060 */

typedef struct _REINIT_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0018 */ void* DriverReinitializationRoutine /* function */;
  /* 0x0020 */ void* Context;
} REINIT_PACKET, *PREINIT_PACKET; /* size: 0x0028 */

typedef struct _SEP_AUDIT_BOUNDS
{
  /* 0x0000 */ unsigned long UpperBound;
  /* 0x0004 */ unsigned long LowerBound;
} SEP_AUDIT_BOUNDS, *PSEP_AUDIT_BOUNDS; /* size: 0x0008 */

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const struct _GUID* ExtensionGuid;
  /* 0x0010 */ unsigned long Id;
  /* 0x0014 */ unsigned long Depth;
  /* 0x0018 */ unsigned long OutFlags;
  /* 0x001c */ long __PADDING__[1];
} FINDFIRSTACTIVATIONCONTEXTSECTION, *PFINDFIRSTACTIVATIONCONTEXTSECTION; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long PropertyType;
  /* 0x0014 */ long Padding_935;
  /* 0x0018 */ void* Buffer;
  /* 0x0020 */ unsigned long BufferSize;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_PROPERTY_DATA, *PPLUGPLAY_CONTROL_PROPERTY_DATA; /* size: 0x0028 */

typedef struct _RTLP_PROCESS_REFLECTION_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ReflectionContextSize;
  /* 0x0008 */ unsigned long ReflectionFlags;
  /* 0x000c */ long Padding_936;
  /* 0x0010 */ void* ReflectionRoutine /* function */;
  /* 0x0018 */ void* ReflectionParameter;
  /* 0x0020 */ void* ReflectedProcessCreatedEvent;
  /* 0x0028 */ void* ReflectedProcessHandlesDuplicatedEvent;
  /* 0x0030 */ void* ReflectionStartEvent;
  /* 0x0038 */ struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION ReflectionInformation;
} RTLP_PROCESS_REFLECTION_CONTEXT, *PRTLP_PROCESS_REFLECTION_CONTEXT; /* size: 0x0058 */

typedef struct _BUS_INTERFACE_STANDARD
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_937;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* TranslateBusAddress /* function */;
  /* 0x0028 */ void* GetDmaAdapter /* function */;
  /* 0x0030 */ void* SetBusData /* function */;
  /* 0x0038 */ void* GetBusData /* function */;
} BUS_INTERFACE_STANDARD, *PBUS_INTERFACE_STANDARD; /* size: 0x0040 */

typedef struct _HARDWARE_COUNTER
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Index;
} HARDWARE_COUNTER, *PHARDWARE_COUNTER; /* size: 0x0010 */

typedef struct _MMIO_TRACKER
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned __int64 PageFrameIndex;
  /* 0x0018 */ unsigned __int64 NumberOfPages;
  union
  {
    /* 0x0020 */ void* BaseVa;
    /* 0x0020 */ unsigned long CacheFlushTimeStamp;
  }; /* size: 0x0008 */
  /* 0x0028 */ struct _MDL* Mdl;
  /* 0x0030 */ unsigned __int64 MdlPages;
  /* 0x0038 */ void* StackTrace[6];
  /* 0x0068 */ struct _IO_CACHE_INFO CacheInfo[1];
  /* 0x0069 */ char __PADDING__[7];
} MMIO_TRACKER, *PMMIO_TRACKER; /* size: 0x0070 */

typedef struct _STORAGE_ADAPTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long MaximumTransferLength;
  /* 0x000c */ unsigned long MaximumPhysicalPages;
  /* 0x0010 */ unsigned long AlignmentMask;
  /* 0x0014 */ unsigned char AdapterUsesPio;
  /* 0x0015 */ unsigned char AdapterScansDown;
  /* 0x0016 */ unsigned char CommandQueueing;
  /* 0x0017 */ unsigned char AcceleratedTransfer;
  /* 0x0018 */ unsigned char BusType;
  /* 0x0019 */ char Padding_938;
  /* 0x001a */ unsigned short BusMajorVersion;
  /* 0x001c */ unsigned short BusMinorVersion;
  /* 0x001e */ char __PADDING__[2];
} STORAGE_ADAPTER_DESCRIPTOR, *PSTORAGE_ADAPTER_DESCRIPTOR; /* size: 0x0020 */

typedef struct _DBGKD_DEBUG_IO
{
  /* 0x0000 */ unsigned long ApiNumber;
  /* 0x0004 */ unsigned short ProcessorLevel;
  /* 0x0006 */ unsigned short Processor;
  union
  {
    union
    {
      /* 0x0008 */ struct _DBGKD_PRINT_STRING PrintString;
      /* 0x0008 */ struct _DBGKD_GET_STRING GetString;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} DBGKD_DEBUG_IO, *PDBGKD_DEBUG_IO; /* size: 0x0010 */

typedef struct _PS_STD_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StdHandleState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long PseudoHandleMask : 3; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long StdHandleSubsystemType;
} PS_STD_HANDLE_INFO, *PPS_STD_HANDLE_INFO; /* size: 0x0008 */

typedef struct _PNP_DEVICE_COMPLETION_REQUEST
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DEVICE_NODE* DeviceNode;
  /* 0x0018 */ void* Context;
  /* 0x0020 */ enum _PNP_DEVNODE_STATE CompletionState;
  /* 0x0024 */ unsigned long IrpPended;
  /* 0x0028 */ long Status;
  /* 0x002c */ long Padding_939;
  /* 0x0030 */ void* Information;
  /* 0x0038 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0058 */ struct _DRIVER_OBJECT* FailingDriver;
  /* 0x0060 */ long ReferenceCount;
  /* 0x0064 */ long __PADDING__[1];
} PNP_DEVICE_COMPLETION_REQUEST, *PPNP_DEVICE_COMPLETION_REQUEST; /* size: 0x0068 */

typedef union _NP_LEAF_PTR
{
  union
  {
    /* 0x0000 */ void* Ptr;
    /* 0x0000 */ unsigned __int64 Key;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long HasRef : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long LastAccessTime : 10; /* bit position: 2 */
    }; /* bitfield */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long OverlapsValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long OverlapsHasRef : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long RefCount : 10; /* bit position: 2 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long OverlapsValid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long Dirty : 1; /* bit position: 1 */
      }; /* bitfield */
    } /* size: 0x0004 */ NodeCtx;
  }; /* size: 0x0008 */
} NP_LEAF_PTR, *PNP_LEAF_PTR; /* size: 0x0008 */

typedef struct _ETWP_EVENT_DATA
{
  /* 0x0000 */ struct _EVENT_HEADER Header;
  /* 0x0050 */ unsigned char HasRelatedActivityId;
  /* 0x0051 */ unsigned char Reserved;
  /* 0x0052 */ unsigned short Filter;
  /* 0x0054 */ unsigned long UserDataCount;
  /* 0x0058 */ unsigned __int64 UserData;
  /* 0x0060 */ struct _GUID RelatedActivityId;
} ETWP_EVENT_DATA, *PETWP_EVENT_DATA; /* size: 0x0070 */

typedef struct _STDM_PARAMETERS
{
  /* 0x0000 */ unsigned long RegionStartIndex;
  /* 0x0004 */ unsigned long RegionCount;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long NoDuplication : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long ContainsMetadata : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long PageOutToNodePool : 1; /* bit position: 2 */
    /* 0x0008 */ unsigned long SynchronousWrites : 1; /* bit position: 3 */
    /* 0x0008 */ unsigned long ErrorMode : 2; /* bit position: 4 */
  }; /* bitfield */
} STDM_PARAMETERS, *PSTDM_PARAMETERS; /* size: 0x000c */

typedef struct _ST_PERSIST_CTX
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Flags : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Crc;
  /* 0x000c */ unsigned long UserNonRootLeafCount;
  /* 0x0010 */ unsigned long MetaNonRootLeafCount;
  /* 0x0014 */ long Padding_940;
  /* 0x0018 */ struct _B_TREE_SERIALIZE_INFO UserPageTreeInfo;
  /* 0x0030 */ struct _B_TREE_SERIALIZE_INFO MetaPageTreeInfo;
  /* 0x0048 */ struct _ST_PARAMETERS StoreParams;
  /* 0x0080 */ struct _STDM_PARAMETERS UserDataParams;
  /* 0x008c */ struct _STDM_PARAMETERS MetadataParams;
  /* 0x0098 */ struct _STDM_PARAMETERS MetadataMapParams;
  /* 0x00a4 */ unsigned long MetadataMapEntryCount;
} ST_PERSIST_CTX, *PST_PERSIST_CTX; /* size: 0x00a8 */

typedef struct _HAL_MESSAGE_TARGET_REQUEST
{
  /* 0x0000 */ enum HAL_INTERRUPT_TARGET_TYPE Type;
  /* 0x0004 */ long Padding_941;
  struct
  {
    /* 0x0008 */ unsigned long Vector;
    /* 0x0004 */ long Padding_942;
    /* 0x0010 */ struct _GROUP_AFFINITY TargetProcessors;
    /* 0x0020 */ enum HAL_APIC_DESTINATION_MODE DestinationMode;
    /* 0x0024 */ struct _INTERRUPT_REMAPPING_INFO IntRemapInfo;
  } /* size: 0x0020 */ Apic;
} HAL_MESSAGE_TARGET_REQUEST, *PHAL_MESSAGE_TARGET_REQUEST; /* size: 0x0028 */

typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long BytesPerCacheLine;
  /* 0x000c */ unsigned long BytesOffsetForCacheAlignment;
  /* 0x0010 */ unsigned long BytesPerLogicalSector;
  /* 0x0014 */ unsigned long BytesPerPhysicalSector;
  /* 0x0018 */ unsigned long BytesOffsetForSectorAlignment;
} STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR, *PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR; /* size: 0x001c */

struct ANON_OBJECT_HEADER_BIGOBJ
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
  /* 0x002c */ unsigned long NumberOfSections;
  /* 0x0030 */ unsigned long PointerToSymbolTable;
  /* 0x0034 */ unsigned long NumberOfSymbols;
}; /* size: 0x0038 */

typedef struct _FILE_DISPOSITION_INFORMATION
{
  /* 0x0000 */ unsigned char DeleteFile;
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; /* size: 0x0001 */

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ unsigned char TimeoutSpecified;
  /* 0x000d */ char Padding_943;
  /* 0x000e */ wchar_t Name[1];
} FILE_PIPE_WAIT_FOR_BUFFER, *PFILE_PIPE_WAIT_FOR_BUFFER; /* size: 0x0010 */

typedef struct _WMI_PUSHLOCK
{
  /* 0x0000 */ void* PushLock;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned char Action;
  /* 0x000d */ char __PADDING__[3];
} WMI_PUSHLOCK, *PWMI_PUSHLOCK; /* size: 0x0010 */

typedef struct _SE_IMPERSONATION_STATE
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ unsigned char CopyOnOpen;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char Padding_944[2];
  /* 0x000c */ enum _SECURITY_IMPERSONATION_LEVEL Level;
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE; /* size: 0x0010 */

typedef struct _PERFINFO_CCSWAP
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DataType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long TimeDelta : 30; /* bit position: 2 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long OldThreadIdIndex : 4; /* bit position: 0 */
    /* 0x0004 */ unsigned long OldThreadStateWr : 6; /* bit position: 4 */
    /* 0x0004 */ unsigned long OldThreadPriority : 5; /* bit position: 10 */
    /* 0x0004 */ unsigned long NewThreadWaitTime : 17; /* bit position: 15 */
  }; /* bitfield */
} PERFINFO_CCSWAP, *PPERFINFO_CCSWAP; /* size: 0x0008 */

typedef struct _PERF_BIN
{
  /* 0x0000 */ unsigned long NumberOfBins;
  /* 0x0004 */ unsigned long TypeOfBin;
  /* 0x0008 */ struct _BIN_RANGE BinsRanges[1];
} PERF_BIN, *PPERF_BIN; /* size: 0x0018 */

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION
{
  /* 0x0000 */ enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
} SYSTEM_CRASH_DUMP_STATE_INFORMATION, *PSYSTEM_CRASH_DUMP_STATE_INFORMATION; /* size: 0x0004 */

typedef struct _CONTROLLER_OBJECT
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_945;
  /* 0x0008 */ void* ControllerExtension;
  /* 0x0010 */ struct _KDEVICE_QUEUE DeviceWaitQueue;
  /* 0x0038 */ unsigned long Spare1;
  /* 0x003c */ long Padding_946;
  /* 0x0040 */ union _LARGE_INTEGER Spare2;
} CONTROLLER_OBJECT, *PCONTROLLER_OBJECT; /* size: 0x0048 */

struct PCI_MSIX_CAPABILITY
{
  /* 0x0000 */ struct _PCI_CAPABILITIES_HEADER Header;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0002 */ unsigned short TableSize : 11; /* bit position: 0 */
      /* 0x0002 */ unsigned short Reserved : 3; /* bit position: 11 */
      /* 0x0002 */ unsigned short FunctionMask : 1; /* bit position: 14 */
      /* 0x0002 */ unsigned short MSIXEnable : 1; /* bit position: 15 */
    }; /* bitfield */
  } /* size: 0x0002 */ MessageControl;
  /* 0x0004 */ struct MSIX_TABLE_POINTER MessageTable;
  /* 0x0008 */ struct MSIX_TABLE_POINTER PBATable;
}; /* size: 0x000c */

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_947;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _GUID TransactionID;
} JOURNAL_TRANSACTION_BOUNDARY_INFORMATION, *PJOURNAL_TRANSACTION_BOUNDARY_INFORMATION; /* size: 0x0028 */

typedef struct _DISK_RECORD
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ union _LARGE_INTEGER StartTime;
  /* 0x0010 */ union _LARGE_INTEGER EndTime;
  /* 0x0018 */ void* VirtualAddress;
  /* 0x0020 */ unsigned long NumberOfBytes;
  /* 0x0024 */ unsigned char DeviceNumber;
  /* 0x0025 */ unsigned char ReadRequest;
  /* 0x0026 */ char __PADDING__[2];
} DISK_RECORD, *PDISK_RECORD; /* size: 0x0028 */

typedef struct _RTL_UNLOAD_EVENT_TRACE64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ unsigned long Version[2];
  /* 0x0064 */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE64, *PRTL_UNLOAD_EVENT_TRACE64; /* size: 0x0068 */

typedef struct _SECURITY_DESCRIPTOR_HEADER
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned long RefCount;
  /* 0x0014 */ unsigned long FullHash;
  /* 0x0018 */ void* Spare;
  /* 0x0020 */ struct _QUAD SecurityDescriptor;
} SECURITY_DESCRIPTOR_HEADER, *PSECURITY_DESCRIPTOR_HEADER; /* size: 0x0028 */

typedef struct _KNOWN_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} KNOWN_ACE, *PKNOWN_ACE; /* size: 0x000c */

typedef struct _REQ_LIST
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _PNP_RESOURCE_REQUEST* Request;
  /* 0x0010 */ struct _REQ_ALTERNATIVE** SelectedAlternative;
  /* 0x0018 */ struct _REQ_ALTERNATIVE** BestAlternative;
  /* 0x0020 */ unsigned long AlternativeCount;
  /* 0x0024 */ long Padding_948;
  /* 0x0028 */ struct _REQ_ALTERNATIVE* AlternativeTable[1];
} REQ_LIST, *PREQ_LIST; /* size: 0x0030 */

typedef struct _OBJECT_REF_STACK_INFO
{
  /* 0x0000 */ unsigned long Sequence;
  /* 0x0004 */ unsigned short Index;
  /* 0x0006 */ unsigned short NumTraces;
  /* 0x0008 */ unsigned long Tag;
} OBJECT_REF_STACK_INFO, *POBJECT_REF_STACK_INFO; /* size: 0x000c */

typedef struct _PEB_LDR_DATA32
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_949[3];
  /* 0x0008 */ unsigned long SsHandle;
  /* 0x000c */ struct LIST_ENTRY32 InLoadOrderModuleList;
  /* 0x0014 */ struct LIST_ENTRY32 InMemoryOrderModuleList;
  /* 0x001c */ struct LIST_ENTRY32 InInitializationOrderModuleList;
  /* 0x0024 */ unsigned long EntryInProgress;
  /* 0x0028 */ unsigned char ShutdownInProgress;
  /* 0x0029 */ char Padding_950[3];
  /* 0x002c */ unsigned long ShutdownThreadId;
} PEB_LDR_DATA32, *PPEB_LDR_DATA32; /* size: 0x0030 */

typedef struct _DISK_GEOMETRY
{
  /* 0x0000 */ union _LARGE_INTEGER Cylinders;
  /* 0x0008 */ enum _MEDIA_TYPE MediaType;
  /* 0x000c */ unsigned long TracksPerCylinder;
  /* 0x0010 */ unsigned long SectorsPerTrack;
  /* 0x0014 */ unsigned long BytesPerSector;
} DISK_GEOMETRY, *PDISK_GEOMETRY; /* size: 0x0018 */

struct NTFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0008 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0010 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0018 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0020 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0028 */ unsigned long BytesPerSector;
  /* 0x002c */ unsigned long BytesPerCluster;
  /* 0x0030 */ unsigned long BytesPerFileRecordSegment;
  /* 0x0034 */ unsigned long ClustersPerFileRecordSegment;
  /* 0x0038 */ union _LARGE_INTEGER MftValidDataLength;
  /* 0x0040 */ union _LARGE_INTEGER MftStartLcn;
  /* 0x0048 */ union _LARGE_INTEGER Mft2StartLcn;
  /* 0x0050 */ union _LARGE_INTEGER MftZoneStart;
  /* 0x0058 */ union _LARGE_INTEGER MftZoneEnd;
}; /* size: 0x0060 */

typedef struct _IOP_FOEXT_STREAM_ID_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY ListHeader;
} IOP_FOEXT_STREAM_ID_LIST, *PIOP_FOEXT_STREAM_ID_LIST; /* size: 0x0010 */

struct NTFS_FILE_RECORD_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
}; /* size: 0x0008 */

typedef struct _ETW_REALTIME_CONNECT_CONTEXT
{
  /* 0x0000 */ unsigned long LoggerId;
  /* 0x0004 */ unsigned long ReserveBufferSpaceSize;
  /* 0x0008 */ unsigned __int64 ReserveBufferSpacePtr;
  /* 0x0010 */ unsigned __int64 ReserveBufferSpaceBitMapPtr;
  /* 0x0018 */ unsigned __int64 DisconnectEvent;
  /* 0x0020 */ unsigned __int64 DataAvailableEvent;
  /* 0x0028 */ unsigned __int64 BufferListHeadPtr;
  /* 0x0030 */ unsigned __int64 BufferCountPtr;
  /* 0x0038 */ unsigned __int64 ConnectHandle;
  /* 0x0040 */ struct _ETW_REF_CLOCK RealtimeReferenceTime;
} ETW_REALTIME_CONNECT_CONTEXT, *PETW_REALTIME_CONNECT_CONTEXT; /* size: 0x0050 */

struct MFT_ENUM_DATA
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
}; /* size: 0x0018 */

typedef struct _DISK_GEOMETRY_EX
{
  /* 0x0000 */ struct _DISK_GEOMETRY Geometry;
  /* 0x0018 */ union _LARGE_INTEGER DiskSize;
  /* 0x0020 */ unsigned char Data[1];
  /* 0x0021 */ char __PADDING__[7];
} DISK_GEOMETRY_EX, *PDISK_GEOMETRY_EX; /* size: 0x0028 */

struct RANGE_USERDATA_HEADER
{
  /* 0x0000 */ unsigned long Count;
}; /* size: 0x0004 */

struct PPM_WMI_IDLE_STATES
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

typedef struct _HEADLESS_CMD_POSITION_CURSOR
{
  /* 0x0000 */ unsigned long X;
  /* 0x0004 */ unsigned long Y;
} HEADLESS_CMD_POSITION_CURSOR, *PHEADLESS_CMD_POSITION_CURSOR; /* size: 0x0008 */

typedef struct _SRV_OPEN_ECP_CONTEXT
{
  /* 0x0000 */ struct _UNICODE_STRING* ShareName;
  /* 0x0008 */ struct sockaddr_storage* SocketAddress;
  /* 0x0010 */ unsigned char OplockBlockState;
  /* 0x0011 */ unsigned char OplockAppState;
  /* 0x0012 */ unsigned char OplockFinalState;
  /* 0x0013 */ char __PADDING__[5];
} SRV_OPEN_ECP_CONTEXT, *PSRV_OPEN_ECP_CONTEXT; /* size: 0x0018 */

struct POP_POWER_REQUEST_WORKITEM_CONTEXT
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM* WorkItem;
  /* 0x0008 */ struct POP_POWER_REQUEST_ATTRIBUTE* Attribute;
  /* 0x0010 */ unsigned long SessionId;
  /* 0x0014 */ unsigned char Enable;
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct POP_NOTIFY_WORK
{
  /* 0x0000 */ void* Function /* function */;
  /* 0x0008 */ unsigned long Arg;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _KDPC64
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ unsigned char Number;
  /* 0x0003 */ unsigned char Importance;
  /* 0x0004 */ long Padding_951;
  /* 0x0008 */ struct LIST_ENTRY64 DpcListEntry;
  /* 0x0018 */ unsigned __int64 DeferredRoutine;
  /* 0x0020 */ unsigned __int64 DeferredContext;
  /* 0x0028 */ unsigned __int64 SystemArgument1;
  /* 0x0030 */ unsigned __int64 SystemArgument2;
  /* 0x0038 */ unsigned __int64 Lock;
} KDPC64, *PKDPC64; /* size: 0x0040 */

typedef struct _TOKEN_MANDATORY_POLICY
{
  /* 0x0000 */ unsigned long Policy;
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY; /* size: 0x0004 */

typedef struct _LDR_VERIFY_IMAGE_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
  /* 0x0018 */ struct _LDR_SECTION_INFO SectionInfo;
  /* 0x0038 */ unsigned short ImageCharacteristics;
  /* 0x003a */ char __PADDING__[6];
} LDR_VERIFY_IMAGE_INFO, *PLDR_VERIFY_IMAGE_INFO; /* size: 0x0040 */

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long ConcurrencyCount;
  /* 0x0010 */ unsigned long AttributeFlags;
  /* 0x0014 */ long __PADDING__[1];
} ALPC_PORT_COMPLETION_LIST_INFORMATION, *PALPC_PORT_COMPLETION_LIST_INFORMATION; /* size: 0x0018 */

typedef struct _KNOWN_COMPOUND_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned short CompoundAceType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long SidStart;
} KNOWN_COMPOUND_ACE, *PKNOWN_COMPOUND_ACE; /* size: 0x0010 */

typedef struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION
{
  /* 0x0000 */ unsigned long LowPriReadOperations;
  /* 0x0004 */ unsigned long LowPriWriteOperations;
  /* 0x0008 */ unsigned long KernelBumpedToNormalOperations;
  /* 0x000c */ unsigned long LowPriPagingReadOperations;
  /* 0x0010 */ unsigned long KernelPagingReadsBumpedToNormal;
  /* 0x0014 */ unsigned long LowPriPagingWriteOperations;
  /* 0x0018 */ unsigned long KernelPagingWritesBumpedToNormal;
  /* 0x001c */ unsigned long BoostedIrpCount;
  /* 0x0020 */ unsigned long BoostedPagingIrpCount;
  /* 0x0024 */ unsigned long BlanketBoostCount;
} SYSTEM_LOW_PRIORITY_IO_INFORMATION, *PSYSTEM_LOW_PRIORITY_IO_INFORMATION; /* size: 0x0028 */

typedef struct _FILE_TYPE_NOTIFICATION_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumFileTypeIDs;
  /* 0x0008 */ struct _GUID FileTypeID[1];
} FILE_TYPE_NOTIFICATION_INPUT, *PFILE_TYPE_NOTIFICATION_INPUT; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const wchar_t* AssemblyName;
  /* 0x0010 */ unsigned long AssemblyNameLength;
  /* 0x0014 */ unsigned long HashAlgorithm;
  /* 0x0018 */ unsigned long PseudoKey;
  /* 0x001c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DATA, *PACTIVATION_CONTEXT_ASSEMBLY_DATA; /* size: 0x0020 */

typedef struct _SEARCHMEMORY
{
  /* 0x0000 */ unsigned __int64 SearchAddress;
  /* 0x0008 */ unsigned __int64 SearchLength;
  /* 0x0010 */ unsigned __int64 FoundAddress;
  /* 0x0018 */ unsigned long PatternLength;
  /* 0x001c */ long Padding_952;
  /* 0x0020 */ void* Pattern;
} SEARCHMEMORY, *PSEARCHMEMORY; /* size: 0x0028 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING
{
  /* 0x0000 */ const void* Data;
  /* 0x0008 */ unsigned long AssemblyRosterIndex;
  /* 0x000c */ long Padding_953;
  /* 0x0010 */ void* ResolutionContext;
  /* 0x0018 */ struct _UNICODE_STRING Root;
  /* 0x0028 */ unsigned char KnownRoot;
  /* 0x0029 */ char Padding_954[7];
  /* 0x0030 */ unsigned __int64 RootCount;
  /* 0x0038 */ unsigned char CancelResolution;
  /* 0x0039 */ char __PADDING__[7];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING; /* size: 0x0040 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned long RootIndexUsed;
  /* 0x000c */ long __PADDING__[1];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL; /* size: 0x0010 */

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA
{
  union
  {
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
  }; /* size: 0x0040 */
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA; /* size: 0x0040 */

typedef struct _PS_CPU_QUOTA_SET_INFORMATION
{
  /* 0x0000 */ __int64 SessionHandle;
  /* 0x0008 */ unsigned long Weight;
  /* 0x000c */ long __PADDING__[1];
} PS_CPU_QUOTA_SET_INFORMATION, *PPS_CPU_QUOTA_SET_INFORMATION; /* size: 0x0010 */

typedef struct _MESSAGE_RESOURCE_DATA
{
  /* 0x0000 */ unsigned long NumberOfBlocks;
  /* 0x0004 */ struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA; /* size: 0x0010 */

typedef struct _PCW_REGISTRATION_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_955;
  /* 0x0008 */ const struct _UNICODE_STRING* Name;
  /* 0x0010 */ unsigned long CounterCount;
  /* 0x0014 */ long Padding_956;
  /* 0x0018 */ struct _PCW_COUNTER_DESCRIPTOR* Counters;
  /* 0x0020 */ void* Callback /* function */;
  /* 0x0028 */ void* CallbackContext;
} PCW_REGISTRATION_INFORMATION, *PPCW_REGISTRATION_INFORMATION; /* size: 0x0030 */

typedef struct _TRACE_LOGFILE_HEADER32
{
  /* 0x0000 */ unsigned long BufferSize;
  union
  {
    /* 0x0004 */ unsigned long Version;
    struct
    {
      /* 0x0004 */ unsigned char MajorVersion;
      /* 0x0005 */ unsigned char MinorVersion;
      /* 0x0006 */ unsigned char SubVersion;
      /* 0x0007 */ unsigned char SubMinorVersion;
    } /* size: 0x0004 */ VersionDetail;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ProviderVersion;
  /* 0x000c */ unsigned long NumberOfProcessors;
  /* 0x0010 */ union _LARGE_INTEGER EndTime;
  /* 0x0018 */ unsigned long TimerResolution;
  /* 0x001c */ unsigned long MaximumFileSize;
  /* 0x0020 */ unsigned long LogFileMode;
  /* 0x0024 */ unsigned long BuffersWritten;
  union
  {
    /* 0x0028 */ struct _GUID LogInstanceGuid;
    struct
    {
      /* 0x0028 */ unsigned long StartBuffers;
      /* 0x002c */ unsigned long PointerSize;
      /* 0x0030 */ unsigned long EventsLost;
      /* 0x0034 */ unsigned long CpuSpeedInMHz;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0038 */ unsigned int LoggerName;
  /* 0x003c */ unsigned int LogFileName;
  /* 0x0040 */ struct _RTL_TIME_ZONE_INFORMATION TimeZone;
  /* 0x00ec */ long Padding_957;
  /* 0x00f0 */ union _LARGE_INTEGER BootTime;
  /* 0x00f8 */ union _LARGE_INTEGER PerfFreq;
  /* 0x0100 */ union _LARGE_INTEGER StartTime;
  /* 0x0108 */ unsigned long ReservedFlags;
  /* 0x010c */ unsigned long BuffersLost;
} TRACE_LOGFILE_HEADER32, *PTRACE_LOGFILE_HEADER32; /* size: 0x0110 */

typedef struct _DEVPROPKEY
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long pid;
} DEVPROPKEY, *PDEVPROPKEY; /* size: 0x0014 */

typedef struct _PREFETCH_OPEN_ECP_CONTEXT
{
  /* 0x0000 */ void* Context;
} PREFETCH_OPEN_ECP_CONTEXT, *PPREFETCH_OPEN_ECP_CONTEXT; /* size: 0x0008 */

typedef struct _Wx86ThreadState64
{
  /* 0x0000 */ unsigned __int64 CallBx86Eip;
  /* 0x0008 */ unsigned __int64 DeallocationCpu;
  /* 0x0010 */ unsigned char UseKnownWx86Dll;
  /* 0x0011 */ char OleStubInvoked;
  /* 0x0012 */ char __PADDING__[6];
} Wx86ThreadState64, *PWx86ThreadState64; /* size: 0x0018 */

typedef struct _RM_COMMAND_MESSAGE
{
  /* 0x0000 */ struct _PORT_MESSAGE MessageHeader;
  /* 0x0028 */ enum _RM_COMMAND_NUMBER CommandNumber;
  /* 0x002c */ unsigned char CommandParams[468];
} RM_COMMAND_MESSAGE, *PRM_COMMAND_MESSAGE; /* size: 0x0200 */

typedef struct _ETWP_HEADER_EXTENDED_DATA_ITEM
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short ExtType;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned short Linkage : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned short Reserved2 : 15; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0006 */ unsigned short DataSize;
} ETWP_HEADER_EXTENDED_DATA_ITEM, *PETWP_HEADER_EXTENDED_DATA_ITEM; /* size: 0x0008 */

typedef struct _SYSTEM_REF_TRACE_INFORMATION
{
  /* 0x0000 */ unsigned char TraceEnable;
  /* 0x0001 */ unsigned char TracePermanent;
  /* 0x0002 */ char Padding_958[6];
  /* 0x0008 */ struct _UNICODE_STRING TraceProcessName;
  /* 0x0018 */ struct _UNICODE_STRING TracePoolTags;
} SYSTEM_REF_TRACE_INFORMATION, *PSYSTEM_REF_TRACE_INFORMATION; /* size: 0x0028 */

typedef struct _MOUNTMGR_CHANGE_NOTIFY_INFO
{
  /* 0x0000 */ unsigned long EpicNumber;
} MOUNTMGR_CHANGE_NOTIFY_INFO, *PMOUNTMGR_CHANGE_NOTIFY_INFO; /* size: 0x0004 */

struct _PCW_REGISTRATION;

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long HeapIndex;
  /* 0x000c */ unsigned long LastHeapIndex;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned __int64 ReserveSize;
  /* 0x0020 */ unsigned __int64 CommitSize;
  /* 0x0028 */ unsigned long SegmentCount;
  /* 0x002c */ long Padding_959;
  /* 0x0030 */ unsigned __int64 LargeUCRMemory;
  /* 0x0038 */ unsigned long UCRLength;
  /* 0x003c */ long Padding_960;
  /* 0x0040 */ unsigned __int64 AllocatedSpace;
  /* 0x0048 */ unsigned __int64 FreeSpace;
  /* 0x0050 */ unsigned long FreeListLength;
  /* 0x0054 */ unsigned long Contention;
  /* 0x0058 */ unsigned long VirtualBlocks;
  /* 0x005c */ unsigned long CommitRate;
  /* 0x0060 */ unsigned long DecommitRate;
  /* 0x0064 */ long __PADDING__[1];
} HEAP_PERFORMANCE_COUNTERS_INFORMATION, *PHEAP_PERFORMANCE_COUNTERS_INFORMATION; /* size: 0x0068 */

typedef struct _PCI_REGISTRY_INFO
{
  /* 0x0000 */ unsigned char MajorRevision;
  /* 0x0001 */ unsigned char MinorRevision;
  /* 0x0002 */ unsigned char NoBuses;
  /* 0x0003 */ unsigned char HardwareMechanism;
} PCI_REGISTRY_INFO, *PPCI_REGISTRY_INFO; /* size: 0x0004 */

typedef struct _PHYSICAL_DISK_RECORD
{
  /* 0x0000 */ unsigned long DiskNumber;
  /* 0x0004 */ unsigned long BytesPerSector;
  /* 0x0008 */ unsigned long SectorsPerTrack;
  /* 0x000c */ unsigned long TracksPerCylinder;
  /* 0x0010 */ unsigned __int64 Cylinders;
  /* 0x0018 */ unsigned long SCSIPortNumber;
  /* 0x001c */ unsigned long SCSIPathId;
  /* 0x0020 */ unsigned long SCSITargetId;
  /* 0x0024 */ unsigned long SCSILun;
  /* 0x0028 */ wchar_t Manufacturer[256];
  /* 0x0228 */ unsigned long PartitionCount;
  /* 0x022c */ unsigned char WriteCacheEnabled;
  /* 0x022d */ char Padding_961;
  /* 0x022e */ wchar_t BootDriveLetter[3];
  /* 0x0234 */ long __PADDING__[1];
} PHYSICAL_DISK_RECORD, *PPHYSICAL_DISK_RECORD; /* size: 0x0238 */

typedef struct _SYSDBG_TRIAGE_DUMP
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned __int64 BugCheckParam1;
  /* 0x0010 */ unsigned __int64 BugCheckParam2;
  /* 0x0018 */ unsigned __int64 BugCheckParam3;
  /* 0x0020 */ unsigned __int64 BugCheckParam4;
  /* 0x0028 */ unsigned long ProcessHandles;
  /* 0x002c */ unsigned long ThreadHandles;
  /* 0x0030 */ void** Handles;
} SYSDBG_TRIAGE_DUMP, *PSYSDBG_TRIAGE_DUMP; /* size: 0x0038 */

struct TM_RESTART_AREA
{
  /* 0x0000 */ union _CLS_LSN RestartLsn;
  /* 0x0008 */ unsigned long LogVersionStamp;
  /* 0x000c */ struct _GUID LogIdentity;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _TXFS_GET_TRANSACTED_VERSION
{
  /* 0x0000 */ unsigned long ThisBaseVersion;
  /* 0x0004 */ unsigned long LatestVersion;
  /* 0x0008 */ unsigned short ThisMiniVersion;
  /* 0x000a */ unsigned short FirstMiniVersion;
  /* 0x000c */ unsigned short LatestMiniVersion;
  /* 0x000e */ char __PADDING__[2];
} TXFS_GET_TRANSACTED_VERSION, *PTXFS_GET_TRANSACTED_VERSION; /* size: 0x0010 */

typedef struct _ImageArchitectureHeader
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int AmaskValue : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned int : 7; /* bit position: 1 */
    /* 0x0000 */ unsigned int AmaskShift : 8; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long FirstEntryRVA;
} ImageArchitectureHeader, *PImageArchitectureHeader; /* size: 0x0008 */

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER DirectoryCount;
  /* 0x0008 */ union _LARGE_INTEGER FileCount;
  /* 0x0010 */ unsigned short FsFormatMajVersion;
  /* 0x0012 */ unsigned short FsFormatMinVersion;
  /* 0x0014 */ wchar_t FsFormatName[12];
  /* 0x002c */ long Padding_962;
  /* 0x0030 */ union _LARGE_INTEGER FormatTime;
  /* 0x0038 */ union _LARGE_INTEGER LastUpdateTime;
  /* 0x0040 */ wchar_t CopyrightInfo[34];
  /* 0x0084 */ wchar_t AbstractInfo[34];
  /* 0x00c8 */ wchar_t FormattingImplementationInfo[34];
  /* 0x010c */ wchar_t LastModifyingImplementationInfo[34];
} FILE_QUERY_ON_DISK_VOL_INFO_BUFFER, *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER; /* size: 0x0150 */

typedef struct _BOOTDISK_INFORMATION
{
  /* 0x0000 */ __int64 BootPartitionOffset;
  /* 0x0008 */ __int64 SystemPartitionOffset;
  /* 0x0010 */ unsigned long BootDeviceSignature;
  /* 0x0014 */ unsigned long SystemDeviceSignature;
} BOOTDISK_INFORMATION, *PBOOTDISK_INFORMATION; /* size: 0x0018 */

typedef struct _OBJECT_HEADER_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ struct _OBJECT_HANDLE_COUNT_DATABASE* HandleCountDataBase;
    /* 0x0000 */ struct _OBJECT_HANDLE_COUNT_ENTRY SingleEntry;
  }; /* size: 0x0010 */
} OBJECT_HEADER_HANDLE_INFO, *POBJECT_HEADER_HANDLE_INFO; /* size: 0x0010 */

typedef struct _STORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_REQUEST
{
  /* 0x0000 */ unsigned long RequestLevel;
  /* 0x0004 */ unsigned char IsSystemVolume;
  /* 0x0005 */ unsigned char IoOverAllocatePermitted;
  /* 0x0006 */ char __PADDING__[2];
} STORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_REQUEST, *PSTORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_REQUEST; /* size: 0x0008 */

struct IMAGE_COR20_HEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned short MajorRuntimeVersion;
  /* 0x0006 */ unsigned short MinorRuntimeVersion;
  /* 0x0008 */ struct _IMAGE_DATA_DIRECTORY MetaData;
  /* 0x0010 */ unsigned long Flags;
  union
  {
    /* 0x0014 */ unsigned long EntryPointToken;
    /* 0x0014 */ unsigned long EntryPointRVA;
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _IMAGE_DATA_DIRECTORY Resources;
  /* 0x0020 */ struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
  /* 0x0028 */ struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
  /* 0x0030 */ struct _IMAGE_DATA_DIRECTORY VTableFixups;
  /* 0x0038 */ struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  /* 0x0040 */ struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
}; /* size: 0x0048 */

typedef struct _UNEXPECTED_INTERRUPT
{
  /* 0x0000 */ unsigned char PushImmOp;
  /* 0x0001 */ unsigned long PushImm;
  /* 0x0005 */ unsigned char PushRbp;
  /* 0x0006 */ unsigned char JmpOp;
  /* 0x0007 */ long JmpOffset;
  /* 0x000b */ char __PADDING__[5];
} UNEXPECTED_INTERRUPT, *PUNEXPECTED_INTERRUPT; /* size: 0x0010 */

typedef struct _GET_CURRENT_PROCESS_ADDRESS
{
  /* 0x0000 */ unsigned long Processor;
  /* 0x0004 */ long Padding_963;
  /* 0x0008 */ unsigned __int64 CurrentThread;
  /* 0x0010 */ unsigned __int64 Address;
} GET_CURRENT_PROCESS_ADDRESS, *PGET_CURRENT_PROCESS_ADDRESS; /* size: 0x0018 */

typedef struct _PSP_STACK_ALLOCATION_STATE
{
  union
  {
    /* 0x0000 */ unsigned char StackAllocationFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char SkipStackAllocation : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned char AllocatedNativeStack : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned char AllocatedWow64Stack : 1; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0001 */ char Padding_964[7];
  /* 0x0008 */ unsigned __int64 ZeroBits;
  /* 0x0010 */ unsigned __int64 StackSize;
  /* 0x0018 */ unsigned __int64 MaximumStackSize;
  /* 0x0020 */ unsigned long PreferredNode;
  /* 0x0024 */ unsigned long StackStatePad0;
} PSP_STACK_ALLOCATION_STATE, *PPSP_STACK_ALLOCATION_STATE; /* size: 0x0028 */

typedef struct _TOKEN_ACCESS_INFORMATION
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES_HASH* SidHash;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES_HASH* RestrictedSidHash;
  /* 0x0010 */ struct _TOKEN_PRIVILEGES* Privileges;
  /* 0x0018 */ struct _LUID AuthenticationId;
  /* 0x0020 */ enum _TOKEN_TYPE TokenType;
  /* 0x0024 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0028 */ struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
  /* 0x002c */ unsigned long Flags;
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION; /* size: 0x0030 */

typedef struct _KD_LOG
{
  /* 0x0000 */ unsigned __int64 TimeStamp;
  /* 0x0008 */ unsigned __int64 Duration;
} KD_LOG, *PKD_LOG; /* size: 0x0010 */

typedef struct _KD_LOG_BUFFER
{
  /* 0x0000 */ unsigned long Index;
  /* 0x0004 */ long Padding_965;
  /* 0x0008 */ struct _KD_LOG Log[256];
} KD_LOG_BUFFER, *PKD_LOG_BUFFER; /* size: 0x1008 */

typedef struct _EFI_LOAD_OPTION
{
  /* 0x0000 */ unsigned int Attributes;
  /* 0x0004 */ unsigned short FilePathLength;
  /* 0x0006 */ unsigned short Description[1];
} EFI_LOAD_OPTION, *PEFI_LOAD_OPTION; /* size: 0x0008 */

typedef struct _TARGET_DEVICE_NOTIFY_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _IO_NOTIFICATION_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ unsigned long SessionId;
  /* 0x0018 */ void* SessionHandle;
  /* 0x0020 */ void* CallbackRoutine /* function */;
  /* 0x0028 */ void* Context;
  /* 0x0030 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0038 */ unsigned short RefCount;
  /* 0x003a */ unsigned char Unregistered;
  /* 0x003b */ char Padding_966[5];
  /* 0x0040 */ struct _KGUARDED_MUTEX* Lock;
  /* 0x0048 */ struct _ERESOURCE* EntryLock;
  /* 0x0050 */ struct _FILE_OBJECT* FileObject;
  /* 0x0058 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
} TARGET_DEVICE_NOTIFY_ENTRY, *PTARGET_DEVICE_NOTIFY_ENTRY; /* size: 0x0060 */

typedef struct _ACL_REVISION_INFORMATION
{
  /* 0x0000 */ unsigned long AclRevision;
} ACL_REVISION_INFORMATION, *PACL_REVISION_INFORMATION; /* size: 0x0004 */

typedef union _HVLP_HYPERCALL_PAGE
{
  union
  {
    struct
    {
      /* 0x0000 */ struct _SLIST_ENTRY NextPage;
      /* 0x0010 */ union _LARGE_INTEGER PhysicalAddress;
    }; /* size: 0x0018 */
    /* 0x0000 */ unsigned char Buffer[4096];
  }; /* size: 0x1000 */
} HVLP_HYPERCALL_PAGE, *PHVLP_HYPERCALL_PAGE; /* size: 0x1000 */

typedef struct _MI_LARGEPAGE_MEMORY_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
  /* 0x0010 */ struct _COLORED_PAGE_INFO* ColoredPageInfoBase;
  /* 0x0018 */ unsigned long PagesNeedZeroing;
  /* 0x001c */ long __PADDING__[1];
} MI_LARGEPAGE_MEMORY_INFO, *PMI_LARGEPAGE_MEMORY_INFO; /* size: 0x0020 */

typedef struct _RTL_STACK_CONTEXT
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ long Padding_967;
  /* 0x0008 */ struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
} RTL_STACK_CONTEXT, *PRTL_STACK_CONTEXT; /* size: 0x0018 */

typedef struct _NOTIFY_CHANGE
{
  /* 0x0000 */ struct _REAL_NOTIFY_SYNC* NotifySync;
  /* 0x0008 */ void* FsContext;
  /* 0x0010 */ void* StreamID;
  /* 0x0018 */ void* TraverseCallback /* function */;
  /* 0x0020 */ struct _SECURITY_SUBJECT_CONTEXT* SubjectContext;
  /* 0x0028 */ struct _STRING* FullDirectoryName;
  /* 0x0030 */ struct _LIST_ENTRY NotifyList;
  /* 0x0040 */ struct _LIST_ENTRY NotifyIrps;
  /* 0x0050 */ void* FilterCallback /* function */;
  /* 0x0058 */ unsigned short Flags;
  /* 0x005a */ unsigned char CharacterSize;
  /* 0x005b */ char Padding_968;
  /* 0x005c */ unsigned long CompletionFilter;
  /* 0x0060 */ void* AllocatedBuffer;
  /* 0x0068 */ void* Buffer;
  /* 0x0070 */ unsigned long BufferLength;
  /* 0x0074 */ unsigned long ThisBufferLength;
  /* 0x0078 */ unsigned long DataLength;
  /* 0x007c */ unsigned long LastEntry;
  /* 0x0080 */ unsigned long ReferenceCount;
  /* 0x0084 */ long Padding_969;
  /* 0x0088 */ struct _EPROCESS* OwningProcess;
} NOTIFY_CHANGE, *PNOTIFY_CHANGE; /* size: 0x0090 */

typedef struct _ETW_HEAP_EVENT_SNAPSHOT
{
  /* 0x0000 */ struct _SYSTEM_TRACE_HEADER Header;
  /* 0x0020 */ void* HeapHandle;
  /* 0x0028 */ unsigned __int64 FreeSpace;
  /* 0x0030 */ unsigned __int64 CommittedSpace;
  /* 0x0038 */ unsigned __int64 ReservedSpace;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ unsigned long ProcessId;
  /* 0x0048 */ unsigned __int64 LargeUCRSpace;
  /* 0x0050 */ unsigned long FreeListLength;
  /* 0x0054 */ unsigned long UCRLength;
  /* 0x0058 */ unsigned __int64 AllocatedSpace;
} ETW_HEAP_EVENT_SNAPSHOT, *PETW_HEAP_EVENT_SNAPSHOT; /* size: 0x0060 */

typedef struct _RTL_RXACT_CONTEXT
{
  /* 0x0000 */ void* RootRegistryKey;
  /* 0x0008 */ void* RXactKey;
  /* 0x0010 */ unsigned char HandlesValid;
  /* 0x0011 */ char Padding_970[7];
  /* 0x0018 */ struct _RTL_RXACT_LOG* RXactLog;
} RTL_RXACT_CONTEXT, *PRTL_RXACT_CONTEXT; /* size: 0x0020 */

typedef struct _KEY_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Wow64Flags;
  /* 0x0004 */ unsigned long KeyFlags;
  /* 0x0008 */ unsigned long ControlFlags;
} KEY_FLAGS_INFORMATION, *PKEY_FLAGS_INFORMATION; /* size: 0x000c */

typedef struct _RTL_HEAP_WALK_ENTRY
{
  /* 0x0000 */ void* DataAddress;
  /* 0x0008 */ unsigned __int64 DataSize;
  /* 0x0010 */ unsigned char OverheadBytes;
  /* 0x0011 */ unsigned char SegmentIndex;
  /* 0x0012 */ unsigned short Flags;
  /* 0x0014 */ long Padding_971;
  union
  {
    struct
    {
      /* 0x0018 */ unsigned __int64 Settable;
      /* 0x0020 */ unsigned short TagIndex;
      /* 0x0022 */ unsigned short AllocatorBackTraceIndex;
      /* 0x0024 */ unsigned long Reserved[2];
      /* 0x002c */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0018 */ unsigned long CommittedSize;
      /* 0x001c */ unsigned long UnCommittedSize;
      /* 0x0020 */ void* FirstEntry;
      /* 0x0028 */ void* LastEntry;
    } /* size: 0x0018 */ Segment;
  }; /* size: 0x0018 */
} RTL_HEAP_WALK_ENTRY, *PRTL_HEAP_WALK_ENTRY; /* size: 0x0030 */

typedef struct _CM_VIDEO_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long VideoClock;
} CM_VIDEO_DEVICE_DATA, *PCM_VIDEO_DEVICE_DATA; /* size: 0x0008 */

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION
{
  /* 0x0000 */ unsigned char Inherit;
  /* 0x0001 */ unsigned char ProtectFromClose;
} OBJECT_HANDLE_FLAG_INFORMATION, *POBJECT_HANDLE_FLAG_INFORMATION; /* size: 0x0002 */

typedef struct _PERFINFO_MARK_INFORMATION
{
  /* 0x0000 */ char Name[1];
} PERFINFO_MARK_INFORMATION, *PPERFINFO_MARK_INFORMATION; /* size: 0x0001 */

typedef struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long AttributeCount;
  union
  {
    /* 0x0008 */ struct _TOKEN_SECURITY_ATTRIBUTE_V1* pAttributeV1;
  } /* size: 0x0008 */ Attribute;
} TOKEN_SECURITY_ATTRIBUTES_INFORMATION, *PTOKEN_SECURITY_ATTRIBUTES_INFORMATION; /* size: 0x0010 */

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION
{
  /* 0x0000 */ unsigned char Next;
  /* 0x0001 */ char Padding_972[3];
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned __int64 Size;
} HEAP_BLOCK_EXTRA_INFORMATION, *PHEAP_BLOCK_EXTRA_INFORMATION; /* size: 0x0010 */

typedef struct _SEP_OBJECT_TYPE_LABEL
{
  /* 0x0000 */ struct _OBJECT_TYPE* Object;
  /* 0x0008 */ unsigned long LabelMask;
  /* 0x000c */ unsigned long AutoInheritMask;
} SEP_OBJECT_TYPE_LABEL, *PSEP_OBJECT_TYPE_LABEL; /* size: 0x0010 */

typedef struct _SEP_RM_CONNECT_INFO
{
  /* 0x0000 */ unsigned long ConnectInfo;
} SEP_RM_CONNECT_INFO, *PSEP_RM_CONNECT_INFO; /* size: 0x0004 */

typedef struct _PROCESS_HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned long NumberOfHeaps;
  /* 0x0014 */ long Padding_973;
  /* 0x0018 */ unsigned __int64 FirstHeapInformationOffset;
} PROCESS_HEAP_INFORMATION, *PPROCESS_HEAP_INFORMATION; /* size: 0x0020 */

typedef struct _HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Mode;
  /* 0x000c */ long Padding_974;
  /* 0x0010 */ unsigned __int64 ReserveSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
  /* 0x0020 */ unsigned __int64 FirstRegionInformationOffset;
  /* 0x0028 */ unsigned __int64 NextHeapInformationOffset;
} HEAP_INFORMATION, *PHEAP_INFORMATION; /* size: 0x0030 */

typedef struct _HEAP_EXTENDED_INFORMATION
{
  /* 0x0000 */ void* Process;
  /* 0x0008 */ unsigned __int64 Heap;
  /* 0x0010 */ unsigned long Level;
  /* 0x0014 */ long Padding_975;
  /* 0x0018 */ void* CallbackRoutine /* function */;
  /* 0x0020 */ void* CallbackContext;
  union
  {
    /* 0x0028 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0028 */ struct _HEAP_INFORMATION HeapInformation;
  }; /* size: 0x0030 */
} HEAP_EXTENDED_INFORMATION, *PHEAP_EXTENDED_INFORMATION; /* size: 0x0058 */

typedef struct _RTL_PROCESS_HEAPS
{
  /* 0x0000 */ unsigned long NumberOfHeaps;
  /* 0x0004 */ long Padding_976;
  /* 0x0008 */ struct _RTL_HEAP_INFORMATION Heaps[1];
} RTL_PROCESS_HEAPS, *PRTL_PROCESS_HEAPS; /* size: 0x0060 */

typedef struct _HEAP_REGION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 ReserveSize;
  /* 0x0010 */ unsigned __int64 CommitSize;
  /* 0x0018 */ unsigned __int64 FirstRangeInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRegionInformationOffset;
} HEAP_REGION_INFORMATION, *PHEAP_REGION_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_BLOCK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_977;
  /* 0x0010 */ unsigned __int64 DataSize;
  /* 0x0018 */ unsigned __int64 OverheadSize;
  /* 0x0020 */ unsigned __int64 NextBlockInformationOffset;
} HEAP_BLOCK_INFORMATION, *PHEAP_BLOCK_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_INFORMATION_ITEM
{
  /* 0x0000 */ unsigned long Level;
  /* 0x0004 */ long Padding_978;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0010 */ struct _HEAP_INFORMATION HeapInformation;
    /* 0x0010 */ struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    /* 0x0010 */ struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    /* 0x0010 */ struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    /* 0x0010 */ struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    struct
    {
      /* 0x0010 */ unsigned __int64 DynamicStart;
      /* 0x0018 */ long __PADDING__[24];
    }; /* size: 0x0068 */
  }; /* size: 0x0068 */
} HEAP_INFORMATION_ITEM, *PHEAP_INFORMATION_ITEM; /* size: 0x0078 */

typedef struct _RTL_HEAP_TAG
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
  /* 0x0010 */ unsigned short TagIndex;
  /* 0x0012 */ unsigned short CreatorBackTraceIndex;
  /* 0x0014 */ wchar_t TagName[24];
  /* 0x0044 */ long __PADDING__[1];
} RTL_HEAP_TAG, *PRTL_HEAP_TAG; /* size: 0x0048 */

struct IOREGION
{
  /* 0x0000 */ unsigned char* Beg;
  /* 0x0008 */ unsigned char* End;
  /* 0x0010 */ unsigned char* Ptr;
  /* 0x0018 */ long Size;
  /* 0x001c */ long SizeOvl;
}; /* size: 0x0020 */

typedef struct _wfinddata64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_979;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddata64_t, *Pwfinddata64_t; /* size: 0x0230 */

typedef struct _RTL_HEAP_ENTRY
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned short Flags;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long Padding_980;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ unsigned __int64 Settable;
        /* 0x0018 */ unsigned long Tag;
        /* 0x001c */ long __PADDING__[1];
      } /* size: 0x0010 */ s1;
      struct
      {
        /* 0x0010 */ unsigned __int64 CommittedSize;
        /* 0x0018 */ void* FirstBlock;
      } /* size: 0x0010 */ s2;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} RTL_HEAP_ENTRY, *PRTL_HEAP_ENTRY; /* size: 0x0020 */

typedef struct _DUMP_MDL
{
  /* 0x0000 */ struct _MDL Mdl;
  /* 0x0030 */ unsigned __int64 PfnArray[33];
} DUMP_MDL, *PDUMP_MDL; /* size: 0x0138 */

typedef struct _IOBJECT_TYPE_LIST
{
  /* 0x0000 */ unsigned short Level;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ struct _GUID ObjectType;
  /* 0x0014 */ long ParentIndex;
  /* 0x0018 */ unsigned long Remaining;
  /* 0x001c */ unsigned long CurrentGranted;
  /* 0x0020 */ unsigned long CurrentDenied;
  /* 0x0024 */ long Padding_981;
  /* 0x0028 */ struct _ACCESS_REASONS* Reasons;
} IOBJECT_TYPE_LIST, *PIOBJECT_TYPE_LIST; /* size: 0x0030 */

typedef struct _EMP_LOGIC_NODE
{
  /* 0x0000 */ char Op;
  /* 0x0001 */ char Padding_982[7];
  /* 0x0008 */ struct _EMP_NODE_LINK* Left;
  /* 0x0010 */ unsigned long LeftMappingCount;
  /* 0x0014 */ long Padding_983;
  /* 0x0018 */ unsigned long* LeftMapping;
  /* 0x0020 */ struct _EMP_NODE_LINK* Right;
  /* 0x0028 */ unsigned long RightMappingCount;
  /* 0x002c */ long Padding_984;
  /* 0x0030 */ unsigned long* RightMapping;
} EMP_LOGIC_NODE, *PEMP_LOGIC_NODE; /* size: 0x0038 */

typedef struct _CM_KCB_REMAP_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY RemapList;
  /* 0x0010 */ struct _CM_KEY_CONTROL_BLOCK* KeyControlBlock;
  /* 0x0018 */ unsigned long OldCellIndex;
  /* 0x001c */ unsigned long NewCellIndex;
  /* 0x0020 */ unsigned long ValueCount;
  /* 0x0024 */ unsigned long ValueList;
} CM_KCB_REMAP_BLOCK, *PCM_KCB_REMAP_BLOCK; /* size: 0x0028 */

typedef struct _AUTHZBASEP_SECURITY_ATTRIBUTE_QUERY
{
  /* 0x0000 */ struct _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION* pInfo;
  /* 0x0008 */ struct _UNICODE_STRING AttributeName;
  /* 0x0018 */ unsigned short ValueType;
  /* 0x001a */ char Padding_985[2];
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ unsigned long ValueCount;
  /* 0x0024 */ long Padding_986;
  union
  {
    union
    {
      /* 0x0028 */ __int64* pInt64;
      /* 0x0028 */ unsigned __int64* pUint64;
      /* 0x0028 */ struct _UNICODE_STRING* pString;
      /* 0x0028 */ struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE* pFqbn;
      /* 0x0028 */ struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE* pBinary;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Value;
  /* 0x0030 */ unsigned __int64 ResumeCookie[2];
} AUTHZBASEP_SECURITY_ATTRIBUTE_QUERY, *PAUTHZBASEP_SECURITY_ATTRIBUTE_QUERY; /* size: 0x0040 */

struct in_addr
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ unsigned char s_b1;
        /* 0x0001 */ unsigned char s_b2;
        /* 0x0002 */ unsigned char s_b3;
        /* 0x0003 */ unsigned char s_b4;
      } /* size: 0x0004 */ S_un_b;
      struct
      {
        /* 0x0000 */ unsigned short s_w1;
        /* 0x0002 */ unsigned short s_w2;
      } /* size: 0x0004 */ S_un_w;
      /* 0x0000 */ unsigned long S_addr;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ S_un;
}; /* size: 0x0004 */

typedef struct _EMP_RULE_PARSER_STACK_ELEMENT
{
  /* 0x0000 */ enum EMP_NODE_TYPE Type;
  /* 0x0004 */ long Padding_987;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long* Mapping;
  /* 0x0018 */ unsigned long MappingSize;
  /* 0x001c */ long Padding_988;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY StackListEntry;
} EMP_RULE_PARSER_STACK_ELEMENT, *PEMP_RULE_PARSER_STACK_ELEMENT; /* size: 0x0028 */

typedef struct _RM_REPLY_MESSAGE
{
  /* 0x0000 */ struct _PORT_MESSAGE MessageHeader;
  /* 0x0028 */ long ReturnedStatus;
  /* 0x002c */ unsigned char ReplyBuffer[468];
} RM_REPLY_MESSAGE, *PRM_REPLY_MESSAGE; /* size: 0x0200 */

typedef struct _SEP_LOGON_SESSION_TERMINATED_NOTIFICATION
{
  /* 0x0000 */ struct _SEP_LOGON_SESSION_TERMINATED_NOTIFICATION* Next;
  /* 0x0008 */ void* CallbackRoutine /* function */;
} SEP_LOGON_SESSION_TERMINATED_NOTIFICATION, *PSEP_LOGON_SESSION_TERMINATED_NOTIFICATION; /* size: 0x0010 */

typedef struct _SEP_MANDATORY_INFORMATION
{
  /* 0x0000 */ unsigned long AllowedAccess;
  /* 0x0004 */ unsigned char WriteAllowed;
  /* 0x0005 */ unsigned char ReadAllowed;
  /* 0x0006 */ unsigned char ExecuteAllowed;
  /* 0x0007 */ char Padding_989;
  /* 0x0008 */ struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
} SEP_MANDATORY_INFORMATION, *PSEP_MANDATORY_INFORMATION; /* size: 0x000c */

typedef struct _RTL_DEBUG_INFORMATION32
{
  /* 0x0000 */ unsigned long SectionHandleClient;
  /* 0x0004 */ unsigned long ViewBaseClient;
  /* 0x0008 */ unsigned long ViewBaseTarget;
  /* 0x000c */ unsigned long ViewBaseDelta;
  /* 0x0010 */ unsigned long EventPairClient;
  /* 0x0014 */ unsigned long EventPairTarget;
  /* 0x0018 */ unsigned long TargetProcessId;
  /* 0x001c */ unsigned long TargetThreadHandle;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long OffsetFree;
  /* 0x0028 */ unsigned long CommitSize;
  /* 0x002c */ unsigned long ViewSize;
  union
  {
    /* 0x0030 */ unsigned long Modules;
    /* 0x0030 */ unsigned long ModulesEx;
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long BackTraces;
  /* 0x0038 */ unsigned long Heaps;
  /* 0x003c */ unsigned long Locks;
  /* 0x0040 */ unsigned long SpecificHeap;
  /* 0x0044 */ unsigned long TargetProcessHandle;
  /* 0x0048 */ unsigned long VerifierOptions;
  /* 0x004c */ unsigned long ProcessHeap;
  /* 0x0050 */ unsigned long CriticalSectionHandle;
  /* 0x0054 */ unsigned long CriticalSectionOwnerThread;
  /* 0x0058 */ unsigned long Reserved[4];
} RTL_DEBUG_INFORMATION32, *PRTL_DEBUG_INFORMATION32; /* size: 0x0068 */

typedef struct _HEADLESS_CMD_PUT_STRING
{
  /* 0x0000 */ unsigned char String[1];
} HEADLESS_CMD_PUT_STRING, *PHEADLESS_CMD_PUT_STRING; /* size: 0x0001 */

typedef struct _WDIP_SEM_EVENT_INFO
{
  /* 0x0000 */ struct _GUID ProviderGuid;
  /* 0x0010 */ unsigned short Eid;
  /* 0x0012 */ unsigned char Level;
  /* 0x0013 */ char Padding_990[5];
  /* 0x0018 */ unsigned __int64 Keyword;
  /* 0x0020 */ unsigned long EnableProperty;
  /* 0x0024 */ long Padding_991;
  /* 0x0028 */ struct _WDIP_SEM_PROVIDER_ENTRY* ProviderEntry;
} WDIP_SEM_EVENT_INFO, *PWDIP_SEM_EVENT_INFO; /* size: 0x0030 */

typedef struct _CLFS_MGMT_POLICY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long LengthInBytes;
  /* 0x0008 */ unsigned long PolicyFlags;
  /* 0x000c */ enum _CLFS_MGMT_POLICY_TYPE PolicyType;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ unsigned long Containers;
      } /* size: 0x0004 */ MaximumSize;
      struct
      {
        /* 0x0010 */ unsigned long Containers;
      } /* size: 0x0004 */ MinimumSize;
      struct
      {
        /* 0x0010 */ unsigned long SizeInBytes;
      } /* size: 0x0004 */ NewContainerSize;
      struct
      {
        /* 0x0010 */ unsigned long AbsoluteGrowthInContainers;
        /* 0x0014 */ unsigned long RelativeGrowthPercentage;
      } /* size: 0x0008 */ GrowthRate;
      struct
      {
        /* 0x0010 */ unsigned long MinimumAvailablePercentage;
        /* 0x0014 */ unsigned long MinimumAvailableContainers;
      } /* size: 0x0008 */ LogTail;
      struct
      {
        /* 0x0010 */ unsigned long Percentage;
      } /* size: 0x0004 */ AutoShrink;
      struct
      {
        /* 0x0010 */ unsigned long Enabled;
      } /* size: 0x0004 */ AutoGrow;
      struct
      {
        /* 0x0010 */ unsigned short PrefixLengthInBytes;
        /* 0x0012 */ wchar_t PrefixString[1];
      } /* size: 0x0004 */ NewContainerPrefix;
      struct
      {
        /* 0x0010 */ unsigned __int64 NextContainerSuffix;
      } /* size: 0x0008 */ NewContainerSuffix;
      struct
      {
        /* 0x0010 */ unsigned short ExtensionLengthInBytes;
        /* 0x0012 */ wchar_t ExtensionString[1];
      } /* size: 0x0004 */ NewContainerExtension;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ PolicyParameters;
} CLFS_MGMT_POLICY, *PCLFS_MGMT_POLICY; /* size: 0x0018 */

typedef struct _SEP_LOGON_SESSION_REFERENCES
{
  /* 0x0000 */ struct _SEP_LOGON_SESSION_REFERENCES* Next;
  /* 0x0008 */ struct _LUID LogonId;
  /* 0x0010 */ struct _LUID BuddyLogonId;
  /* 0x0018 */ unsigned long ReferenceCount;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ struct _DEVICE_MAP* pDeviceMap;
  /* 0x0028 */ void* Token;
  /* 0x0030 */ struct _UNICODE_STRING AccountName;
  /* 0x0040 */ struct _UNICODE_STRING AuthorityName;
} SEP_LOGON_SESSION_REFERENCES, *PSEP_LOGON_SESSION_REFERENCES; /* size: 0x0050 */

typedef struct _RTL_CRITICAL_SECTION32
{
  /* 0x0000 */ unsigned long DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ unsigned long OwningThread;
  /* 0x0010 */ unsigned long LockSemaphore;
  /* 0x0014 */ unsigned long SpinCount;
} RTL_CRITICAL_SECTION32, *PRTL_CRITICAL_SECTION32; /* size: 0x0018 */

struct HBRUSH__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _KNOWN_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long SidStart;
} KNOWN_OBJECT_ACE, *PKNOWN_OBJECT_ACE; /* size: 0x0010 */

typedef struct _EMP_TARGET_RULE
{
  /* 0x0000 */ long ListenerCount;
  /* 0x0004 */ long Padding_992;
  /* 0x0008 */ struct _EMP_RULE_DB_RECORD* RuleRecord;
  /* 0x0010 */ unsigned long* StringIndexList;
  /* 0x0018 */ unsigned long IndexListCount;
  /* 0x001c */ long Padding_993;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY List;
} EMP_TARGET_RULE, *PEMP_TARGET_RULE; /* size: 0x0028 */

typedef struct _CHILD_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long List;
} CHILD_LIST, *PCHILD_LIST; /* size: 0x0008 */

typedef struct _CM_KEY_NODE
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x000c */ unsigned long Spare;
  /* 0x0010 */ unsigned long Parent;
  /* 0x0014 */ unsigned long SubKeyCounts[2];
  union
  {
    struct
    {
      /* 0x001c */ unsigned long SubKeyLists[2];
      /* 0x0024 */ struct _CHILD_LIST ValueList;
    }; /* size: 0x0010 */
    /* 0x001c */ struct _CM_KEY_REFERENCE ChildHiveReference;
  }; /* size: 0x0010 */
  /* 0x002c */ unsigned long Security;
  /* 0x0030 */ unsigned long Class;
  struct /* bitfield */
  {
    /* 0x0034 */ unsigned long MaxNameLen : 16; /* bit position: 0 */
    /* 0x0034 */ unsigned long UserFlags : 4; /* bit position: 16 */
    /* 0x0034 */ unsigned long VirtControlFlags : 4; /* bit position: 20 */
    /* 0x0034 */ unsigned long Debug : 8; /* bit position: 24 */
  }; /* bitfield */
  /* 0x0038 */ unsigned long MaxClassLen;
  /* 0x003c */ unsigned long MaxValueNameLen;
  /* 0x0040 */ unsigned long MaxValueDataLen;
  /* 0x0044 */ unsigned long WorkVar;
  /* 0x0048 */ unsigned short NameLength;
  /* 0x004a */ unsigned short ClassLength;
  /* 0x004c */ wchar_t Name[1];
  /* 0x004e */ char __PADDING__[2];
} CM_KEY_NODE, *PCM_KEY_NODE; /* size: 0x0050 */

typedef struct _CM_KEY_VALUE
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned long Data;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned short Flags;
  /* 0x0012 */ unsigned short Spare;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} CM_KEY_VALUE, *PCM_KEY_VALUE; /* size: 0x0018 */

typedef struct _CM_KEY_SECURITY
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Flink;
  /* 0x0008 */ unsigned long Blink;
  /* 0x000c */ unsigned long ReferenceCount;
  /* 0x0010 */ unsigned long DescriptorLength;
  /* 0x0014 */ struct _SECURITY_DESCRIPTOR_RELATIVE Descriptor;
} CM_KEY_SECURITY, *PCM_KEY_SECURITY; /* size: 0x0028 */

typedef struct _CM_KEY_INDEX
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ unsigned long List[1];
} CM_KEY_INDEX, *PCM_KEY_INDEX; /* size: 0x0008 */

typedef struct _CM_BIG_DATA
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ unsigned long List;
} CM_BIG_DATA, *PCM_BIG_DATA; /* size: 0x0008 */

typedef union _u
{
  union
  {
    /* 0x0000 */ struct _CM_KEY_NODE KeyNode;
    /* 0x0000 */ struct _CM_KEY_VALUE KeyValue;
    /* 0x0000 */ struct _CM_KEY_SECURITY KeySecurity;
    /* 0x0000 */ struct _CM_KEY_INDEX KeyIndex;
    /* 0x0000 */ struct _CM_BIG_DATA ValueData;
    /* 0x0000 */ unsigned long KeyList[1];
    /* 0x0000 */ wchar_t KeyString[1];
  }; /* size: 0x0050 */
} u, *Pu; /* size: 0x0050 */

typedef struct _CELL_DATA
{
  /* 0x0000 */ union _u u;
} CELL_DATA, *PCELL_DATA; /* size: 0x0050 */

struct SEP_RM_CONNECT_INFO;

typedef struct _EMP_RULE_NOTIFY
{
  /* 0x0000 */ struct _EMP_TARGET_RULE* TargetRule;
  /* 0x0008 */ void* Notify /* function */;
  /* 0x0010 */ void* Context;
  /* 0x0018 */ struct _LIST_ENTRY RuleNotifyList;
} EMP_RULE_NOTIFY, *PEMP_RULE_NOTIFY; /* size: 0x0028 */

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO
{
  /* 0x0000 */ unsigned long UniqueProcessId;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 Buffer;
} RTL_QUERY_DEBUG_INFORMATION_INFO, *PRTL_QUERY_DEBUG_INFORMATION_INFO; /* size: 0x0010 */

struct HFONT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG32
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned long CriticalSection;
  /* 0x0008 */ struct LIST_ENTRY32 ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG32, *PRTL_CRITICAL_SECTION_DEBUG32; /* size: 0x0020 */

typedef struct _DB_HEADER
{
  /* 0x0000 */ unsigned long dwMajorVersion;
  /* 0x0004 */ unsigned long dwMinorVersion;
  /* 0x0008 */ unsigned long dwMagic;
} DB_HEADER, *PDB_HEADER; /* size: 0x000c */

typedef struct _PSP_SYSTEM_DLL
{
  /* 0x0000 */ struct _EX_FAST_REF DllSection;
  /* 0x0008 */ struct _EX_PUSH_LOCK DllLock;
} PSP_SYSTEM_DLL, *PPSP_SYSTEM_DLL; /* size: 0x0010 */

typedef struct _PSP_SYSTEM_DLL_DATA
{
  /* 0x0000 */ struct _PSP_SYSTEM_DLL SystemDll;
  /* 0x0010 */ struct _PS_SYSTEM_DLL_INFO DllInfo;
} PSP_SYSTEM_DLL_DATA, *PPSP_SYSTEM_DLL_DATA; /* size: 0x0038 */

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Settable;
  /* 0x0008 */ unsigned short TagIndex;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long __PADDING__[1];
} HEAP_BLOCK_SETTABLE_INFORMATION, *PHEAP_BLOCK_SETTABLE_INFORMATION; /* size: 0x0010 */

typedef struct _UMS_APC_CONTEXT
{
  /* 0x0000 */ struct _KAPC Apc;
  /* 0x0058 */ union _UMS_APC_CONTROL* ApcControl;
  /* 0x0060 */ long ResultStatus;
  /* 0x0064 */ long Padding_994;
  /* 0x0068 */ struct _KGATE WakeGate;
} UMS_APC_CONTEXT, *PUMS_APC_CONTEXT; /* size: 0x0080 */

typedef struct _SEP_AUDIT_DISCARDED_WORK_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ unsigned long EventsDiscarded;
  /* 0x0024 */ unsigned char FreeWhenDone;
  /* 0x0025 */ char __PADDING__[3];
} SEP_AUDIT_DISCARDED_WORK_ITEM, *PSEP_AUDIT_DISCARDED_WORK_ITEM; /* size: 0x0028 */

struct tagSWITCH_CONTEXT_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 ulContextUpdateCounter;
  /* 0x0008 */ int fAllowContextUpdate;
  /* 0x000c */ int fEnableTrace;
  /* 0x0010 */ unsigned __int64 EtwHandle;
  /* 0x0018 */ unsigned long ulSamplingFlag;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _FSRTL_PER_FILE_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ void* OwnerId;
  /* 0x0018 */ void* InstanceId;
  /* 0x0020 */ void* FreeCallback /* function */;
} FSRTL_PER_FILE_CONTEXT, *PFSRTL_PER_FILE_CONTEXT; /* size: 0x0028 */

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ParameterBlockOffset;
  /* 0x0010 */ unsigned long ParameterBlockLength;
  /* 0x0014 */ unsigned long DataSetRangesOffset;
  /* 0x0018 */ unsigned long DataSetRangesLength;
} DEVICE_MANAGE_DATA_SET_ATTRIBUTES, *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES; /* size: 0x001c */

typedef struct _MMSUBSECTION_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short SubsectionAccessed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short Protection : 5; /* bit position: 1 */
    /* 0x0000 */ unsigned short StartingSector4132 : 10; /* bit position: 6 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0002 */ unsigned short SubsectionStatic : 1; /* bit position: 0 */
    /* 0x0002 */ unsigned short GlobalMemory : 1; /* bit position: 1 */
    /* 0x0002 */ unsigned short DirtyPages : 1; /* bit position: 2 */
    /* 0x0002 */ unsigned short Spare : 1; /* bit position: 3 */
    /* 0x0002 */ unsigned short SectorEndOffset : 12; /* bit position: 4 */
  }; /* bitfield */
} MMSUBSECTION_FLAGS, *PMMSUBSECTION_FLAGS; /* size: 0x0004 */

typedef struct _MMSUBSECTION_NODE
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long LongFlags;
      /* 0x0000 */ struct _MMSUBSECTION_FLAGS SubsectionFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x0004 */ unsigned long StartingSector;
  /* 0x0008 */ unsigned long NumberOfFullSectors;
  /* 0x000c */ long Padding_995;
  union
  {
    union
    {
      /* 0x0010 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0010 */ struct _MMSUBSECTION_NODE* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0018 */ struct _MMSUBSECTION_NODE* LeftChild;
  /* 0x0020 */ struct _MMSUBSECTION_NODE* RightChild;
} MMSUBSECTION_NODE, *PMMSUBSECTION_NODE; /* size: 0x0028 */

typedef struct _MM_SUBSECTION_AVL_TABLE
{
  /* 0x0000 */ struct _MMSUBSECTION_NODE BalancedRoot;
  struct /* bitfield */
  {
    /* 0x0028 */ unsigned __int64 DepthOfTree : 5; /* bit position: 0 */
    /* 0x0028 */ unsigned __int64 Unused : 3; /* bit position: 5 */
    /* 0x0028 */ unsigned __int64 NumberGenericTableElements : 56; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0030 */ void* NodeHint;
} MM_SUBSECTION_AVL_TABLE, *PMM_SUBSECTION_AVL_TABLE; /* size: 0x0038 */

typedef struct _IO_SCSI_CAPABILITIES
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long MaximumTransferLength;
  /* 0x0008 */ unsigned long MaximumPhysicalPages;
  /* 0x000c */ unsigned long SupportedAsynchronousEvents;
  /* 0x0010 */ unsigned long AlignmentMask;
  /* 0x0014 */ unsigned char TaggedQueuing;
  /* 0x0015 */ unsigned char AdapterScansDown;
  /* 0x0016 */ unsigned char AdapterUsesPio;
  /* 0x0017 */ char __PADDING__[1];
} IO_SCSI_CAPABILITIES, *PIO_SCSI_CAPABILITIES; /* size: 0x0018 */

typedef struct _DRIVERSTATUS
{
  /* 0x0000 */ unsigned char bDriverError;
  /* 0x0001 */ unsigned char bIDEError;
  /* 0x0002 */ unsigned char bReserved[2];
  /* 0x0004 */ unsigned long dwReserved[2];
} DRIVERSTATUS, *PDRIVERSTATUS; /* size: 0x000c */

typedef struct _SENDCMDOUTPARAMS
{
  /* 0x0000 */ unsigned long cBufferSize;
  /* 0x0004 */ struct _DRIVERSTATUS DriverStatus;
  /* 0x0010 */ unsigned char bBuffer[1];
} SENDCMDOUTPARAMS, *PSENDCMDOUTPARAMS; /* size: 0x0011 */

typedef struct _DISK_COPY_DATA_PARAMETERS
{
  /* 0x0000 */ union _LARGE_INTEGER SourceOffset;
  /* 0x0008 */ union _LARGE_INTEGER DestinationOffset;
  /* 0x0010 */ union _LARGE_INTEGER CopyLength;
  /* 0x0018 */ unsigned __int64 Reserved;
} DISK_COPY_DATA_PARAMETERS, *PDISK_COPY_DATA_PARAMETERS; /* size: 0x0020 */

typedef struct _IOP_COMPLETION_OBJECT
{
  /* 0x0000 */ struct _KQUEUE IoCompletionQueue;
  /* 0x0040 */ unsigned __int64 RundownLock;
  /* 0x0048 */ unsigned char HandleClosed;
  /* 0x0049 */ char __PADDING__[7];
} IOP_COMPLETION_OBJECT, *PIOP_COMPLETION_OBJECT; /* size: 0x0050 */

typedef struct _CM_TRANS
{
  /* 0x0000 */ struct _LIST_ENTRY TransactionListEntry;
  /* 0x0010 */ struct _LIST_ENTRY KCBUoWListHead;
  /* 0x0020 */ struct _LIST_ENTRY LazyCommitListEntry;
  /* 0x0030 */ void* KtmTrans;
  /* 0x0038 */ struct _CM_RM* CmRm;
  /* 0x0040 */ struct _KENLISTMENT* KtmEnlistmentObject;
  /* 0x0048 */ void* KtmEnlistmentHandle;
  /* 0x0050 */ struct _GUID KtmUow;
  /* 0x0060 */ unsigned __int64 StartLsn;
  /* 0x0068 */ unsigned long TransState;
  /* 0x006c */ unsigned long HiveCount;
  /* 0x0070 */ struct _CMHIVE* HiveArray[7];
} CM_TRANS, *PCM_TRANS; /* size: 0x00a8 */

typedef struct _ALPC_MESSAGE_LOG
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ struct _LIST_ENTRY HashEntry;
  /* 0x0020 */ struct _KALPC_MESSAGE* Message;
  /* 0x0028 */ unsigned long MessageId;
  /* 0x002c */ unsigned char Valid;
  /* 0x002d */ char Padding_996[3];
  /* 0x0030 */ struct _LIST_ENTRY SnapshotListHead;
} ALPC_MESSAGE_LOG, *PALPC_MESSAGE_LOG; /* size: 0x0040 */

typedef struct _HISTOGRAM_BUCKET
{
  /* 0x0000 */ unsigned long Reads;
  /* 0x0004 */ unsigned long Writes;
} HISTOGRAM_BUCKET, *PHISTOGRAM_BUCKET; /* size: 0x0008 */

typedef struct _WDIP_SEM_FREQUENT_SCENARIO_TABLE
{
  /* 0x0000 */ struct _WDI_SEM_INFLIGHT_SCENARIO_INFO* FrequentScenarios[128];
  /* 0x0400 */ unsigned long TableSize;
  /* 0x0404 */ long Padding_997;
  /* 0x0408 */ struct _EX_PUSH_LOCK Lock;
} WDIP_SEM_FREQUENT_SCENARIO_TABLE, *PWDIP_SEM_FREQUENT_SCENARIO_TABLE; /* size: 0x0410 */

typedef struct _WDI_SCENARIO_INFO
{
  /* 0x0000 */ unsigned long KmHandle;
  /* 0x0004 */ long Padding_998;
  /* 0x0008 */ struct _EVENT_DESCRIPTOR EventDescriptor;
  /* 0x0018 */ struct _GUID ScenarioInstanceId;
  /* 0x0028 */ unsigned long ScenarioType;
  /* 0x002c */ long __PADDING__[1];
} WDI_SCENARIO_INFO, *PWDI_SCENARIO_INFO; /* size: 0x0030 */

typedef struct _stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_999[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat, *Pstat; /* size: 0x0030 */

struct tagFILEINFOCHAINITEM
{
  /* 0x0000 */ void* pFileInfo;
  /* 0x0008 */ unsigned long tiMatch;
  /* 0x000c */ long Padding_1000;
  /* 0x0010 */ struct tagFILEINFOCHAINITEM* pNextItem;
}; /* size: 0x0018 */

typedef struct _GET_DISK_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Reserved1;
  /* 0x0008 */ unsigned __int64 Attributes;
} GET_DISK_ATTRIBUTES, *PGET_DISK_ATTRIBUTES; /* size: 0x0010 */

typedef struct _PCW_COUNTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned short StructIndex;
  /* 0x0004 */ unsigned short Offset;
  /* 0x0006 */ unsigned short Size;
} PCW_COUNTER_DESCRIPTOR, *PPCW_COUNTER_DESCRIPTOR; /* size: 0x0008 */

typedef struct _SYSCFG
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Reserved0 : 18; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 MtrrFixDramEn : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned __int64 MtrrFixDramModEn : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned __int64 MtrrVarDramEn : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned __int64 MtrrTom2En : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned __int64 Reserved1 : 42; /* bit position: 22 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} SYSCFG, *PSYSCFG; /* size: 0x0008 */

typedef struct _ONE_RANGE
{
  /* 0x0000 */ unsigned __int64 Base;
  /* 0x0008 */ unsigned __int64 Limit;
  /* 0x0010 */ unsigned char Type;
  /* 0x0011 */ char __PADDING__[7];
} ONE_RANGE, *PONE_RANGE; /* size: 0x0018 */

typedef struct _FIND_INFO
{
  /* 0x0000 */ unsigned long tiIndex;
  /* 0x0004 */ unsigned long tiCurrent;
  /* 0x0008 */ unsigned long tiEndIndex;
  /* 0x000c */ unsigned short tName;
  /* 0x000e */ char Padding_1001[2];
  /* 0x0010 */ unsigned long dwIndexRec;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ unsigned __int64 ullKey;
  union
  {
    /* 0x0020 */ const wchar_t* szName;
    /* 0x0020 */ unsigned long dwName;
    /* 0x0020 */ struct _GUID* pguidName;
  }; /* size: 0x0008 */
} FIND_INFO, *PFIND_INFO; /* size: 0x0028 */

typedef struct _IOP_FOEXT_IOSB_RANGE
{
  /* 0x0000 */ unsigned char* UserIosbStart;
  /* 0x0008 */ unsigned char* UserIosbEnd;
  /* 0x0010 */ struct _MDL* Mdl;
  /* 0x0018 */ unsigned char* SystemIosbStart;
  /* 0x0020 */ struct _EPROCESS* OwningProcess;
  /* 0x0028 */ struct _IOP_FOEXT_IOSB_RANGE* Next;
} IOP_FOEXT_IOSB_RANGE, *PIOP_FOEXT_IOSB_RANGE; /* size: 0x0030 */

typedef struct _MOUNTMGR_DRIVE_LETTER_INFORMATION
{
  /* 0x0000 */ unsigned char DriveLetterWasAssigned;
  /* 0x0001 */ unsigned char CurrentDriveLetter;
} MOUNTMGR_DRIVE_LETTER_INFORMATION, *PMOUNTMGR_DRIVE_LETTER_INFORMATION; /* size: 0x0002 */

typedef struct _WDI_SEM_ACTION_INFO
{
  /* 0x0000 */ struct _GUID ProviderGuid;
  /* 0x0010 */ unsigned char Level;
  /* 0x0011 */ unsigned char Reserved[7];
  /* 0x0018 */ unsigned __int64 Keyword;
  /* 0x0020 */ unsigned long EnableProperty;
  /* 0x0024 */ long Status;
} WDI_SEM_ACTION_INFO, *PWDI_SEM_ACTION_INFO; /* size: 0x0028 */

struct sockaddr_storage;

typedef union _MI_CREATE_SECTION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long EntireFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long CacheManager : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long FileAcquired : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long IncrementedRefCount : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long FileSizeChecked : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ProtectedImage : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long DriverImage : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long FileHasWriters : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long HotPatchDriver : 1; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_CREATE_SECTION_FLAGS, *PMI_CREATE_SECTION_FLAGS; /* size: 0x0004 */

typedef struct _MMVAD
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMVAD* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMVAD* LeftChild;
  /* 0x0010 */ struct _MMVAD* RightChild;
  /* 0x0018 */ unsigned __int64 StartingVpn;
  /* 0x0020 */ unsigned __int64 EndingVpn;
  union
  {
    union
    {
      /* 0x0028 */ unsigned __int64 LongFlags;
      /* 0x0028 */ struct _MMVAD_FLAGS VadFlags;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
  /* 0x0030 */ struct _EX_PUSH_LOCK PushLock;
  union
  {
    union
    {
      /* 0x0038 */ unsigned __int64 LongFlags3;
      /* 0x0038 */ struct _MMVAD_FLAGS3 VadFlags3;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u5;
  union
  {
    union
    {
      /* 0x0040 */ unsigned long LongFlags2;
      /* 0x0040 */ struct _MMVAD_FLAGS2 VadFlags2;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  /* 0x0044 */ long Padding_1002;
  union
  {
    /* 0x0048 */ struct _SUBSECTION* Subsection;
    /* 0x0048 */ struct _MSUBSECTION* MappedSubsection;
  }; /* size: 0x0008 */
  /* 0x0050 */ struct _MMPTE* FirstPrototypePte;
  /* 0x0058 */ struct _MMPTE* LastContiguousPte;
  /* 0x0060 */ struct _LIST_ENTRY ViewLinks;
  /* 0x0070 */ struct _EPROCESS* VadsProcess;
} MMVAD, *PMMVAD; /* size: 0x0078 */

typedef struct _DUMMY_FILE_OBJECT
{
  /* 0x0000 */ struct _OBJECT_HEADER ObjectHeader;
  /* 0x0038 */ char FileObjectBody[216];
} DUMMY_FILE_OBJECT, *PDUMMY_FILE_OBJECT; /* size: 0x0110 */

typedef struct _STORAGE_PROPERTY_QUERY
{
  /* 0x0000 */ enum _STORAGE_PROPERTY_ID PropertyId;
  /* 0x0004 */ enum _STORAGE_QUERY_TYPE QueryType;
  /* 0x0008 */ unsigned char AdditionalParameters[1];
  /* 0x0009 */ char __PADDING__[3];
} STORAGE_PROPERTY_QUERY, *PSTORAGE_PROPERTY_QUERY; /* size: 0x000c */

typedef struct _MOUNTMGR_TARGET_NAME
{
  /* 0x0000 */ unsigned short DeviceNameLength;
  /* 0x0002 */ wchar_t DeviceName[1];
} MOUNTMGR_TARGET_NAME, *PMOUNTMGR_TARGET_NAME; /* size: 0x0004 */

typedef struct _PNPR_MAPPING_RESERVE
{
  /* 0x0000 */ struct _MDL* Mdl;
  /* 0x0008 */ void* Reserve;
  /* 0x0010 */ short MdlFlags;
  /* 0x0012 */ char __PADDING__[6];
} PNPR_MAPPING_RESERVE, *PPNPR_MAPPING_RESERVE; /* size: 0x0018 */

typedef struct _ATA_PASS_THROUGH_DIRECT32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short AtaFlags;
  /* 0x0004 */ unsigned char PathId;
  /* 0x0005 */ unsigned char TargetId;
  /* 0x0006 */ unsigned char Lun;
  /* 0x0007 */ unsigned char ReservedAsUchar;
  /* 0x0008 */ unsigned long DataTransferLength;
  /* 0x000c */ unsigned long TimeOutValue;
  /* 0x0010 */ unsigned long ReservedAsUlong;
  /* 0x0014 */ void* DataBuffer;
  /* 0x0018 */ unsigned char PreviousTaskFile[8];
  /* 0x0020 */ unsigned char CurrentTaskFile[8];
} ATA_PASS_THROUGH_DIRECT32, *PATA_PASS_THROUGH_DIRECT32; /* size: 0x0028 */

typedef struct _HEADLESS_CMD_ENABLE_TERMINAL
{
  /* 0x0000 */ unsigned char Enable;
} HEADLESS_CMD_ENABLE_TERMINAL, *PHEADLESS_CMD_ENABLE_TERMINAL; /* size: 0x0001 */

typedef struct _div_t
{
  /* 0x0000 */ int quot;
  /* 0x0004 */ int rem;
} div_t, *Pdiv_t; /* size: 0x0008 */

typedef struct _SENDCMDINPARAMS
{
  /* 0x0000 */ unsigned long cBufferSize;
  /* 0x0004 */ struct _IDEREGS irDriveRegs;
  /* 0x000c */ unsigned char bDriveNumber;
  /* 0x000d */ unsigned char bReserved[3];
  /* 0x0010 */ unsigned long dwReserved[4];
  /* 0x0020 */ unsigned char bBuffer[1];
} SENDCMDINPARAMS, *PSENDCMDINPARAMS; /* size: 0x0021 */

typedef struct _DRIVE_LAYOUT_INFORMATION_EX
{
  /* 0x0000 */ unsigned long PartitionStyle;
  /* 0x0004 */ unsigned long PartitionCount;
  union
  {
    /* 0x0008 */ struct _DRIVE_LAYOUT_INFORMATION_MBR Mbr;
    /* 0x0008 */ struct _DRIVE_LAYOUT_INFORMATION_GPT Gpt;
  }; /* size: 0x0028 */
  /* 0x0030 */ struct _PARTITION_INFORMATION_EX PartitionEntry[1];
} DRIVE_LAYOUT_INFORMATION_EX, *PDRIVE_LAYOUT_INFORMATION_EX; /* size: 0x00c0 */

typedef struct _OPEN_PACKET
{
  /* 0x0000 */ short Type;
  /* 0x0002 */ short Size;
  /* 0x0004 */ long Padding_1003;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ long FinalStatus;
  /* 0x0014 */ long Padding_1004;
  /* 0x0018 */ unsigned __int64 Information;
  /* 0x0020 */ unsigned long ParseCheck;
  /* 0x0024 */ long Padding_1005;
  /* 0x0028 */ struct _FILE_OBJECT* RelatedFileObject;
  /* 0x0030 */ struct _OBJECT_ATTRIBUTES* OriginalAttributes;
  /* 0x0038 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0040 */ unsigned long CreateOptions;
  /* 0x0044 */ unsigned short FileAttributes;
  /* 0x0046 */ unsigned short ShareAccess;
  /* 0x0048 */ void* EaBuffer;
  /* 0x0050 */ unsigned long EaLength;
  /* 0x0054 */ unsigned long Options;
  /* 0x0058 */ unsigned long Disposition;
  /* 0x005c */ long Padding_1006;
  /* 0x0060 */ struct _FILE_BASIC_INFORMATION* BasicInformation;
  /* 0x0068 */ struct _FILE_NETWORK_OPEN_INFORMATION* NetworkInformation;
  /* 0x0070 */ enum _CREATE_FILE_TYPE CreateFileType;
  /* 0x0074 */ long Padding_1007;
  /* 0x0078 */ void* MailslotOrPipeParameters;
  /* 0x0080 */ unsigned char Override;
  /* 0x0081 */ unsigned char QueryOnly;
  /* 0x0082 */ unsigned char DeleteOnly;
  /* 0x0083 */ unsigned char FullAttributes;
  /* 0x0084 */ long Padding_1008;
  /* 0x0088 */ struct _DUMMY_FILE_OBJECT* LocalFileObject;
  /* 0x0090 */ unsigned long InternalFlags;
  /* 0x0094 */ long Padding_1009;
  /* 0x0098 */ struct _IO_DRIVER_CREATE_CONTEXT DriverCreateContext;
} OPEN_PACKET, *POPEN_PACKET; /* size: 0x00b8 */

typedef struct _KINTERRUPT_PAGE
{
  /* 0x0000 */ struct _KINTERRUPT_ALIGNED Array[21];
  /* 0x0fc0 */ long __PADDING__[16];
} KINTERRUPT_PAGE, *PKINTERRUPT_PAGE; /* size: 0x1000 */

typedef struct _MMWORKING_SET_EXPANSION_HEAD
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
} MMWORKING_SET_EXPANSION_HEAD, *PMMWORKING_SET_EXPANSION_HEAD; /* size: 0x0010 */

typedef struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_1
{
  /* 0x0000 */ unsigned int ProviderId;
} FSRTL_MUP_PROVIDER_INFO_LEVEL_1, *PFSRTL_MUP_PROVIDER_INFO_LEVEL_1; /* size: 0x0004 */

typedef struct _EOF_WAIT_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY EofWaitLinks;
  /* 0x0010 */ struct _KEVENT Event;
} EOF_WAIT_BLOCK, *PEOF_WAIT_BLOCK; /* size: 0x0028 */

typedef struct _MOUNTMGR_CREATE_POINT_INPUT
{
  /* 0x0000 */ unsigned short SymbolicLinkNameOffset;
  /* 0x0002 */ unsigned short SymbolicLinkNameLength;
  /* 0x0004 */ unsigned short DeviceNameOffset;
  /* 0x0006 */ unsigned short DeviceNameLength;
} MOUNTMGR_CREATE_POINT_INPUT, *PMOUNTMGR_CREATE_POINT_INPUT; /* size: 0x0008 */

struct stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1010[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
}; /* size: 0x0030 */

struct _DUMP_CONTROL_BLOCK;

typedef struct _DRIVER_INFORMATION
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0018 */ struct _BOOT_DRIVER_LIST_ENTRY* DataTableEntry;
  /* 0x0020 */ void* ServiceHandle;
  /* 0x0028 */ unsigned short TagPosition;
  /* 0x002a */ char Padding_1011[2];
  /* 0x002c */ unsigned long Failed;
  /* 0x0030 */ unsigned long Processed;
  /* 0x0034 */ long Status;
} DRIVER_INFORMATION, *PDRIVER_INFORMATION; /* size: 0x0038 */

typedef struct _IO_WORKITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ void* Routine /* function */;
  /* 0x0028 */ void* IoObject;
  /* 0x0030 */ void* Context;
  /* 0x0038 */ unsigned long Type;
  /* 0x003c */ long __PADDING__[1];
} IO_WORKITEM, *PIO_WORKITEM; /* size: 0x0040 */

typedef struct _LARGE_MCB
{
  /* 0x0000 */ struct _KGUARDED_MUTEX* GuardedMutex;
  /* 0x0008 */ struct _BASE_MCB BaseMcb;
} LARGE_MCB, *PLARGE_MCB; /* size: 0x0020 */

typedef struct _MCB
{
  /* 0x0000 */ struct _LARGE_MCB DummyFieldThatSizesThisStructureCorrectly;
} MCB, *PMCB; /* size: 0x0020 */

typedef struct _HEADLESS_CMD_SET_BLUE_SCREEN_DATA
{
  /* 0x0000 */ unsigned long ValueIndex;
  /* 0x0004 */ unsigned char Data[1];
  /* 0x0005 */ char __PADDING__[3];
} HEADLESS_CMD_SET_BLUE_SCREEN_DATA, *PHEADLESS_CMD_SET_BLUE_SCREEN_DATA; /* size: 0x0008 */

typedef struct _RTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ unsigned char* CurrentEncodingPosition;
  /* 0x0008 */ unsigned char* EndEncodingPosition;
  /* 0x0010 */ unsigned __int64 BytesWrittenOrRequired;
  /* 0x0018 */ unsigned __int64 LongestLegalLength;
  /* 0x0020 */ struct _LBLOB* BufferInUse;
  /* 0x0028 */ struct _LBLOB* FixedSizeBuffer;
  /* 0x0030 */ struct _LBLOB* DynamicBuffer;
  /* 0x0038 */ struct _LBLOB** ReturnedBufferUsed;
  /* 0x0040 */ void* ResizePolicy /* function */;
  /* 0x0048 */ void* Reserved1;
  /* 0x0050 */ void* Reserved2;
} RTL_SMART_LBLOB_WRITING_CONTEXT, *PRTL_SMART_LBLOB_WRITING_CONTEXT; /* size: 0x0058 */

typedef struct _IOP_FILE_OBJECT_EXTENSION
{
  /* 0x0000 */ unsigned long FoExtFlags;
  /* 0x0004 */ long Padding_1012;
  /* 0x0008 */ void* FoExtPerTypeExtension[7];
  /* 0x0040 */ enum _IOP_PRIORITY_HINT FoIoPriorityHint;
  /* 0x0044 */ long __PADDING__[1];
} IOP_FILE_OBJECT_EXTENSION, *PIOP_FILE_OBJECT_EXTENSION; /* size: 0x0048 */

typedef struct _ldiv_t
{
  /* 0x0000 */ long quot;
  /* 0x0004 */ long rem;
} ldiv_t, *Pldiv_t; /* size: 0x0008 */

typedef struct _IOP_HARD_ERROR_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY WorkQueueLinks;
  /* 0x0010 */ long ErrorStatus;
  /* 0x0014 */ long Padding_1013;
  /* 0x0018 */ struct _UNICODE_STRING String;
} IOP_HARD_ERROR_PACKET, *PIOP_HARD_ERROR_PACKET; /* size: 0x0028 */

typedef struct _LOAD_PACKET
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkQueueItem;
  /* 0x0020 */ struct _KEVENT Event;
  /* 0x0038 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0040 */ struct _UNICODE_STRING* DriverServiceName;
  /* 0x0048 */ long FinalStatus;
  /* 0x004c */ long __PADDING__[1];
} LOAD_PACKET, *PLOAD_PACKET; /* size: 0x0050 */

typedef struct _CRT_FLOAT
{
  /* 0x0000 */ float f;
} CRT_FLOAT, *PCRT_FLOAT; /* size: 0x0004 */

typedef struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short SerialNumberLength;
  /* 0x0004 */ unsigned char* SerialNumber /* zero-length array */;
} STORAGE_MEDIA_SERIAL_NUMBER_DATA, *PSTORAGE_MEDIA_SERIAL_NUMBER_DATA; /* size: 0x0004 */

typedef struct _ERROR_LOG_ENTRY
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ long Padding_1014;
  /* 0x0008 */ struct _LIST_ENTRY ListEntry;
  /* 0x0018 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0020 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0028 */ union _LARGE_INTEGER TimeStamp;
} ERROR_LOG_ENTRY, *PERROR_LOG_ENTRY; /* size: 0x0030 */

typedef struct _LDBL12
{
  /* 0x0000 */ unsigned char ld12[12];
} LDBL12, *PLDBL12; /* size: 0x000c */

typedef struct _IOP_RESERVE_IRPS
{
  /* 0x0000 */ struct _IRP* PagefileReadIrp;
  /* 0x0008 */ long PagefileReadIrpAllocated;
  /* 0x000c */ long Padding_1015;
  /* 0x0010 */ struct _KEVENT PagefileReadIrpEvent;
  /* 0x0028 */ struct _IRP* PagefileWriteIrp;
  /* 0x0030 */ long PagefileWriteIrpAllocated;
  /* 0x0034 */ long Padding_1016;
  /* 0x0038 */ struct _KEVENT PagefileWriteIrpEvent;
  /* 0x0050 */ struct _IRP* MustSucceedIrp;
  /* 0x0058 */ long MustSucceedIrpAllocated;
  /* 0x005c */ long Padding_1017;
  /* 0x0060 */ struct _KEVENT MustSucceedIrpEvent;
  /* 0x0078 */ struct _IRP* NonPagefileReadIrp;
  /* 0x0080 */ long NonPagefileReadIrpAllocated;
  /* 0x0084 */ long Padding_1018;
  /* 0x0088 */ struct _ETHREAD* TopLevelNonPagefileReadThread;
  /* 0x0090 */ struct _KEVENT NonPagefileReadIrpEvent;
  /* 0x00a8 */ struct _IRP* NonPagefileWriteIrp;
  /* 0x00b0 */ long NonPagefileWriteIrpAllocated;
  /* 0x00b4 */ long Padding_1019;
  /* 0x00b8 */ struct _ETHREAD* TopLevelNonPagefileWriteThread;
  /* 0x00c0 */ struct _KEVENT NonPagefileWriteIrpEvent;
  /* 0x00d8 */ struct _SINGLE_LIST_ENTRY RecursiveBackpocketIrps;
  /* 0x00e0 */ char ReserveIrpStackSize;
  /* 0x00e1 */ char __PADDING__[7];
} IOP_RESERVE_IRPS, *PIOP_RESERVE_IRPS; /* size: 0x00e8 */

typedef struct _MOUNTMGR_VOLUME_PATHS
{
  /* 0x0000 */ unsigned long MultiSzLength;
  /* 0x0004 */ wchar_t MultiSz[1];
  /* 0x0006 */ char __PADDING__[2];
} MOUNTMGR_VOLUME_PATHS, *PMOUNTMGR_VOLUME_PATHS; /* size: 0x0008 */

typedef struct _VACB
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ struct _SHARED_CACHE_MAP* SharedCacheMap;
  union
  {
    union
    {
      /* 0x0010 */ union _LARGE_INTEGER FileOffset;
      /* 0x0010 */ unsigned short ActiveCount;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Overlay;
  /* 0x0018 */ struct _LIST_ENTRY Links;
  /* 0x0028 */ struct _VACB_ARRAY_HEADER* ArrayHead;
} VACB, *PVACB; /* size: 0x0030 */

typedef struct _KALPC_REGION
{
  /* 0x0000 */ struct _LIST_ENTRY RegionListEntry;
  /* 0x0010 */ struct _KALPC_SECTION* Section;
  /* 0x0018 */ unsigned __int64 Offset;
  /* 0x0020 */ unsigned __int64 Size;
  /* 0x0028 */ unsigned __int64 ViewSize;
  union
  {
    struct
    {
      /* 0x0030 */ unsigned long Secure : 1; /* bit position: 0 */
    } /* size: 0x0004 */ s1;
  } /* size: 0x0004 */ u1;
  /* 0x0034 */ unsigned long NumberOfViews;
  /* 0x0038 */ struct _LIST_ENTRY ViewListHead;
  /* 0x0048 */ struct _KALPC_VIEW* ReadOnlyView;
  /* 0x0050 */ struct _KALPC_VIEW* ReadWriteView;
} KALPC_REGION, *PKALPC_REGION; /* size: 0x0058 */

struct TM_LOGREC_ENLISTMENT_VISTA
{
  /* 0x0000 */ struct _GUID EnlistmentGuid;
  /* 0x0010 */ struct _GUID RmGuid;
  /* 0x0020 */ struct _GUID InternalCrmEnId;
  /* 0x0030 */ struct _GUID InternalCrmRmId;
  /* 0x0040 */ struct _GUID InternalCrmTmId;
  /* 0x0050 */ unsigned long EnlistmentFlags;
  /* 0x0054 */ unsigned long Padding;
  /* 0x0058 */ unsigned long RecoverInformationLength;
  /* 0x005c */ unsigned long RecoverInformationOffset;
  /* 0x0060 */ unsigned long EnSecurityDescriptorLength;
  /* 0x0064 */ unsigned long EnSecurityDescriptorOffset;
  /* 0x0068 */ unsigned long RmSecurityDescriptorLength;
  /* 0x006c */ unsigned long RmSecurityDescriptorOffset;
}; /* size: 0x0070 */

typedef struct _SHARED_CACHE_MAP_LIST_CURSOR
{
  /* 0x0000 */ struct _LIST_ENTRY SharedCacheMapLinks;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} SHARED_CACHE_MAP_LIST_CURSOR, *PSHARED_CACHE_MAP_LIST_CURSOR; /* size: 0x0018 */

typedef struct _VACB_LEVEL_REFERENCE
{
  /* 0x0000 */ long Reference;
  /* 0x0004 */ long SpecialReference;
} VACB_LEVEL_REFERENCE, *PVACB_LEVEL_REFERENCE; /* size: 0x0008 */

typedef struct _CC_TEST_EVENT
{
  /* 0x0000 */ enum _CC_TEST_EVENT_TYPE EventType;
  /* 0x0004 */ unsigned long Enable;
  /* 0x0008 */ unsigned long PersistAcrossReboot;
  /* 0x000c */ long Padding_1020;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ unsigned long Interval;
      } /* size: 0x0004 */ MappingFailure;
      /* 0x0010 */ unsigned __int64 MaximumVAUsage;
      struct
      {
        /* 0x0010 */ unsigned long cLRUInvocations;
        /* 0x0014 */ unsigned long cFreeVACBs;
        /* 0x0018 */ unsigned long cTotalVACBsAllocated;
      } /* size: 0x000c */ StatisticsVACB;
    }; /* size: 0x000c */
  } /* size: 0x0010 */ Parameters;
} CC_TEST_EVENT, *PCC_TEST_EVENT; /* size: 0x0020 */

struct VACB_LEVEL_ALLOCATION_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY VacbLevelList;
  /* 0x0010 */ void* VacbLevelWithBcbListHeads;
  /* 0x0018 */ unsigned long VacbLevelsAllocated;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _FT_SPECIAL_READ
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} FT_SPECIAL_READ, *PFT_SPECIAL_READ; /* size: 0x0010 */

typedef union _HVLP_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long HypervisorConnected : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long NotifyCallbackAtPhase2 : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ApicEnlightened : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long CpuManager : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long DynamicCpuDisabled : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long HypervisorLaunchRequested : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long HypervisorPresentAtBoot : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long SpareBits : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} HVLP_FLAGS, *PHVLP_FLAGS; /* size: 0x0004 */

struct WMIQADMULTIPLE
{
  /* 0x0000 */ unsigned long HandleCount;
  /* 0x0004 */ long Padding_1021;
  /* 0x0008 */ union HANDLE3264 Handles[1];
}; /* size: 0x0010 */

typedef struct _PENDING_SET_INTERFACE_STATE
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0010 */ struct _UNICODE_STRING LinkName;
} PENDING_SET_INTERFACE_STATE, *PPENDING_SET_INTERFACE_STATE; /* size: 0x0020 */

typedef struct _PI_RESOURCE_TRANSLATOR_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY DeviceTranslatorList;
  /* 0x0010 */ unsigned char ResourceType;
  /* 0x0011 */ char Padding_1022[7];
  /* 0x0018 */ struct _TRANSLATOR_INTERFACE* TranslatorInterface;
  /* 0x0020 */ struct _DEVICE_NODE* DeviceNode;
} PI_RESOURCE_TRANSLATOR_ENTRY, *PPI_RESOURCE_TRANSLATOR_ENTRY; /* size: 0x0028 */

typedef struct _BLOB_TYPE
{
  /* 0x0000 */ enum _BLOB_ID ResourceId;
  /* 0x0004 */ unsigned long PoolTag;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long CreatedObjects;
  /* 0x0010 */ unsigned long DeletedObjects;
  /* 0x0014 */ long Padding_1023;
  /* 0x0018 */ void* DeleteProcedure /* function */;
  /* 0x0020 */ void* DestroyProcedure /* function */;
  /* 0x0028 */ unsigned __int64 UsualSize;
  /* 0x0030 */ unsigned long LookasideIndex;
  /* 0x0034 */ long __PADDING__[1];
} BLOB_TYPE, *PBLOB_TYPE; /* size: 0x0038 */

typedef struct _ALPC_SECURITY_ATTR32
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long QoS;
  /* 0x0008 */ unsigned long ContextHandle;
} ALPC_SECURITY_ATTR32, *PALPC_SECURITY_ATTR32; /* size: 0x000c */

typedef struct _PCW_MASK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CounterMask;
  /* 0x0008 */ const struct _UNICODE_STRING* InstanceMask;
  /* 0x0010 */ unsigned long InstanceId;
  /* 0x0014 */ unsigned char CollectMultiple;
  /* 0x0015 */ char Padding_1024[3];
  /* 0x0018 */ struct _PCW_BUFFER* Buffer;
  /* 0x0020 */ struct _KEVENT* CancelEvent;
} PCW_MASK_INFORMATION, *PPCW_MASK_INFORMATION; /* size: 0x0028 */

typedef struct _ALPC_CONTEXT_ATTR32
{
  /* 0x0000 */ unsigned long PortContext;
  /* 0x0004 */ unsigned long MessageContext;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long MessageId;
  /* 0x0010 */ unsigned long CallbackId;
} ALPC_CONTEXT_ATTR32, *PALPC_CONTEXT_ATTR32; /* size: 0x0014 */

typedef struct _BLOB
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY ResourceList;
    /* 0x0000 */ struct _SLIST_ENTRY FreeListEntry;
  }; /* size: 0x0010 */
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0010 */ unsigned char ReferenceCache : 1; /* bit position: 0 */
          /* 0x0010 */ unsigned char Lookaside : 1; /* bit position: 1 */
          /* 0x0010 */ unsigned char Initializing : 1; /* bit position: 2 */
          /* 0x0010 */ unsigned char Deleted : 1; /* bit position: 3 */
        }; /* bitfield */
      } /* size: 0x0001 */ s1;
      /* 0x0010 */ unsigned char Flags;
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ u1;
  /* 0x0011 */ unsigned char ResourceId;
  /* 0x0012 */ short CachedReferences;
  /* 0x0014 */ volatile long ReferenceCount;
  /* 0x0018 */ struct _EX_PUSH_LOCK Lock;
} BLOB, *PBLOB; /* size: 0x0020 */

typedef struct _BUS_EXTENSION_LIST
{
  /* 0x0000 */ void* Next;
  /* 0x0008 */ struct _PI_BUS_EXTENSION* BusExtension;
} BUS_EXTENSION_LIST, *PBUS_EXTENSION_LIST; /* size: 0x0010 */

typedef struct _ALPC_COMPLETION_PACKET_LOOKASIDE
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long ActiveCount;
  /* 0x0010 */ unsigned long PendingNullCount;
  /* 0x0014 */ unsigned long PendingCheckCompletionListCount;
  /* 0x0018 */ unsigned long PendingDelete;
  /* 0x001c */ long Padding_1025;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY FreeListHead;
  /* 0x0028 */ void* CompletionPort;
  /* 0x0030 */ void* CompletionKey;
  /* 0x0038 */ struct _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY Entry[1];
} ALPC_COMPLETION_PACKET_LOOKASIDE, *PALPC_COMPLETION_PACKET_LOOKASIDE; /* size: 0x0050 */

typedef struct _WDIP_SEM_ENABLE_DISABLE_INFO
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ char Padding_1026[7];
  /* 0x0008 */ unsigned __int64 Keyword;
  /* 0x0010 */ unsigned long EnableProperty;
  /* 0x0014 */ unsigned char Enabled;
  /* 0x0015 */ char Padding_1027[3];
  /* 0x0018 */ unsigned long RefCount;
  /* 0x001c */ long __PADDING__[1];
} WDIP_SEM_ENABLE_DISABLE_INFO, *PWDIP_SEM_ENABLE_DISABLE_INFO; /* size: 0x0020 */

typedef struct _KALPC_VIEW
{
  /* 0x0000 */ struct _LIST_ENTRY ViewListEntry;
  /* 0x0010 */ struct _KALPC_REGION* Region;
  /* 0x0018 */ struct _ALPC_PORT* OwnerPort;
  /* 0x0020 */ struct _EPROCESS* OwnerProcess;
  /* 0x0028 */ void* Address;
  /* 0x0030 */ unsigned __int64 Size;
  /* 0x0038 */ void* SecureViewHandle;
  /* 0x0040 */ void* WriteAccessHandle;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0048 */ unsigned long WriteAccess : 1; /* bit position: 0 */
        /* 0x0048 */ unsigned long AutoRelease : 1; /* bit position: 1 */
        /* 0x0048 */ unsigned long ForceUnlink : 1; /* bit position: 2 */
      }; /* bitfield */
    } /* size: 0x0004 */ s1;
  } /* size: 0x0004 */ u1;
  /* 0x004c */ unsigned long NumberOfOwnerMessages;
  /* 0x0050 */ struct _LIST_ENTRY ProcessViewListEntry;
} KALPC_VIEW, *PKALPC_VIEW; /* size: 0x0060 */

typedef struct _WDIP_SEM_PROVIDER_TABLE
{
  /* 0x0000 */ struct _WDIP_SEM_PROVIDER_ENTRY* Providers[128];
  /* 0x0400 */ unsigned long TableSize;
  /* 0x0404 */ long Padding_1028;
  /* 0x0408 */ struct _EX_PUSH_LOCK Lock;
} WDIP_SEM_PROVIDER_TABLE, *PWDIP_SEM_PROVIDER_TABLE; /* size: 0x0410 */

typedef struct _KALPC_SECTION
{
  /* 0x0000 */ void* SectionObject;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ struct _ALPC_HANDLE_TABLE* HandleTable;
  /* 0x0018 */ void* SectionHandle;
  /* 0x0020 */ struct _EPROCESS* OwnerProcess;
  /* 0x0028 */ struct _ALPC_PORT* OwnerPort;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0030 */ unsigned long Internal : 1; /* bit position: 0 */
        /* 0x0030 */ unsigned long Secure : 1; /* bit position: 1 */
      }; /* bitfield */
    } /* size: 0x0004 */ s1;
  } /* size: 0x0004 */ u1;
  /* 0x0034 */ unsigned long NumberOfRegions;
  /* 0x0038 */ struct _LIST_ENTRY RegionListHead;
} KALPC_SECTION, *PKALPC_SECTION; /* size: 0x0048 */

typedef struct _count_string
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_1029;
  /* 0x0008 */ char* Buffer;
} count_string, *Pcount_string; /* size: 0x0010 */

typedef struct _ALPC_PORT
{
  /* 0x0000 */ struct _LIST_ENTRY PortListEntry;
  /* 0x0010 */ struct _ALPC_COMMUNICATION_INFO* CommunicationInfo;
  /* 0x0018 */ struct _EPROCESS* OwnerProcess;
  /* 0x0020 */ void* CompletionPort;
  /* 0x0028 */ void* CompletionKey;
  /* 0x0030 */ struct _ALPC_COMPLETION_PACKET_LOOKASIDE* CompletionPacketLookaside;
  /* 0x0038 */ void* PortContext;
  /* 0x0040 */ struct _SECURITY_CLIENT_CONTEXT StaticSecurity;
  /* 0x0088 */ struct _LIST_ENTRY MainQueue;
  /* 0x0098 */ struct _LIST_ENTRY PendingQueue;
  /* 0x00a8 */ struct _LIST_ENTRY LargeMessageQueue;
  /* 0x00b8 */ struct _LIST_ENTRY WaitQueue;
  union
  {
    /* 0x00c8 */ struct _KSEMAPHORE* Semaphore;
    /* 0x00c8 */ struct _KEVENT* DummyEvent;
  }; /* size: 0x0008 */
  /* 0x00d0 */ struct _ALPC_PORT_ATTRIBUTES PortAttributes;
  /* 0x0118 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0120 */ struct _EX_PUSH_LOCK ResourceListLock;
  /* 0x0128 */ struct _LIST_ENTRY ResourceListHead;
  /* 0x0138 */ struct _ALPC_COMPLETION_LIST* CompletionList;
  /* 0x0140 */ struct _ALPC_MESSAGE_ZONE* MessageZone;
  /* 0x0148 */ struct _CALLBACK_OBJECT* CallbackObject;
  /* 0x0150 */ void* CallbackContext;
  /* 0x0158 */ struct _LIST_ENTRY CanceledQueue;
  /* 0x0168 */ volatile long SequenceNo;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x016c */ unsigned long Initialized : 1; /* bit position: 0 */
          /* 0x016c */ unsigned long Type : 2; /* bit position: 1 */
          /* 0x016c */ unsigned long ConnectionPending : 1; /* bit position: 3 */
          /* 0x016c */ unsigned long ConnectionRefused : 1; /* bit position: 4 */
          /* 0x016c */ unsigned long Disconnected : 1; /* bit position: 5 */
          /* 0x016c */ unsigned long Closed : 1; /* bit position: 6 */
          /* 0x016c */ unsigned long NoFlushOnClose : 1; /* bit position: 7 */
          /* 0x016c */ unsigned long ReturnExtendedInfo : 1; /* bit position: 8 */
          /* 0x016c */ unsigned long Waitable : 1; /* bit position: 9 */
          /* 0x016c */ unsigned long DynamicSecurity : 1; /* bit position: 10 */
          /* 0x016c */ unsigned long Wow64CompletionList : 1; /* bit position: 11 */
          /* 0x016c */ unsigned long Lpc : 1; /* bit position: 12 */
          /* 0x016c */ unsigned long LpcToLpc : 1; /* bit position: 13 */
          /* 0x016c */ unsigned long HasCompletionList : 1; /* bit position: 14 */
          /* 0x016c */ unsigned long HadCompletionList : 1; /* bit position: 15 */
          /* 0x016c */ unsigned long EnableCompletionList : 1; /* bit position: 16 */
        }; /* bitfield */
      } /* size: 0x0004 */ s1;
      /* 0x016c */ unsigned long State;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  /* 0x0170 */ struct _ALPC_PORT* TargetQueuePort;
  /* 0x0178 */ struct _ALPC_PORT* TargetSequencePort;
  /* 0x0180 */ struct _KALPC_MESSAGE* volatile CachedMessage;
  /* 0x0188 */ unsigned long MainQueueLength;
  /* 0x018c */ unsigned long PendingQueueLength;
  /* 0x0190 */ unsigned long LargeMessageQueueLength;
  /* 0x0194 */ unsigned long CanceledQueueLength;
  /* 0x0198 */ unsigned long WaitQueueLength;
  /* 0x019c */ long __PADDING__[1];
} ALPC_PORT, *PALPC_PORT; /* size: 0x01a0 */

typedef struct _DRIVER_LIST_ENTRY
{
  /* 0x0000 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0008 */ struct _DRIVER_LIST_ENTRY* NextEntry;
} DRIVER_LIST_ENTRY, *PDRIVER_LIST_ENTRY; /* size: 0x0010 */

typedef struct _ALPC_COMMUNICATION_INFO
{
  /* 0x0000 */ struct _ALPC_PORT* ConnectionPort;
  /* 0x0008 */ struct _ALPC_PORT* ServerCommunicationPort;
  /* 0x0010 */ struct _ALPC_PORT* ClientCommunicationPort;
  /* 0x0018 */ struct _LIST_ENTRY CommunicationList;
  /* 0x0028 */ struct _ALPC_HANDLE_TABLE HandleTable;
} ALPC_COMMUNICATION_INFO, *PALPC_COMMUNICATION_INFO; /* size: 0x0040 */

typedef struct _IRPLOG_SNAPSHOT
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned char MajorFunction;
  /* 0x0005 */ unsigned char MinorFunction;
  /* 0x0006 */ unsigned char Flags;
  /* 0x0007 */ unsigned char Control;
  /* 0x0008 */ unsigned __int64 ArgArray[4];
} IRPLOG_SNAPSHOT, *PIRPLOG_SNAPSHOT; /* size: 0x0028 */

typedef struct _ALPC_MESSAGE_ZONE
{
  /* 0x0000 */ struct _MDL* Mdl;
  /* 0x0008 */ void* UserVa;
  /* 0x0010 */ void* UserLimit;
  /* 0x0018 */ void* SystemVa;
  /* 0x0020 */ void* SystemLimit;
  /* 0x0028 */ unsigned __int64 Size;
} ALPC_MESSAGE_ZONE, *PALPC_MESSAGE_ZONE; /* size: 0x0030 */

typedef struct _MI_LARGEPAGE_MEMORY_RUN
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned __int64 BasePage;
  /* 0x0018 */ unsigned __int64 PageCount;
} MI_LARGEPAGE_MEMORY_RUN, *PMI_LARGEPAGE_MEMORY_RUN; /* size: 0x0020 */

union SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT_STORE_COUNT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 StoreCount : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Reserved : 61; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ void* EntirePointer;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _KALPC_MESSAGE_ATTRIBUTES
{
  /* 0x0000 */ void* ClientContext;
  /* 0x0008 */ void* ServerContext;
  /* 0x0010 */ void* PortContext;
  /* 0x0018 */ void* CancelPortContext;
  /* 0x0020 */ struct _KALPC_SECURITY_DATA* SecurityData;
  /* 0x0028 */ struct _KALPC_VIEW* View;
  /* 0x0030 */ struct _KALPC_HANDLE_DATA* HandleData;
} KALPC_MESSAGE_ATTRIBUTES, *PKALPC_MESSAGE_ATTRIBUTES; /* size: 0x0038 */

typedef struct _KALPC_MESSAGE
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* ExtensionBuffer;
  /* 0x0018 */ unsigned __int64 ExtensionBufferSize;
  union
  {
    /* 0x0020 */ struct _EPROCESS* QuotaProcess;
    /* 0x0020 */ void* QuotaBlock;
  }; /* size: 0x0008 */
  /* 0x0028 */ long SequenceNo;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x002c */ unsigned long QueueType : 2; /* bit position: 0 */
          /* 0x002c */ unsigned long QueuePortType : 4; /* bit position: 2 */
          /* 0x002c */ unsigned long Canceled : 1; /* bit position: 6 */
          /* 0x002c */ unsigned long Ready : 1; /* bit position: 7 */
          /* 0x002c */ unsigned long ReleaseMessage : 1; /* bit position: 8 */
          /* 0x002c */ unsigned long SharedQuota : 1; /* bit position: 9 */
          /* 0x002c */ unsigned long ReplyWaitReply : 1; /* bit position: 10 */
          /* 0x002c */ unsigned long OwnerPortReference : 1; /* bit position: 11 */
          /* 0x002c */ unsigned long ReserveReference : 1; /* bit position: 12 */
          /* 0x002c */ unsigned long ReceiverReference : 1; /* bit position: 13 */
          /* 0x002c */ unsigned long ViewAttributeRetrieved : 1; /* bit position: 14 */
          /* 0x002c */ unsigned long InDispatch : 1; /* bit position: 15 */
        }; /* bitfield */
      } /* size: 0x0004 */ s1;
      /* 0x002c */ unsigned long State;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  /* 0x0030 */ struct _ALPC_PORT* CancelSequencePort;
  /* 0x0038 */ struct _ALPC_PORT* CancelQueuePort;
  /* 0x0040 */ long CancelSequenceNo;
  /* 0x0044 */ long Padding_1030;
  /* 0x0048 */ struct _LIST_ENTRY CancelListEntry;
  /* 0x0058 */ struct _ETHREAD* WaitingThread;
  /* 0x0060 */ struct _KALPC_RESERVE* Reserve;
  /* 0x0068 */ struct _ALPC_PORT* volatile PortQueue;
  /* 0x0070 */ struct _ALPC_PORT* OwnerPort;
  /* 0x0078 */ struct _KALPC_MESSAGE_ATTRIBUTES MessageAttributes;
  /* 0x00b0 */ void* DataUserVa;
  /* 0x00b8 */ void* DataSystemVa;
  /* 0x00c0 */ struct _ALPC_COMMUNICATION_INFO* CommunicationInfo;
  /* 0x00c8 */ struct _ALPC_PORT* ConnectionPort;
  /* 0x00d0 */ struct _ETHREAD* ServerThread;
  /* 0x00d8 */ struct _PORT_MESSAGE PortMessage;
} KALPC_MESSAGE, *PKALPC_MESSAGE; /* size: 0x0100 */

typedef struct _KALPC_RESERVE
{
  /* 0x0000 */ struct _ALPC_PORT* OwnerPort;
  /* 0x0008 */ struct _ALPC_HANDLE_TABLE* HandleTable;
  /* 0x0010 */ void* Handle;
  /* 0x0018 */ struct _KALPC_MESSAGE* Message;
  /* 0x0020 */ volatile long Active;
  /* 0x0024 */ long __PADDING__[1];
} KALPC_RESERVE, *PKALPC_RESERVE; /* size: 0x0028 */

typedef struct _KALPC_SECURITY_DATA
{
  /* 0x0000 */ struct _ALPC_HANDLE_TABLE* HandleTable;
  /* 0x0008 */ void* ContextHandle;
  /* 0x0010 */ struct _EPROCESS* OwningProcess;
  /* 0x0018 */ struct _ALPC_PORT* OwnerPort;
  /* 0x0020 */ struct _SECURITY_CLIENT_CONTEXT DynamicSecurity;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0068 */ unsigned long Revoked : 1; /* bit position: 0 */
        /* 0x0068 */ unsigned long Impersonated : 1; /* bit position: 1 */
      }; /* bitfield */
    } /* size: 0x0004 */ s1;
  } /* size: 0x0004 */ u1;
  /* 0x006c */ long __PADDING__[1];
} KALPC_SECURITY_DATA, *PKALPC_SECURITY_DATA; /* size: 0x0070 */

typedef struct _value
{
  /* 0x0000 */ struct _value* pNext;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ unsigned char Allocated;
  /* 0x0011 */ char __PADDING__[7];
} value, *Pvalue; /* size: 0x0018 */

typedef struct _MUP_REDIRECTOR_REGISTRATION
{
  /* 0x0000 */ struct _UNICODE_STRING ProviderDeviceName;
  /* 0x0010 */ struct _DEVICE_OBJECT* ProviderDeviceObject;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ wchar_t NameBuffer[1];
  /* 0x001e */ char __PADDING__[2];
} MUP_REDIRECTOR_REGISTRATION, *PMUP_REDIRECTOR_REGISTRATION; /* size: 0x0020 */

typedef struct _ALPC_LOG_ENTRY_WAIT_FOR_NEW_MESSAGE
{
  /* 0x0000 */ unsigned long Server;
  /* 0x0004 */ wchar_t* PortName /* zero-length array */;
} ALPC_LOG_ENTRY_WAIT_FOR_NEW_MESSAGE, *PALPC_LOG_ENTRY_WAIT_FOR_NEW_MESSAGE; /* size: 0x0004 */

typedef struct _ALPC_HANDLE_ATTR32
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Handle;
  /* 0x0008 */ unsigned long ObjectType;
  /* 0x000c */ unsigned long DesiredAccess;
} ALPC_HANDLE_ATTR32, *PALPC_HANDLE_ATTR32; /* size: 0x0010 */

struct PTRCACHE
{
  /* 0x0000 */ struct _GUID* Guid;
  /* 0x0008 */ struct tagInstanceSet* InstanceSet;
}; /* size: 0x0010 */

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION32
{
  /* 0x0000 */ unsigned long Buffer;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long ConcurrencyCount;
  /* 0x000c */ unsigned long AttributeFlags;
} ALPC_PORT_COMPLETION_LIST_INFORMATION32, *PALPC_PORT_COMPLETION_LIST_INFORMATION32; /* size: 0x0010 */

typedef struct _VI_REMLOCK_SURROGATE
{
  /* 0x0000 */ struct _VF_AVL_TREE_NODE TreeNode;
  /* 0x0010 */ struct _IO_PRIVATE_REMOVE_LOCK RemoveLockChk;
} VI_REMLOCK_SURROGATE, *PVI_REMLOCK_SURROGATE; /* size: 0x0088 */

typedef struct _ALPC_LOG_ENTRY_UNWAIT
{
  /* 0x0000 */ long Status;
} ALPC_LOG_ENTRY_UNWAIT, *PALPC_LOG_ENTRY_UNWAIT; /* size: 0x0004 */

typedef struct _ALPC_MESSAGE_SNAPSHOT
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ long ReferenceMask;
  /* 0x0018 */ struct _ALPC_PORT* OwnerPort;
  /* 0x0020 */ struct _ALPC_PORT* QueuePort;
  /* 0x0028 */ struct _ALPC_PORT* CancelQueuePort;
  /* 0x0030 */ struct _ETHREAD* WaitingThread;
  /* 0x0038 */ void* ClientContext;
  /* 0x0040 */ void* ServerContext;
  /* 0x0048 */ void* ReturnAddress;
  /* 0x0050 */ struct _PORT_MESSAGE PortMessage;
} ALPC_MESSAGE_SNAPSHOT, *PALPC_MESSAGE_SNAPSHOT; /* size: 0x0078 */

typedef struct _MTRR_CAPABILITIES
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 VarCnt : 8; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 FixSupported : 1; /* bit position: 8 */
        /* 0x0000 */ unsigned __int64 Reserved_0 : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned __int64 UswcSupported : 1; /* bit position: 10 */
        /* 0x0000 */ unsigned __int64 Reserved_1 : 21; /* bit position: 11 */
      }; /* bitfield */
      /* 0x0008 */ unsigned __int64 Reserved_2;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ unsigned __int64 QuadPart;
      /* 0x0008 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} MTRR_CAPABILITIES, *PMTRR_CAPABILITIES; /* size: 0x0010 */

typedef struct _REQUEST_SUMMARY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 IpiRequest : 4; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Reserved1 : 4; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Count : 8; /* bit position: 8 */
      /* 0x0000 */ __int64 Parameter : 48; /* bit position: 16 */
    }; /* bitfield */
    /* 0x0000 */ __int64 Summary;
  }; /* size: 0x0008 */
} REQUEST_SUMMARY, *PREQUEST_SUMMARY; /* size: 0x0008 */

typedef struct _MI_DYNAMIC_RELOCATIONS
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ struct _KTHREAD* ExclusiveLockOwner;
  /* 0x0010 */ struct _MI_FIXUP_RECORD* StraddleChain;
  /* 0x0018 */ struct _IMAGE_BASE_RELOCATION** Indices;
  /* 0x0020 */ struct _IMAGE_BASE_RELOCATION* RelocationArray;
  /* 0x0028 */ unsigned __int64 Diff;
  /* 0x0030 */ unsigned long ImageBaseOffset;
  /* 0x0034 */ unsigned long StartBit;
  /* 0x0038 */ unsigned short SizeIn64k;
  /* 0x003a */ unsigned char Compressed;
  /* 0x003b */ unsigned char Spare;
  /* 0x003c */ unsigned long BitMap64;
} MI_DYNAMIC_RELOCATIONS, *PMI_DYNAMIC_RELOCATIONS; /* size: 0x0040 */

typedef struct _ALIGNED_AFFINITY_STRUCT
{
  /* 0x0000 */ struct _KAFFINITY_EX Affinity;
  /* 0x0028 */ long __PADDING__[6];
} ALIGNED_AFFINITY_STRUCT, *PALIGNED_AFFINITY_STRUCT; /* size: 0x0040 */

struct _PCW_BUFFER;

typedef struct _BREAKPOINT_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1031;
  /* 0x0008 */ struct _KPROCESS* Process;
  /* 0x0010 */ void* Address;
  /* 0x0018 */ unsigned char Content;
  /* 0x0019 */ char __PADDING__[7];
} BREAKPOINT_ENTRY, *PBREAKPOINT_ENTRY; /* size: 0x0020 */

typedef struct _WDIP_SEM_SCENARIO_INFO
{
  /* 0x0000 */ struct _WDIP_SEM_EVENT_INFO StartEvent;
  /* 0x0030 */ unsigned long NumContextEvents;
  /* 0x0034 */ unsigned long NumEndEvents;
  /* 0x0038 */ struct _WDIP_SEM_EVENT_INFO* ContextEvents[124];
  /* 0x0418 */ struct _WDIP_SEM_EVENT_INFO* EndEvents[16];
} WDIP_SEM_SCENARIO_INFO, *PWDIP_SEM_SCENARIO_INFO; /* size: 0x0498 */

struct tagSDBENTRY
{
  /* 0x0000 */ struct _GUID guidDB;
  /* 0x0010 */ struct _DB* pdb;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::INDEX_ENTRY
{
  /* 0x0000 */ union _SM_PAGE_KEY Key;
  /* 0x0004 */ long Padding_1032;
  /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE* Child;
}; /* size: 0x0010 */

typedef struct _PCW_COUNTER_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CounterMask;
  /* 0x0008 */ const struct _UNICODE_STRING* InstanceMask;
} PCW_COUNTER_INFORMATION, *PPCW_COUNTER_INFORMATION; /* size: 0x0010 */

typedef union _PCW_CALLBACK_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _PCW_COUNTER_INFORMATION AddCounter;
    /* 0x0000 */ struct _PCW_COUNTER_INFORMATION RemoveCounter;
    /* 0x0000 */ struct _PCW_MASK_INFORMATION EnumerateInstances;
    /* 0x0000 */ struct _PCW_MASK_INFORMATION CollectData;
  }; /* size: 0x0028 */
} PCW_CALLBACK_INFORMATION, *PPCW_CALLBACK_INFORMATION; /* size: 0x0028 */

typedef struct _RTL_NORMALIZATION
{
  /* 0x0000 */ enum _RTL_NORM_FORM eNormalizationForm;
  /* 0x0004 */ long Padding_1033;
  /* 0x0008 */ struct _NORM_TABLES_HEADER* pTablesPointer;
  /* 0x0010 */ unsigned __int64 TablesSize;
  /* 0x0018 */ int iMaxReplacementSize;
  /* 0x001c */ int iQuickLower;
  /* 0x0020 */ unsigned char* pMainIndex;
  /* 0x0028 */ unsigned char* pCharInfo[128];
  /* 0x0030 */ unsigned char* pClassMap;
  /* 0x0038 */ int iReplacementHash;
  /* 0x003c */ long Padding_1034;
  /* 0x0040 */ unsigned short* pReplacementHashTable;
  /* 0x0048 */ unsigned short* pReplacementIndex;
  /* 0x0050 */ unsigned short* pReplacementData;
  /* 0x0058 */ int iCompositionHash;
  /* 0x005c */ long Padding_1035;
  /* 0x0060 */ unsigned short* pCompositionIndex;
  /* 0x0068 */ unsigned short* pCompositionData;
  /* 0x0070 */ unsigned char bDecomposeHangul;
  /* 0x0071 */ unsigned char bAllowUnassignedCodePoints;
  /* 0x0072 */ unsigned char bClass216;
  /* 0x0073 */ unsigned char bClass220;
  /* 0x0074 */ unsigned char bClass221;
  /* 0x0075 */ unsigned char bClass230;
  /* 0x0076 */ unsigned char bClass231;
  /* 0x0077 */ char __PADDING__[1];
} RTL_NORMALIZATION, *PRTL_NORMALIZATION; /* size: 0x0078 */

typedef struct _ETW_PROVIDER_TABLE_ENTRY
{
  /* 0x0000 */ long RefCount;
  /* 0x0004 */ enum _ETW_PROVIDER_STATE State;
  /* 0x0008 */ struct _ETW_REG_ENTRY* RegEntry;
  /* 0x0010 */ void* Caller;
} ETW_PROVIDER_TABLE_ENTRY, *PETW_PROVIDER_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _KD_REMOTE_FILE
{
  /* 0x0000 */ unsigned __int64 RemoteHandle;
} KD_REMOTE_FILE, *PKD_REMOTE_FILE; /* size: 0x0008 */

typedef struct _KI_WAIT_STATS
{
  /* 0x0000 */ unsigned __int64 CommitAlertAborted;
  /* 0x0008 */ unsigned __int64 CommitUserApcAborted;
  /* 0x0010 */ unsigned __int64 CommitWaitAborted;
  /* 0x0018 */ unsigned __int64 DeferredScheduleChange;
  /* 0x0020 */ unsigned __int64 ApcDelivery;
  /* 0x0028 */ unsigned __int64 AlertResumeUnwait;
  /* 0x0030 */ unsigned __int64 AssociatedQueue;
  /* 0x0038 */ unsigned __int64 BlockUnlinked;
  /* 0x0040 */ unsigned __int64 FastWaitExit;
  /* 0x0048 */ unsigned __int64 WaitExited;
  /* 0x0050 */ unsigned __int64 ThreadSatisfyWaitAbort;
  /* 0x0058 */ unsigned __int64 PendingThreadSignal;
  /* 0x0060 */ unsigned __int64 InSwapThreads;
  /* 0x0068 */ unsigned __int64 ProcessOutSwapCancel;
  /* 0x0070 */ unsigned __int64 ProcessReverseOutSwap;
  /* 0x0078 */ unsigned __int64 ProcessOutSwapComplete;
  /* 0x0080 */ unsigned __int64 AttemptProcessOutSwap;
  /* 0x0088 */ unsigned __int64 InitiateProcessOutTransition;
  /* 0x0090 */ unsigned __int64 InitiateProcessInTransition;
  /* 0x0098 */ unsigned __int64 QueueReadyThread;
  /* 0x00a0 */ unsigned __int64 DescheduleCurrentThread;
  /* 0x00a8 */ unsigned __int64 ProcessNotResidentAtCreate;
  /* 0x00b0 */ unsigned __int64 ProcessInSwapRace;
  /* 0x00b8 */ unsigned __int64 ReadyThreadStackInSwap;
  /* 0x00c0 */ unsigned __int64 ReadyThreadProcessInSwap;
  /* 0x00c8 */ unsigned __int64 ReadyThreadBoosts;
  /* 0x00d0 */ unsigned __int64 TargetThreadBoosts;
  /* 0x00d8 */ unsigned __int64 IdealProcDeferredSwitch;
  /* 0x00e0 */ unsigned __int64 IdealNodeChange;
  /* 0x00e8 */ unsigned __int64 ReselectCandidateProcessor;
  /* 0x00f0 */ unsigned __int64 IdleScheduleForced;
  /* 0x00f8 */ unsigned __int64 UmsFastSwap;
  /* 0x0100 */ unsigned __int64 UmsPriority;
  /* 0x0108 */ unsigned __int64 UmsQuantum;
  /* 0x0110 */ unsigned __int64 ApcIntBypass;
  /* 0x0118 */ unsigned __int64 LocalPreemption;
  /* 0x0120 */ unsigned __int64 SmtQuantum;
  /* 0x0128 */ unsigned __int64 RetainForeground;
  /* 0x0130 */ unsigned __int64 AlreadyForeground;
  /* 0x0138 */ unsigned __int64 PrcbLockInOrder;
  /* 0x0140 */ unsigned __int64 ParkProcessorLockFail;
  /* 0x0148 */ unsigned __int64 ParkReadyThread;
  /* 0x0150 */ unsigned __int64 SkipNode;
  /* 0x0158 */ unsigned __int64 EarlyQuantumEnd;
  /* 0x0160 */ unsigned __int64 PreemptQuantumEnd;
  /* 0x0168 */ unsigned __int64 ConsiderLoadBalance;
  /* 0x0170 */ unsigned __int64 MigrateHighImportance;
  /* 0x0178 */ unsigned __int64 ThreadMigrated;
  /* 0x0180 */ unsigned __int64 NextThreadResched;
  /* 0x0188 */ unsigned __int64 RedundantAbsoluteThreadTimeout;
  /* 0x0190 */ unsigned __int64 AbsoluteThreadTimeout;
  /* 0x0198 */ unsigned __int64 AbsoluteTimersActive;
  /* 0x01a0 */ unsigned __int64 AbsoluteTimerAdjust;
  /* 0x01a8 */ unsigned __int64 AbsoluteTimerCancelled;
  /* 0x01b0 */ unsigned __int64 EarlyThreadTimeout;
  /* 0x01b8 */ unsigned __int64 LocalTimerDpcQueue;
  /* 0x01c0 */ unsigned __int64 RedundantTimeout;
  /* 0x01c8 */ unsigned __int64 TimerNotInserted;
  /* 0x01d0 */ unsigned __int64 TimerAlreadyCancelled;
  /* 0x01d8 */ unsigned __int64 TimerRemoved;
  /* 0x01e0 */ unsigned __int64 WaitForTimerExpiry;
  /* 0x01e8 */ unsigned __int64 ProactiveTimerCancel;
  /* 0x01f0 */ unsigned __int64 SpuriousTimerInt;
  /* 0x01f8 */ unsigned __int64 SkipInterval;
  /* 0x0200 */ unsigned __int64 AffinitizedTimer;
  /* 0x0208 */ unsigned __int64 ReselectTimerProc;
  /* 0x0210 */ unsigned __int64 TickSkipOverride;
  /* 0x0218 */ unsigned __int64 NoTickSkipOverride;
  /* 0x0220 */ unsigned __int64 ReinsertQueueItem;
  /* 0x0228 */ unsigned __int64 FastQueueAcquire;
  /* 0x0230 */ unsigned __int64 SlowQueueAcquire;
  /* 0x0238 */ unsigned __int64 FastQueueWaitExit;
  /* 0x0240 */ unsigned __int64 FastQueueWaitAbort;
  /* 0x0248 */ unsigned __int64 ActivateQueueThreadExit;
  /* 0x0250 */ unsigned __int64 QueueAbandoned;
  /* 0x0258 */ unsigned __int64 FastMutantAcquire;
  /* 0x0260 */ unsigned __int64 SlowMutantAcquire;
  /* 0x0268 */ unsigned __int64 ConcurrentAbandon;
  /* 0x0270 */ unsigned __int64 ConcurrentAbandonOwner;
  /* 0x0278 */ unsigned __int64 MutexRelease;
  /* 0x0280 */ unsigned __int64 ExcessAbandonedMutex;
} KI_WAIT_STATS, *PKI_WAIT_STATS; /* size: 0x0288 */

typedef struct _LOADER_DEBUGGER_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY* LoadOrderListHead;
} LOADER_DEBUGGER_BLOCK, *PLOADER_DEBUGGER_BLOCK; /* size: 0x0008 */

typedef struct _ALIGNED_AFFINITY_SUMMARY
{
  /* 0x0000 */ struct _KAFFINITY_EX CpuSet;
  /* 0x0028 */ struct _KAFFINITY_EX SMTSet;
  /* 0x0050 */ long __PADDING__[12];
} ALIGNED_AFFINITY_SUMMARY, *PALIGNED_AFFINITY_SUMMARY; /* size: 0x0080 */

typedef struct _KD_CONTEXT
{
  /* 0x0000 */ unsigned long KdpDefaultRetries;
  /* 0x0004 */ unsigned char KdpControlCPending;
  /* 0x0005 */ char __PADDING__[3];
} KD_CONTEXT, *PKD_CONTEXT; /* size: 0x0008 */

typedef union _KBUGCHECK_ACTIVE_STATE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long BugCheckState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long RecursionCount : 2; /* bit position: 2 */
      /* 0x0000 */ unsigned long BugCheckOwner : 28; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ volatile long Value;
  }; /* size: 0x0004 */
} KBUGCHECK_ACTIVE_STATE, *PKBUGCHECK_ACTIVE_STATE; /* size: 0x0004 */

typedef struct _ALIGNED_SPINLOCK_STRUCT
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ long __PADDING__[14];
} ALIGNED_SPINLOCK_STRUCT, *PALIGNED_SPINLOCK_STRUCT; /* size: 0x0040 */

typedef struct _PCW_DATA
{
  /* 0x0000 */ const void* Data;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PCW_DATA, *PPCW_DATA; /* size: 0x0010 */

typedef struct _WMIP_SYNCHRONOUS_ETW_WORK
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct tagGUIDENTRY* GuidEntry;
  /* 0x0018 */ struct _LIST_ENTRY WorkHead;
  /* 0x0028 */ struct _LIST_ENTRY WaiterHead;
} WMIP_SYNCHRONOUS_ETW_WORK, *PWMIP_SYNCHRONOUS_ETW_WORK; /* size: 0x0038 */

typedef struct _CHUNKINFO
{
  /* 0x0000 */ struct _LIST_ENTRY ChunkHead;
  /* 0x0010 */ unsigned long EntrySize;
  /* 0x0014 */ unsigned long EntriesPerChunk;
  /* 0x0018 */ void* EntryCleanup /* function */;
  /* 0x0020 */ unsigned long InitialFlags;
  /* 0x0024 */ unsigned long Signature;
} CHUNKINFO, *PCHUNKINFO; /* size: 0x0028 */

typedef struct _SM_STORE_CACHE_BACKED_PARAMS
{
  /* 0x0000 */ unsigned long SectorSize;
  /* 0x0004 */ long Padding_1036;
  /* 0x0008 */ char* EncryptionKey;
  /* 0x0010 */ struct _SMKM_CRYPTO_REG_PARAMS* CryptoParams;
  /* 0x0018 */ struct _SMKM_FILE_INFO* FileInfo;
  /* 0x0020 */ void* EtaContext;
} SM_STORE_CACHE_BACKED_PARAMS, *PSM_STORE_CACHE_BACKED_PARAMS; /* size: 0x0028 */

typedef struct _VI_ERROR_DESCRIPTION
{
  /* 0x0000 */ enum _VF_ERROR_ID Id;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const char* Description;
} VI_ERROR_DESCRIPTION, *PVI_ERROR_DESCRIPTION; /* size: 0x0010 */

struct CREATETHREADWORKITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ void* Object;
}; /* size: 0x0028 */

typedef struct _INDEX_INFO
{
  /* 0x0000 */ unsigned long tiIndex;
  /* 0x0004 */ unsigned short tWhich;
  /* 0x0006 */ unsigned short tKey;
  /* 0x0008 */ int bActive;
  /* 0x000c */ int bUniqueKey;
  /* 0x0010 */ unsigned __int64 ullLastKey;
  /* 0x0018 */ unsigned long dwIndexEntry;
  /* 0x001c */ unsigned long dwIndexEnd;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} INDEX_INFO, *PINDEX_INFO; /* size: 0x0028 */

typedef struct _RTL_NORM_BUFFER
{
  /* 0x0000 */ const wchar_t* pszInputBuffer;
  /* 0x0008 */ const wchar_t* pszInputBufferEnd;
  /* 0x0010 */ const wchar_t* pszNextIn;
  /* 0x0018 */ unsigned short* pszOutputBuffer;
  /* 0x0020 */ unsigned short* pszOutputBufferEnd;
  /* 0x0028 */ unsigned short* pszNextOut;
  /* 0x0030 */ int cchOutputBufferSize;
  /* 0x0034 */ int cchInputBufferSize;
  /* 0x0038 */ long cLastChar;
  /* 0x003c */ long Padding_1037;
  /* 0x0040 */ unsigned short* pszLastChar;
  /* 0x0048 */ unsigned char bLastClass;
  /* 0x0049 */ unsigned char bLastFlags;
  /* 0x004a */ char Padding_1038[6];
  /* 0x0050 */ unsigned short* pszAfterLastStart;
  /* 0x0058 */ long cLastStart;
  /* 0x005c */ unsigned char bLastStartClass;
  /* 0x005d */ unsigned char bLastStartFlags;
  /* 0x005e */ char Padding_1039[2];
  /* 0x0060 */ long cLastStartBase;
  /* 0x0064 */ long cLastStartBasePair;
  /* 0x0068 */ unsigned short* pszFirstBigger;
  /* 0x0070 */ struct _RTL_NORMALIZATION* pNormalization;
} RTL_NORM_BUFFER, *PRTL_NORM_BUFFER; /* size: 0x0078 */

struct tagSDBDATABASEINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwVersionMajor;
  /* 0x0008 */ unsigned long dwVersionMinor;
  /* 0x000c */ long Padding_1040;
  /* 0x0010 */ unsigned short* pszDescription;
  /* 0x0018 */ struct _GUID guidDB;
}; /* size: 0x0028 */

typedef struct _PI_CRITICAL_QUERY_CONTEXT
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PI_CRITICAL_QUERY_CONTEXT, *PPI_CRITICAL_QUERY_CONTEXT; /* size: 0x0010 */

struct ADJUST_INTERRUPT_TIME_CONTEXT
{
  /* 0x0000 */ unsigned char AdjustPerfCounter;
  /* 0x0001 */ char Padding_1041[3];
  /* 0x0004 */ unsigned long KiNumber;
  /* 0x0008 */ unsigned __int64 Adjustment;
  /* 0x0010 */ union _LARGE_INTEGER NewCount;
  /* 0x0018 */ volatile unsigned __int64 TickOffset;
  /* 0x0020 */ unsigned long MasterOffset;
  /* 0x0024 */ volatile long EntryBarrier;
  /* 0x0028 */ volatile long HalNumber;
  /* 0x002c */ volatile long Barrier;
}; /* size: 0x0030 */

struct DBGKD_INTERNAL_BREAKPOINT
{
  /* 0x0000 */ unsigned __int64 Addr;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Calls;
  /* 0x0010 */ unsigned long CallsLastCheck;
  /* 0x0014 */ unsigned long MaxCallsPerPeriod;
  /* 0x0018 */ unsigned long MinInstructions;
  /* 0x001c */ unsigned long MaxInstructions;
  /* 0x0020 */ unsigned long TotalInstructions;
  /* 0x0024 */ unsigned long Handle;
  /* 0x0028 */ void* Thread;
  /* 0x0030 */ unsigned __int64 ReturnAddress;
}; /* size: 0x0038 */

typedef struct _KCALLOUT_STACK_CONTEXT
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned char LargeStack;
  /* 0x0005 */ unsigned char StackCount;
  /* 0x0006 */ unsigned char StackIndex;
  /* 0x0007 */ unsigned char Reserved;
  /* 0x0008 */ struct _KMUTANT Mutex;
  /* 0x0040 */ void* StackPointer[1];
} KCALLOUT_STACK_CONTEXT, *PKCALLOUT_STACK_CONTEXT; /* size: 0x0048 */

typedef struct _BCD_ELEMENT_DESCRIPTION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataSize;
} BCD_ELEMENT_DESCRIPTION, *PBCD_ELEMENT_DESCRIPTION; /* size: 0x000c */

typedef struct _BCDI_ELEMENT
{
  /* 0x0000 */ struct _BCDI_ELEMENT* NextElement;
  /* 0x0008 */ union _BCDE_UNPACKED_DATA_TYPE ParentDataType;
  /* 0x000c */ struct _BCD_ELEMENT_DESCRIPTION Description;
  /* 0x0018 */ char Data[1];
  /* 0x0019 */ char __PADDING__[7];
} BCDI_ELEMENT, *PBCDI_ELEMENT; /* size: 0x0020 */

typedef struct _TRACE_DATA_SYM
{
  /* 0x0000 */ unsigned long SymMin;
  /* 0x0004 */ unsigned long SymMax;
} TRACE_DATA_SYM, *PTRACE_DATA_SYM; /* size: 0x0008 */

typedef struct _JOB_WORKING_SET_CHANGE_HEAD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSetSize;
} JOB_WORKING_SET_CHANGE_HEAD, *PJOB_WORKING_SET_CHANGE_HEAD; /* size: 0x0028 */

typedef union _KCACHE_ERRATA_MONITOR
{
  union
  {
    /* 0x0000 */ unsigned __int64 MonitorValue;
    /* 0x0000 */ unsigned __int64 MonitorFlags : 2; /* bit position: 0 */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 MonitorRequired : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ForceDisable : 1; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ struct _KCACHE_MONITOR_HEADER* MonitorSupport;
  }; /* size: 0x0008 */
} KCACHE_ERRATA_MONITOR, *PKCACHE_ERRATA_MONITOR; /* size: 0x0008 */

typedef struct _KCACHE_MONITOR_ENTRY
{
  union
  {
    /* 0x0000 */ void* MonitorPollExchange;
    /* 0x0000 */ unsigned __int64 MonitorPollSlot;
  }; /* size: 0x0008 */
  /* 0x0008 */ long MonitorInterval;
  /* 0x000c */ unsigned long NextCpu;
} KCACHE_MONITOR_ENTRY, *PKCACHE_MONITOR_ENTRY; /* size: 0x0010 */

typedef struct _KCACHE_MONITOR_HEADER
{
  /* 0x0000 */ unsigned long MonitorIntervalReset;
  /* 0x0004 */ long Padding_1042;
  /* 0x0008 */ struct _KPROFILE MonitorProfile;
  /* 0x0080 */ struct _KCACHE_MONITOR_ENTRY MonitorEntries[1];
} KCACHE_MONITOR_HEADER, *PKCACHE_MONITOR_HEADER; /* size: 0x0090 */

typedef struct _ALIGNED_EX_SPINLOCK_STRUCT
{
  /* 0x0000 */ volatile long Lock;
  /* 0x0004 */ long __PADDING__[15];
} ALIGNED_EX_SPINLOCK_STRUCT, *PALIGNED_EX_SPINLOCK_STRUCT; /* size: 0x0040 */

typedef struct _OBP_LOOKUP_CONTEXT
{
  /* 0x0000 */ struct _OBJECT_DIRECTORY* Directory;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long HashValue;
  /* 0x0014 */ unsigned short HashIndex;
  /* 0x0016 */ unsigned char DirectoryLocked;
  /* 0x0017 */ unsigned char LockedExclusive;
  /* 0x0018 */ volatile unsigned long LockStateSignature;
  /* 0x001c */ long __PADDING__[1];
} OBP_LOOKUP_CONTEXT, *POBP_LOOKUP_CONTEXT; /* size: 0x0020 */

typedef struct _STACK_TABLE
{
  /* 0x0000 */ unsigned short NumStackTraces;
  /* 0x0002 */ unsigned short TraceCapacity;
  /* 0x0004 */ long Padding_1043;
  /* 0x0008 */ struct _OBJECT_REF_TRACE* StackTrace[16];
  /* 0x0088 */ unsigned short StackTableHash[16381];
  /* 0x8082 */ char __PADDING__[6];
} STACK_TABLE, *PSTACK_TABLE; /* size: 0x8088 */

typedef struct _OBJECT_REF_TRACE
{
  /* 0x0000 */ void* StackTrace[16];
} OBJECT_REF_TRACE, *POBJECT_REF_TRACE; /* size: 0x0080 */

union ALIGNEDNAME
{
  union
  {
    /* 0x0000 */ wchar_t Name[4];
    /* 0x0000 */ union _ULARGE_INTEGER Alignment;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _SESSION_OBJECT
{
  /* 0x0000 */ struct _KEVENT Event;
  /* 0x0018 */ struct _MM_SESSION_SPACE* SessionGlobal;
} SESSION_OBJECT, *PSESSION_OBJECT; /* size: 0x0020 */

typedef struct _OBJECT_NAMESPACE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ void* NamespaceRootDirectory;
  /* 0x0018 */ unsigned __int64 SizeOfBoundaryInformation;
  /* 0x0020 */ unsigned __int64 Reserved;
  union
  {
    /* 0x0028 */ unsigned char HashValue;
    /* 0x0028 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} OBJECT_NAMESPACE_ENTRY, *POBJECT_NAMESPACE_ENTRY; /* size: 0x0030 */

typedef struct _IMAGE_SECURITY_CONTEXT
{
  union
  {
    /* 0x0000 */ void* PageHashes;
    /* 0x0000 */ unsigned __int64 Value;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 SecurityBeingCreated : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 SecurityMandatory : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Unused : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 PageHashPointer : 61; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} IMAGE_SECURITY_CONTEXT, *PIMAGE_SECURITY_CONTEXT; /* size: 0x0008 */

typedef struct _MI_IMAGE_SECURITY_REFERENCE
{
  /* 0x0000 */ struct _IMAGE_SECURITY_CONTEXT SecurityContext;
  /* 0x0008 */ void* DynamicRelocations;
  /* 0x0010 */ volatile long ReferenceCount;
  /* 0x0014 */ long __PADDING__[1];
} MI_IMAGE_SECURITY_REFERENCE, *PMI_IMAGE_SECURITY_REFERENCE; /* size: 0x0018 */

typedef struct _OBJECT_REF_INFO
{
  /* 0x0000 */ struct _OBJECT_HEADER* ObjectHeader;
  /* 0x0008 */ void* NextRef;
  /* 0x0010 */ unsigned char ImageFileName[16];
  /* 0x0020 */ unsigned short NextPos;
  /* 0x0022 */ unsigned short MaxStacks;
  union
  {
    /* 0x0024 */ struct _OBJECT_REF_STACK_INFO* StackInfo /* zero-length array */;
    /* 0x0024 */ long __PADDING__[1];
  }; /* size: 0x0004 */
} OBJECT_REF_INFO, *POBJECT_REF_INFO; /* size: 0x0028 */

typedef struct _RTL_HASH_TABLE_ITERATOR
{
  /* 0x0000 */ struct _RTL_HASH_TABLE* Hash;
  /* 0x0008 */ struct _RTL_HASH_ENTRY* HashEntry;
  /* 0x0010 */ struct _SINGLE_LIST_ENTRY* Bucket;
} RTL_HASH_TABLE_ITERATOR, *PRTL_HASH_TABLE_ITERATOR; /* size: 0x0018 */

typedef struct _MMVAD_SHORT
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMVAD* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMVAD* LeftChild;
  /* 0x0010 */ struct _MMVAD* RightChild;
  /* 0x0018 */ unsigned __int64 StartingVpn;
  /* 0x0020 */ unsigned __int64 EndingVpn;
  union
  {
    union
    {
      /* 0x0028 */ unsigned __int64 LongFlags;
      /* 0x0028 */ struct _MMVAD_FLAGS VadFlags;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
  /* 0x0030 */ struct _EX_PUSH_LOCK PushLock;
  union
  {
    union
    {
      /* 0x0038 */ unsigned __int64 LongFlags3;
      /* 0x0038 */ struct _MMVAD_FLAGS3 VadFlags3;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u5;
} MMVAD_SHORT, *PMMVAD_SHORT; /* size: 0x0040 */

typedef struct _OBP_SYSTEM_DOS_DEVICE_STATE
{
  /* 0x0000 */ unsigned long GlobalDeviceMap;
  /* 0x0004 */ unsigned long LocalDeviceCount[26];
} OBP_SYSTEM_DOS_DEVICE_STATE, *POBP_SYSTEM_DOS_DEVICE_STATE; /* size: 0x006c */

typedef struct _OBP_SWEEP_CONTEXT
{
  /* 0x0000 */ struct _HANDLE_TABLE* HandleTable;
  /* 0x0008 */ char PreviousMode;
  /* 0x0009 */ char __PADDING__[7];
} OBP_SWEEP_CONTEXT, *POBP_SWEEP_CONTEXT; /* size: 0x0010 */

typedef struct _AWEINFO
{
  /* 0x0000 */ struct _RTL_BITMAP_EX* volatile VadPhysicalPagesBitMap;
  /* 0x0008 */ volatile unsigned __int64 VadPhysicalPages;
  /* 0x0010 */ unsigned __int64 VadPhysicalPagesLimit;
  /* 0x0018 */ struct _EX_PUSH_LOCK_CACHE_AWARE* PushLock;
  /* 0x0020 */ struct _MI_PHYSICAL_VIEW* PhysicalViewHint[256];
  /* 0x0820 */ struct _MM_AVL_TABLE AweVadRoot;
} AWEINFO, *PAWEINFO; /* size: 0x0860 */

struct WMIQSIMULTIPLE
{
  /* 0x0000 */ unsigned long QueryCount;
  /* 0x0004 */ long Padding_1044;
  /* 0x0008 */ struct WMIQSIINFO QsiInfo[1];
}; /* size: 0x0020 */

typedef struct _HVLP_FAST_HYPERCALL_INPUT_PARAMETERS
{
  /* 0x0000 */ unsigned __int64 AsUINT64[14];
  /* 0x0070 */ unsigned __int64 AsUINT8[112];
} HVLP_FAST_HYPERCALL_INPUT_PARAMETERS, *PHVLP_FAST_HYPERCALL_INPUT_PARAMETERS; /* size: 0x03f0 */

struct tagInstanceSet
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY GuidISList;
    /* 0x0000 */ struct _LIST_ENTRY FreeISList;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct CHUNKHEADER* Chunk;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long RefCount;
  /* 0x0020 */ unsigned long Signature;
  /* 0x0024 */ long Padding_1045;
  /* 0x0028 */ struct _LIST_ENTRY DSISList;
  /* 0x0038 */ struct tagGUIDENTRY* GuidEntry;
  /* 0x0040 */ struct tagDATASOURCE* DataSource;
  /* 0x0048 */ unsigned long Count;
  /* 0x004c */ unsigned long WADInstanceNameSize;
  /* 0x0050 */ unsigned long ProviderId;
  /* 0x0054 */ long Padding_1046;
  union
  {
    /* 0x0058 */ struct ISBASENAME* IsBaseName;
    /* 0x0058 */ struct ISSTATICENAMES* IsStaticNames;
  }; /* size: 0x0008 */
}; /* size: 0x0060 */

typedef struct _VER_STRINGS
{
  /* 0x0000 */ unsigned short tTag;
  /* 0x0002 */ char Padding_1047[6];
  /* 0x0008 */ unsigned short* szName;
} VER_STRINGS, *PVER_STRINGS; /* size: 0x0010 */

typedef struct _HEADLESS_RSP_POLL
{
  /* 0x0000 */ unsigned char QueuedInput;
} HEADLESS_RSP_POLL, *PHEADLESS_RSP_POLL; /* size: 0x0001 */

typedef struct _ALPC_VIEW_SEARCH_CONTEXT
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ struct _KALPC_VIEW* View;
} ALPC_VIEW_SEARCH_CONTEXT, *PALPC_VIEW_SEARCH_CONTEXT; /* size: 0x0010 */

typedef struct _ETW_WMITRACE_WORK
{
  /* 0x0000 */ unsigned long LoggerId;
  /* 0x0004 */ long Padding_1048;
  union
  {
    struct
    {
      /* 0x0008 */ char LoggerName[65];
      /* 0x0049 */ char FileName[129];
      /* 0x00ca */ char Padding_1049[2];
      /* 0x00cc */ unsigned long MaximumFileSize;
      /* 0x00d0 */ unsigned long MinBuffers;
      /* 0x00d4 */ unsigned long MaxBuffers;
      /* 0x00d8 */ unsigned long BufferSize;
      /* 0x00dc */ unsigned long Mode;
      /* 0x00e0 */ unsigned long FlushTimer;
    }; /* size: 0x00da */
    struct
    {
      /* 0x0008 */ unsigned __int64 MatchAny;
      /* 0x0010 */ unsigned __int64 MatchAll;
      /* 0x0018 */ unsigned long EnableProperty;
      /* 0x001c */ struct _GUID Guid;
      /* 0x002c */ unsigned char Level;
      /* 0x002d */ char Padding_1050[187];
      /* 0x00e8 */ long Status;
      /* 0x00ec */ long __PADDING__[1];
    }; /* size: 0x002d */
  }; /* size: 0x00da */
} ETW_WMITRACE_WORK, *PETW_WMITRACE_WORK; /* size: 0x00f0 */

typedef struct _MMPFNENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char PageLocation : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char WriteInProgress : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Modified : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char ReadInProgress : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char CacheAttribute : 2; /* bit position: 6 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0001 */ unsigned char Priority : 3; /* bit position: 0 */
    /* 0x0001 */ unsigned char Rom : 1; /* bit position: 3 */
    /* 0x0001 */ unsigned char InPageError : 1; /* bit position: 4 */
    /* 0x0001 */ unsigned char KernelStack : 1; /* bit position: 5 */
    /* 0x0001 */ unsigned char RemovalRequested : 1; /* bit position: 6 */
    /* 0x0001 */ unsigned char ParityError : 1; /* bit position: 7 */
  }; /* bitfield */
} MMPFNENTRY, *PMMPFNENTRY; /* size: 0x0002 */

typedef struct _MMPFN
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 Flink;
      /* 0x0000 */ unsigned long WsIndex;
      /* 0x0000 */ struct _KEVENT* Event;
      /* 0x0000 */ void* Next;
      /* 0x0000 */ void* volatile VolatileNext;
      /* 0x0000 */ struct _KTHREAD* KernelStackOwner;
      /* 0x0000 */ struct _SINGLE_LIST_ENTRY NextStackPfn;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  union
  {
    union
    {
      /* 0x0008 */ unsigned __int64 Blink;
      /* 0x0008 */ struct _MMPTE* ImageProtoPte;
      /* 0x0008 */ unsigned __int64 ShareCount;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
  union
  {
    /* 0x0010 */ struct _MMPTE* PteAddress;
    /* 0x0010 */ void* volatile VolatilePteAddress;
    /* 0x0010 */ volatile long Lock;
    /* 0x0010 */ unsigned __int64 PteLong;
  }; /* size: 0x0008 */
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned short ReferenceCount;
        /* 0x001a */ struct _MMPFNENTRY e1;
      }; /* size: 0x0004 */
      struct
      {
        union
        {
          /* 0x0018 */ unsigned short ReferenceCount;
          /* 0x0018 */ volatile short VolatileReferenceCount;
        }; /* size: 0x0002 */
        /* 0x001a */ unsigned short ShortFlags;
      } /* size: 0x0004 */ e2;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u3;
  /* 0x001c */ unsigned short UsedPageTableEntries;
  /* 0x001e */ unsigned char VaType;
  /* 0x001f */ unsigned char ViewCount;
  union
  {
    /* 0x0020 */ struct _MMPTE OriginalPte;
    /* 0x0020 */ volatile long AweReferenceCount;
  }; /* size: 0x0008 */
  union
  {
    struct /* bitfield */
    {
      /* 0x0028 */ unsigned __int64 PteFrame : 52; /* bit position: 0 */
      /* 0x0028 */ unsigned __int64 Unused : 3; /* bit position: 52 */
      /* 0x0028 */ unsigned __int64 PfnImageVerified : 1; /* bit position: 55 */
      /* 0x0028 */ unsigned __int64 AweAllocation : 1; /* bit position: 56 */
      /* 0x0028 */ unsigned __int64 PrototypePte : 1; /* bit position: 57 */
      /* 0x0028 */ unsigned __int64 PageColor : 6; /* bit position: 58 */
    }; /* bitfield */
  } /* size: 0x0008 */ u4;
} MMPFN, *PMMPFN; /* size: 0x0030 */

typedef struct _HEADLESS_RSP_REBOOT
{
  /* 0x0000 */ unsigned char Reboot;
} HEADLESS_RSP_REBOOT, *PHEADLESS_RSP_REBOOT; /* size: 0x0001 */

typedef struct _BCDE_INTEGER_LIST
{
  /* 0x0000 */ unsigned __int64 Value[1];
} BCDE_INTEGER_LIST, *PBCDE_INTEGER_LIST; /* size: 0x0008 */

typedef struct _ETWP_NOTIFICATION_HEADER
{
  /* 0x0000 */ enum _ETW_NOTIFICATION_TYPE NotificationType;
  /* 0x0004 */ unsigned long NotificationSize;
  /* 0x0008 */ long RefCount;
  /* 0x000c */ unsigned char ReplyRequested;
  /* 0x000d */ char Padding_1051[3];
  union
  {
    /* 0x0010 */ unsigned long ReplyIndex;
    /* 0x0010 */ unsigned long Timeout;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0014 */ unsigned long ReplyCount;
    /* 0x0014 */ unsigned long NotifyeeCount;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0018 */ unsigned __int64 ReplyHandle;
    /* 0x0018 */ void* ReplyObject;
    /* 0x0018 */ unsigned long RegIndex;
  }; /* size: 0x0008 */
  /* 0x0020 */ unsigned long TargetPID;
  /* 0x0024 */ unsigned long SourcePID;
  /* 0x0028 */ struct _GUID DestinationGuid;
  /* 0x0038 */ struct _GUID SourceGuid;
} ETWP_NOTIFICATION_HEADER, *PETWP_NOTIFICATION_HEADER; /* size: 0x0048 */

typedef struct _ETW_ENABLE_NOTIFICATION_PACKET
{
  /* 0x0000 */ struct _ETWP_NOTIFICATION_HEADER DataBlockHeader;
  /* 0x0048 */ struct _TRACE_ENABLE_INFO EnableInfo;
  /* 0x0068 */ struct _TRACE_ENABLE_CONTEXT LegacyEnableContext;
  /* 0x0070 */ unsigned long LegacyProviderEnabled;
  /* 0x0074 */ unsigned long FilterType;
} ETW_ENABLE_NOTIFICATION_PACKET, *PETW_ENABLE_NOTIFICATION_PACKET; /* size: 0x0078 */

typedef struct _ETW_DEBUGGER_DATA
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ unsigned char Version;
  /* 0x0002 */ unsigned char BhOffsetState;
  /* 0x0003 */ unsigned char BhOffsetCurrent;
  /* 0x0004 */ unsigned char BhOffsetSaved;
  /* 0x0005 */ unsigned char BhOffsetGlobalEntry;
  /* 0x0006 */ unsigned char BhOffsetRefCount;
  /* 0x0007 */ unsigned char LcOffsetBufferCount;
  /* 0x0008 */ unsigned char LcOffsetClockType;
  /* 0x0009 */ unsigned char LcOffsetLoggerId;
  /* 0x000a */ unsigned char Spare1;
  /* 0x000b */ unsigned char Spare2;
  /* 0x000c */ unsigned char LcOffsetName;
  /* 0x000d */ unsigned char LcOffsetMode;
  /* 0x000e */ unsigned char LcOffsetSize;
  /* 0x000f */ unsigned char LcOffsetBufferList;
  /* 0x0010 */ unsigned __int64 LoggerContextArray;
} ETW_DEBUGGER_DATA, *PETW_DEBUGGER_DATA; /* size: 0x0018 */

typedef struct _LKMD_CALLBACK
{
  /* 0x0000 */ struct _EX_CALLBACK Callback;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long __PADDING__[1];
} LKMD_CALLBACK, *PLKMD_CALLBACK; /* size: 0x0010 */

typedef struct _HEADLESS_RSP_GET_LINE
{
  /* 0x0000 */ unsigned char LineComplete;
  /* 0x0001 */ unsigned char Buffer[1];
} HEADLESS_RSP_GET_LINE, *PHEADLESS_RSP_GET_LINE; /* size: 0x0002 */

typedef struct _ETW_LOGGER_HANDLE
{
  /* 0x0000 */ unsigned char DereferenceAndLeave;
} ETW_LOGGER_HANDLE, *PETW_LOGGER_HANDLE; /* size: 0x0001 */

typedef struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT BlobWritingContext;
  /* 0x0058 */ void* EncodingFunction /* function */;
  /* 0x0060 */ void* MultiEncodingFunction /* function */;
} RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT, *PRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT; /* size: 0x0068 */

typedef struct _ETW_REALTIME_CONSUMER
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ void* ProcessHandle;
  /* 0x0018 */ struct _EPROCESS* ProcessObject;
  /* 0x0020 */ void* NextNotDelivered;
  /* 0x0028 */ void* RealtimeConnectContext;
  /* 0x0030 */ struct _KEVENT* DisconnectEvent;
  /* 0x0038 */ struct _KEVENT* DataAvailableEvent;
  /* 0x0040 */ unsigned long* UserBufferCount;
  /* 0x0048 */ struct _SINGLE_LIST_ENTRY* UserBufferListHead;
  /* 0x0050 */ unsigned long BuffersLost;
  /* 0x0054 */ unsigned long EmptyBuffersCount;
  /* 0x0058 */ unsigned long LoggerId;
  /* 0x005c */ unsigned char ShutDownRequested;
  /* 0x005d */ unsigned char NewBuffersLost;
  /* 0x005e */ unsigned char Disconnected;
  /* 0x005f */ char Padding_1052;
  /* 0x0060 */ struct _RTL_BITMAP ReservedBufferSpaceBitMap;
  /* 0x0070 */ unsigned char* ReservedBufferSpace;
  /* 0x0078 */ unsigned long ReservedBufferSpaceSize;
  /* 0x007c */ unsigned long UserPagesAllocated;
  /* 0x0080 */ unsigned long UserPagesReused;
  /* 0x0084 */ unsigned char Wow;
  /* 0x0085 */ char __PADDING__[3];
} ETW_REALTIME_CONSUMER, *PETW_REALTIME_CONSUMER; /* size: 0x0088 */

typedef struct _ETW_LOCKING_EVENT_ENTRY
{
  /* 0x0000 */ unsigned __int64 WaitTime;
  /* 0x0008 */ unsigned __int64 AcquiredTime;
  /* 0x0010 */ void* LockAddress;
  /* 0x0018 */ struct _PROCESSOR_NUMBER ProcNumber;
  /* 0x001c */ unsigned long LockType;
  /* 0x0020 */ unsigned long LastState;
  /* 0x0024 */ unsigned long RecursionCount;
  /* 0x0028 */ long TrackingSequence;
  /* 0x002c */ unsigned long ContentionCount;
  /* 0x0030 */ unsigned char Padding[16];
} ETW_LOCKING_EVENT_ENTRY, *PETW_LOCKING_EVENT_ENTRY; /* size: 0x0040 */

typedef struct _ETW_LOCK_HANDLE
{
  /* 0x0000 */ unsigned char OldIrql;
} ETW_LOCK_HANDLE, *PETW_LOCK_HANDLE; /* size: 0x0001 */

struct MOFRESOURCE
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY MainMRList;
    /* 0x0000 */ struct _LIST_ENTRY FreeMRList;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct CHUNKHEADER* Chunk;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long RefCount;
  /* 0x0020 */ unsigned long Signature;
  /* 0x0024 */ long Padding_1053;
  /* 0x0028 */ unsigned short* RegistryPath;
  /* 0x0030 */ unsigned short* MofResourceName;
}; /* size: 0x0038 */

typedef struct _ETW_BUFFER_HANDLE
{
  /* 0x0000 */ struct _WMI_BUFFER_HEADER* TraceBuffer;
  /* 0x0008 */ struct _EX_FAST_REF* BufferFastRef;
} ETW_BUFFER_HANDLE, *PETW_BUFFER_HANDLE; /* size: 0x0010 */

typedef struct _HEADLESS_CMD_DISPLAY_LOG
{
  /* 0x0000 */ unsigned char Paging;
} HEADLESS_CMD_DISPLAY_LOG, *PHEADLESS_CMD_DISPLAY_LOG; /* size: 0x0001 */

typedef struct _DECODE_ENTRY
{
  /* 0x0000 */ unsigned char OpCode;
  /* 0x0001 */ unsigned char Range;
  /* 0x0002 */ char Padding_1054[2];
  /* 0x0004 */ unsigned long Prefix;
  /* 0x0008 */ unsigned char ModRMReg;
  /* 0x0009 */ unsigned char ModRMMod;
  /* 0x000a */ char Padding_1055[2];
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ void* Handler /* function */;
} DECODE_ENTRY, *PDECODE_ENTRY; /* size: 0x0018 */

typedef struct _HEADLESS_CMD_ADD_LOG_ENTRY
{
  /* 0x0000 */ wchar_t String[1];
} HEADLESS_CMD_ADD_LOG_ENTRY, *PHEADLESS_CMD_ADD_LOG_ENTRY; /* size: 0x0002 */

typedef struct _CONTROL_AREA
{
  /* 0x0000 */ struct _SEGMENT* Segment;
  /* 0x0008 */ struct _LIST_ENTRY DereferenceList;
  /* 0x0018 */ unsigned __int64 NumberOfSectionReferences;
  /* 0x0020 */ unsigned __int64 NumberOfPfnReferences;
  /* 0x0028 */ unsigned __int64 NumberOfMappedViews;
  /* 0x0030 */ unsigned __int64 NumberOfUserReferences;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long LongFlags;
      /* 0x0038 */ struct _MMSECTION_FLAGS Flags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x003c */ unsigned long FlushInProgressCount;
  /* 0x0040 */ struct _EX_FAST_REF FilePointer;
  /* 0x0048 */ volatile long ControlAreaLock;
  union
  {
    /* 0x004c */ unsigned long ModifiedWriteCount;
    /* 0x004c */ unsigned long StartingFrame;
  }; /* size: 0x0004 */
  /* 0x0050 */ struct _MI_SECTION_CREATION_GATE* WaitingForDeletion;
  union
  {
    struct
    {
      union
      {
        /* 0x0058 */ unsigned long NumberOfSystemCacheViews;
        /* 0x0058 */ unsigned long ImageRelocationStartBit;
      }; /* size: 0x0004 */
      union
      {
        /* 0x005c */ volatile long WritableUserReferences;
        struct /* bitfield */
        {
          /* 0x005c */ unsigned long ImageRelocationSizeIn64k : 16; /* bit position: 0 */
          /* 0x005c */ unsigned long Unused : 14; /* bit position: 16 */
          /* 0x005c */ unsigned long BitMap64 : 1; /* bit position: 30 */
          /* 0x005c */ unsigned long ImageActive : 1; /* bit position: 31 */
        }; /* bitfield */
      }; /* size: 0x0004 */
      union
      {
        /* 0x0060 */ struct _MM_SUBSECTION_AVL_TABLE* SubsectionRoot;
        /* 0x0060 */ struct _MI_IMAGE_SECURITY_REFERENCE* SeImageStub;
      }; /* size: 0x0008 */
    } /* size: 0x0010 */ e2;
  } /* size: 0x0010 */ u2;
  /* 0x0068 */ volatile __int64 LockedPages;
  /* 0x0070 */ struct _LIST_ENTRY ViewList;
} CONTROL_AREA, *PCONTROL_AREA; /* size: 0x0080 */

typedef struct _ETW_POOLTAG_FILTER
{
  /* 0x0000 */ unsigned short Count;
  /* 0x0002 */ char Padding_1056[2];
  /* 0x0004 */ unsigned long Filters[4];
} ETW_POOLTAG_FILTER, *PETW_POOLTAG_FILTER; /* size: 0x0014 */

typedef struct _DISK_EXTENT
{
  /* 0x0000 */ unsigned long DiskNumber;
  /* 0x0004 */ long Padding_1057;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ union _LARGE_INTEGER ExtentLength;
} DISK_EXTENT, *PDISK_EXTENT; /* size: 0x0018 */

typedef struct _VOLUME_DISK_EXTENTS
{
  /* 0x0000 */ unsigned long NumberOfDiskExtents;
  /* 0x0004 */ long Padding_1058;
  /* 0x0008 */ struct _DISK_EXTENT Extents[1];
} VOLUME_DISK_EXTENTS, *PVOLUME_DISK_EXTENTS; /* size: 0x0020 */

struct IlFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Fill;
  /* 0x0028 */ unsigned __int64 ReturnAddress;
}; /* size: 0x0030 */

typedef struct _ETW_ACTIVITY_ID
{
  /* 0x0000 */ unsigned char SystemGuid[6];
  /* 0x0006 */ unsigned short Number;
  /* 0x0008 */ __int64 Count;
} ETW_ACTIVITY_ID, *PETW_ACTIVITY_ID; /* size: 0x0010 */

typedef struct _ETW_SPINLOCK_TRACE_BLOCK
{
  /* 0x0000 */ struct _ETW_SPINLOCK_ENTRY SpinLockEntry[8];
  /* 0x0100 */ unsigned char SpinLockEntryIndex;
  /* 0x0101 */ unsigned char EtwLoggingInProgress;
  /* 0x0102 */ char Padding_1059[2];
  /* 0x0104 */ unsigned long NestingOverflowCount;
  /* 0x0108 */ unsigned long SpinLockMismatchCount;
  /* 0x010c */ long __PADDING__[1];
} ETW_SPINLOCK_TRACE_BLOCK, *PETW_SPINLOCK_TRACE_BLOCK; /* size: 0x0110 */

typedef struct _ETW_TRACING_BLOCK
{
  /* 0x0000 */ unsigned long ProcessorNumber;
  /* 0x0004 */ long Padding_1060[15];
  /* 0x0040 */ struct _EX_FAST_REF ProcessorBuffers[64];
  /* 0x0240 */ unsigned __int64 EventsLoggedCount[64];
  /* 0x0440 */ struct _ETW_ACTIVITY_ID ActivityIdSeed;
  /* 0x0450 */ struct _ETW_STACK_TRACE_BLOCK StackTraceBlock;
  /* 0x0a40 */ struct _ETW_SPINLOCK_TRACE_BLOCK SpinLockTraceBlock;
  /* 0x0b50 */ union _LARGE_INTEGER LogfileBytesWritten;
  /* 0x0b58 */ unsigned char FlushContextSwapCache[4];
  /* 0x0b5c */ long Padding_1061;
  /* 0x0b60 */ struct _CONTEXTSWAP_CACHE* ContextSwapCache[4];
} ETW_TRACING_BLOCK, *PETW_TRACING_BLOCK; /* size: 0x0b80 */

typedef struct _TRIPLE_LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Flink[3];
  /* 0x000c */ unsigned long Blink;
} TRIPLE_LIST_ENTRY32, *PTRIPLE_LIST_ENTRY32; /* size: 0x0010 */

typedef struct _TRIPLE_LIST32
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit0 : 1; /* bit position: 0 */
        /* 0x0000 */ volatile unsigned long ActiveListBit0 : 1; /* bit position: 1 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit0 : 1; /* bit position: 2 */
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit1 : 1; /* bit position: 3 */
        /* 0x0000 */ volatile unsigned long ActiveListBit1 : 1; /* bit position: 4 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit1 : 1; /* bit position: 5 */
        /* 0x0000 */ volatile unsigned long ReaderDidTheSwitch : 1; /* bit position: 6 */
        /* 0x0000 */ volatile unsigned long Reserved : 22; /* bit position: 7 */
        /* 0x0000 */ volatile unsigned long ReaderBusy : 1; /* bit position: 29 */
        /* 0x0000 */ volatile unsigned long UpdateReady : 1; /* bit position: 30 */
        /* 0x0000 */ volatile unsigned long OverflowUpdateReady : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0004 */ ControlBits;
    /* 0x0000 */ volatile long CombinedControlBits;
  }; /* size: 0x0004 */
  /* 0x0004 */ struct _TRIPLE_LIST_ENTRY32 Head;
  /* 0x0014 */ unsigned long Tail[3];
  /* 0x0020 */ unsigned long RemoveCallback;
  /* 0x0024 */ unsigned long RemoveContext;
  /* 0x0028 */ unsigned long PendingHead;
  /* 0x002c */ unsigned long PendingTailPtr;
  /* 0x0030 */ unsigned long PendingListIndex;
} TRIPLE_LIST32, *PTRIPLE_LIST32; /* size: 0x0034 */

typedef struct _MI_READ_LIST_ENTRY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MMPTE* PrototypePte;
      /* 0x0000 */ struct _RLETYPE e1;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MI_READ_LIST_ENTRY, *PMI_READ_LIST_ENTRY; /* size: 0x0008 */

typedef struct _MI_READ_LIST
{
  /* 0x0000 */ struct _MI_READ_LIST* NextReadList;
  /* 0x0008 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0010 */ struct _MSUBSECTION* FirstSubsection;
  /* 0x0018 */ struct _LIST_ENTRY SubsectionList;
  /* 0x0028 */ unsigned long DesiredPriority;
  /* 0x002c */ unsigned long MaxRepurposePriority;
  /* 0x0030 */ unsigned long NumberOfEntries;
  /* 0x0034 */ long Padding_1062;
  /* 0x0038 */ struct _MI_READ_LIST_ENTRY* FirstRleInRun;
  /* 0x0040 */ struct _SINGLE_LIST_ENTRY InPageSupportHead;
  /* 0x0048 */ struct _MI_READ_LIST_ENTRY List[1];
} MI_READ_LIST, *PMI_READ_LIST; /* size: 0x0050 */

typedef struct _ETW_LOGFILE_HEADER
{
  /* 0x0000 */ struct _WMI_BUFFER_HEADER BufferHeader;
  /* 0x0048 */ struct _SYSTEM_TRACE_HEADER SystemHeader;
  /* 0x0068 */ struct _TRACE_LOGFILE_HEADER TraceLogfileHeader;
} ETW_LOGFILE_HEADER, *PETW_LOGFILE_HEADER; /* size: 0x0180 */

typedef struct _MI_SUBSECTION_REFS
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long Padding_1063;
  /* 0x0018 */ struct _MSUBSECTION* List[5];
} MI_SUBSECTION_REFS, *PMI_SUBSECTION_REFS; /* size: 0x0040 */

typedef struct _KI_UPDATE_NUMBER_PROCESSORS_CONTEXT
{
  /* 0x0000 */ unsigned long Number;
  /* 0x0004 */ unsigned long Worker;
  /* 0x0008 */ volatile long Running;
  /* 0x000c */ volatile long Spinning;
  /* 0x0010 */ volatile unsigned long StopSpinning;
} KI_UPDATE_NUMBER_PROCESSORS_CONTEXT, *PKI_UPDATE_NUMBER_PROCESSORS_CONTEXT; /* size: 0x0014 */

typedef struct _MTRR_RANGE
{
  /* 0x0000 */ struct _MTRR_VARIABLE_BASE Base;
  /* 0x0008 */ struct _MTRR_VARIABLE_MASK Mask;
} MTRR_RANGE, *PMTRR_RANGE; /* size: 0x0010 */

struct WMIOPENGUIDBLOCK32
{
  /* 0x0000 */ unsigned int ObjectAttributes;
  /* 0x0004 */ unsigned long DesiredAccess;
  /* 0x0008 */ union HANDLE3264 Handle;
}; /* size: 0x0010 */

typedef struct _WDI_SEM_SCENARIO_TABLE
{
  /* 0x0000 */ struct _WDIP_SEM_SCENARIO_INFO* Scenarios[64];
  /* 0x0200 */ unsigned long TableSize;
  /* 0x0204 */ long __PADDING__[1];
} WDI_SEM_SCENARIO_TABLE, *PWDI_SEM_SCENARIO_TABLE; /* size: 0x0208 */

struct TUNNEL_NODE
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS CacheLinks;
  /* 0x0018 */ struct _LIST_ENTRY ListLinks;
  /* 0x0028 */ union _LARGE_INTEGER CreateTime;
  /* 0x0030 */ unsigned __int64 DirKey;
  /* 0x0038 */ unsigned long Flags;
  /* 0x003c */ long Padding_1064;
  /* 0x0040 */ struct _UNICODE_STRING LongName;
  /* 0x0050 */ struct _UNICODE_STRING ShortName;
  /* 0x0060 */ void* TunnelData;
  /* 0x0068 */ unsigned long TunnelDataLength;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

struct SHUTDOWN_WORK_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ enum _WORK_QUEUE_TYPE QueueType;
  /* 0x0024 */ long Padding_1065;
  /* 0x0028 */ struct _ETHREAD* PrevThread;
}; /* size: 0x0030 */

typedef struct _ETW_REG_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY RegList;
  /* 0x0010 */ struct _ETW_GUID_ENTRY* GuidEntry;
  /* 0x0018 */ unsigned short Index;
  /* 0x001a */ unsigned short Flags;
  /* 0x001c */ unsigned char EnableMask;
  /* 0x001d */ char Padding_1066[3];
  union
  {
    /* 0x0020 */ unsigned long SessionId;
    /* 0x0020 */ struct _ETW_REPLY_QUEUE* ReplyQueue;
    /* 0x0020 */ struct _ETW_REG_ENTRY* ReplySlot[4];
  }; /* size: 0x0020 */
  union
  {
    /* 0x0040 */ struct _EPROCESS* Process;
    /* 0x0040 */ void* Callback;
  }; /* size: 0x0008 */
  /* 0x0048 */ void* CallbackContext;
} ETW_REG_ENTRY, *PETW_REG_ENTRY; /* size: 0x0050 */

typedef struct _MI_SECTION_SLUSH
{
  /* 0x0000 */ unsigned long SharedSubsections;
  /* 0x0004 */ unsigned long SharedPtes;
  /* 0x0008 */ unsigned long AdditionalBasePtes;
} MI_SECTION_SLUSH, *PMI_SECTION_SLUSH; /* size: 0x000c */

typedef struct _FSRTL_FLTMGR_CALLS
{
  /* 0x0000 */ void* FltMgrEcpCleanupCallback /* function */;
} FSRTL_FLTMGR_CALLS, *PFSRTL_FLTMGR_CALLS; /* size: 0x0008 */

typedef struct _ETW_GUID_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY GuidList;
  /* 0x0010 */ volatile long RefCount;
  /* 0x0014 */ struct _GUID Guid;
  /* 0x0024 */ long Padding_1067;
  /* 0x0028 */ struct _LIST_ENTRY RegListHead;
  /* 0x0038 */ void* SecurityDescriptor;
  union
  {
    /* 0x0040 */ struct _ETW_LAST_ENABLE_INFO LastEnable;
    /* 0x0040 */ unsigned __int64 MatchId;
  }; /* size: 0x0010 */
  /* 0x0050 */ struct _TRACE_ENABLE_INFO ProviderEnableInfo;
  /* 0x0070 */ struct _TRACE_ENABLE_INFO EnableInfo[8];
  /* 0x0170 */ struct _EVENT_FILTER_HEADER* FilterData[8];
} ETW_GUID_ENTRY, *PETW_GUID_ENTRY; /* size: 0x01b0 */

typedef struct _EVENT_EXTENDED_DATA_TS_ID
{
  /* 0x0000 */ struct _ETWP_HEADER_EXTENDED_DATA_ITEM ExtendedItem;
  /* 0x0008 */ struct _EVENT_EXTENDED_ITEM_TS_ID ItemTsId;
  /* 0x000c */ unsigned long Padding;
} EVENT_EXTENDED_DATA_TS_ID, *PEVENT_EXTENDED_DATA_TS_ID; /* size: 0x0010 */

typedef struct _ETW_ENABLE_FLAG_MAP
{
  /* 0x0000 */ unsigned long Flag;
  /* 0x0004 */ unsigned long Group;
} ETW_ENABLE_FLAG_MAP, *PETW_ENABLE_FLAG_MAP; /* size: 0x0008 */

typedef struct _EVENT_EXTENDED_DATA_TRANSFER
{
  /* 0x0000 */ struct _ETWP_HEADER_EXTENDED_DATA_ITEM ExtendedItem;
  /* 0x0008 */ struct _EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID ItemRelatedActivityId;
} EVENT_EXTENDED_DATA_TRANSFER, *PEVENT_EXTENDED_DATA_TRANSFER; /* size: 0x0018 */

typedef struct _PHARLAP_CONFIG
{
  /* 0x0000 */ unsigned char uchCopyRight[50];
  /* 0x0032 */ unsigned short usType;
  /* 0x0034 */ unsigned short usRsv1;
  /* 0x0036 */ unsigned short usRsv2;
  /* 0x0038 */ unsigned short usSign;
} PHARLAP_CONFIG, *PPHARLAP_CONFIG; /* size: 0x003a */

typedef struct _ETW_PROVIDER_REGISTRATION_PACKET
{
  /* 0x0000 */ struct _GUID ProviderId;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ unsigned long RegIndex;
  /* 0x0018 */ unsigned __int64 KmRegHandle;
  /* 0x0020 */ unsigned __int64 Spare0;
  /* 0x0028 */ struct _ETW_ENABLE_NOTIFICATION_PACKET EnablePacket;
} ETW_PROVIDER_REGISTRATION_PACKET, *PETW_PROVIDER_REGISTRATION_PACKET; /* size: 0x00a0 */

typedef struct _HEADLESS_CMD_SEND_BLUE_SCREEN_DATA
{
  /* 0x0000 */ unsigned long BugcheckCode;
} HEADLESS_CMD_SEND_BLUE_SCREEN_DATA, *PHEADLESS_CMD_SEND_BLUE_SCREEN_DATA; /* size: 0x0004 */

typedef struct _ETW_REALTIME_DISCONNECT_CONTEXT
{
  /* 0x0000 */ unsigned long Handle;
  /* 0x0004 */ unsigned long ReservedUlong;
} ETW_REALTIME_DISCONNECT_CONTEXT, *PETW_REALTIME_DISCONNECT_CONTEXT; /* size: 0x0008 */

struct tagLANGANDCODEPAGE
{
  /* 0x0000 */ unsigned short wLanguage;
  /* 0x0002 */ unsigned short wCodePage;
}; /* size: 0x0004 */

typedef struct _ETW_QUEUE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _ETWP_NOTIFICATION_HEADER* DataBlock;
  /* 0x0018 */ struct _ETW_REG_ENTRY* RegEntry;
  /* 0x0020 */ unsigned long RegIndex;
  /* 0x0024 */ unsigned long ReplyIndex;
} ETW_QUEUE_ENTRY, *PETW_QUEUE_ENTRY; /* size: 0x0028 */

typedef struct _HAL_VERIFIER_BUFFER
{
  /* 0x0000 */ unsigned short PrePadBytes;
  /* 0x0002 */ unsigned short PostPadBytes;
  /* 0x0004 */ unsigned long RealLength;
  /* 0x0008 */ unsigned long AdvertisedLength;
  /* 0x000c */ long Padding_1068;
  /* 0x0010 */ void* RealStartAddress;
  /* 0x0018 */ void* AdvertisedStartAddress;
  /* 0x0020 */ union _LARGE_INTEGER RealLogicalStartAddress;
  /* 0x0028 */ void* AllocatorAddress;
  /* 0x0030 */ struct _LIST_ENTRY ListEntry;
} HAL_VERIFIER_BUFFER, *PHAL_VERIFIER_BUFFER; /* size: 0x0040 */

typedef struct _ETW_DATA_SOURCE
{
  /* 0x0000 */ struct _EPROCESS* Process;
  /* 0x0008 */ struct _KSEMAPHORE Semaphore;
  /* 0x0028 */ struct _EX_PUSH_LOCK PushLock;
  /* 0x0030 */ struct _LIST_ENTRY NotificationQueue;
  /* 0x0040 */ unsigned long NotificationCount;
  /* 0x0044 */ unsigned long DeferredWaitCount;
  /* 0x0048 */ unsigned char ThreadInjected;
  /* 0x0049 */ char __PADDING__[7];
} ETW_DATA_SOURCE, *PETW_DATA_SOURCE; /* size: 0x0050 */

typedef struct _TAG_INFO
{
  /* 0x0000 */ unsigned short tWhich;
  /* 0x0002 */ char Padding_1069[6];
  /* 0x0008 */ unsigned short* szName;
} TAG_INFO, *PTAG_INFO; /* size: 0x0010 */

typedef struct _ETW_RECEIVE_REPLY
{
  /* 0x0000 */ unsigned long Handle;
  /* 0x0004 */ unsigned long Timeout;
} ETW_RECEIVE_REPLY, *PETW_RECEIVE_REPLY; /* size: 0x0008 */

typedef struct _HHIVE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_1070;
  /* 0x0008 */ void* GetCellRoutine /* function */;
  /* 0x0010 */ void* ReleaseCellRoutine /* function */;
  /* 0x0018 */ void* Allocate /* function */;
  /* 0x0020 */ void* Free /* function */;
  /* 0x0028 */ void* FileSetSize /* function */;
  /* 0x0030 */ void* FileWrite /* function */;
  /* 0x0038 */ void* FileRead /* function */;
  /* 0x0040 */ void* FileFlush /* function */;
  /* 0x0048 */ void* HiveLoadFailure;
  /* 0x0050 */ struct _HBASE_BLOCK* BaseBlock;
  /* 0x0058 */ struct _RTL_BITMAP DirtyVector;
  /* 0x0068 */ unsigned long DirtyCount;
  /* 0x006c */ unsigned long DirtyAlloc;
  /* 0x0070 */ unsigned long BaseBlockAlloc;
  /* 0x0074 */ unsigned long Cluster;
  /* 0x0078 */ unsigned char Flat;
  /* 0x0079 */ unsigned char ReadOnly;
  /* 0x007a */ unsigned char DirtyFlag;
  /* 0x007b */ char Padding_1071;
  /* 0x007c */ unsigned long HvBinHeadersUse;
  /* 0x0080 */ unsigned long HvFreeCellsUse;
  /* 0x0084 */ unsigned long HvUsedCellsUse;
  /* 0x0088 */ unsigned long CmUsedCellsUse;
  /* 0x008c */ unsigned long HiveFlags;
  /* 0x0090 */ unsigned long CurrentLog;
  /* 0x0094 */ unsigned long LogSize[2];
  /* 0x009c */ unsigned long RefreshCount;
  /* 0x00a0 */ unsigned long StorageTypeCount;
  /* 0x00a4 */ unsigned long Version;
  /* 0x00a8 */ struct _DUAL Storage[2];
} HHIVE, *PHHIVE; /* size: 0x0598 */

typedef struct _EX_WORKER_FACTORY
{
  /* 0x0000 */ struct _EX_WFC* Context;
  /* 0x0008 */ union _LARGE_INTEGER Timeout;
  /* 0x0010 */ union _LARGE_INTEGER RetryTimeout;
  /* 0x0018 */ union _LARGE_INTEGER IdleTimeout;
  /* 0x0020 */ struct _KEVENT PauseEvent;
  /* 0x0038 */ __int64 InfiniteWaitGoal;
  /* 0x0040 */ unsigned long MinWorkerCount;
  /* 0x0044 */ unsigned long MaxWorkerCount;
  /* 0x0048 */ unsigned long AvailableWorkerCount;
  /* 0x004c */ unsigned long TotalWorkerCount;
  /* 0x0050 */ unsigned __int64 StackReserve;
  /* 0x0058 */ unsigned __int64 StackCommit;
  /* 0x0060 */ void* StartRoutine /* function */;
  /* 0x0068 */ void* StartParameter;
  /* 0x0070 */ unsigned char QueuedToExWorker;
  /* 0x0071 */ unsigned char MayCreate;
  /* 0x0072 */ unsigned char CreateInProgress;
  /* 0x0073 */ unsigned char HasBoundObjects;
  /* 0x0074 */ long LastCreationStatus;
  /* 0x0078 */ void* WorkerProcessHandle;
  /* 0x0080 */ struct _EPROCESS* WorkerProcess;
  /* 0x0088 */ struct _EX_PUSH_LOCK PendingWorkerLock;
  /* 0x0090 */ unsigned long PendingWorkerCount;
  /* 0x0094 */ long Padding_1072[3];
  /* 0x00a0 */ struct _SLIST_ENTRY ThreadCreationLinks;
} EX_WORKER_FACTORY, *PEX_WORKER_FACTORY; /* size: 0x00b0 */

typedef struct _section
{
  /* 0x0000 */ struct _section* pNext;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ struct _line* pLine;
  /* 0x0018 */ unsigned char Allocated;
  /* 0x0019 */ char __PADDING__[7];
} section, *Psection; /* size: 0x0020 */

typedef struct _IOP_POOL
{
  /* 0x0000 */ unsigned char* PoolStart;
  /* 0x0008 */ unsigned long PoolSize;
  /* 0x000c */ long __PADDING__[1];
} IOP_POOL, *PIOP_POOL; /* size: 0x0010 */

struct SMBIOS_EVENTLOG_INFO
{
  /* 0x0000 */ unsigned short LogTypeDescLength;
  /* 0x0002 */ unsigned char LogHeaderDescExists;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned short LogAreaLength;
  /* 0x0006 */ unsigned short LogHeaderStart;
  /* 0x0008 */ unsigned short LogDataStart;
  /* 0x000a */ unsigned char AccessMethod;
  /* 0x000b */ unsigned char LogStatus;
  /* 0x000c */ unsigned long LogChangeToken;
  /* 0x0010 */ unsigned long AccessMethodAddress;
  /* 0x0014 */ unsigned char LogHeaderFormat;
  /* 0x0015 */ unsigned char NumberLogTypeDesc;
  /* 0x0016 */ unsigned char LengthEachLogTypeDesc;
  /* 0x0017 */ unsigned char VariableData[1];
}; /* size: 0x0018 */

typedef struct _MI_STACK_STEAL
{
  /* 0x0000 */ unsigned __int64 OldPageIndex;
  /* 0x0008 */ unsigned __int64 NewPageIndex;
  /* 0x0010 */ struct _MMPTE* TargetPte;
  /* 0x0018 */ struct _KTHREAD* InitiatingThread;
  /* 0x0020 */ long Status;
  /* 0x0024 */ long Padding_1073;
  /* 0x0028 */ void* VaToFlush;
} MI_STACK_STEAL, *PMI_STACK_STEAL; /* size: 0x0030 */

typedef struct _NOTIFY_ENTRY_HEADER
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _IO_NOTIFICATION_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ unsigned long SessionId;
  /* 0x0018 */ void* SessionHandle;
  /* 0x0020 */ void* CallbackRoutine /* function */;
  /* 0x0028 */ void* Context;
  /* 0x0030 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0038 */ unsigned short RefCount;
  /* 0x003a */ unsigned char Unregistered;
  /* 0x003b */ char Padding_1074[5];
  /* 0x0040 */ struct _KGUARDED_MUTEX* Lock;
  /* 0x0048 */ struct _ERESOURCE* EntryLock;
} NOTIFY_ENTRY_HEADER, *PNOTIFY_ENTRY_HEADER; /* size: 0x0050 */

struct CMP_OFFSET_ARRAY
{
  /* 0x0000 */ unsigned long FileOffset;
  /* 0x0004 */ long Padding_1075;
  /* 0x0008 */ void* DataBuffer;
  /* 0x0010 */ unsigned long DataLength;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _RTL_RANGE
{
  /* 0x0000 */ unsigned __int64 Start;
  /* 0x0008 */ unsigned __int64 End;
  /* 0x0010 */ void* UserData;
  /* 0x0018 */ void* Owner;
  /* 0x0020 */ unsigned char Attributes;
  /* 0x0021 */ unsigned char Flags;
  /* 0x0022 */ char __PADDING__[6];
} RTL_RANGE, *PRTL_RANGE; /* size: 0x0028 */

typedef union _MI_FLAGS
{
  union
  {
    /* 0x0000 */ long EntireFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long VerifierEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long KernelVerifierEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long LargePageKernel : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long StopOn4d : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long CheckLoader : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long InitializationPhase : 2; /* bit position: 5 */
      /* 0x0000 */ unsigned long PageKernelStacks : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long CheckZeroPages : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long IncoherentCPUCache : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long ProcessorPrewalks : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long ProcessorPostwalks : 1; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_FLAGS, *PMI_FLAGS; /* size: 0x0004 */

typedef struct _SM_STRMGR_DBG_DELAY_TIME
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DelayPercent : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long DelayMs : 24; /* bit position: 8 */
  }; /* bitfield */
} SM_STRMGR_DBG_DELAY_TIME, *PSM_STRMGR_DBG_DELAY_TIME; /* size: 0x0004 */

typedef struct _HBASE_BLOCK
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Sequence1;
  /* 0x0008 */ unsigned long Sequence2;
  /* 0x000c */ union _LARGE_INTEGER TimeStamp;
  /* 0x0014 */ unsigned long Major;
  /* 0x0018 */ unsigned long Minor;
  /* 0x001c */ unsigned long Type;
  /* 0x0020 */ unsigned long Format;
  /* 0x0024 */ unsigned long RootCell;
  /* 0x0028 */ unsigned long Length;
  /* 0x002c */ unsigned long Cluster;
  /* 0x0030 */ unsigned char FileName[64];
  /* 0x0070 */ struct _GUID RmId;
  /* 0x0080 */ struct _GUID LogId;
  /* 0x0090 */ unsigned long Flags;
  /* 0x0094 */ struct _GUID TmId;
  /* 0x00a4 */ unsigned long GuidSignature;
  /* 0x00a8 */ unsigned long Reserved1[85];
  /* 0x01fc */ unsigned long CheckSum;
  /* 0x0200 */ unsigned long Reserved2[882];
  /* 0x0fc8 */ struct _GUID ThawTmId;
  /* 0x0fd8 */ struct _GUID ThawRmId;
  /* 0x0fe8 */ struct _GUID ThawLogId;
  /* 0x0ff8 */ unsigned long BootType;
  /* 0x0ffc */ unsigned long BootRecover;
} HBASE_BLOCK, *PHBASE_BLOCK; /* size: 0x1000 */

typedef struct _WHEAP_STATUS
{
  /* 0x0000 */ unsigned long ErrorCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long CouldNotAllocErrSrcBuffer : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long PshedWantsTooManyErrSrcs : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long PshedDidNotReturnBuffTooSmall : 1; /* bit position: 2 */
    /* 0x0004 */ unsigned long FailedToAllocErrSrcTable : 1; /* bit position: 3 */
    /* 0x0004 */ unsigned long FailedToAllocWheaInfoBlocks : 1; /* bit position: 4 */
    /* 0x0004 */ unsigned long FailedToGetErrorSourcesFromPshed : 1; /* bit position: 5 */
    /* 0x0004 */ unsigned long Reserved : 26; /* bit position: 6 */
  }; /* bitfield */
  /* 0x0008 */ unsigned long Info;
} WHEAP_STATUS, *PWHEAP_STATUS; /* size: 0x000c */

typedef struct _PNP_PROVIDER_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DEVICE_OBJECT* ProviderPdo;
  /* 0x0018 */ unsigned char Satisfied;
  /* 0x0019 */ char __PADDING__[7];
} PNP_PROVIDER_INFO, *PPNP_PROVIDER_INFO; /* size: 0x0020 */

typedef struct _SMC_PERSIST_STORE_INFO
{
  /* 0x0000 */ unsigned long RegionIndex;
  /* 0x0004 */ unsigned long RegionCount;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long StoreMgrType : 2; /* bit position: 0 */
    /* 0x0008 */ unsigned long Spare : 30; /* bit position: 2 */
  }; /* bitfield */
} SMC_PERSIST_STORE_INFO, *PSMC_PERSIST_STORE_INFO; /* size: 0x000c */

typedef struct _CM_VIEW_OF_FILE
{
  /* 0x0000 */ struct _LIST_ENTRY MappedViewLinks;
  /* 0x0010 */ struct _LIST_ENTRY PinnedViewLinks;
  /* 0x0020 */ struct _LIST_ENTRY FlushedViewLinks;
  /* 0x0030 */ struct _CMHIVE* CmHive;
  /* 0x0038 */ void* Bcb;
  /* 0x0040 */ void* ViewAddress;
  /* 0x0048 */ unsigned long FileOffset;
  /* 0x004c */ unsigned long Size;
  /* 0x0050 */ unsigned long UseCount;
  /* 0x0054 */ long __PADDING__[1];
} CM_VIEW_OF_FILE, *PCM_VIEW_OF_FILE; /* size: 0x0058 */

typedef struct _CM_WORKITEM
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long Private;
  /* 0x0014 */ long Padding_1076;
  /* 0x0018 */ void* WorkerRoutine /* function */;
  /* 0x0020 */ void* Parameter;
} CM_WORKITEM, *PCM_WORKITEM; /* size: 0x0028 */

typedef struct _CMHIVE
{
  /* 0x0000 */ struct _HHIVE Hive;
  /* 0x0598 */ void* FileHandles[6];
  /* 0x05c8 */ struct _LIST_ENTRY NotifyList;
  /* 0x05d8 */ struct _LIST_ENTRY HiveList;
  /* 0x05e8 */ struct _LIST_ENTRY PreloadedHiveList;
  /* 0x05f8 */ struct _EX_RUNDOWN_REF HiveRundown;
  /* 0x0600 */ struct _LIST_ENTRY ParseCacheEntries;
  /* 0x0610 */ struct _CM_KEY_HASH_TABLE_ENTRY* KcbCacheTable;
  /* 0x0618 */ unsigned long KcbCacheTableSize;
  /* 0x061c */ unsigned long Identity;
  /* 0x0620 */ struct _FAST_MUTEX* HiveLock;
  /* 0x0628 */ struct _EX_PUSH_LOCK ViewLock;
  /* 0x0630 */ struct _KTHREAD* ViewLockOwner;
  /* 0x0638 */ unsigned long ViewLockLast;
  /* 0x063c */ unsigned long ViewUnLockLast;
  /* 0x0640 */ struct _FAST_MUTEX* WriterLock;
  /* 0x0648 */ struct _ERESOURCE* FlusherLock;
  /* 0x0650 */ struct _RTL_BITMAP FlushDirtyVector;
  /* 0x0660 */ struct CMP_OFFSET_ARRAY* FlushOffsetArray;
  /* 0x0668 */ unsigned long FlushOffsetArrayCount;
  /* 0x066c */ unsigned long FlushHiveTruncated;
  /* 0x0670 */ struct _FAST_MUTEX* FlushLock2;
  /* 0x0678 */ struct _EX_PUSH_LOCK SecurityLock;
  /* 0x0680 */ struct _LIST_ENTRY MappedViewList;
  /* 0x0690 */ struct _LIST_ENTRY PinnedViewList;
  /* 0x06a0 */ struct _LIST_ENTRY FlushedViewList;
  /* 0x06b0 */ unsigned short MappedViewCount;
  /* 0x06b2 */ unsigned short PinnedViewCount;
  /* 0x06b4 */ unsigned long UseCount;
  /* 0x06b8 */ unsigned long ViewsPerHive;
  /* 0x06bc */ long Padding_1077;
  /* 0x06c0 */ struct _FILE_OBJECT* FileObject;
  /* 0x06c8 */ unsigned long LastShrinkHiveSize;
  /* 0x06cc */ long Padding_1078;
  /* 0x06d0 */ union _LARGE_INTEGER ActualFileSize;
  /* 0x06d8 */ struct _UNICODE_STRING FileFullPath;
  /* 0x06e8 */ struct _UNICODE_STRING FileUserName;
  /* 0x06f8 */ struct _UNICODE_STRING HiveRootPath;
  /* 0x0708 */ unsigned long SecurityCount;
  /* 0x070c */ unsigned long SecurityCacheSize;
  /* 0x0710 */ long SecurityHitHint;
  /* 0x0714 */ long Padding_1079;
  /* 0x0718 */ struct _CM_KEY_SECURITY_CACHE_ENTRY* SecurityCache;
  /* 0x0720 */ struct _LIST_ENTRY SecurityHash[64];
  /* 0x0b20 */ unsigned long UnloadEventCount;
  /* 0x0b24 */ long Padding_1080;
  /* 0x0b28 */ struct _KEVENT** UnloadEventArray;
  /* 0x0b30 */ struct _CM_KEY_CONTROL_BLOCK* RootKcb;
  /* 0x0b38 */ unsigned char Frozen;
  /* 0x0b39 */ char Padding_1081[7];
  /* 0x0b40 */ struct _CM_WORKITEM* UnloadWorkItem;
  /* 0x0b48 */ struct _CM_WORKITEM UnloadWorkItemHolder;
  /* 0x0b70 */ unsigned char GrowOnlyMode;
  /* 0x0b71 */ char Padding_1082[3];
  /* 0x0b74 */ unsigned long GrowOffset;
  /* 0x0b78 */ struct _LIST_ENTRY KcbConvertListHead;
  /* 0x0b88 */ struct _LIST_ENTRY KnodeConvertListHead;
  /* 0x0b98 */ struct _CM_CELL_REMAP_BLOCK* CellRemapArray;
  /* 0x0ba0 */ unsigned long Flags;
  /* 0x0ba4 */ long Padding_1083;
  /* 0x0ba8 */ struct _LIST_ENTRY TrustClassEntry;
  /* 0x0bb8 */ unsigned long FlushCount;
  /* 0x0bbc */ long Padding_1084;
  /* 0x0bc0 */ struct _CM_RM* CmRm;
  /* 0x0bc8 */ unsigned long CmRmInitFailPoint;
  /* 0x0bcc */ long CmRmInitFailStatus;
  /* 0x0bd0 */ struct _KTHREAD* CreatorOwner;
  /* 0x0bd8 */ struct _KTHREAD* RundownThread;
} CMHIVE, *PCMHIVE; /* size: 0x0be0 */

typedef struct _CRASHDMP_KERNEL_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING* BootDeviceName;
  /* 0x0008 */ struct _PHYSICAL_MEMORY_DESCRIPTOR* PhysicalMemoryBlock;
  /* 0x0010 */ void* LoadRoutine /* function */;
  /* 0x0018 */ void* UnloadRoutine /* function */;
} CRASHDMP_KERNEL_DATA, *PCRASHDMP_KERNEL_DATA; /* size: 0x0020 */

typedef struct _SMKM_EVENT_DESCRIPTOR
{
  /* 0x0000 */ struct _EVENT_DATA_DESCRIPTOR* EventData;
  /* 0x0008 */ char* DataBuffer;
  /* 0x0010 */ unsigned long DataCount;
  /* 0x0014 */ unsigned long DataCountMax;
  /* 0x0018 */ unsigned long BufferUsed;
  /* 0x001c */ unsigned long BufferSize;
} SMKM_EVENT_DESCRIPTOR, *PSMKM_EVENT_DESCRIPTOR; /* size: 0x0020 */

typedef struct _CM_KEY_HASH_TABLE_ENTRY
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ struct _KTHREAD* Owner;
  /* 0x0010 */ struct _CM_KEY_HASH* Entry;
} CM_KEY_HASH_TABLE_ENTRY, *PCM_KEY_HASH_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _RTL_RANGE_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Count;
  /* 0x0018 */ unsigned long Stamp;
  /* 0x001c */ long __PADDING__[1];
} RTL_RANGE_LIST, *PRTL_RANGE_LIST; /* size: 0x0020 */

typedef struct _PORT_ARBITER_EXTENSION
{
  /* 0x0000 */ struct _RTL_RANGE_LIST* Aliases;
  /* 0x0008 */ struct _RTL_RANGE_LIST* PossibleAliases;
  /* 0x0010 */ struct _RTL_RANGE_LIST RangeLists[2];
} PORT_ARBITER_EXTENSION, *PPORT_ARBITER_EXTENSION; /* size: 0x0050 */

typedef struct _CM_KEY_SECURITY_CACHE_ENTRY
{
  /* 0x0000 */ unsigned long Cell;
  /* 0x0004 */ long Padding_1085;
  /* 0x0008 */ struct _CM_KEY_SECURITY_CACHE* CachedSecurity;
} CM_KEY_SECURITY_CACHE_ENTRY, *PCM_KEY_SECURITY_CACHE_ENTRY; /* size: 0x0010 */

typedef struct _BCDE_INTEGER
{
  /* 0x0000 */ unsigned __int64 Value;
} BCDE_INTEGER, *PBCDE_INTEGER; /* size: 0x0008 */

typedef struct _CM_KEY_SECURITY_CACHE
{
  /* 0x0000 */ unsigned long Cell;
  /* 0x0004 */ unsigned long ConvKey;
  /* 0x0008 */ struct _LIST_ENTRY List;
  /* 0x0018 */ unsigned long DescriptorLength;
  /* 0x001c */ unsigned long RealRefCount;
  /* 0x0020 */ struct _SECURITY_DESCRIPTOR_RELATIVE Descriptor;
  /* 0x0034 */ long __PADDING__[1];
} CM_KEY_SECURITY_CACHE, *PCM_KEY_SECURITY_CACHE; /* size: 0x0038 */

typedef struct _CACHED_CHILD_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1086;
  union
  {
    /* 0x0008 */ unsigned __int64 ValueList;
    /* 0x0008 */ struct _CM_KEY_CONTROL_BLOCK* RealKcb;
  }; /* size: 0x0008 */
} CACHED_CHILD_LIST, *PCACHED_CHILD_LIST; /* size: 0x0010 */

typedef struct _CM_KEY_CONTROL_BLOCK
{
  /* 0x0000 */ unsigned long RefCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long ExtFlags : 16; /* bit position: 0 */
    /* 0x0004 */ unsigned long PrivateAlloc : 1; /* bit position: 16 */
    /* 0x0004 */ unsigned long Delete : 1; /* bit position: 17 */
    /* 0x0004 */ unsigned long HiveUnloaded : 1; /* bit position: 18 */
    /* 0x0004 */ unsigned long Decommissioned : 1; /* bit position: 19 */
    /* 0x0004 */ unsigned long LockTablePresent : 1; /* bit position: 20 */
    /* 0x0004 */ unsigned long TotalLevels : 10; /* bit position: 21 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DelayedDeref : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long DelayedClose : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long Parking : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x000c */ long Padding_1087;
  union
  {
    /* 0x0010 */ struct _CM_KEY_HASH KeyHash;
    struct
    {
      /* 0x0010 */ unsigned long ConvKey;
      /* 0x0014 */ long Padding_1088;
      /* 0x0018 */ struct _CM_KEY_HASH* NextHash;
      /* 0x0020 */ struct _HHIVE* KeyHive;
      /* 0x0028 */ unsigned long KeyCell;
    }; /* size: 0x0018 */
  }; /* size: 0x0020 */
  /* 0x0030 */ struct _EX_PUSH_LOCK KcbPushlock;
  union
  {
    /* 0x0038 */ struct _KTHREAD* Owner;
    /* 0x0038 */ long SharedCount;
  }; /* size: 0x0008 */
  /* 0x0040 */ unsigned long SlotHint;
  /* 0x0044 */ long Padding_1089;
  /* 0x0048 */ struct _CM_KEY_CONTROL_BLOCK* ParentKcb;
  /* 0x0050 */ struct _CM_NAME_CONTROL_BLOCK* NameBlock;
  /* 0x0058 */ struct _CM_KEY_SECURITY_CACHE* CachedSecurity;
  /* 0x0060 */ struct _CACHED_CHILD_LIST ValueCache;
  union
  {
    /* 0x0070 */ struct _CM_INDEX_HINT_BLOCK* IndexHint;
    /* 0x0070 */ unsigned long HashKey;
    /* 0x0070 */ unsigned long SubKeyCount;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0078 */ struct _LIST_ENTRY KeyBodyListHead;
    /* 0x0078 */ struct _LIST_ENTRY FreeListEntry;
  }; /* size: 0x0010 */
  /* 0x0088 */ struct _CM_KEY_BODY* KeyBodyArray[4];
  /* 0x00a8 */ union _LARGE_INTEGER KcbLastWriteTime;
  /* 0x00b0 */ unsigned short KcbMaxNameLen;
  /* 0x00b2 */ unsigned short KcbMaxValueNameLen;
  /* 0x00b4 */ unsigned long KcbMaxValueDataLen;
  struct /* bitfield */
  {
    /* 0x00b8 */ unsigned long KcbUserFlags : 4; /* bit position: 0 */
    /* 0x00b8 */ unsigned long KcbVirtControlFlags : 4; /* bit position: 4 */
    /* 0x00b8 */ unsigned long KcbDebug : 8; /* bit position: 8 */
    /* 0x00b8 */ unsigned long Flags : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x00bc */ long Padding_1090;
  /* 0x00c0 */ char* RealKeyName;
  /* 0x00c8 */ struct _LIST_ENTRY KCBUoWListHead;
  union
  {
    /* 0x00d8 */ struct _LIST_ENTRY DelayQueueEntry;
    /* 0x00d8 */ volatile unsigned char* Stolen;
  }; /* size: 0x0010 */
  /* 0x00e8 */ struct _CM_TRANS* TransKCBOwner;
  /* 0x00f0 */ struct _CM_INTENT_LOCK KCBLock;
  /* 0x0100 */ struct _CM_INTENT_LOCK KeyLock;
  /* 0x0110 */ struct _CHILD_LIST TransValueCache;
  /* 0x0118 */ struct _CM_TRANS* TransValueListOwner;
  /* 0x0120 */ struct _UNICODE_STRING* FullKCBName;
} CM_KEY_CONTROL_BLOCK, *PCM_KEY_CONTROL_BLOCK; /* size: 0x0128 */

typedef struct _COLORED_PAGE_INFO_HEADER
{
  /* 0x0000 */ long Priority;
  /* 0x0004 */ long Padding_1091;
  /* 0x0008 */ struct _EPROCESS* OwnerProcess;
  /* 0x0010 */ volatile long ThreadCount;
  /* 0x0014 */ long Padding_1092;
  /* 0x0018 */ struct _COLORED_PAGE_INFO* ColoredPageInfoBase;
  /* 0x0020 */ struct _KGATE Gate;
} COLORED_PAGE_INFO_HEADER, *PCOLORED_PAGE_INFO_HEADER; /* size: 0x0038 */

typedef struct _CM_NAME_HASH
{
  /* 0x0000 */ unsigned long ConvKey;
  /* 0x0004 */ long Padding_1093;
  /* 0x0008 */ struct _CM_NAME_HASH* NextHash;
  /* 0x0010 */ unsigned short NameLength;
  /* 0x0012 */ wchar_t Name[1];
  /* 0x0014 */ long __PADDING__[1];
} CM_NAME_HASH, *PCM_NAME_HASH; /* size: 0x0018 */

typedef struct _CM_NAME_CONTROL_BLOCK
{
  /* 0x0000 */ unsigned char Compressed;
  /* 0x0001 */ char Padding_1094;
  /* 0x0002 */ unsigned short RefCount;
  /* 0x0004 */ long Padding_1095;
  union
  {
    /* 0x0008 */ struct _CM_NAME_HASH NameHash;
    struct
    {
      /* 0x0008 */ unsigned long ConvKey;
      /* 0x000c */ long Padding_1096;
      /* 0x0010 */ struct _CM_KEY_HASH* NextHash;
      /* 0x0018 */ unsigned short NameLength;
      /* 0x001a */ wchar_t Name[1];
      /* 0x001c */ long __PADDING__[1];
    }; /* size: 0x0014 */
  }; /* size: 0x0018 */
} CM_NAME_CONTROL_BLOCK, *PCM_NAME_CONTROL_BLOCK; /* size: 0x0020 */

typedef struct _LEGACY_FLOAT_VALUE
{
  /* 0x0000 */ __int64 Mantissa;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned short Exponent : 15; /* bit position: 0 */
    /* 0x0008 */ unsigned short Sign : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x000a */ char __PADDING__[6];
} LEGACY_FLOAT_VALUE, *PLEGACY_FLOAT_VALUE; /* size: 0x0010 */

typedef struct _PSP_CREATE_PROCESS_CONTEXT
{
  /* 0x0000 */ unsigned long PresentFlags;
  union
  {
    /* 0x0004 */ unsigned long StateFlags;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned char ThreadContext : 1; /* bit position: 0 */
        /* 0x0004 */ unsigned char WriteOutputOnExit : 1; /* bit position: 1 */
        /* 0x0004 */ unsigned char FreeProcessParameters : 1; /* bit position: 2 */
        /* 0x0004 */ unsigned char IFEOKeyMissing : 1; /* bit position: 3 */
        /* 0x0004 */ unsigned char SanitizeProcessParameters : 1; /* bit position: 4 */
        /* 0x0004 */ unsigned char DetectManifest : 1; /* bit position: 5 */
        /* 0x0004 */ unsigned char ManifestDetected : 1; /* bit position: 6 */
        /* 0x0004 */ unsigned char SpareBool : 1; /* bit position: 7 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0005 */ unsigned char IFEOKeyState : 2; /* bit position: 0 */
        /* 0x0005 */ unsigned char StdHandleState : 2; /* bit position: 2 */
        /* 0x0005 */ unsigned char PseudoHandleMask : 3; /* bit position: 4 */
        /* 0x0005 */ unsigned char SpareBits : 1; /* bit position: 7 */
      }; /* bitfield */
      /* 0x0006 */ unsigned short ProhibitedImageCharacteristics : 16; /* bit position: 0 */
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0008 */ struct _CLIENT_ID* RetClientId;
  /* 0x0010 */ struct _TEB** RetTeb;
  /* 0x0018 */ struct _SECTION_IMAGE_INFORMATION* RetImageInfo;
  /* 0x0020 */ struct _PS_CREATE_INFO* RetCreateInfo;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION SectionInfo;
  /* 0x0068 */ void* ParentHandle;
  /* 0x0070 */ struct _EPROCESS* ParentProcess;
  /* 0x0078 */ void* DebugHandle;
  /* 0x0080 */ void* TokenHandle;
  /* 0x0088 */ unsigned long AdditionalFileAccess;
  /* 0x008c */ long Padding_1097;
  /* 0x0090 */ void* FileHandle;
  /* 0x0098 */ struct _FILE_OBJECT* FileObject;
  /* 0x00a0 */ void* SectionHandle;
  /* 0x00a8 */ void* IFEOKey;
  /* 0x00b0 */ void* SectionObject;
  /* 0x00b8 */ struct _RTL_USER_PROCESS_PARAMETERS* CapturedProcessParameters;
  /* 0x00c0 */ struct _RTL_USER_PROCESS_PARAMETERS* UserProcessParameters;
  /* 0x00c8 */ unsigned long UserProcessParametersWow64;
  /* 0x00cc */ unsigned long PebWow64;
  /* 0x00d0 */ struct _UNICODE_STRING FileName;
  /* 0x00e0 */ unsigned char PriorityClass;
  /* 0x00e1 */ unsigned char ExecuteOptions;
  /* 0x00e2 */ unsigned short NodeNumber;
  /* 0x00e4 */ unsigned long IdealProcessor;
  /* 0x00e8 */ unsigned __int64 ReserveEntryCount;
  /* 0x00f0 */ struct _PS_MEMORY_RESERVE LocalReserveList[1];
  /* 0x0100 */ struct _PS_MEMORY_RESERVE* CapturedReserveList;
  /* 0x0108 */ unsigned long StdHandleSubsystemType;
  /* 0x010c */ unsigned long HandleCount;
  /* 0x0110 */ void** HandleList;
  /* 0x0118 */ void* ManifestAddress;
  /* 0x0120 */ unsigned long ManifestSize;
  /* 0x0124 */ unsigned long ErrorMode;
  /* 0x0128 */ struct _GROUP_AFFINITY GroupAffinity;
  /* 0x0138 */ struct _UMS_CREATE_THREAD_ATTRIBUTES UmsAttributes;
} PSP_CREATE_PROCESS_CONTEXT, *PPSP_CREATE_PROCESS_CONTEXT; /* size: 0x0150 */

typedef struct _PNP_REPLACEABLE_UNIT
{
  /* 0x0000 */ struct _DEVICE_OBJECT* Pdo;
  /* 0x0008 */ unsigned __int64 UniqueId;
  /* 0x0010 */ struct _PNP_REPLACE_PROCESSOR_LIST* Processors;
  /* 0x0018 */ struct _PNP_REPLACE_MEMORY_LIST* Memory;
} PNP_REPLACEABLE_UNIT, *PPNP_REPLACEABLE_UNIT; /* size: 0x0020 */

typedef struct _PNP_REPLACE_TIMING
{
  /* 0x0000 */ unsigned __int64 QuiesceTime;
  /* 0x0008 */ unsigned long QuiesceEnabled;
  /* 0x000c */ unsigned long TargetsOffline;
  /* 0x0010 */ unsigned long SparesStarted;
  /* 0x0014 */ unsigned long ChipsetSwapCalled;
  /* 0x0018 */ unsigned long ChipsetSwapComplete;
  /* 0x001c */ unsigned long QuiesceDisabled;
  /* 0x0020 */ unsigned long DeviceQuiesceStart;
  /* 0x0024 */ unsigned long DeviceQuiesceEnd;
  /* 0x0028 */ unsigned long DeviceWakeStart;
  /* 0x002c */ unsigned long DeviceWakeEnd;
  /* 0x0030 */ unsigned long ReplaceEnd;
  /* 0x0034 */ long __PADDING__[1];
} PNP_REPLACE_TIMING, *PPNP_REPLACE_TIMING; /* size: 0x0038 */

typedef struct _PNP_REPLACE_CONTEXT
{
  /* 0x0000 */ struct _PNP_REPLACEABLE_UNIT Target;
  /* 0x0020 */ struct _PNP_REPLACEABLE_UNIT Spare;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ long Padding_1098;
  /* 0x0048 */ struct _PNP_REPLACE_PARAMETERS DriverParameters;
  /* 0x0088 */ struct _PNPR_MAPPING_RESERVE* TargetReserves;
  /* 0x0090 */ struct _PNPR_MAPPING_RESERVE* SpareReserves;
  /* 0x0098 */ struct _LIST_ENTRY TargetMemoryMapList;
  /* 0x00a8 */ unsigned __int64 MemoryMapListLock;
  /* 0x00b0 */ unsigned long ProcessorCount;
  /* 0x00b4 */ unsigned long ControlProcessor;
  /* 0x00b8 */ volatile long EntryBarrier;
  /* 0x00bc */ volatile long ExitBarrier;
  /* 0x00c0 */ volatile long InterruptDisableBarrier;
  /* 0x00c4 */ volatile long QuiesceDisableBarrier;
  /* 0x00c8 */ volatile long SwapPhase;
  /* 0x00cc */ volatile long SwapBarrier;
  /* 0x00d0 */ unsigned char MirrorPhase;
  /* 0x00d1 */ char Padding_1099[7];
  /* 0x00d8 */ unsigned __int64 CurrentStackPointer[256];
  /* 0x08d8 */ unsigned __int64 StackLimitPointer[256];
  /* 0x10d8 */ struct _PNP_REPLACE_POWER_CONTEXT PowerContext;
  /* 0x1110 */ struct _KEVENT BeginQuiesce;
  /* 0x1128 */ struct _KEVENT QuiesceComplete;
  /* 0x1140 */ struct _KEVENT BeginWake;
  /* 0x1158 */ struct _KEVENT WakeComplete;
  /* 0x1170 */ long QuiesceStatus;
  /* 0x1174 */ long Padding_1100;
  /* 0x1178 */ void* ImageHandle;
  /* 0x1180 */ void* HalContext;
  /* 0x1188 */ void* DriverContext;
  /* 0x1190 */ struct _PNP_REPLACE_DRIVER_INTERFACE DriverInterface;
  /* 0x11f0 */ unsigned long FailureLine;
  /* 0x11f4 */ enum PNPR_EXTENDED_STATUS ExtendedStatus;
  /* 0x11f8 */ struct _PNP_REPLACE_TIMING Timing;
} PNP_REPLACE_CONTEXT, *PPNP_REPLACE_CONTEXT; /* size: 0x1230 */

typedef struct _CM_KEY_BODY
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ long Padding_1101;
  /* 0x0008 */ struct _CM_KEY_CONTROL_BLOCK* KeyControlBlock;
  /* 0x0010 */ struct _CM_NOTIFY_BLOCK* NotifyBlock;
  /* 0x0018 */ void* ProcessID;
  /* 0x0020 */ struct _LIST_ENTRY KeyBodyList;
  struct /* bitfield */
  {
    /* 0x0030 */ unsigned long Flags : 16; /* bit position: 0 */
    /* 0x0030 */ unsigned long HandleTags : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0034 */ long Padding_1102;
  /* 0x0038 */ void* KtmTrans;
  /* 0x0040 */ struct _GUID* KtmUow;
  /* 0x0048 */ struct _LIST_ENTRY ContextListHead;
} CM_KEY_BODY, *PCM_KEY_BODY; /* size: 0x0058 */

struct decode_info
{
  struct
  {
    /* 0x0000 */ unsigned char* end;
    /* 0x0008 */ unsigned char* beg;
    /* 0x0010 */ unsigned char* careful;
    /* 0x0018 */ unsigned char* stop;
    /* 0x0020 */ unsigned char* last;
  } /* size: 0x0028 */ dst;
  struct
  {
    /* 0x0028 */ const unsigned char* end;
    /* 0x0030 */ const unsigned char* beg;
    /* 0x0038 */ const unsigned char* careful;
    /* 0x0040 */ const unsigned char* end_1;
    /* 0x0048 */ const unsigned char* end_tag;
    /* 0x0050 */ const unsigned char* end_bitmask2;
    /* 0x0058 */ const unsigned char* last;
  } /* size: 0x0038 */ src;
  /* 0x0060 */ int result;
  /* 0x0064 */ int eof;
  /* 0x0068 */ int magic;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

typedef struct _CM_NOTIFY_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY HiveList;
  /* 0x0010 */ struct _LIST_ENTRY PostList;
  /* 0x0020 */ struct _CM_KEY_CONTROL_BLOCK* KeyControlBlock;
  /* 0x0028 */ struct _CM_KEY_BODY* KeyBody;
  struct /* bitfield */
  {
    /* 0x0030 */ unsigned long Filter : 30; /* bit position: 0 */
    /* 0x0030 */ unsigned long WatchTree : 1; /* bit position: 30 */
    /* 0x0030 */ unsigned long NotifyPending : 1; /* bit position: 31 */
  }; /* bitfield */
  /* 0x0034 */ long Padding_1103;
  /* 0x0038 */ struct _SECURITY_SUBJECT_CONTEXT SubjectContext;
} CM_NOTIFY_BLOCK, *PCM_NOTIFY_BLOCK; /* size: 0x0058 */

typedef struct _CM_RM
{
  /* 0x0000 */ struct _LIST_ENTRY RmListEntry;
  /* 0x0010 */ struct _LIST_ENTRY TransactionListHead;
  /* 0x0020 */ void* TmHandle;
  /* 0x0028 */ void* Tm;
  /* 0x0030 */ void* RmHandle;
  /* 0x0038 */ void* KtmRm;
  /* 0x0040 */ unsigned long RefCount;
  /* 0x0044 */ unsigned long ContainerNum;
  /* 0x0048 */ unsigned __int64 ContainerSize;
  /* 0x0050 */ struct _CMHIVE* CmHive;
  /* 0x0058 */ void* LogFileObject;
  /* 0x0060 */ void* MarshallingContext;
  /* 0x0068 */ unsigned long RmFlags;
  /* 0x006c */ long LogStartStatus1;
  /* 0x0070 */ long LogStartStatus2;
  /* 0x0074 */ long Padding_1104;
  /* 0x0078 */ unsigned __int64 BaseLsn;
  /* 0x0080 */ struct _ERESOURCE* RmLock;
} CM_RM, *PCM_RM; /* size: 0x0088 */

struct DOCK_INTERFACE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ long Padding_1105;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ void* InterfaceReference /* function */;
  /* 0x0018 */ void* InterfaceDereference /* function */;
  /* 0x0020 */ void* ProfileDepartureSetMode /* function */;
  /* 0x0028 */ void* ProfileDepartureUpdate /* function */;
}; /* size: 0x0030 */

typedef struct _TEMP_ARRAY_ELEMENT
{
  /* 0x0000 */ struct _SID* Sid;
  /* 0x0008 */ unsigned long SidLength;
  /* 0x000c */ long __PADDING__[1];
} TEMP_ARRAY_ELEMENT, *PTEMP_ARRAY_ELEMENT; /* size: 0x0010 */

typedef struct _CM_KCB_UOW
{
  /* 0x0000 */ struct _LIST_ENTRY TransactionListEntry;
  /* 0x0010 */ struct _CM_INTENT_LOCK* KCBLock;
  /* 0x0018 */ struct _CM_INTENT_LOCK* KeyLock;
  /* 0x0020 */ struct _LIST_ENTRY KCBListEntry;
  /* 0x0030 */ struct _CM_KEY_CONTROL_BLOCK* KeyControlBlock;
  /* 0x0038 */ struct _CM_TRANS* Transaction;
  /* 0x0040 */ unsigned long UoWState;
  /* 0x0044 */ enum UoWActionType ActionType;
  /* 0x0048 */ enum HSTORAGE_TYPE StorageType;
  /* 0x004c */ long Padding_1106;
  union
  {
    /* 0x0050 */ struct _CM_KEY_CONTROL_BLOCK* ChildKCB;
    /* 0x0050 */ unsigned long VolatileKeyCell;
    struct
    {
      /* 0x0050 */ unsigned long OldValueCell;
      /* 0x0054 */ unsigned long NewValueCell;
    }; /* size: 0x0008 */
    /* 0x0050 */ unsigned long UserFlags;
    /* 0x0050 */ union _LARGE_INTEGER LastWriteTime;
    /* 0x0050 */ unsigned long TxSecurityCell;
    struct
    {
      /* 0x0050 */ struct _CM_KEY_CONTROL_BLOCK* OldChildKCB;
      /* 0x0058 */ struct _CM_KEY_CONTROL_BLOCK* NewChildKCB;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0050 */ struct _CM_KEY_CONTROL_BLOCK* OtherChildKCB;
      /* 0x0058 */ unsigned long ThisVolatileKeyCell;
      /* 0x005c */ long __PADDING__[1];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} CM_KCB_UOW, *PCM_KCB_UOW; /* size: 0x0060 */

typedef struct _POP_SHUTDOWN_DELAYED_TRIGGER
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _POP_SWITCH_DEVICE* SwitchDevice;
  /* 0x0018 */ struct POWER_ACTION_POLICY LidClose;
  /* 0x0024 */ struct POWER_ACTION_POLICY PowerButton;
  /* 0x0030 */ struct POWER_ACTION_POLICY SleepButton;
  /* 0x003c */ long __PADDING__[1];
} POP_SHUTDOWN_DELAYED_TRIGGER, *PPOP_SHUTDOWN_DELAYED_TRIGGER; /* size: 0x0040 */

typedef struct _PNP_VETO_PROCESS_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY DevObjListHead;
  /* 0x0010 */ unsigned long Pid;
  /* 0x0014 */ long Padding_1107;
  /* 0x0018 */ struct _LIST_ENTRY ListEntry;
} PNP_VETO_PROCESS_INFO, *PPNP_VETO_PROCESS_INFO; /* size: 0x0028 */

typedef struct _CM_CELL_REMAP_BLOCK
{
  /* 0x0000 */ unsigned long OldCell;
  /* 0x0004 */ unsigned long NewCell;
} CM_CELL_REMAP_BLOCK, *PCM_CELL_REMAP_BLOCK; /* size: 0x0008 */

typedef struct _AUTHZBASEP_SECURITY_ATTRIBUTE
{
  /* 0x0000 */ struct _LIST_ENTRY ListLink;
  /* 0x0010 */ struct _LIST_ENTRY WorkingListLink;
  /* 0x0020 */ struct _UNICODE_STRING Name;
  /* 0x0030 */ unsigned short ValueType;
  /* 0x0032 */ char Padding_1108[2];
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned long InternalFlags;
  /* 0x003c */ unsigned long ValueCount;
  /* 0x0040 */ unsigned long DeletedValueCount;
  /* 0x0044 */ long Padding_1109;
  /* 0x0048 */ struct _LIST_ENTRY ValuesList;
  /* 0x0058 */ unsigned long WorkingValueCount;
  /* 0x005c */ long Padding_1110;
  /* 0x0060 */ struct _LIST_ENTRY WorkingValuesList;
} AUTHZBASEP_SECURITY_ATTRIBUTE, *PAUTHZBASEP_SECURITY_ATTRIBUTE; /* size: 0x0070 */

typedef struct _REQ_ALTERNATIVE
{
  /* 0x0000 */ unsigned long Priority;
  /* 0x0004 */ unsigned long Position;
  /* 0x0008 */ struct _REQ_LIST* ReqList;
  /* 0x0010 */ unsigned long ReqAlternativeIndex;
  /* 0x0014 */ unsigned long DescCount;
  /* 0x0018 */ struct _REQ_DESC* DescTable[1];
} REQ_ALTERNATIVE, *PREQ_ALTERNATIVE; /* size: 0x0020 */

struct tagSWITCH_CONTEXT
{
  /* 0x0000 */ struct tagSWITCH_CONTEXT_ATTRIBUTE Attribute;
  /* 0x0020 */ struct tagSWITCH_CONTEXT_DATA Data;
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

typedef struct _CM_PARSE_CONTEXT
{
  /* 0x0000 */ unsigned long CtxFlags;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ void* DataBuffer;
  /* 0x0010 */ unsigned long VirtCtx;
  /* 0x0014 */ unsigned long HandleTags;
  /* 0x0018 */ unsigned long Options;
  /* 0x001c */ unsigned long Wow64Flags;
  /* 0x0020 */ unsigned long Disposition;
  /* 0x0024 */ long Padding_1111;
  /* 0x0028 */ struct _CM_KEY_REFERENCE ChildHive;
  /* 0x0038 */ void* PredefinedHandle;
  /* 0x0040 */ struct _CMHIVE* OriginatingPoint;
  /* 0x0048 */ struct _CM_KEY_CONTROL_BLOCK* OriginatingKcb;
  /* 0x0050 */ void* KtmTrans;
  /* 0x0058 */ unsigned long PostActions;
  /* 0x005c */ long Padding_1112;
  /* 0x0060 */ struct _CM_KEY_CONTROL_BLOCK* Kcb;
  /* 0x0068 */ struct _HHIVE* FlagsSyncHive;
  /* 0x0070 */ unsigned long TxCount;
  /* 0x0074 */ long Padding_1113;
  /* 0x0078 */ void** TxArray;
  /* 0x0080 */ unsigned long HiveMountWaitIndex;
  /* 0x0084 */ long __PADDING__[1];
} CM_PARSE_CONTEXT, *PCM_PARSE_CONTEXT; /* size: 0x0088 */

typedef struct _CM_NAME_HASH_TABLE_ENTRY
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ struct _CM_NAME_HASH* Entry;
} CM_NAME_HASH_TABLE_ENTRY, *PCM_NAME_HASH_TABLE_ENTRY; /* size: 0x0010 */

typedef struct _RECTL
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
} RECTL, *PRECTL; /* size: 0x0010 */

struct CM_LOGREC_BIG_RECORD
{
  /* 0x0000 */ struct CM_LOGREC Record;
  /* 0x0030 */ unsigned long NrChunks;
  /* 0x0034 */ unsigned long ChunkNo;
  /* 0x0038 */ unsigned long DataSize;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

typedef struct _wfinddata64i32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_1114;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata64i32_t, *Pwfinddata64i32_t; /* size: 0x0230 */

struct HGLRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _POINTL
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
} POINTL, *PPOINTL; /* size: 0x0008 */

struct HLSURF__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _NONOPAQUE_OPLOCK
{
  /* 0x0000 */ struct _IRP* IrpExclusiveOplock;
  /* 0x0008 */ struct _FILE_OBJECT* FileObject;
  /* 0x0010 */ struct _EPROCESS* ExclusiveOplockOwner;
  /* 0x0018 */ struct _LIST_ENTRY IrpOplocksR;
  /* 0x0028 */ struct _LIST_ENTRY IrpOplocksRH;
  /* 0x0038 */ struct _LIST_ENTRY RHBreakQueue;
  /* 0x0048 */ struct _LIST_ENTRY WaitingIrps;
  /* 0x0058 */ struct _LIST_ENTRY DelayAckFileObjectQueue;
  /* 0x0068 */ unsigned long OplockState;
  /* 0x006c */ long Padding_1115;
  /* 0x0070 */ struct _FAST_MUTEX* FastMutex;
} NONOPAQUE_OPLOCK, *PNONOPAQUE_OPLOCK; /* size: 0x0078 */

typedef struct _CLFS_MGMT_CLIENT_REGISTRATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1116;
  /* 0x0008 */ void* AdvanceTailCallback /* function */;
  /* 0x0010 */ void* AdvanceTailCallbackData;
  /* 0x0018 */ void* LogGrowthCompleteCallback /* function */;
  /* 0x0020 */ void* LogGrowthCompleteCallbackData;
  /* 0x0028 */ void* LogUnpinnedCallback /* function */;
  /* 0x0030 */ void* LogUnpinnedCallbackData;
} CLFS_MGMT_CLIENT_REGISTRATION, *PCLFS_MGMT_CLIENT_REGISTRATION; /* size: 0x0038 */

typedef struct _PNPR_RESOURCE_CONTEXT
{
  /* 0x0000 */ unsigned char IsTarget;
  /* 0x0001 */ char Padding_1117[7];
  /* 0x0008 */ struct _PNP_REPLACEABLE_UNIT* Unit;
} PNPR_RESOURCE_CONTEXT, *PPNPR_RESOURCE_CONTEXT; /* size: 0x0010 */

struct HANDLE_ENUM_CONTEXT
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ struct _EPROCESS* Process;
  /* 0x0010 */ void* CallBack /* function */;
  /* 0x0018 */ void* Context;
}; /* size: 0x0020 */

typedef struct _BCD_OBJECT
{
  /* 0x0000 */ struct _GUID Identifier;
  /* 0x0010 */ struct _BCD_OBJECT_DESCRIPTION* Description;
} BCD_OBJECT, *PBCD_OBJECT; /* size: 0x0018 */

typedef struct _MI_STORE_INPAGE_COMPLETE_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long EntireFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StoreFault : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ClearInStoreBit : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long EvictPage : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long PageNotFound : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long DataFromInMemoryStore : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long PfnDeleted : 1; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_STORE_INPAGE_COMPLETE_FLAGS, *PMI_STORE_INPAGE_COMPLETE_FLAGS; /* size: 0x0004 */

typedef struct _MMMOD_WRITER_LISTHEAD
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
  union
  {
    /* 0x0010 */ struct _KGATE Gate;
    /* 0x0010 */ struct _KEVENT Event;
  }; /* size: 0x0018 */
} MMMOD_WRITER_LISTHEAD, *PMMMOD_WRITER_LISTHEAD; /* size: 0x0028 */

struct HUMPD__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CLFS_MGMT_NOTIFICATION
{
  /* 0x0000 */ enum _CLFS_MGMT_NOTIFICATION_TYPE Notification;
  /* 0x0004 */ long Padding_1118;
  /* 0x0008 */ union _CLS_LSN Lsn;
  /* 0x0010 */ unsigned short LogIsPinned;
  /* 0x0012 */ char __PADDING__[6];
} CLFS_MGMT_NOTIFICATION, *PCLFS_MGMT_NOTIFICATION; /* size: 0x0018 */

struct tagPOINTS
{
  /* 0x0000 */ short x;
  /* 0x0002 */ short y;
}; /* size: 0x0004 */

typedef struct _HIVE_LIST_ENTRY
{
  /* 0x0000 */ unsigned short* FileName;
  /* 0x0008 */ unsigned short* BaseName;
  /* 0x0010 */ unsigned short* RegRootName;
  /* 0x0018 */ struct _CMHIVE* CmHive;
  /* 0x0020 */ unsigned long HHiveFlags;
  /* 0x0024 */ unsigned long CmHiveFlags;
  /* 0x0028 */ unsigned long CmKcbCacheSize;
  /* 0x002c */ long Padding_1119;
  /* 0x0030 */ struct _CMHIVE* CmHive2;
  /* 0x0038 */ unsigned char HiveMounted;
  /* 0x0039 */ unsigned char ThreadFinished;
  /* 0x003a */ unsigned char ThreadStarted;
  /* 0x003b */ unsigned char Allocate;
  /* 0x003c */ unsigned char WinPERequired;
  /* 0x003d */ char Padding_1120[3];
  /* 0x0040 */ struct _KEVENT StartEvent;
  /* 0x0058 */ struct _KEVENT FinishedEvent;
  /* 0x0070 */ struct _KEVENT MountLock;
} HIVE_LIST_ENTRY, *PHIVE_LIST_ENTRY; /* size: 0x0088 */

typedef struct _EMP_ENTRY_BLOCK
{
  /* 0x0000 */ struct _EMP_ENTRY_DB_RECORD* EntryRecord;
  /* 0x0008 */ struct _EM_ENTRY_DATA EntryData;
  /* 0x0018 */ struct _LIST_ENTRY EntryBlockList;
  /* 0x0028 */ struct _LIST_ENTRY ProviderEntryInstanceList;
} EMP_ENTRY_BLOCK, *PEMP_ENTRY_BLOCK; /* size: 0x0038 */

typedef struct _HCELL
{
  /* 0x0000 */ long Size;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned long Last;
        union
        {
          union
          {
            /* 0x0008 */ unsigned long UserData;
            /* 0x0008 */ unsigned long Next;
          }; /* size: 0x0004 */
        } /* size: 0x0004 */ u;
      } /* size: 0x0008 */ OldCell;
      struct
      {
        union
        {
          union
          {
            /* 0x0004 */ unsigned long UserData;
            /* 0x0004 */ unsigned long Next;
          }; /* size: 0x0004 */
        } /* size: 0x0004 */ u;
      } /* size: 0x0004 */ NewCell;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} HCELL, *PHCELL; /* size: 0x000c */

struct HENHMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CM_CACHED_VALUE_INDEX
{
  /* 0x0000 */ unsigned long CellIndex;
  /* 0x0004 */ long Padding_1121;
  union
  {
    union
    {
      /* 0x0008 */ struct _CELL_DATA CellData;
      /* 0x0008 */ unsigned __int64 List[1];
    }; /* size: 0x0050 */
  } /* size: 0x0050 */ Data;
} CM_CACHED_VALUE_INDEX, *PCM_CACHED_VALUE_INDEX; /* size: 0x0058 */

struct LanguageNameDataType_tag
{
  /* 0x0000 */ unsigned short langID;
  /* 0x0002 */ char Padding_1122[6];
  /* 0x0008 */ unsigned short* cultureName;
}; /* size: 0x0010 */

typedef struct _MMCLONE_DESCRIPTOR
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMADDRESS_NODE* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMADDRESS_NODE* LeftChild;
  /* 0x0010 */ struct _MMADDRESS_NODE* RightChild;
  /* 0x0018 */ unsigned __int64 StartingVpn;
  /* 0x0020 */ unsigned __int64 EndingVpn;
  /* 0x0028 */ unsigned long NumberOfPtes;
  /* 0x002c */ long NumberOfReferences;
  /* 0x0030 */ struct _MMCLONE_HEADER* CloneHeader;
  /* 0x0038 */ unsigned __int64 PagedPoolQuotaCharge;
} MMCLONE_DESCRIPTOR, *PMMCLONE_DESCRIPTOR; /* size: 0x0040 */

struct HWINEVENTHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _HOTPATCH_MODULE_DATA
{
  /* 0x0000 */ unsigned short HotpatchImageNameLength;
  /* 0x0002 */ unsigned short ColdpatchImagePathLength;
  /* 0x0004 */ wchar_t NameBuffer[1];
} HOTPATCH_MODULE_DATA, *PHOTPATCH_MODULE_DATA; /* size: 0x0006 */

typedef struct _ADD_CONTEXT
{
  /* 0x0000 */ unsigned long DriverStartType;
  /* 0x0004 */ unsigned char LoadDriver;
  /* 0x0005 */ char __PADDING__[3];
} ADD_CONTEXT, *PADD_CONTEXT; /* size: 0x0008 */

struct HTASK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagVERBLOCK
{
  /* 0x0000 */ unsigned short wTotLen;
  /* 0x0002 */ unsigned short wValLen;
  /* 0x0004 */ unsigned short wType;
  /* 0x0006 */ wchar_t szKey[1];
}; /* size: 0x0008 */

struct HWINSTA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct RENAME_UOW_CONTEXT_
{
  /* 0x0000 */ struct _CM_KEY_CONTROL_BLOCK* OldParent;
  /* 0x0008 */ struct _CM_KEY_CONTROL_BLOCK* NewParent;
}; /* size: 0x0010 */

struct HMONITOR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct EXP_INITIALIZE_GLOBAL_CALLBACKS
{
  /* 0x0000 */ struct _CALLBACK_OBJECT** CallBackObject;
  /* 0x0008 */ unsigned short* CallbackName;
}; /* size: 0x0010 */

struct CMP_CHECK_REGISTRY_STACK_ENTRY
{
  /* 0x0000 */ unsigned long Cell;
  /* 0x0004 */ unsigned long ParentCell;
  /* 0x0008 */ unsigned long PriorSibling;
  /* 0x000c */ unsigned long ChildIndex;
  /* 0x0010 */ unsigned char CellChecked;
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

typedef struct _BOOT_DRIVER_NODE
{
  /* 0x0000 */ struct _BOOT_DRIVER_LIST_ENTRY ListEntry;
  /* 0x0040 */ struct _UNICODE_STRING Group;
  /* 0x0050 */ struct _UNICODE_STRING Name;
  /* 0x0060 */ unsigned long Tag;
  /* 0x0064 */ unsigned long ErrorControl;
} BOOT_DRIVER_NODE, *PBOOT_DRIVER_NODE; /* size: 0x0068 */

struct CM_SET_KEY_USER_FLAGS_LOGREC
{
  /* 0x0000 */ struct CM_LOGREC Header;
  /* 0x0030 */ unsigned long NewFlags;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct HWND__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct TM_LOGREC
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum TM_LOGREC_TYPE Type;
  /* 0x0008 */ struct _GUID UnitOfWork;
  /* 0x0018 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0020 */ unsigned long EnlistmentCount;
  /* 0x0024 */ unsigned long EnlistmentOffset;
  /* 0x0028 */ unsigned long SecurityDescriptorLength;
  /* 0x002c */ unsigned long SecurityDescriptorOffset;
  /* 0x0030 */ unsigned long TransactionFlags;
  /* 0x0034 */ unsigned long MinorVersion;
  /* 0x0038 */ unsigned long TransactionDescriptionLength;
  /* 0x003c */ unsigned long TransactionDescriptionOffset;
  /* 0x0040 */ unsigned long RmDescriptionArrayOffset;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

typedef struct _FREE_HBIN
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long FileOffset;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} FREE_HBIN, *PFREE_HBIN; /* size: 0x0020 */

typedef struct _IO_QUERY_DESC
{
  /* 0x0000 */ enum _INTERFACE_TYPE* BusType;
  /* 0x0008 */ unsigned long* BusNumber;
  /* 0x0010 */ enum _CONFIGURATION_TYPE* ControllerType;
  /* 0x0018 */ unsigned long* ControllerNumber;
  /* 0x0020 */ enum _CONFIGURATION_TYPE* PeripheralType;
  /* 0x0028 */ unsigned long* PeripheralNumber;
  /* 0x0030 */ void* CalloutRoutine /* function */;
  /* 0x0038 */ void* Context;
} IO_QUERY_DESC, *PIO_QUERY_DESC; /* size: 0x0040 */

typedef struct _CM_KNODE_REMAP_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY RemapList;
  /* 0x0010 */ struct _CM_KEY_NODE* KeyNode;
  /* 0x0018 */ unsigned long NewParent;
  /* 0x001c */ long __PADDING__[1];
} CM_KNODE_REMAP_BLOCK, *PCM_KNODE_REMAP_BLOCK; /* size: 0x0020 */

struct TM_LOGREC_WS08
{
  /* 0x0000 */ unsigned long MinorVersion;
  /* 0x0004 */ unsigned long TransactionDescriptionLength;
  /* 0x0008 */ unsigned long TransactionDescriptionOffset;
  /* 0x000c */ unsigned long RmDescriptionArrayOffset;
}; /* size: 0x0010 */

typedef struct _SEARCH_AND_DEREF_CONTEXT
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long TxCount;
  /* 0x0008 */ void** TxArray;
} SEARCH_AND_DEREF_CONTEXT, *PSEARCH_AND_DEREF_CONTEXT; /* size: 0x0010 */

typedef union _KEY_VALUE_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _KEY_VALUE_BASIC_INFORMATION KeyValueBasicInformation;
    /* 0x0000 */ struct _KEY_VALUE_FULL_INFORMATION KeyValueFullInformation;
    /* 0x0000 */ struct _KEY_VALUE_PARTIAL_INFORMATION KeyValuePartialInformation;
    /* 0x0000 */ struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 KeyValuePartialInformationAlign64;
  }; /* size: 0x0018 */
} KEY_VALUE_INFORMATION, *PKEY_VALUE_INFORMATION; /* size: 0x0018 */

typedef struct _ARBITER_ALTERNATIVE
{
  /* 0x0000 */ unsigned __int64 Minimum;
  /* 0x0008 */ unsigned __int64 Maximum;
  /* 0x0010 */ unsigned __int64 Length;
  /* 0x0018 */ unsigned __int64 Alignment;
  /* 0x0020 */ long Priority;
  /* 0x0024 */ unsigned long Flags;
  /* 0x0028 */ struct _IO_RESOURCE_DESCRIPTOR* Descriptor;
  /* 0x0030 */ unsigned long Reserved[3];
  /* 0x003c */ long __PADDING__[1];
} ARBITER_ALTERNATIVE, *PARBITER_ALTERNATIVE; /* size: 0x0040 */

typedef struct _CM_CACHED_VALUE
{
  /* 0x0000 */ unsigned short DataCacheType;
  /* 0x0002 */ unsigned short ValueKeySize;
  /* 0x0004 */ unsigned long HashKey;
  /* 0x0008 */ struct _CM_KEY_VALUE KeyValue;
} CM_CACHED_VALUE, *PCM_CACHED_VALUE; /* size: 0x0020 */

struct tagPOINT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
}; /* size: 0x0008 */

typedef union _KEY_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _KEY_BASIC_INFORMATION KeyBasicInformation;
    /* 0x0000 */ struct _KEY_NODE_INFORMATION KeyNodeInformation;
    /* 0x0000 */ struct _KEY_FULL_INFORMATION KeyFullInformation;
    /* 0x0000 */ struct _KEY_NAME_INFORMATION KeyNameInformation;
    /* 0x0000 */ struct _KEY_CACHED_INFORMATION KeyCachedInformation;
    /* 0x0000 */ struct _KEY_FLAGS_INFORMATION KeyFlagsInformation;
    /* 0x0000 */ struct _KEY_VIRTUALIZATION_INFORMATION KeyVirtualizationInformation;
    /* 0x0000 */ struct _KEY_HANDLE_TAGS_INFORMATION KeyHandleTagsInformation;
  }; /* size: 0x0030 */
} KEY_INFORMATION, *PKEY_INFORMATION; /* size: 0x0030 */

typedef struct _HV_TRACK_CELL_REF
{
  /* 0x0000 */ unsigned short Count;
  /* 0x0002 */ unsigned short Max;
  /* 0x0004 */ long Padding_1123;
  /* 0x0008 */ struct _HV_HIVE_CELL_PAIR* CellArray;
  /* 0x0010 */ struct _HV_HIVE_CELL_PAIR StaticArray[4];
  /* 0x0050 */ unsigned short StaticCount;
  /* 0x0052 */ char __PADDING__[6];
} HV_TRACK_CELL_REF, *PHV_TRACK_CELL_REF; /* size: 0x0058 */

struct HACCEL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagSWITCH_CONTEXT_CREATE_PARAM
{
  /* 0x0000 */ const wchar_t* lpwzApplicationName;
  /* 0x0008 */ void* ProcessHandle;
  /* 0x0010 */ void* Peb;
  /* 0x0018 */ void* ShimData;
  /* 0x0020 */ unsigned short SubSystemMajorVersion;
  /* 0x0022 */ unsigned short SubSystemMinorVersion;
  /* 0x0024 */ unsigned long SamplingFlag;
  /* 0x0028 */ void* SupportedOsInfo;
  /* 0x0030 */ void* SwitchContextInTargetProcess;
}; /* size: 0x0038 */

typedef struct _IMAGE_ENTRY_IN_SESSION
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ void* Address;
  /* 0x0018 */ void* LastAddress;
  /* 0x0020 */ unsigned long ImageCountInThisSession;
  /* 0x0024 */ long Padding_1124;
  /* 0x0028 */ struct _MMPTE* PrototypePtes;
  /* 0x0030 */ struct _SESSION_GLOBAL_SUBSECTION_INFO* GlobalSubs;
} IMAGE_ENTRY_IN_SESSION, *PIMAGE_ENTRY_IN_SESSION; /* size: 0x0038 */

typedef struct _STORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_RESPONSE
{
  /* 0x0000 */ unsigned long ResponseLevel;
  /* 0x0004 */ unsigned char IoOverAllocatePermitted;
  /* 0x0005 */ char Padding_1125[3];
  /* 0x0008 */ unsigned long DependencyFlags;
  /* 0x000c */ unsigned long SurfaceFlags;
  /* 0x0010 */ unsigned long NestingLevel;
} STORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_RESPONSE, *PSTORAGE_QUERY_DEPENDENT_DISK_QOS_LEV1_RESPONSE; /* size: 0x0014 */

struct HKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _BCD_GUID_CACHED_VALUES
{
  /* 0x0000 */ unsigned __int64 Time;
  /* 0x0008 */ long AllocatedCount;
  /* 0x000c */ unsigned short Sequence;
  /* 0x000e */ unsigned char Seed[6];
  /* 0x0014 */ long __PADDING__[1];
} BCD_GUID_CACHED_VALUES, *PBCD_GUID_CACHED_VALUES; /* size: 0x0018 */

struct CM_SET_LAST_WRITE_TIME_LOGREC
{
  /* 0x0000 */ struct CM_LOGREC Header;
  /* 0x0030 */ union _LARGE_INTEGER NewLastWriteTime;
}; /* size: 0x0038 */

typedef struct _MSAcpiInfo
{
  /* 0x0000 */ unsigned long BootArchitecture;
  /* 0x0004 */ unsigned long PreferredProfile;
  /* 0x0008 */ unsigned long Capabilities;
} MSAcpiInfo, *PMSAcpiInfo; /* size: 0x000c */

typedef struct _PNP_REMOVAL_WALK_CONTEXT
{
  /* 0x0000 */ unsigned char TreeDeletion;
  /* 0x0001 */ unsigned char DescendantNode;
} PNP_REMOVAL_WALK_CONTEXT, *PPNP_REMOVAL_WALK_CONTEXT; /* size: 0x0002 */

typedef struct _IOP_RESERVED_RESOURCES_RECORD
{
  /* 0x0000 */ struct _IOP_RESERVED_RESOURCES_RECORD* Next;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0010 */ struct _CM_RESOURCE_LIST* ReservedResources;
} IOP_RESERVED_RESOURCES_RECORD, *PIOP_RESERVED_RESOURCES_RECORD; /* size: 0x0018 */

struct HSPRITE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HPEN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _stati64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1126[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_1127;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stati64, *Pstati64; /* size: 0x0038 */

struct CM_RENAME_KEY_LOGREC
{
  /* 0x0000 */ struct CM_LOGREC Header;
  /* 0x0030 */ struct _UNICODE_STRING NewKeyName;
}; /* size: 0x0040 */

typedef struct _wfinddata32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ wchar_t name[260];
} wfinddata32_t, *Pwfinddata32_t; /* size: 0x021c */

typedef struct _MI_FLUSH_RANGE
{
  /* 0x0000 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0008 */ struct _MMPTE* PointerPte;
  /* 0x0010 */ struct _MMPTE* LastPte;
  /* 0x0018 */ struct _MSUBSECTION* Subsection;
  /* 0x0020 */ struct _MSUBSECTION* LastSubsection;
  /* 0x0028 */ unsigned long OffsetAdvance;
  /* 0x002c */ long __PADDING__[1];
} MI_FLUSH_RANGE, *PMI_FLUSH_RANGE; /* size: 0x0030 */

struct tm
{
  /* 0x0000 */ int tm_sec;
  /* 0x0004 */ int tm_min;
  /* 0x0008 */ int tm_hour;
  /* 0x000c */ int tm_mday;
  /* 0x0010 */ int tm_mon;
  /* 0x0014 */ int tm_year;
  /* 0x0018 */ int tm_wday;
  /* 0x001c */ int tm_yday;
  /* 0x0020 */ int tm_isdst;
}; /* size: 0x0024 */

typedef struct _NP_CMHIVE
{
  /* 0x0000 */ struct _FAST_MUTEX HiveLock;
  /* 0x0038 */ struct _FAST_MUTEX FlushLock2;
  /* 0x0070 */ struct _FAST_MUTEX WriterLock;
  /* 0x00a8 */ struct _ERESOURCE FlusherLock;
} NP_CMHIVE, *PNP_CMHIVE; /* size: 0x0110 */

struct HDESK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HBITMAP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CM_WRITE_BLOCK
{
  /* 0x0000 */ void* EventHandles[64];
  /* 0x0200 */ struct _KEVENT* EventObjects[64];
  /* 0x0400 */ struct _KWAIT_BLOCK WaitBlockArray[64];
  /* 0x1000 */ struct _IO_STATUS_BLOCK IoStatus[64];
} CM_WRITE_BLOCK, *PCM_WRITE_BLOCK; /* size: 0x1400 */

typedef struct _VI_FAULT_APPLICATION_NAME
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _UNICODE_STRING ImageName;
} VI_FAULT_APPLICATION_NAME, *PVI_FAULT_APPLICATION_NAME; /* size: 0x0020 */

struct tagRECT
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
}; /* size: 0x0010 */

struct CM_SET_SECURITY_DESCRIPTOR_LOGREC
{
  /* 0x0000 */ struct CM_LOGREC Header;
  /* 0x0030 */ unsigned long NewDescriptorLength;
  /* 0x0034 */ long Padding_1128;
  /* 0x0038 */ void* NewDescriptor;
}; /* size: 0x0040 */

struct HCOLORSPACE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CM_POST_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY NotifyList;
  /* 0x0010 */ struct _LIST_ENTRY ThreadList;
  /* 0x0020 */ struct _LIST_ENTRY CancelPostList;
  /* 0x0030 */ struct _CM_POST_KEY_BODY* PostKeyBody;
  /* 0x0038 */ unsigned long NotifyType;
  /* 0x003c */ long Padding_1129;
  /* 0x0040 */ union _CM_POST_BLOCK_UNION* u;
} CM_POST_BLOCK, *PCM_POST_BLOCK; /* size: 0x0048 */

typedef struct _VERIFIER_THUNKS
{
  /* 0x0000 */ char* AsciiName;
  /* 0x0008 */ void* VerifierRoutine /* function */;
  /* 0x0010 */ void* PristineRoutine /* function */;
} VERIFIER_THUNKS, *PVERIFIER_THUNKS; /* size: 0x0018 */

struct HSTR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _HOTPATCH_MODULE_ENTRY
{
  /* 0x0000 */ struct _TRIPLE_LIST_ENTRY ListEntry;
  /* 0x0020 */ struct _HOTPATCH_MODULE_DATA Data;
  /* 0x0026 */ char __PADDING__[2];
} HOTPATCH_MODULE_ENTRY, *PHOTPATCH_MODULE_ENTRY; /* size: 0x0028 */

typedef struct _CM_DELAY_ALLOC
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _CM_KEY_CONTROL_BLOCK* Kcb;
} CM_DELAY_ALLOC, *PCM_DELAY_ALLOC; /* size: 0x0018 */

typedef struct _wfinddata32i64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ __int64 size;
  /* 0x0018 */ wchar_t name[260];
} wfinddata32i64_t, *Pwfinddata32i64_t; /* size: 0x0220 */

struct HDC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _stat64i32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1130[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat64i32, *Pstat64i32; /* size: 0x0030 */

struct HPALETTE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _EXP_LICENSE_INFO
{
  /* 0x0000 */ void* RegKey;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long Padding_1131;
  /* 0x0010 */ unsigned short* SubKeyName;
  /* 0x0018 */ struct _WORK_QUEUE_ITEM ExpWatchLicenseInfoWorkItem;
  /* 0x0038 */ struct _IO_STATUS_BLOCK ExpLicenseInfoIoSb;
  /* 0x0048 */ unsigned long ExpLicenseInfoChangeBuffer;
  /* 0x004c */ long __PADDING__[1];
} EXP_LICENSE_INFO, *PEXP_LICENSE_INFO; /* size: 0x0050 */

typedef struct _KTMNOTIFICATION_REQUEST_PACKET
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ void* UserNotificationBuffer;
  /* 0x0018 */ unsigned long UserNotificationBufferLength;
  /* 0x001c */ long Status;
  /* 0x0020 */ unsigned long NotificationLength;
  /* 0x0024 */ long Padding_1132;
  /* 0x0028 */ struct _KRESOURCEMANAGER* ResourceManager;
  /* 0x0030 */ struct _ETHREAD* UserThread;
  /* 0x0038 */ void* CompletionPort;
  /* 0x0040 */ struct _KAPC Apc;
  /* 0x0098 */ enum _KAPC_ENVIRONMENT ApcEnvironment;
  /* 0x009c */ long Padding_1133;
  /* 0x00a0 */ unsigned __int64 ApcContext;
  /* 0x00a8 */ unsigned __int64 RmCompletionKey;
  /* 0x00b0 */ void* IoMiniCompletionPacket;
} KTMNOTIFICATION_REQUEST_PACKET, *PKTMNOTIFICATION_REQUEST_PACKET; /* size: 0x00b8 */

typedef struct _KTMFREEZE_THAW
{
  /* 0x0000 */ unsigned char Freeze;
  /* 0x0001 */ char Padding_1134[7];
  /* 0x0008 */ unsigned long* ActiveTransactions;
  /* 0x0010 */ struct _KEVENT* FreezeCompleteEvent;
} KTMFREEZE_THAW, *PKTMFREEZE_THAW; /* size: 0x0018 */

struct TM_LOGREC_VISTA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum TM_LOGREC_TYPE Type;
  /* 0x0008 */ struct _GUID UnitOfWork;
  /* 0x0018 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0020 */ unsigned long EnlistmentCount;
  /* 0x0024 */ unsigned long EnlistmentOffset;
  /* 0x0028 */ unsigned long SecurityDescriptorLength;
  /* 0x002c */ unsigned long SecurityDescriptorOffset;
  /* 0x0030 */ unsigned long TransactionFlags;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct TM_LOGREC_ENLISTMENT
{
  /* 0x0000 */ struct _GUID EnlistmentGuid;
  /* 0x0010 */ struct _GUID RmGuid;
  /* 0x0020 */ struct _GUID InternalCrmEnId;
  /* 0x0030 */ struct _GUID InternalCrmRmId;
  /* 0x0040 */ struct _GUID InternalCrmTmId;
  /* 0x0050 */ unsigned long EnlistmentFlags;
  /* 0x0054 */ unsigned long Padding;
  /* 0x0058 */ unsigned long RecoverInformationLength;
  /* 0x005c */ unsigned long RecoverInformationOffset;
  /* 0x0060 */ unsigned long EnSecurityDescriptorLength;
  /* 0x0064 */ unsigned long EnSecurityDescriptorOffset;
  /* 0x0068 */ unsigned long RmSecurityDescriptorLength;
  /* 0x006c */ unsigned long RmSecurityDescriptorOffset;
}; /* size: 0x0070 */

struct TM_LOGREC_RM_DESCRIPTION
{
  /* 0x0000 */ unsigned long RmDescriptionLength;
  /* 0x0004 */ unsigned long RmDescriptionOffset;
}; /* size: 0x0008 */

typedef struct _DEVICE_CLASS_NOTIFY_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _IO_NOTIFICATION_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ unsigned long SessionId;
  /* 0x0018 */ void* SessionHandle;
  /* 0x0020 */ void* CallbackRoutine /* function */;
  /* 0x0028 */ void* Context;
  /* 0x0030 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0038 */ unsigned short RefCount;
  /* 0x003a */ unsigned char Unregistered;
  /* 0x003b */ char Padding_1135[5];
  /* 0x0040 */ struct _KGUARDED_MUTEX* Lock;
  /* 0x0048 */ struct _ERESOURCE* EntryLock;
  /* 0x0050 */ struct _GUID ClassGuid;
} DEVICE_CLASS_NOTIFY_ENTRY, *PDEVICE_CLASS_NOTIFY_ENTRY; /* size: 0x0060 */

typedef struct _TREE_ENTRY
{
  /* 0x0000 */ struct _TREE_ENTRY* Left;
  /* 0x0008 */ struct _TREE_ENTRY* Right;
  /* 0x0010 */ struct _TREE_ENTRY* Sibling;
  /* 0x0018 */ unsigned long DriversThisType;
  /* 0x001c */ unsigned long DriversLoaded;
  /* 0x0020 */ struct _UNICODE_STRING GroupName;
} TREE_ENTRY, *PTREE_ENTRY; /* size: 0x0030 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT
{
  union
  {
    /* 0x0000 */ struct _IO_STATUS_BLOCK Iosb;
    /* 0x0000 */ volatile union SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT_STORE_COUNT StoreCount;
    struct
    {
      /* 0x0000 */ void* CompletionContext;
      union
      {
        struct /* bitfield */
        {
          /* 0x0008 */ unsigned __int64 Success : 1; /* bit position: 0 */
          /* 0x0008 */ unsigned __int64 AddedToNDStore : 1; /* bit position: 1 */
          /* 0x0008 */ unsigned __int64 Spare : 62; /* bit position: 2 */
        }; /* bitfield */
        /* 0x0008 */ void* volatile EntireFlags;
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

typedef struct _PENDING_RELATIONS_LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0030 */ struct _PNP_DEVICE_EVENT_ENTRY* DeviceEvent;
  /* 0x0038 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0040 */ struct _RELATION_LIST* RelationsList;
  /* 0x0048 */ struct _IRP* EjectIrp;
  /* 0x0050 */ enum IRPLOCK Lock;
  /* 0x0054 */ unsigned long Problem;
  /* 0x0058 */ unsigned char ProfileChangingEject;
  /* 0x0059 */ unsigned char DisplaySafeRemovalDialog;
  /* 0x005a */ char Padding_1136[2];
  /* 0x005c */ enum _SYSTEM_POWER_STATE LightestSleepState;
  /* 0x0060 */ struct DOCK_INTERFACE* DockInterface;
} PENDING_RELATIONS_LIST_ENTRY, *PPENDING_RELATIONS_LIST_ENTRY; /* size: 0x0068 */

typedef struct _EX_RUNDOWN_WAIT_BLOCK
{
  /* 0x0000 */ unsigned __int64 Count;
  /* 0x0008 */ struct _KEVENT WakeEvent;
  /* 0x0020 */ unsigned long WakeValue;
  /* 0x0024 */ long __PADDING__[1];
} EX_RUNDOWN_WAIT_BLOCK, *PEX_RUNDOWN_WAIT_BLOCK; /* size: 0x0028 */

typedef struct _HV_REFRESH_BIN_MAP
{
  /* 0x0000 */ struct _LIST_ENTRY RefreshBinLinks;
  /* 0x0010 */ unsigned long BinOffset;
  /* 0x0014 */ unsigned long BinSize;
  /* 0x0018 */ void* BinAddress;
  /* 0x0020 */ unsigned __int64 BlockAddress;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} HV_REFRESH_BIN_MAP, *PHV_REFRESH_BIN_MAP; /* size: 0x0030 */

typedef struct _ARBITER_ALLOCATION_STATE
{
  /* 0x0000 */ unsigned __int64 Start;
  /* 0x0008 */ unsigned __int64 End;
  /* 0x0010 */ unsigned __int64 CurrentMinimum;
  /* 0x0018 */ unsigned __int64 CurrentMaximum;
  /* 0x0020 */ struct _ARBITER_LIST_ENTRY* Entry;
  /* 0x0028 */ struct _ARBITER_ALTERNATIVE* CurrentAlternative;
  /* 0x0030 */ unsigned long AlternativeCount;
  /* 0x0034 */ long Padding_1137;
  /* 0x0038 */ struct _ARBITER_ALTERNATIVE* Alternatives;
  /* 0x0040 */ unsigned short Flags;
  /* 0x0042 */ unsigned char RangeAttributes;
  /* 0x0043 */ unsigned char RangeAvailableAttributes;
  /* 0x0044 */ long Padding_1138;
  /* 0x0048 */ unsigned __int64 WorkSpace;
} ARBITER_ALLOCATION_STATE, *PARBITER_ALLOCATION_STATE; /* size: 0x0050 */

struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::SEARCH_RESULT
{
  /* 0x0000 */ struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::PATH_ENTRY* SearchPathA;
  /* 0x0008 */ struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::PATH_ENTRY SearchResult;
  /* 0x0018 */ unsigned long EntryCount;
  /* 0x001c */ unsigned long EntryMax;
  /* 0x0020 */ unsigned long ReadOnlyAccess : 1; /* bit position: 0 */
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _SMC_STORE_ENTRY
{
  /* 0x0000 */ unsigned long StoreId;
  /* 0x0004 */ unsigned long RegionIndex;
  /* 0x0008 */ unsigned long RegionCount;
  struct /* bitfield */
  {
    /* 0x000c */ unsigned long StoreManagerType : 2; /* bit position: 0 */
    /* 0x000c */ unsigned long UpdatingSlot : 1; /* bit position: 2 */
    /* 0x000c */ unsigned long Spare : 29; /* bit position: 3 */
  }; /* bitfield */
} SMC_STORE_ENTRY, *PSMC_STORE_ENTRY; /* size: 0x0010 */

typedef struct _ST_ETA_CONTEXT
{
  /* 0x0000 */ unsigned __int64 CurrentETABase;
  /* 0x0008 */ long OutstandingIoCount;
  /* 0x000c */ volatile long OutstandingIoLatency;
  /* 0x0010 */ struct _ST_IO_TIMER* Timers[2];
  /* 0x0020 */ struct _ST_IO_SAMPLE_RATE SampleRates[2];
  /* 0x0028 */ unsigned __int64 LastQueryTime;
  /* 0x0030 */ volatile long Flags;
  /* 0x0034 */ long __PADDING__[1];
} ST_ETA_CONTEXT, *PST_ETA_CONTEXT; /* size: 0x0038 */

struct OBJECT_EVENT_INFO
{
  /* 0x0000 */ struct _WMIGUIDOBJECT* GuidObject;
  /* 0x0008 */ struct _WNODE_HEADER* NextWnode;
}; /* size: 0x0010 */

typedef struct _SEP_FILE_SYSTEM_NOTIFY_CONTEXT
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ struct _LUID LogonId;
} SEP_FILE_SYSTEM_NOTIFY_CONTEXT, *PSEP_FILE_SYSTEM_NOTIFY_CONTEXT; /* size: 0x0028 */

struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE
{
  /* 0x0000 */ long Padding_1139[2];
  union
  {
    struct
    {
      /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE* Child1;
      /* 0x0010 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::INDEX_ENTRY Keys[5];
    } /* size: 0x0058 */ Index;
    struct
    {
      /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE* Next;
      /* 0x0010 */ struct SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY Entries[4];
    } /* size: 0x0068 */ Leaf;
  }; /* size: 0x0068 */
}; /* size: 0x0070 */

typedef struct _GEN_ADDR
{
  /* 0x0000 */ unsigned char AddressSpaceID;
  /* 0x0001 */ unsigned char BitWidth;
  /* 0x0002 */ unsigned char BitOffset;
  /* 0x0003 */ unsigned char AccessSize;
  /* 0x0004 */ union _LARGE_INTEGER Address;
} GEN_ADDR, *PGEN_ADDR; /* size: 0x000c */

typedef struct _SERIAL_PORT_IDENTIFIER
{
  /* 0x0000 */ unsigned long Type;
  union
  {
    union
    {
      /* 0x0004 */ unsigned long PortNumber;
      /* 0x0004 */ struct _GEN_ADDR BaseAddress;
    }; /* size: 0x000c */
  } /* size: 0x000c */ u;
} SERIAL_PORT_IDENTIFIER, *PSERIAL_PORT_IDENTIFIER; /* size: 0x0010 */

typedef struct _LOCATE_IDENTIFIER
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long ElementType;
  /* 0x0008 */ unsigned long ParentOffset;
  /* 0x000c */ wchar_t Path[1];
} LOCATE_IDENTIFIER, *PLOCATE_IDENTIFIER; /* size: 0x000e */

typedef struct _BOOT_ENVIRONMENT_DEVICE
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Pad;
  union
  {
    union
    {
      /* 0x0010 */ struct _BLOCK_IO_IDENTIFIER BlockIo;
      /* 0x0010 */ struct _PARTITION_IDENTIFIER Partition;
      /* 0x0010 */ struct _PARTITION_IDENTIFIER_EX PartitionEx;
      /* 0x0010 */ struct _SERIAL_PORT_IDENTIFIER SerialPort;
      /* 0x0010 */ struct _UDP_IDENTIFIER Udp;
      /* 0x0010 */ struct _LOCATE_IDENTIFIER Locate;
    }; /* size: 0x0038 */
  } /* size: 0x0038 */ u;
} BOOT_ENVIRONMENT_DEVICE, *PBOOT_ENVIRONMENT_DEVICE; /* size: 0x0048 */

typedef struct _PNP_DEVICE_ACTION_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0018 */ enum _PNP_DEVICE_ACTION_REQUEST RequestType;
  /* 0x001c */ unsigned char ReorderingBarrier;
  /* 0x001d */ char Padding_1140[3];
  /* 0x0020 */ unsigned __int64 RequestArgument;
  /* 0x0028 */ struct _KEVENT* CompletionEvent;
  /* 0x0030 */ long* CompletionStatus;
} PNP_DEVICE_ACTION_ENTRY, *PPNP_DEVICE_ACTION_ENTRY; /* size: 0x0038 */

typedef struct _PNP_DEVICE_EVENT_LIST
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ long Padding_1141;
  /* 0x0008 */ struct _KMUTANT EventQueueMutex;
  /* 0x0040 */ struct _KGUARDED_MUTEX Lock;
  /* 0x0078 */ struct _LIST_ENTRY List;
} PNP_DEVICE_EVENT_LIST, *PPNP_DEVICE_EVENT_LIST; /* size: 0x0088 */

typedef struct _PNP_DEVICE_REFERENCE
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ struct _UNICODE_STRING* DeviceInstance;
} PNP_DEVICE_REFERENCE, *PPNP_DEVICE_REFERENCE; /* size: 0x0010 */

typedef struct _PNP_ASSIGN_RESOURCES_CONTEXT
{
  /* 0x0000 */ unsigned long IncludeFailedDevices;
  /* 0x0004 */ unsigned long DeviceCount;
  /* 0x0008 */ struct _DEVICE_OBJECT* DeviceList[1];
} PNP_ASSIGN_RESOURCES_CONTEXT, *PPNP_ASSIGN_RESOURCES_CONTEXT; /* size: 0x0010 */

typedef struct _REQ_DESC
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ unsigned char ArbitrationRequired;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ long Padding_1142;
  /* 0x0010 */ struct _REQ_ALTERNATIVE* ReqAlternative;
  /* 0x0018 */ unsigned long ReqDescIndex;
  /* 0x001c */ long Padding_1143;
  /* 0x0020 */ struct _REQ_DESC* TranslatedReqDesc;
  /* 0x0028 */ struct _ARBITER_LIST_ENTRY AlternativeTable;
  /* 0x0088 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR Allocation;
  /* 0x009c */ long Padding_1144;
  /* 0x00a0 */ struct _ARBITER_LIST_ENTRY BestAlternativeTable;
  /* 0x0100 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR BestAllocation;
  /* 0x0114 */ unsigned long DevicePrivateCount;
  /* 0x0118 */ struct _IO_RESOURCE_DESCRIPTOR* DevicePrivate;
  union
  {
    union
    {
      /* 0x0120 */ struct _PI_RESOURCE_ARBITER_ENTRY* Arbiter;
      /* 0x0120 */ struct _PI_RESOURCE_TRANSLATOR_ENTRY* Translator;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} REQ_DESC, *PREQ_DESC; /* size: 0x0128 */

typedef struct _ALT_RESOURCE_MODULE
{
  /* 0x0000 */ unsigned short LangId;
  /* 0x0002 */ char Padding_1145[6];
  /* 0x0008 */ void* ModuleBase;
  /* 0x0010 */ void* ModuleManifest;
  /* 0x0018 */ unsigned long ModuleCheckSum;
  /* 0x001c */ long Padding_1146;
  /* 0x0020 */ void* AlternateModule;
  /* 0x0028 */ void* AlternateFileHandle;
  /* 0x0030 */ unsigned __int64 AlternateFileSize;
  /* 0x0038 */ unsigned int CMFSegmentIndex;
  /* 0x003c */ unsigned int CMFResourceOnlySegIndex;
  /* 0x0040 */ unsigned long ErrorCode;
  /* 0x0044 */ long __PADDING__[1];
} ALT_RESOURCE_MODULE, *PALT_RESOURCE_MODULE; /* size: 0x0048 */

typedef struct _PNP_DIAGNOSTIC_COMPLETION_CONTEXT
{
  /* 0x0000 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0008 */ struct _KEVENT Event;
  /* 0x0020 */ long Status;
  /* 0x0024 */ long __PADDING__[1];
} PNP_DIAGNOSTIC_COMPLETION_CONTEXT, *PPNP_DIAGNOSTIC_COMPLETION_CONTEXT; /* size: 0x0028 */

typedef struct _DEFERRED_REGISTRATION_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _NOTIFY_ENTRY_HEADER* NotifyEntry;
} DEFERRED_REGISTRATION_ENTRY, *PDEFERRED_REGISTRATION_ENTRY; /* size: 0x0018 */

typedef struct _SQM_STREAM_ENTRY
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1147;
  union
  {
    union
    {
      /* 0x0008 */ const wchar_t* pwszVal;
      /* 0x0008 */ unsigned long dwVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ val;
} SQM_STREAM_ENTRY, *PSQM_STREAM_ENTRY; /* size: 0x0010 */

typedef struct _REGISTRATIONWORKITEM
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _REGOPERATION RegOperation;
  /* 0x0014 */ long Padding_1148;
  /* 0x0018 */ struct _REGENTRY* RegEntry;
} REGISTRATIONWORKITEM, *PREGISTRATIONWORKITEM; /* size: 0x0020 */

typedef struct _PNPR_MEMORY_BITMAP_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ unsigned __int64 StartPfn;
  /* 0x0018 */ unsigned __int64 Pages;
  /* 0x0020 */ struct _RTL_BITMAP Bitmap;
} PNPR_MEMORY_BITMAP_ENTRY, *PPNPR_MEMORY_BITMAP_ENTRY; /* size: 0x0030 */

typedef struct _ASYNC_TDC_WORK_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0028 */ void* Callback /* function */;
  /* 0x0030 */ void* Context;
  /* 0x0038 */ struct _TARGET_DEVICE_CUSTOM_NOTIFICATION* NotificationStructure;
} ASYNC_TDC_WORK_ITEM, *PASYNC_TDC_WORK_ITEM; /* size: 0x0040 */

struct PLUGPLAY_CONTROL_HANDLER_DATA
{
  /* 0x0000 */ enum _PLUGPLAY_CONTROL_CLASS ControlCode;
  /* 0x0004 */ unsigned long ControlDataSize;
  /* 0x0008 */ void* ControlFunction /* function */;
}; /* size: 0x0010 */

typedef struct _START_CONTEXT
{
  /* 0x0000 */ unsigned char NewDevice;
  /* 0x0001 */ char Padding_1149[3];
  /* 0x0004 */ struct _ADD_CONTEXT AddContext;
} START_CONTEXT, *PSTART_CONTEXT; /* size: 0x000c */

typedef struct _MMVIEW
{
  /* 0x0000 */ unsigned __int64 Entry;
  union
  {
    /* 0x0008 */ unsigned __int64 Writable : 1; /* bit position: 0 */
    /* 0x0008 */ struct _CONTROL_AREA* ControlArea;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct _LIST_ENTRY ViewLinks;
  /* 0x0020 */ void* SessionViewVa;
  /* 0x0028 */ unsigned long SessionId;
  /* 0x002c */ long __PADDING__[1];
} MMVIEW, *PMMVIEW; /* size: 0x0030 */

typedef struct _PNP_REPLACE_ARGUMENTS
{
  /* 0x0000 */ struct _DEVICE_OBJECT* TargetPdo;
  /* 0x0008 */ struct _DEVICE_OBJECT* SparePdo;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long Status;
  /* 0x0018 */ struct _KEVENT CompletionEvent;
  /* 0x0030 */ struct _WORK_QUEUE_ITEM WorkQueueItem;
} PNP_REPLACE_ARGUMENTS, *PPNP_REPLACE_ARGUMENTS; /* size: 0x0050 */

typedef struct _RTL_CHASH_TABLE
{
  /* 0x0000 */ struct _RTL_CHASH_ENTRY* Table;
  /* 0x0008 */ unsigned long EntrySizeShift;
  /* 0x000c */ unsigned long EntryMax;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ long __PADDING__[1];
} RTL_CHASH_TABLE, *PRTL_CHASH_TABLE; /* size: 0x0018 */

struct DIRWALK_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _UNICODE_STRING Directory;
  /* 0x0020 */ wchar_t Name[1];
  /* 0x0022 */ char __PADDING__[6];
}; /* size: 0x0028 */

typedef struct _ETW_RESERVED_BUFFER_INFO
{
  /* 0x0000 */ struct _WMI_LOGGER_CONTEXT* LoggerContext;
  /* 0x0008 */ struct _EVENT_HEADER* EventHeader;
  /* 0x0010 */ struct _ETW_BUFFER_HANDLE BufferHandle;
  /* 0x0020 */ unsigned long EventSize;
  /* 0x0024 */ long __PADDING__[1];
} ETW_RESERVED_BUFFER_INFO, *PETW_RESERVED_BUFFER_INFO; /* size: 0x0028 */

typedef struct _ETW_RESERVED_BUFFERS
{
  /* 0x0000 */ struct _ETW_RESERVED_BUFFER_INFO BufferInfo[8];
  /* 0x0140 */ unsigned long ReservedCount;
  /* 0x0144 */ long __PADDING__[1];
} ETW_RESERVED_BUFFERS, *PETW_RESERVED_BUFFERS; /* size: 0x0148 */

typedef struct _ETW_SESSION_INFO
{
  /* 0x0000 */ struct _GUID SessionGuid;
  /* 0x0010 */ unsigned char SecureSession;
  /* 0x0011 */ unsigned char PagedSession;
  /* 0x0012 */ unsigned char PrivateSession;
  /* 0x0013 */ char __PADDING__[1];
} ETW_SESSION_INFO, *PETW_SESSION_INFO; /* size: 0x0014 */

typedef struct _cm_token
{
  /* 0x0000 */ enum _tokentype Type;
  /* 0x0004 */ long Padding_1150;
  /* 0x0008 */ char* pValue;
  /* 0x0010 */ unsigned char Allocated;
  /* 0x0011 */ char __PADDING__[7];
} cm_token, *Pcm_token; /* size: 0x0018 */

struct BcFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
}; /* size: 0x0028 */

typedef struct _PSP_USER_APC_RESERVE
{
  /* 0x0000 */ struct _MEMORY_RESERVE_HEADER Header;
  /* 0x0004 */ long Padding_1151;
  /* 0x0008 */ struct _KAPC UserApc;
} PSP_USER_APC_RESERVE, *PPSP_USER_APC_RESERVE; /* size: 0x0060 */

typedef struct _DUMP_STACK_IMAGE
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _LDR_DATA_TABLE_ENTRY* Image;
  /* 0x0018 */ void* ImageBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ unsigned long Flags;
} DUMP_STACK_IMAGE, *PDUMP_STACK_IMAGE; /* size: 0x0028 */

typedef struct _CpuContext_amd6432
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ struct _WOW64_CONTEXT Context;
  /* 0x02d0 */ unsigned long TrapFrameFlags;
} CpuContext_amd6432, *PCpuContext_amd6432; /* size: 0x02d4 */

struct PROCESS_DRIVER_CONTEXT
{
  /* 0x0000 */ unsigned char Add;
}; /* size: 0x0001 */

typedef struct _SYSID_TABLE_ENTRY
{
  /* 0x0000 */ unsigned char Type[6];
  /* 0x0006 */ unsigned char Checksum;
  /* 0x0007 */ unsigned short Length;
  /* 0x0009 */ unsigned char Data[1];
} SYSID_TABLE_ENTRY, *PSYSID_TABLE_ENTRY; /* size: 0x000a */

typedef struct _OB_TEMP_BUFFER
{
  /* 0x0000 */ struct _ACCESS_STATE LocalAccessState;
  /* 0x00a0 */ struct _OBJECT_CREATE_INFORMATION ObjectCreateInfo;
  /* 0x00e0 */ struct _AUX_ACCESS_DATA AuxData;
  /* 0x01b8 */ struct _OBP_LOOKUP_CONTEXT LookupContext;
} OB_TEMP_BUFFER, *POB_TEMP_BUFFER; /* size: 0x01d8 */

typedef struct _JOB_WORKING_SET_CHANGE_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _EPROCESS* Process;
} JOB_WORKING_SET_CHANGE_RECORD, *PJOB_WORKING_SET_CHANGE_RECORD; /* size: 0x0018 */

typedef struct _RTL_UCSCHAR_DECODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned long UcsCharacter;
  /* 0x0004 */ long Padding_1152;
  union
  {
    /* 0x0008 */ long FailureReason;
    /* 0x0008 */ const unsigned char* NewCursorValue;
  }; /* size: 0x0008 */
} RTL_UCSCHAR_DECODER_RETURN_VALUE, *PRTL_UCSCHAR_DECODER_RETURN_VALUE; /* size: 0x0010 */

typedef union _PSP_GLOBAL_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    /* 0x0000 */ unsigned long DevOverrideEnabled : 1; /* bit position: 0 */
  }; /* size: 0x0004 */
} PSP_GLOBAL_FLAGS, *PPSP_GLOBAL_FLAGS; /* size: 0x0004 */

struct CLEAR_PROBLEM_CONTEXT
{
  /* 0x0000 */ unsigned long Problem;
  /* 0x0004 */ unsigned long Restart;
  /* 0x0008 */ unsigned long Limit;
}; /* size: 0x000c */

typedef struct _LOCK_QUEUE
{
  /* 0x0000 */ unsigned __int64 QueueSpinLock;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS* SharedLockTree;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS* ExclusiveLockTree;
  /* 0x0018 */ struct _SINGLE_LIST_ENTRY WaitingLocks;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY WaitingLocksTail;
} LOCK_QUEUE, *PLOCK_QUEUE; /* size: 0x0028 */

typedef struct _LOCK_INFO
{
  /* 0x0000 */ unsigned __int64 LowestLockOffset;
  /* 0x0008 */ void* CompleteLockIrpRoutine /* function */;
  /* 0x0010 */ void* UnlockRoutine /* function */;
  /* 0x0018 */ struct _LOCK_QUEUE LockQueue;
} LOCK_INFO, *PLOCK_INFO; /* size: 0x0040 */

typedef struct _MMPTE_EXPANDED_FLUSH_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaximumCount;
  /* 0x0008 */ void* FlushVa[256];
} MMPTE_EXPANDED_FLUSH_LIST, *PMMPTE_EXPANDED_FLUSH_LIST; /* size: 0x0808 */

typedef struct _MI_PAGEFILE_TRACES
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned char Priority;
  /* 0x0005 */ unsigned char IrpPriority;
  /* 0x0006 */ char Padding_1153[2];
  /* 0x0008 */ union _LARGE_INTEGER CurrentTime;
  /* 0x0010 */ unsigned __int64 AvailablePages;
  /* 0x0018 */ unsigned __int64 ModifiedPagesTotal;
  /* 0x0020 */ unsigned __int64 ModifiedPagefilePages;
  /* 0x0028 */ unsigned __int64 ModifiedNoWritePages;
  struct
  {
    /* 0x0030 */ struct _MDL Mdl;
    /* 0x0060 */ unsigned __int64 Page[1];
  } /* size: 0x0038 */ MdlHack;
} MI_PAGEFILE_TRACES, *PMI_PAGEFILE_TRACES; /* size: 0x0068 */

typedef struct _COLORED_PAGE_INFO
{
  /* 0x0000 */ volatile long BeingZeroed;
  /* 0x0004 */ unsigned long Processor;
  /* 0x0008 */ unsigned __int64 PagesQueued;
  /* 0x0010 */ struct _MMPFN* PfnAllocation;
} COLORED_PAGE_INFO, *PCOLORED_PAGE_INFO; /* size: 0x0018 */

typedef struct _SYSID_EPS_HEADER
{
  /* 0x0000 */ unsigned char Signature[7];
  /* 0x0007 */ unsigned char Checksum;
  /* 0x0008 */ unsigned short Length;
  /* 0x000a */ unsigned long SysIdTableAddress;
  /* 0x000e */ unsigned short SysIdCount;
  /* 0x0010 */ unsigned char BiosRev;
} SYSID_EPS_HEADER, *PSYSID_EPS_HEADER; /* size: 0x0011 */

typedef union _BCD_UNPACKED_OBJECT_TYPE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved : 28; /* bit position: 0 */
      /* 0x0000 */ unsigned long ObjectType : 4; /* bit position: 28 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Type : 20; /* bit position: 0 */
        /* 0x0000 */ unsigned long ImageType : 4; /* bit position: 20 */
        /* 0x0000 */ unsigned long Reserved : 4; /* bit position: 24 */
        /* 0x0000 */ unsigned long ObjectType : 4; /* bit position: 28 */
      }; /* bitfield */
    } /* size: 0x0004 */ Application;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Value : 20; /* bit position: 0 */
        /* 0x0000 */ unsigned long Class : 4; /* bit position: 20 */
        /* 0x0000 */ unsigned long Reserved : 4; /* bit position: 24 */
        /* 0x0000 */ unsigned long ObjectType : 4; /* bit position: 28 */
      }; /* bitfield */
    } /* size: 0x0004 */ Inherited;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Reserved : 28; /* bit position: 0 */
        /* 0x0000 */ unsigned long ObjectType : 4; /* bit position: 28 */
      }; /* bitfield */
    } /* size: 0x0004 */ Device;
    /* 0x0000 */ unsigned long PackedValue;
  }; /* size: 0x0004 */
} BCD_UNPACKED_OBJECT_TYPE, *PBCD_UNPACKED_OBJECT_TYPE; /* size: 0x0004 */

typedef struct _SUBSECTION
{
  /* 0x0000 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0008 */ struct _MMPTE* SubsectionBase;
  /* 0x0010 */ struct _SUBSECTION* NextSubsection;
  /* 0x0018 */ unsigned long PtesInSubsection;
  /* 0x001c */ long Padding_1154;
  union
  {
    /* 0x0020 */ unsigned long UnusedPtes;
    /* 0x0020 */ struct _MM_AVL_TABLE* GlobalPerSessionHead;
  }; /* size: 0x0008 */
  union
  {
    union
    {
      /* 0x0028 */ unsigned long LongFlags;
      /* 0x0028 */ struct _MMSUBSECTION_FLAGS SubsectionFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x002c */ unsigned long StartingSector;
  /* 0x0030 */ unsigned long NumberOfFullSectors;
  /* 0x0034 */ long __PADDING__[1];
} SUBSECTION, *PSUBSECTION; /* size: 0x0038 */

typedef struct _SEGMENT
{
  /* 0x0000 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0008 */ unsigned long TotalNumberOfPtes;
  /* 0x000c */ struct _SEGMENT_FLAGS SegmentFlags;
  /* 0x0010 */ unsigned __int64 NumberOfCommittedPages;
  /* 0x0018 */ unsigned __int64 SizeOfSegment;
  union
  {
    /* 0x0020 */ struct _MMEXTEND_INFO* ExtendInfo;
    /* 0x0020 */ void* BasedAddress;
  }; /* size: 0x0008 */
  /* 0x0028 */ struct _EX_PUSH_LOCK SegmentLock;
  union
  {
    union
    {
      /* 0x0030 */ unsigned __int64 ImageCommitment;
      /* 0x0030 */ struct _EPROCESS* CreatingProcess;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  union
  {
    union
    {
      /* 0x0038 */ struct _MI_SECTION_IMAGE_INFORMATION* ImageInformation;
      /* 0x0038 */ void* FirstMappedVa;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
  /* 0x0040 */ struct _MMPTE* PrototypePte;
  /* 0x0048 */ struct _MMPTE ThePtes[1];
} SEGMENT, *PSEGMENT; /* size: 0x0050 */

typedef struct _EMP_CALLBACK_LIST_ENTRY
{
  /* 0x0000 */ struct _EMP_CALLBACK_DB_RECORD* CallbackRecord;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY CallbackListEntry;
} EMP_CALLBACK_LIST_ENTRY, *PEMP_CALLBACK_LIST_ENTRY; /* size: 0x0010 */

typedef struct _MI_SECTION_CREATION_GATE
{
  /* 0x0000 */ struct _MI_SECTION_CREATION_GATE* Next;
  /* 0x0008 */ struct _KGATE Gate;
} MI_SECTION_CREATION_GATE, *PMI_SECTION_CREATION_GATE; /* size: 0x0020 */

typedef struct _MSUBSECTION
{
  /* 0x0000 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0008 */ struct _MMPTE* SubsectionBase;
  union
  {
    /* 0x0010 */ struct _SUBSECTION* NextSubsection;
    /* 0x0010 */ struct _MSUBSECTION* NextMappedSubsection;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long PtesInSubsection;
  /* 0x001c */ long Padding_1155;
  union
  {
    /* 0x0020 */ unsigned long UnusedPtes;
    /* 0x0020 */ struct _MM_AVL_TABLE* GlobalPerSessionHead;
  }; /* size: 0x0008 */
  union
  {
    union
    {
      /* 0x0028 */ unsigned long LongFlags;
      /* 0x0028 */ struct _MMSUBSECTION_FLAGS SubsectionFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x002c */ unsigned long StartingSector;
  /* 0x0030 */ unsigned long NumberOfFullSectors;
  /* 0x0034 */ long Padding_1156;
  union
  {
    union
    {
      /* 0x0038 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0038 */ struct _MMSUBSECTION_NODE* Parent;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0040 */ struct _MMSUBSECTION_NODE* LeftChild;
  /* 0x0048 */ struct _MMSUBSECTION_NODE* RightChild;
  /* 0x0050 */ struct _LIST_ENTRY DereferenceList;
  /* 0x0060 */ unsigned __int64 NumberOfMappedViews;
} MSUBSECTION, *PMSUBSECTION; /* size: 0x0068 */

typedef struct _MI_REVERSE_VIEW_MAP
{
  /* 0x0000 */ struct _LIST_ENTRY ViewLinks;
  union
  {
    /* 0x0010 */ void* SystemCacheVa;
    /* 0x0010 */ void* SessionViewVa;
    /* 0x0010 */ struct _EPROCESS* VadsProcess;
    /* 0x0010 */ unsigned __int64 Type : 2; /* bit position: 0 */
  }; /* size: 0x0008 */
  /* 0x0018 */ struct _SUBSECTION* Subsection;
  /* 0x0020 */ unsigned __int64 SectionOffset;
} MI_REVERSE_VIEW_MAP, *PMI_REVERSE_VIEW_MAP; /* size: 0x0028 */

typedef struct _MI_SYSTEM_CACHE_IMAGE
{
  /* 0x0000 */ void* BaseVa;
  /* 0x0008 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0010 */ unsigned long SessionId;
  /* 0x0014 */ unsigned long NumberOfPtes;
  /* 0x0018 */ unsigned long CacheViewPtes;
  /* 0x001c */ long __PADDING__[1];
} MI_SYSTEM_CACHE_IMAGE, *PMI_SYSTEM_CACHE_IMAGE; /* size: 0x0020 */

typedef struct _MI_COLOR_BASE
{
  /* 0x0000 */ unsigned short* ColorPointer;
  /* 0x0008 */ unsigned short ColorMask;
  /* 0x000a */ unsigned short ColorNode;
  /* 0x000c */ long __PADDING__[1];
} MI_COLOR_BASE, *PMI_COLOR_BASE; /* size: 0x0010 */

typedef struct _MMPAGING_FILE
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned __int64 MaximumSize;
  /* 0x0010 */ unsigned __int64 MinimumSize;
  /* 0x0018 */ unsigned __int64 FreeSpace;
  /* 0x0020 */ unsigned __int64 PeakUsage;
  /* 0x0028 */ unsigned __int64 HighestPage;
  /* 0x0030 */ struct _FILE_OBJECT* File;
  /* 0x0038 */ struct _MMMOD_WRITER_MDL_ENTRY* Entry[2];
  /* 0x0048 */ struct _UNICODE_STRING PageFileName;
  /* 0x0058 */ struct _RTL_BITMAP* volatile Bitmap;
  /* 0x0060 */ struct _RTL_BITMAP* volatile EvictStoreBitmap;
  /* 0x0068 */ unsigned long BitmapHint;
  /* 0x006c */ unsigned long LastAllocationSize;
  /* 0x0070 */ unsigned long ToBeEvictedCount;
  struct /* bitfield */
  {
    /* 0x0074 */ unsigned short PageFileNumber : 4; /* bit position: 0 */
    /* 0x0074 */ unsigned short BootPartition : 1; /* bit position: 4 */
    /* 0x0074 */ unsigned short Spare0 : 11; /* bit position: 5 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0076 */ unsigned short AdriftMdls : 1; /* bit position: 0 */
    /* 0x0076 */ unsigned short Spare1 : 15; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0078 */ void* FileHandle;
  /* 0x0080 */ unsigned __int64 Lock;
  /* 0x0088 */ struct _ETHREAD* LockOwner;
} MMPAGING_FILE, *PMMPAGING_FILE; /* size: 0x0090 */

typedef struct _DELAY_ACK_FO
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _FILE_OBJECT* OriginalFileObject;
} DELAY_ACK_FO, *PDELAY_ACK_FO; /* size: 0x0018 */

typedef struct _MMMOD_WRITER_MDL_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  union
  {
    /* 0x0010 */ struct _IO_STATUS_BLOCK IoStatus;
  } /* size: 0x0010 */ u;
  /* 0x0020 */ struct _IRP* Irp;
  union
  {
    /* 0x0028 */ unsigned __int64 KeepForever;
  } /* size: 0x0008 */ u1;
  /* 0x0030 */ struct _MMPAGING_FILE* PagingFile;
  /* 0x0038 */ struct _FILE_OBJECT* File;
  /* 0x0040 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0048 */ struct _ERESOURCE* FileResource;
  /* 0x0050 */ union _LARGE_INTEGER WriteOffset;
  /* 0x0058 */ union _LARGE_INTEGER IssueTime;
  /* 0x0060 */ struct _MDL* PointerMdl;
  /* 0x0068 */ struct _MDL Mdl;
  /* 0x0098 */ unsigned __int64 Page[1];
} MMMOD_WRITER_MDL_ENTRY, *PMMMOD_WRITER_MDL_ENTRY; /* size: 0x00a0 */

typedef struct _UUID_GENERATE
{
  /* 0x0000 */ unsigned long TimeLow;
  /* 0x0004 */ unsigned short TimeMid;
  /* 0x0006 */ unsigned short TimeHiAndVersion;
  /* 0x0008 */ unsigned char ClockSeqHiAndReserved;
  /* 0x0009 */ unsigned char ClockSeqLow;
  /* 0x000a */ unsigned char NodeId[6];
} UUID_GENERATE, *PUUID_GENERATE; /* size: 0x0010 */

typedef struct _MI_CAPTURED_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned __int64 ImageBase;
  /* 0x0008 */ unsigned long FileAlignment;
  /* 0x000c */ unsigned long SectionAlignment;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long LoaderFlags;
  /* 0x0018 */ unsigned long SizeOfHeaders;
  /* 0x001c */ unsigned long AddressOfEntryPoint;
  /* 0x0020 */ unsigned __int64 SizeOfStackReserve;
  /* 0x0028 */ unsigned __int64 SizeOfStackCommit;
  /* 0x0030 */ unsigned short Magic;
  /* 0x0032 */ unsigned short Subsystem;
  /* 0x0034 */ unsigned short MajorSubsystemVersion;
  /* 0x0036 */ unsigned short MinorSubsystemVersion;
  /* 0x0038 */ unsigned short DllCharacteristics;
  /* 0x003a */ char Padding_1157[2];
  /* 0x003c */ unsigned long CheckSum;
  /* 0x0040 */ unsigned long SizeOfCode;
  /* 0x0044 */ unsigned long IATVa;
  /* 0x0048 */ unsigned long IATBytes;
  /* 0x004c */ unsigned long ComPlusVa;
  /* 0x0050 */ unsigned long ComPlusSize;
  /* 0x0054 */ unsigned long RelocationVa;
  /* 0x0058 */ unsigned long RelocationSize;
  /* 0x005c */ unsigned char ContainsDebug;
  /* 0x005d */ char __PADDING__[3];
} MI_CAPTURED_OPTIONAL_HEADER, *PMI_CAPTURED_OPTIONAL_HEADER; /* size: 0x0060 */

typedef struct _MI_PREFETCH_VA_LIST
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListHead;
  /* 0x0008 */ void** VaList;
  /* 0x0010 */ unsigned __int64 VaIndex;
  /* 0x0018 */ unsigned __int64 VaMax;
  /* 0x0020 */ void* StoreParameter;
  /* 0x0028 */ struct _MI_STORE_WRITE_SUPPORT* StoreWriteSupportList;
} MI_PREFETCH_VA_LIST, *PMI_PREFETCH_VA_LIST; /* size: 0x0030 */

typedef struct _MI_CREATE_IMAGE_SECTION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long EntireFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ActiveDataReferences : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long SectionCommit : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ImageCommit : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long SingleSubsection : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long CheckSplitPages : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long ImageOk : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long InvalidAlignmentAllowed : 1; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_CREATE_IMAGE_SECTION_FLAGS, *PMI_CREATE_IMAGE_SECTION_FLAGS; /* size: 0x0004 */

typedef struct _BCDE_OBJECT
{
  /* 0x0000 */ struct _GUID Object;
} BCDE_OBJECT, *PBCDE_OBJECT; /* size: 0x0010 */

typedef union _DL_EUI48
{
  /* 0x0000 */ unsigned char Byte[6];
} DL_EUI48, *PDL_EUI48; /* size: 0x0006 */

typedef struct _EMP_RULE_LIST_ENTRY
{
  /* 0x0000 */ struct _EMP_RULE_DB_RECORD* RuleRecord;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY RuleListEntry;
  /* 0x0010 */ void* Context;
} EMP_RULE_LIST_ENTRY, *PEMP_RULE_LIST_ENTRY; /* size: 0x0018 */

typedef struct _EMP_NODE_LINK
{
  /* 0x0000 */ enum EMP_NODE_TYPE Type;
  /* 0x0004 */ long Padding_1158;
  union
  {
    /* 0x0008 */ struct _EMP_LOGIC_NODE* Logic;
    /* 0x0008 */ struct _EMP_CALLBACK_DB_RECORD* Callback;
    /* 0x0008 */ struct _EMP_RULE_DB_RECORD* Rule;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long CallbackMappingCount;
  /* 0x0014 */ long Padding_1159;
  /* 0x0018 */ unsigned long* CallbackMapping;
} EMP_NODE_LINK, *PEMP_NODE_LINK; /* size: 0x0020 */

typedef struct _EMP_CALLBACK_DB_RECORD
{
  /* 0x0000 */ struct _GUID CallbackId;
  /* 0x0010 */ void* CallbackFunc /* function */;
  /* 0x0018 */ long CallbackFuncReference;
  /* 0x001c */ long Padding_1160;
  /* 0x0020 */ void* Context;
  /* 0x0028 */ struct _SINGLE_LIST_ENTRY List;
  /* 0x0030 */ struct _SINGLE_LIST_ENTRY CallbackDependencyListHead;
  /* 0x0038 */ unsigned long NumberOfStrings;
  /* 0x003c */ unsigned long NumberOfNumerics;
  /* 0x0040 */ unsigned long NumberOfEntries;
  /* 0x0044 */ long Padding_1161;
  /* 0x0048 */ struct _EMP_ENTRY_DB_RECORD* EntryList[1];
} EMP_CALLBACK_DB_RECORD, *PEMP_CALLBACK_DB_RECORD; /* size: 0x0050 */

typedef struct _EMP_RULE_DB_RECORD
{
  /* 0x0000 */ struct _GUID RuleId;
  /* 0x0010 */ enum EM_RULE_STATE EvalState;
  /* 0x0014 */ unsigned char ReadyFlag;
  /* 0x0015 */ char Padding_1162[3];
  /* 0x0018 */ struct _SINGLE_LIST_ENTRY List;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY RuleDependencyListHead;
  /* 0x0028 */ unsigned long NumberOfStrings;
  /* 0x002c */ unsigned long NumberOfNumerics;
  /* 0x0030 */ unsigned long NumberOfEntries;
  /* 0x0034 */ long Padding_1163;
  /* 0x0038 */ struct _EMP_ENTRY_DB_RECORD** EntryList;
  /* 0x0040 */ struct _SINGLE_LIST_ENTRY RequiredCallbackListHead;
  /* 0x0048 */ struct _SINGLE_LIST_ENTRY RequiredRuleListHead;
  /* 0x0050 */ struct _LIST_ENTRY RuleStateNotifyListHead;
  /* 0x0060 */ struct _EMP_NODE_LINK* RuleExpression;
} EMP_RULE_DB_RECORD, *PEMP_RULE_DB_RECORD; /* size: 0x0068 */

typedef struct _EMP_CLIENT_NOTIFICATION_HANDLE
{
  /* 0x0000 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0008 */ struct _EMP_RULE_NOTIFY* RuleNotificationList;
  /* 0x0010 */ unsigned long NumberOfRuleNotifications;
  /* 0x0014 */ long __PADDING__[1];
} EMP_CLIENT_NOTIFICATION_HANDLE, *PEMP_CLIENT_NOTIFICATION_HANDLE; /* size: 0x0018 */

typedef struct _WHEAP_INFO_BLOCK
{
  /* 0x0000 */ unsigned long ErrorSourceCount;
  /* 0x0004 */ long Padding_1164;
  /* 0x0008 */ struct _WHEAP_ERROR_SOURCE_TABLE* ErrorSourceTable;
  /* 0x0010 */ struct _WHEAP_WORK_QUEUE* WorkQueue;
} WHEAP_INFO_BLOCK, *PWHEAP_INFO_BLOCK; /* size: 0x0018 */

typedef struct _MTRR_INFO
{
  /* 0x0000 */ struct _MTRR_DEFAULT Default;
  /* 0x0008 */ struct _MTRR_CAPABILITIES Capabilities;
  /* 0x0018 */ unsigned char DefaultCachedType;
  /* 0x0019 */ unsigned char RangesValid;
  /* 0x001a */ unsigned char MtrrWorkaround;
  /* 0x001b */ unsigned char ExtendedType;
  /* 0x001c */ unsigned char NoRange;
  /* 0x001d */ unsigned char MaxRange;
  /* 0x001e */ char Padding_1165[2];
  /* 0x0020 */ struct _ONE_RANGE* Ranges;
  /* 0x0028 */ unsigned __int64* FixedMTRR;
} MTRR_INFO, *PMTRR_INFO; /* size: 0x0030 */

typedef struct _WDIP_SEM_PROVIDER_ENTRY
{
  /* 0x0000 */ struct _GUID ProviderGuid;
  /* 0x0010 */ struct _WDIP_SEM_ENABLE_DISABLE_INFO DiagLogEnableDisableInfo;
  /* 0x0030 */ struct _WDIP_SEM_ENABLE_DISABLE_INFO ContextLogEnableDisableInfo;
} WDIP_SEM_PROVIDER_ENTRY, *PWDIP_SEM_PROVIDER_ENTRY; /* size: 0x0050 */

struct tagVS_FIXEDFILEINFO
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwStrucVersion;
  /* 0x0008 */ unsigned long dwFileVersionMS;
  /* 0x000c */ unsigned long dwFileVersionLS;
  /* 0x0010 */ unsigned long dwProductVersionMS;
  /* 0x0014 */ unsigned long dwProductVersionLS;
  /* 0x0018 */ unsigned long dwFileFlagsMask;
  /* 0x001c */ unsigned long dwFileFlags;
  /* 0x0020 */ unsigned long dwFileOS;
  /* 0x0024 */ unsigned long dwFileType;
  /* 0x0028 */ unsigned long dwFileSubtype;
  /* 0x002c */ unsigned long dwFileDateMS;
  /* 0x0030 */ unsigned long dwFileDateLS;
}; /* size: 0x0034 */

typedef struct _RESOURCE_DATAW
{
  /* 0x0000 */ unsigned short TotalSize;
  /* 0x0002 */ unsigned short DataSize;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ wchar_t szName[16];
  /* 0x0026 */ char Padding_1166[2];
  /* 0x0028 */ struct tagVS_FIXEDFILEINFO FixedFileInfo;
} RESOURCE_DATAW, *PRESOURCE_DATAW; /* size: 0x005c */

typedef struct _PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned long Vendor[3];
  struct
  {
    struct /* bitfield */
    {
      /* 0x000c */ unsigned long Stepping : 4; /* bit position: 0 */
      /* 0x000c */ unsigned long Model : 4; /* bit position: 4 */
      /* 0x000c */ unsigned long Family : 4; /* bit position: 8 */
      /* 0x000c */ unsigned long ProcessorType : 2; /* bit position: 12 */
      /* 0x000c */ unsigned long ExtendedModel : 4; /* bit position: 14 */
      /* 0x000c */ unsigned long ExtendedFamily : 8; /* bit position: 18 */
      /* 0x000c */ unsigned long Reserved : 6; /* bit position: 26 */
    }; /* bitfield */
  } /* size: 0x0004 */ ProcessorInfo;
  /* 0x0010 */ unsigned __int64 MicrocodeVersion;
} PROCESSOR_INFORMATION, *PPROCESSOR_INFORMATION; /* size: 0x0018 */

typedef struct _XSAVE_TEST_FEATURE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 FeatureId : 16; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 FeatureSize : 16; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 FeatureOffset : 20; /* bit position: 32 */
      /* 0x0000 */ unsigned __int64 Flags : 4; /* bit position: 52 */
      /* 0x0000 */ unsigned __int64 FeatureProcessorMask : 8; /* bit position: 56 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 FeatureInfo;
  }; /* size: 0x0008 */
} XSAVE_TEST_FEATURE, *PXSAVE_TEST_FEATURE; /* size: 0x0008 */

struct POP_MCB_CONTEXT
{
  /* 0x0000 */ union _LARGE_INTEGER* FirstMcb;
  /* 0x0008 */ union _LARGE_INTEGER* Mcb;
  /* 0x0010 */ unsigned __int64 Base;
}; /* size: 0x0018 */

struct HIBER_WRITE_PAGES_LOCALS
{
  /* 0x0000 */ struct _DUMP_MDL DumpMdl;
  /* 0x0138 */ unsigned __int64 FileBase;
  /* 0x0140 */ unsigned __int64 PhysBase;
  /* 0x0148 */ unsigned __int64 Length;
  /* 0x0150 */ unsigned __int64 McbOffset;
  /* 0x0158 */ union _LARGE_INTEGER IoLocation;
  /* 0x0160 */ union _LARGE_INTEGER pa;
  /* 0x0168 */ struct POP_MCB_CONTEXT* CMcb;
  /* 0x0170 */ void* PageVa;
  /* 0x0178 */ struct _MDL* Mdl;
  /* 0x0180 */ unsigned __int64* MdlPage;
  /* 0x0188 */ unsigned __int64 NoPages;
  /* 0x0190 */ unsigned __int64 FilePage;
  /* 0x0198 */ unsigned long IoLength;
  /* 0x019c */ unsigned long i;
  /* 0x01a0 */ long Status;
  /* 0x01a4 */ long __PADDING__[1];
}; /* size: 0x01a8 */

typedef struct _MI_LARGE_PAGE_DRIVER_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _UNICODE_STRING BaseName;
} MI_LARGE_PAGE_DRIVER_ENTRY, *PMI_LARGE_PAGE_DRIVER_ENTRY; /* size: 0x0020 */

struct tagDATASOURCE
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY MainDSList;
    /* 0x0000 */ struct _LIST_ENTRY FreeDSList;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct CHUNKHEADER* Chunk;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long RefCount;
  /* 0x0020 */ unsigned long Signature;
  /* 0x0024 */ long Padding_1167;
  /* 0x0028 */ struct _LIST_ENTRY ISHead;
  /* 0x0038 */ unsigned long ProviderId;
  /* 0x003c */ unsigned long ProcessId;
  /* 0x0040 */ unsigned short* RegistryPath;
  /* 0x0048 */ unsigned long MofResourceCount;
  /* 0x004c */ long Padding_1168;
  /* 0x0050 */ struct MOFRESOURCE** MofResources;
  /* 0x0058 */ struct MOFRESOURCE* StaticMofResources[4];
  /* 0x0078 */ struct _WMIGUIDOBJECT* RequestObject;
}; /* size: 0x0080 */

typedef struct _OBP_FIND_HANDLE_DATA
{
  /* 0x0000 */ struct _OBJECT_HEADER* ObjectHeader;
  /* 0x0008 */ struct _OBJECT_TYPE* ObjectType;
  /* 0x0010 */ struct _OBJECT_HANDLE_INFORMATION* HandleInformation;
} OBP_FIND_HANDLE_DATA, *POBP_FIND_HANDLE_DATA; /* size: 0x0018 */

struct WMITRACE_NOTIFY_HEADER
{
  /* 0x0000 */ struct _WNODE_HEADER Wnode;
  /* 0x0030 */ unsigned __int64 LoggerContext;
  /* 0x0038 */ unsigned __int64 SecurityToken;
}; /* size: 0x0040 */

typedef struct _EX_HOST
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ volatile long ReferenceCount;
  /* 0x0014 */ long Padding_1169;
  /* 0x0018 */ struct _EX_HOST_REGISTRATION_1 Info;
  /* 0x0040 */ struct _EX_RUNDOWN_REF TableProtection;
  /* 0x0048 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0050 */ void* FunctionTable;
  /* 0x0058 */ unsigned char Sealed : 1; /* bit position: 0 */
  /* 0x0059 */ char __PADDING__[7];
} EX_HOST, *PEX_HOST; /* size: 0x0060 */

typedef struct _ROOT_ENUMERATOR_CONTEXT
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ long Padding_1170;
  /* 0x0008 */ struct _UNICODE_STRING* KeyName;
  /* 0x0010 */ unsigned long MaxDeviceCount;
  /* 0x0014 */ unsigned long DeviceCount;
  /* 0x0018 */ struct _DEVICE_OBJECT** DeviceList;
} ROOT_ENUMERATOR_CONTEXT, *PROOT_ENUMERATOR_CONTEXT; /* size: 0x0020 */

typedef struct _SMBIOS_SYSTEM_INFORMATION_STRUCT
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char Length;
  /* 0x0002 */ unsigned short Handle;
  /* 0x0004 */ unsigned char Manufacturer;
  /* 0x0005 */ unsigned char ProductName;
  /* 0x0006 */ unsigned char Version;
  /* 0x0007 */ unsigned char SerialNumber;
  /* 0x0008 */ unsigned char Uuid[16];
  /* 0x0018 */ unsigned char WakeupType;
  /* 0x0019 */ unsigned char SKUNumber;
  /* 0x001a */ unsigned char Family;
} SMBIOS_SYSTEM_INFORMATION_STRUCT, *PSMBIOS_SYSTEM_INFORMATION_STRUCT; /* size: 0x001b */

struct tagIMAGEFILEDATA
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long Padding_1171;
  /* 0x0010 */ void* hSection;
  /* 0x0018 */ void* pBase;
  /* 0x0020 */ unsigned __int64 ViewSize;
  /* 0x0028 */ unsigned __int64 FileSize;
}; /* size: 0x0030 */

typedef struct _CRASHDMP_CALL_TABLE
{
  /* 0x0000 */ unsigned long MajorVersion;
  /* 0x0004 */ unsigned long MinorVersion;
  /* 0x0008 */ void* DumpInitialize /* function */;
  /* 0x0010 */ void* LoadDumpStack /* function */;
  /* 0x0018 */ void* InitDumpStack /* function */;
  /* 0x0020 */ void* FreeDumpStack /* function */;
  /* 0x0028 */ void* DumpDisable /* function */;
  /* 0x0030 */ void* DumpNotify /* function */;
  /* 0x0038 */ void* DumpWrite /* function */;
  /* 0x0040 */ void* DumpUpdatePhysicalRange /* function */;
} CRASHDMP_CALL_TABLE, *PCRASHDMP_CALL_TABLE; /* size: 0x0048 */

typedef struct _DB
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* pBase;
  /* 0x0010 */ int bWrite;
  /* 0x0014 */ unsigned long dwSize;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ struct _GUID guidDB;
  /* 0x002c */ unsigned long dwIndexes;
  /* 0x0030 */ struct _INDEX_INFO aIndexes[10];
  /* 0x01c0 */ void* hSection;
  /* 0x01c8 */ unsigned long tiStringTable;
  /* 0x01cc */ int bIndexesScanned;
  /* 0x01d0 */ struct _DB* pdbStringTable;
  /* 0x01d8 */ void* pStringHash;
  /* 0x01e0 */ unsigned long dwAllocatedSize;
  /* 0x01e4 */ int bWritingIndexes;
  /* 0x01e8 */ unsigned long tiIndexes;
  /* 0x01ec */ int bUnalignedRead;
  /* 0x01f0 */ struct _UNICODE_STRING ustrTempStringtable;
} DB, *PDB; /* size: 0x0200 */

typedef struct _MI_FLUSH_ARRAY
{
  /* 0x0000 */ struct _MI_FLUSH_ENTRY FlushEntry[8];
  /* 0x0840 */ void* WaitObjects[8];
  /* 0x0880 */ struct _KWAIT_BLOCK WaitBlockArray[8];
} MI_FLUSH_ARRAY, *PMI_FLUSH_ARRAY; /* size: 0x0a00 */

struct tagSDBCONTEXT
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_1172;
  /* 0x0008 */ struct _DB* pdbMain;
  /* 0x0010 */ struct _DB* pdbLocal;
  /* 0x0018 */ unsigned long dwDatabaseCount;
  /* 0x001c */ unsigned long dwDatabaseMask;
  /* 0x0020 */ struct tagSDBENTRY rgSDB[16];
  /* 0x0220 */ void* pFileAttributeCache;
  /* 0x0228 */ void* pfnVerQueryValue /* function */;
  /* 0x0230 */ void* pfnGetFileVersionInfo /* function */;
  /* 0x0238 */ void* pfnGetFileVersionInfoSize /* function */;
  /* 0x0240 */ unsigned long dwRuntimePlatform;
  /* 0x0244 */ unsigned long dwOSSKU;
  /* 0x0248 */ unsigned long dwVistaSKU;
  /* 0x024c */ unsigned long dwSPMask;
  /* 0x0250 */ struct tagUSERSDBLOOKUP* pLookupHead;
  /* 0x0258 */ unsigned short uExeType;
  /* 0x025a */ char Padding_1173[6];
  /* 0x0260 */ void* hPipe;
}; /* size: 0x0268 */

typedef struct _VI_FAULT_POOL_TAG
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long Tag;
  /* 0x0014 */ long __PADDING__[1];
} VI_FAULT_POOL_TAG, *PVI_FAULT_POOL_TAG; /* size: 0x0018 */

typedef struct _VERIFIER_THUNKS_ORDER_DEPENDENT
{
  /* 0x0000 */ struct _VERIFIER_THUNKS RegularThunk;
  /* 0x0018 */ void* VerifierRoutineNoReboot /* function */;
} VERIFIER_THUNKS_ORDER_DEPENDENT, *PVERIFIER_THUNKS_ORDER_DEPENDENT; /* size: 0x0020 */

typedef struct _EX_LOCK
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0018 */ struct _FILE_LOCK_INFO LockInfo;
} EX_LOCK, *PEX_LOCK; /* size: 0x0048 */

typedef struct _CM_CALLBACK_OBJECT_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY KeyBodyListEntry;
  /* 0x0010 */ struct _LIST_ENTRY CallbackListEntry;
  /* 0x0020 */ union _LARGE_INTEGER Cookie;
  /* 0x0028 */ struct _CM_CALLBACK_CONTEXT_BLOCK* CallbackContextBlock;
  /* 0x0030 */ void* Object;
  /* 0x0038 */ void* Context;
} CM_CALLBACK_OBJECT_CONTEXT, *PCM_CALLBACK_OBJECT_CONTEXT; /* size: 0x0040 */

typedef struct _SM_STORE_CONTENTS_UPDATE_RANGE
{
  /* 0x0000 */ unsigned __int64 VolumeOffset;
  /* 0x0008 */ unsigned long Size;
  struct /* bitfield */
  {
    /* 0x000c */ unsigned long StoreBitmap : 8; /* bit position: 0 */
    /* 0x000c */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
} SM_STORE_CONTENTS_UPDATE_RANGE, *PSM_STORE_CONTENTS_UPDATE_RANGE; /* size: 0x0010 */

typedef struct _SM_READYBOOT_PLAN
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long UniqueIdSize : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long RangeCount;
  /* 0x0008 */ unsigned long MultiReadRangeCount;
  /* 0x000c */ unsigned long ReadAfterWriteRangeCount;
  /* 0x0010 */ union _LARGE_INTEGER CreationTime;
  /* 0x0018 */ struct _SM_STORE_CONTENTS_UPDATE_RANGE Ranges[1];
} SM_READYBOOT_PLAN, *PSM_READYBOOT_PLAN; /* size: 0x0028 */

typedef struct _HEADLESS_BLUE_SCREEN_DATA
{
  /* 0x0000 */ unsigned char* Property;
  /* 0x0008 */ unsigned char* XMLData;
  /* 0x0010 */ struct _HEADLESS_BLUE_SCREEN_DATA* Next;
} HEADLESS_BLUE_SCREEN_DATA, *PHEADLESS_BLUE_SCREEN_DATA; /* size: 0x0018 */

typedef struct _MI_STORE_WRITE_SUPPORT
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListEntry;
  /* 0x0008 */ struct _IO_STATUS_BLOCK IoStatus;
  /* 0x0018 */ struct _KEVENT Event;
  /* 0x0030 */ struct _MDL Mdl;
  /* 0x0060 */ unsigned __int64 Page;
} MI_STORE_WRITE_SUPPORT, *PMI_STORE_WRITE_SUPPORT; /* size: 0x0068 */

typedef struct _EMP_PROVIDER_HANDLE
{
  /* 0x0000 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0008 */ struct _EMP_ENTRY_DB_RECORD** ProviderEntryList;
  /* 0x0010 */ unsigned long NumberOfEntries;
  /* 0x0014 */ long Padding_1174;
  /* 0x0018 */ struct _EMP_LAZY_CALLBACK_BLOCK* ProviderEntryLazyCallbackList;
  /* 0x0020 */ unsigned long NumberOfEntryLazyCallbacks;
  /* 0x0024 */ long Padding_1175;
  /* 0x0028 */ struct _EMP_CALLBACK_DB_RECORD** ProviderCallbackList;
  /* 0x0030 */ unsigned long NumberOfCallbacks;
  /* 0x0034 */ long Padding_1176;
  /* 0x0038 */ struct _LIST_ENTRY ProviderEntryInstanceListHead;
} EMP_PROVIDER_HANDLE, *PEMP_PROVIDER_HANDLE; /* size: 0x0048 */

typedef struct _VOLUME_DEVICE_OBJECT
{
  /* 0x0000 */ struct _DEVICE_OBJECT DeviceObject;
  /* 0x0150 */ struct _VCB Vcb;
} VOLUME_DEVICE_OBJECT, *PVOLUME_DEVICE_OBJECT; /* size: 0x0290 */

struct tagSEARCHDBCONTEXT
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_1177;
  /* 0x0008 */ void* hMainFile;
  /* 0x0010 */ void* pImageBase;
  /* 0x0018 */ unsigned __int64 cbImageSize;
  /* 0x0020 */ int bFastMode;
  /* 0x0024 */ long Padding_1178;
  /* 0x0028 */ unsigned short* szFullPath;
  /* 0x0030 */ unsigned short* szDir;
  /* 0x0038 */ unsigned short* szName;
  /* 0x0040 */ unsigned short* szModuleName;
  /* 0x0048 */ const wchar_t* pEnvironment;
  /* 0x0050 */ unsigned short* szProcessHistory;
  /* 0x0058 */ struct tagSEARCHPATH* pSearchParts;
  /* 0x0060 */ int bBypassCache;
  /* 0x0064 */ long __PADDING__[1];
}; /* size: 0x0068 */

struct tagEXE_ENTRY_INFO
{
  /* 0x0000 */ unsigned long tiExe;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
  /* 0x0000 */ void* Callback /* function */;
  /* 0x0008 */ const struct _GUID* ControlGuid;
  /* 0x0010 */ struct _WPP_TRACE_CONTROL_BLOCK* Next;
  /* 0x0018 */ __int64 Logger;
  /* 0x0020 */ struct _UNICODE_STRING* RegistryPath;
  /* 0x0028 */ unsigned char FlagsLen;
  /* 0x0029 */ unsigned char Level;
  /* 0x002a */ unsigned short Reserved;
  /* 0x002c */ unsigned long Flags[1];
  /* 0x0030 */ unsigned long ReservedFlags;
  /* 0x0034 */ long Padding_1179;
  /* 0x0038 */ unsigned __int64 RegHandle;
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK; /* size: 0x0040 */

union WPP_PROJECT_CONTROL_BLOCK
{
  union
  {
    /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK Control;
    /* 0x0000 */ unsigned char ReserveSpace[64];
  }; /* size: 0x0040 */
}; /* size: 0x0040 */

typedef struct _MI_DRIVER_VA
{
  /* 0x0000 */ struct _MI_DRIVER_VA* Next;
  /* 0x0008 */ struct _MMPTE* PointerPte;
  /* 0x0010 */ struct _RTL_BITMAP BitMap;
  /* 0x0020 */ unsigned long Hint;
  /* 0x0024 */ long __PADDING__[1];
} MI_DRIVER_VA, *PMI_DRIVER_VA; /* size: 0x0028 */

typedef struct _KEYED_EVENT_BUCKET
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ struct _LIST_ENTRY WaitQueue;
} KEYED_EVENT_BUCKET, *PKEYED_EVENT_BUCKET; /* size: 0x0018 */

typedef struct _KEYED_EVENT_OBJECT
{
  /* 0x0000 */ struct _KEYED_EVENT_BUCKET Bucket[64];
} KEYED_EVENT_OBJECT, *PKEYED_EVENT_OBJECT; /* size: 0x0600 */

typedef struct _RTL_PATCH_HEADER
{
  /* 0x0000 */ struct _LIST_ENTRY PatchList;
  /* 0x0010 */ void* PatchImageBase;
  /* 0x0018 */ struct _RTL_PATCH_HEADER* NextPatch;
  /* 0x0020 */ unsigned long PatchFlags;
  /* 0x0024 */ long PatchRefCount;
  /* 0x0028 */ struct _HOTPATCH_HEADER* HotpatchHeader;
  /* 0x0030 */ struct _UNICODE_STRING TargetDllName;
  /* 0x0040 */ void* TargetDllBase;
  /* 0x0048 */ struct _KLDR_DATA_TABLE_ENTRY* TargetLdrDataTableEntry;
  /* 0x0050 */ struct _KLDR_DATA_TABLE_ENTRY* PatchLdrDataTableEntry;
  /* 0x0058 */ struct _SYSTEM_HOTPATCH_CODE_INFORMATION* CodeInfo;
  /* 0x0060 */ void* ColdpatchFileHandle;
  /* 0x0068 */ struct _HOTPATCH_MODULE_ENTRY HotpatchModuleEntry;
} RTL_PATCH_HEADER, *PRTL_PATCH_HEADER; /* size: 0x0090 */

typedef struct _HOTPATCH_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long FixupRgnCount;
  /* 0x000c */ unsigned long FixupRgnRva;
  /* 0x0010 */ unsigned long ValidationCount;
  /* 0x0014 */ unsigned long ValidationArrayRva;
  /* 0x0018 */ unsigned long HookCount;
  /* 0x001c */ unsigned long HookArrayRva;
  /* 0x0020 */ unsigned __int64 OrigHotpBaseAddress;
  /* 0x0028 */ unsigned __int64 OrigTargetBaseAddress;
  /* 0x0030 */ unsigned long TargetNameRva;
  /* 0x0034 */ unsigned long ModuleIdMethod;
  union
  {
    union
    {
      /* 0x0038 */ unsigned __int64 Quad;
      /* 0x0038 */ struct _GUID Guid;
      struct
      {
        /* 0x0038 */ struct _GUID Guid;
        /* 0x0048 */ unsigned long Age;
      } /* size: 0x0014 */ PdbSig;
      /* 0x0038 */ unsigned char Hash128[16];
      /* 0x0038 */ unsigned char Hash160[20];
    }; /* size: 0x0014 */
  } /* size: 0x0018 */ TargetModuleIdValue;
} HOTPATCH_HEADER, *PHOTPATCH_HEADER; /* size: 0x0050 */

struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>
{
}; /* size: 0x0018 */

typedef struct _WHEAP_WORK_QUEUE
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
  /* 0x0010 */ unsigned __int64 ListLock;
  /* 0x0018 */ volatile long ItemCount;
  /* 0x001c */ long Padding_1180;
  /* 0x0020 */ struct _KDPC Dpc;
  /* 0x0060 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0080 */ void* WorkRoutine /* function */;
} WHEAP_WORK_QUEUE, *PWHEAP_WORK_QUEUE; /* size: 0x0088 */

typedef struct _SMC_CACHE
{
  /* 0x0000 */ unsigned long CacheId;
  /* 0x0004 */ unsigned long DeviceSectorSize;
  /* 0x0008 */ unsigned long RegionCount;
  /* 0x000c */ long Padding_1181;
  /* 0x0010 */ struct _SMC_CACHE_PARAMETERS CacheParams;
  /* 0x0028 */ struct _SMKM_FILE_INFO FileInfo;
  /* 0x0068 */ struct _ST_ETA_CONTEXT EtaContext;
  /* 0x00a0 */ struct _EX_PUSH_LOCK StoreLock;
  /* 0x00a8 */ struct _SMC_STORE_ENTRY StoreEntries[16];
  /* 0x01a8 */ wchar_t UniqueId[256];
} SMC_CACHE, *PSMC_CACHE; /* size: 0x03a8 */

typedef struct _WHEAP_ERROR_SOURCE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned long FailedAllocations;
  /* 0x0014 */ unsigned long PlatformErrorSourceId;
  /* 0x0018 */ long ErrorCount;
  /* 0x001c */ unsigned long RecordCount;
  /* 0x0020 */ unsigned long RecordLength;
  /* 0x0024 */ unsigned long PoolTag;
  /* 0x0028 */ enum _WHEA_ERROR_SOURCE_TYPE Type;
  /* 0x002c */ long Padding_1182;
  /* 0x0030 */ struct _WHEAP_ERROR_RECORD_WRAPPER* Records;
  /* 0x0038 */ void* Context;
  /* 0x0040 */ unsigned long SectionCount;
  /* 0x0044 */ unsigned long SectionLength;
  /* 0x0048 */ union _LARGE_INTEGER TickCountAtLastError;
  /* 0x0050 */ unsigned long AccumulatedErrors;
  /* 0x0054 */ unsigned long TotalErrors;
  /* 0x0058 */ unsigned char Deferred;
  /* 0x0059 */ struct _WHEA_ERROR_SOURCE_DESCRIPTOR Descriptor;
  /* 0x0425 */ char __PADDING__[3];
} WHEAP_ERROR_SOURCE, *PWHEAP_ERROR_SOURCE; /* size: 0x0428 */

typedef struct _SMKM_REGION_EXTENT
{
  /* 0x0000 */ unsigned long RegionCount;
  /* 0x0004 */ long Padding_1183;
  /* 0x0008 */ unsigned __int64 ByteOffset;
} SMKM_REGION_EXTENT, *PSMKM_REGION_EXTENT; /* size: 0x0010 */

typedef struct _MI_FORK_MAPS
{
  /* 0x0000 */ struct _EPROCESS* ProcessToInitialize;
  /* 0x0008 */ unsigned __int64 PageTableFrameIndex;
  /* 0x0010 */ struct _MMPTE* PointerNewPteBase;
  /* 0x0018 */ struct _MMPTE* PointerNewPte;
  /* 0x0020 */ struct _MMPTE* CurrentPte;
  /* 0x0028 */ void* ScratchVa;
  /* 0x0030 */ void* UsedPageTableEntries;
  /* 0x0038 */ unsigned __int64 LastLargeContainingFrameIncremented;
} MI_FORK_MAPS, *PMI_FORK_MAPS; /* size: 0x0040 */

typedef struct _ST_IO_TIMER
{
  /* 0x0000 */ unsigned long MaxSize;
  /* 0x0004 */ unsigned short QueryCount;
  /* 0x0006 */ unsigned short IoCount;
  /* 0x0008 */ unsigned __int64 EstDuration;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ void* IoContext;
} ST_IO_TIMER, *PST_IO_TIMER; /* size: 0x0020 */

typedef struct _SM_STORE_PARAMETERS
{
  /* 0x0000 */ struct _SM_STORE_BASIC_PARAMS Store;
  /* 0x0010 */ unsigned long Priority;
  union
  {
    /* 0x0014 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned long KernelModeCreate : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned long Spare : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    struct
    {
      /* 0x0018 */ wchar_t FilePath[256];
    } /* size: 0x0200 */ FileBacked;
    struct
    {
      /* 0x0018 */ struct _SM_STORE_CACHE_BACKED_PARAMS CacheBacked;
      /* 0x0040 */ long __PADDING__[118];
    }; /* size: 0x0200 */
  }; /* size: 0x0200 */
} SM_STORE_PARAMETERS, *PSM_STORE_PARAMETERS; /* size: 0x0218 */

typedef struct _CRASHDMP_DUMPBLOCK
{
  /* 0x0000 */ unsigned long MajorVersion;
  /* 0x0004 */ unsigned long MinorVersion;
  /* 0x0008 */ struct _RTL_BITMAP KernelPagesMap;
  /* 0x0018 */ struct _SUMMARY_DUMP64* SummaryDump;
  /* 0x0020 */ struct _LIST_ENTRY* CallbackList;
  /* 0x0028 */ unsigned long BugCheckCode;
  /* 0x002c */ long Padding_1184;
  /* 0x0030 */ unsigned __int64 BugCheckParameter1;
  /* 0x0038 */ unsigned __int64 BugCheckParameter2;
  /* 0x0040 */ unsigned __int64 BugCheckParameter3;
  /* 0x0048 */ unsigned __int64 BugCheckParameter4;
  /* 0x0050 */ struct _CONTEXT RegisterContext;
  /* 0x0520 */ unsigned __int64 KdDataBlock;
  /* 0x0528 */ unsigned __int64 PsActiveProcessHead;
  /* 0x0530 */ unsigned __int64 PsLoadedModuleList;
  /* 0x0538 */ unsigned __int64 MmPfnDatabase;
  /* 0x0540 */ struct _TRIAGE_DUMP64* TriageDumpBuffer;
  /* 0x0548 */ enum _DUMP_TYPES DumpType;
  /* 0x054c */ long Padding_1185;
  /* 0x0550 */ unsigned __int64 Reserved1;
  /* 0x0558 */ unsigned __int64 Reserved2;
} CRASHDMP_DUMPBLOCK, *PCRASHDMP_DUMPBLOCK; /* size: 0x0560 */

struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::ITERATOR
{
  /* 0x0000 */ struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::PATH_ENTRY Entry;
}; /* size: 0x0010 */

typedef struct _BCDE_OBJECT_LIST
{
  /* 0x0000 */ struct _GUID ObjectList[1];
} BCDE_OBJECT_LIST, *PBCDE_OBJECT_LIST; /* size: 0x0010 */

struct COVCONTEXTINFO
{
  /* 0x0000 */ struct _COVERAGE_MODULE_INFO* CurrentModuleInfo;
  /* 0x0008 */ unsigned long ModuleInformationLength;
  /* 0x000c */ unsigned char ListAndReset;
  /* 0x000d */ char Padding_1186[3];
  /* 0x0010 */ struct _UNICODE_STRING ModuleName;
  /* 0x0020 */ unsigned char MD5Hash[16];
  /* 0x0030 */ enum _COVERAGE_REQUEST_CODES RequestType;
  /* 0x0034 */ unsigned long NumberOfModules;
  /* 0x0038 */ unsigned long ReturnLength;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

typedef struct _MI_NODE_INFORMATION
{
  /* 0x0000 */ struct _LIST_ENTRY MemoryNodes;
  /* 0x0010 */ struct _LIST_ENTRY Phase0LargePages;
  /* 0x0020 */ unsigned __int64 InitialNonPagedPoolLowestPage;
  /* 0x0028 */ unsigned __int64 InitialNonPagedPoolHighestPage;
  /* 0x0030 */ unsigned __int64 CachedNonPagedPoolCount;
  /* 0x0038 */ struct _MMPFN* CachedNonPagedPool;
  /* 0x0040 */ unsigned long InitialNonPagedPoolNodeStart;
  /* 0x0044 */ long __PADDING__[1];
} MI_NODE_INFORMATION, *PMI_NODE_INFORMATION; /* size: 0x0048 */

typedef struct _DUMP_STRING
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ wchar_t* Buffer /* zero-length array */;
} DUMP_STRING, *PDUMP_STRING; /* size: 0x0004 */

typedef struct _DUMP_DRIVER_ENTRY64
{
  /* 0x0000 */ unsigned long DriverNameOffset;
  /* 0x0004 */ unsigned long __alignment;
  /* 0x0008 */ struct _KLDR_DATA_TABLE_ENTRY64 LdrEntry;
} DUMP_DRIVER_ENTRY64, *PDUMP_DRIVER_ENTRY64; /* size: 0x0090 */

typedef struct _KFLUSH_RANGE_CONTEXT
{
  /* 0x0000 */ void** Virtual;
  /* 0x0008 */ unsigned long Number;
  /* 0x000c */ unsigned long Range;
} KFLUSH_RANGE_CONTEXT, *PKFLUSH_RANGE_CONTEXT; /* size: 0x0010 */

struct tagSTOREDCACHE
{
  /* 0x0000 */ struct tagSTOREDCACHEHEADER Header;
  /* 0x0080 */ struct tagSTOREDCACHEENTRY Entry;
}; /* size: 0x00b0 */

typedef struct _MMPTE_SINGLE_FLUSH_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaximumCount;
  /* 0x0008 */ void* FlushVa[1];
} MMPTE_SINGLE_FLUSH_LIST, *PMMPTE_SINGLE_FLUSH_LIST; /* size: 0x0010 */

typedef struct _FILE_SYSTEM_RECOGNITION_STRUCTURE
{
  /* 0x0000 */ unsigned char Jmp[3];
  /* 0x0003 */ unsigned char FsName[8];
  /* 0x000b */ unsigned char MustBeZero[5];
  /* 0x0010 */ unsigned long Identifier;
  /* 0x0014 */ unsigned short Length;
  /* 0x0016 */ unsigned short Checksum;
} FILE_SYSTEM_RECOGNITION_STRUCTURE, *PFILE_SYSTEM_RECOGNITION_STRUCTURE; /* size: 0x0018 */

typedef struct _FILE_IMAGE
{
  /* 0x0000 */ void* Image;
  /* 0x0008 */ unsigned long SizeOfImage;
  /* 0x000c */ long Padding_1187;
  /* 0x0010 */ void* CurrentPosition;
} FILE_IMAGE, *PFILE_IMAGE; /* size: 0x0018 */

typedef struct _BCD_OBJECT_DESCRIPTION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Type;
} BCD_OBJECT_DESCRIPTION, *PBCD_OBJECT_DESCRIPTION; /* size: 0x0008 */

typedef struct _BCDE_BOOLEAN
{
  /* 0x0000 */ unsigned char Value;
  /* 0x0001 */ unsigned char Pad;
} BCDE_BOOLEAN, *PBCDE_BOOLEAN; /* size: 0x0002 */

struct ACPI_E820_ENTRY
{
  /* 0x0000 */ union _LARGE_INTEGER Base;
  /* 0x0008 */ union _LARGE_INTEGER Length;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ unsigned long ExtendedAttributes;
}; /* size: 0x0018 */

typedef struct _VI_DEVOBJ
{
  /* 0x0000 */ struct _VF_AVL_TREE_NODE TreeNode;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} VI_DEVOBJ, *PVI_DEVOBJ; /* size: 0x0018 */

struct SM_TRAITS::SMST_MEMORY_STORE_SUPPORT
{
  /* 0x0000 */ unsigned long LastUpdateTime;
  /* 0x0004 */ long Padding_1188;
  /* 0x0008 */ unsigned __int64 LastStandbyRepurposed;
  /* 0x0010 */ unsigned __int64 LastFreePages;
  /* 0x0018 */ unsigned __int64 LastAllocationRate;
  /* 0x0020 */ struct _KTIMER Timer;
  /* 0x0060 */ struct _KDPC Dpc;
  /* 0x00a0 */ void* SmWorkItem;
}; /* size: 0x00a8 */

typedef struct _DMIBIOS_TABLE_HEADER
{
  /* 0x0000 */ unsigned char Signature2[5];
  /* 0x0005 */ unsigned char IntermediateChecksum;
  /* 0x0006 */ unsigned short StructureTableLength;
  /* 0x0008 */ unsigned long StructureTableAddress;
  /* 0x000c */ unsigned short NumberStructures;
  /* 0x000e */ unsigned char Revision;
} DMIBIOS_TABLE_HEADER, *PDMIBIOS_TABLE_HEADER; /* size: 0x000f */

typedef struct _DECODE_CONTEXT
{
  /* 0x0000 */ unsigned char* Start;
  /* 0x0008 */ unsigned char* Next;
  /* 0x0010 */ struct _CONTEXT* ContextRecord;
  /* 0x0018 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0020 */ unsigned char* OpCodeLocation;
  /* 0x0028 */ unsigned long PrefixMask;
  /* 0x002c */ unsigned long GroupMask;
  /* 0x0030 */ unsigned char OpCode;
  /* 0x0031 */ unsigned char TwoByte;
  /* 0x0032 */ unsigned char CompatibilityMode;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0033 */ unsigned char B : 1; /* bit position: 0 */
        /* 0x0033 */ unsigned char X : 1; /* bit position: 1 */
        /* 0x0033 */ unsigned char R : 1; /* bit position: 2 */
        /* 0x0033 */ unsigned char W : 1; /* bit position: 3 */
      }; /* bitfield */
      /* 0x0033 */ unsigned char Byte;
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ Rex;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0034 */ unsigned char rm : 3; /* bit position: 0 */
        /* 0x0034 */ unsigned char reg : 3; /* bit position: 3 */
        /* 0x0034 */ unsigned char mod : 2; /* bit position: 6 */
      }; /* bitfield */
      /* 0x0034 */ unsigned char Byte;
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ ModRM;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0035 */ unsigned char base : 3; /* bit position: 0 */
        /* 0x0035 */ unsigned char index : 3; /* bit position: 3 */
        /* 0x0035 */ unsigned char scale : 2; /* bit position: 6 */
      }; /* bitfield */
      /* 0x0035 */ unsigned char Byte;
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ SIB;
  /* 0x0036 */ char Padding_1189[2];
  /* 0x0038 */ long Displacement;
  /* 0x003c */ long Padding_1190;
  /* 0x0040 */ __int64 Immediate;
  /* 0x0048 */ unsigned char ModRMRead;
  /* 0x0049 */ char PreviousMode;
  /* 0x004a */ char Padding_1191[6];
  /* 0x0050 */ const struct _DECODE_ENTRY* DecodeEntry;
  /* 0x0058 */ unsigned char Retry;
  /* 0x0059 */ char __PADDING__[7];
} DECODE_CONTEXT, *PDECODE_CONTEXT; /* size: 0x0060 */

struct DEVICE_SERVICE_ITERATOR_CONTEXT
{
  /* 0x0000 */ struct _UNICODE_STRING* DeviceInstancePath;
  /* 0x0008 */ void* Iterator /* function */;
  /* 0x0010 */ void* Context;
}; /* size: 0x0018 */

typedef struct _PF_LOG_ENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 FileOffset : 62; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Type : 2; /* bit position: 62 */
  }; /* bitfield */
  union
  {
    /* 0x0008 */ unsigned __int64 FileKey;
    struct
    {
      /* 0x0008 */ unsigned long FileSequenceNumber;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PF_LOG_ENTRY, *PPF_LOG_ENTRY; /* size: 0x0010 */

typedef struct _PFSN_LOG_ENTRIES
{
  /* 0x0000 */ struct _LIST_ENTRY TraceBuffersLink;
  /* 0x0010 */ long NumEntries;
  /* 0x0014 */ long MaxEntries;
  /* 0x0018 */ struct _PF_LOG_ENTRY Entries[1];
} PFSN_LOG_ENTRIES, *PPFSN_LOG_ENTRIES; /* size: 0x0028 */

struct tagGUIDENTRY
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY MainGEList;
    /* 0x0000 */ struct _LIST_ENTRY FreeGEList;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct CHUNKHEADER* Chunk;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long RefCount;
  /* 0x0020 */ unsigned long Signature;
  /* 0x0024 */ unsigned long ISCount;
  /* 0x0028 */ struct _LIST_ENTRY ObjectHead;
  /* 0x0038 */ struct _LIST_ENTRY ISHead;
  /* 0x0048 */ struct _GUID Guid;
  /* 0x0058 */ unsigned long EventRefCount;
  /* 0x005c */ unsigned long CollectRefCount;
  /* 0x0060 */ struct _WMIP_GUIDENTRY_NONPAGED* NonPaged;
  /* 0x0068 */ unsigned __int64 LegacyEtwHandle;
  /* 0x0070 */ unsigned __int64 LegacyEtwToken;
  /* 0x0078 */ unsigned __int64 LegacyEnableContext;
  /* 0x0080 */ struct _WMIP_SYNCHRONOUS_ETW_WORK* LegacyEtwSynchronous;
  /* 0x0088 */ struct _LIST_ENTRY LegacyWorkHead;
  /* 0x0098 */ unsigned long LegacyEtwProviderCount;
  /* 0x009c */ long __PADDING__[1];
}; /* size: 0x00a0 */

typedef struct _MI_VIEW_INFO
{
  /* 0x0000 */ struct _MI_VIEW_INFO* Next;
  /* 0x0008 */ struct _EPROCESS* Process;
  /* 0x0010 */ void* Va;
  /* 0x0018 */ void* EndVa;
  /* 0x0020 */ unsigned __int64 FileOffset;
  /* 0x0028 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0030 */ unsigned long SessionId;
  /* 0x0034 */ unsigned long Type;
} MI_VIEW_INFO, *PMI_VIEW_INFO; /* size: 0x0038 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_FE_SEARCH_RESULT
{
  /* 0x0000 */ struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::SEARCH_RESULT Result;
  /* 0x0028 */ struct B_TREE<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY,4096,B_TREE_DUMMY_NODE_POOL>::PATH_ENTRY SearchPathA[8];
}; /* size: 0x00a8 */

struct tagFILEINFORMATION
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ long Padding_1192;
  /* 0x0008 */ void* hFile;
  /* 0x0010 */ void* pImageBase;
  /* 0x0018 */ unsigned __int64 cbImageSize;
  /* 0x0020 */ int bFastMode;
  /* 0x0024 */ long Padding_1193;
  /* 0x0028 */ struct tagFILEINFORMATION* pNext;
  /* 0x0030 */ unsigned short* FilePath;
  /* 0x0038 */ unsigned long dwFlags;
  /* 0x003c */ long Padding_1194;
  /* 0x0040 */ void* pVersionInfo;
  /* 0x0048 */ unsigned short* pDescription16;
  /* 0x0050 */ unsigned short* pModuleName16;
  /* 0x0058 */ unsigned short* pExportName;
  /* 0x0060 */ struct tagATTRINFO Attributes[1];
}; /* size: 0x0070 */

typedef struct _FS_FILTER_RESERVE
{
  /* 0x0000 */ struct _ETHREAD* Owner;
  /* 0x0008 */ struct _FS_FILTER_COMPLETION_NODE Stack[30];
} FS_FILTER_RESERVE, *PFS_FILTER_RESERVE; /* size: 0x03c8 */

typedef struct _BCD_ELEMENT
{
  /* 0x0000 */ struct _BCD_ELEMENT_DESCRIPTION* Description;
  /* 0x0008 */ void* Data;
} BCD_ELEMENT, *PBCD_ELEMENT; /* size: 0x0010 */

typedef struct _RTLP_VERSION_INFO
{
  /* 0x0000 */ unsigned long OSMajorVersion;
  /* 0x0004 */ unsigned long OSMinorVersion;
  /* 0x0008 */ unsigned long SpMajorVersion;
  /* 0x000c */ unsigned long SpMinorVersion;
} RTLP_VERSION_INFO, *PRTLP_VERSION_INFO; /* size: 0x0010 */

struct POP_LOCAL_CONTEXT
{
  /* 0x0000 */ unsigned long LastState;
  /* 0x0004 */ unsigned char InterruptEnable;
  /* 0x0005 */ unsigned char Irql;
  /* 0x0006 */ unsigned char XStateSaved;
  /* 0x0007 */ char Padding_1195;
  /* 0x0008 */ struct _XSTATE_SAVE XStateSave;
  /* 0x0040 */ long Status;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

typedef struct _SM_STATS_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long DetailLevel : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long StoreId : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* Buffer;
} SM_STATS_REQUEST, *PSM_STATS_REQUEST; /* size: 0x0010 */

typedef struct _line
{
  /* 0x0000 */ struct _line* pNext;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ struct _value* pValue;
  /* 0x0018 */ unsigned char Allocated;
  /* 0x0019 */ char __PADDING__[7];
} line, *Pline; /* size: 0x0020 */

typedef struct _RTL_HASH_TABLE
{
  /* 0x0000 */ unsigned long EntryCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long MaskBitCount : 5; /* bit position: 0 */
    /* 0x0004 */ unsigned long BucketCount : 27; /* bit position: 5 */
  }; /* bitfield */
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY* Buckets;
} RTL_HASH_TABLE, *PRTL_HASH_TABLE; /* size: 0x0010 */

typedef struct _AUTHZBASEP_SECURITY_ATTRIBUTE_VALUE
{
  /* 0x0000 */ struct _LIST_ENTRY ListLink;
  /* 0x0010 */ struct _LIST_ENTRY WorkingListLink;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long Padding_1196;
  union
  {
    union
    {
      /* 0x0028 */ __int64 Int64;
      /* 0x0028 */ unsigned __int64 Uint64;
      /* 0x0028 */ struct _UNICODE_STRING String;
      /* 0x0028 */ struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE Fqbn;
      /* 0x0028 */ struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE OctetString;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Value;
} AUTHZBASEP_SECURITY_ATTRIBUTE_VALUE, *PAUTHZBASEP_SECURITY_ATTRIBUTE_VALUE; /* size: 0x0040 */

typedef struct _RTL_HASH_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY BucketLink;
  /* 0x0008 */ unsigned __int64 Key;
} RTL_HASH_ENTRY, *PRTL_HASH_ENTRY; /* size: 0x0010 */

typedef struct _UUID_CACHED_VALUES_STRUCT
{
  /* 0x0000 */ unsigned __int64 Time;
  /* 0x0008 */ long AllocatedCount;
  /* 0x000c */ unsigned char ClockSeqHiAndReserved;
  /* 0x000d */ unsigned char ClockSeqLow;
  /* 0x000e */ unsigned char NodeId[6];
  /* 0x0014 */ long __PADDING__[1];
} UUID_CACHED_VALUES_STRUCT, *PUUID_CACHED_VALUES_STRUCT; /* size: 0x0018 */

struct IRP_MAJOR_VERIFIER_ROUTINES
{
  /* 0x0000 */ void* DumpIrpStack /* function */;
  /* 0x0008 */ void* VerifyNewRequest /* function */;
  /* 0x0010 */ void* VerifyStackDownward /* function */;
  /* 0x0018 */ void* VerifyStackUpward /* function */;
  /* 0x0020 */ void* IsSystemRestrictedIrp /* function */;
  /* 0x0028 */ void* AdvanceIrpStatus /* function */;
  /* 0x0030 */ void* IsValidIrpStatus /* function */;
  /* 0x0038 */ void* IsNewRequest /* function */;
  /* 0x0040 */ void* VerifyNewIrp /* function */;
  /* 0x0048 */ void* VerifyFinalIrpStack /* function */;
  /* 0x0050 */ void* TestStartedPdoStack /* function */;
  /* 0x0058 */ void* BuildIrpLogEntry /* function */;
}; /* size: 0x0060 */

struct CMP_COPY_STACK_ENTRY
{
  /* 0x0000 */ unsigned long SourceCell;
  /* 0x0004 */ unsigned long TargetCell;
  /* 0x0008 */ unsigned long i;
}; /* size: 0x000c */

typedef struct _IOP_ERROR_LOG_CONTEXT
{
  /* 0x0000 */ struct _KDPC ErrorLogDpc;
  /* 0x0040 */ struct _KTIMER ErrorLogTimer;
} IOP_ERROR_LOG_CONTEXT, *PIOP_ERROR_LOG_CONTEXT; /* size: 0x0080 */

typedef struct _XMM_SAVE_AREA32
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _M128A FloatRegisters[8];
  /* 0x00a0 */ struct _M128A XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[96];
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32; /* size: 0x0200 */

typedef struct _TP_CALLBACK_ENVIRON
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1197;
  /* 0x0008 */ struct _TP_POOL* Pool;
  /* 0x0010 */ struct _TP_CLEANUP_GROUP* CleanupGroup;
  /* 0x0018 */ void* CleanupGroupCancelCallback /* function */;
  /* 0x0020 */ void* RaceDll;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0030 */ void* FinalizationCallback /* function */;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long Flags;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0038 */ unsigned long LongFunction : 1; /* bit position: 0 */
          /* 0x0038 */ unsigned long Persistent : 1; /* bit position: 1 */
          /* 0x0038 */ unsigned long Private : 30; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ s;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x003c */ enum _TP_CALLBACK_PRIORITY CallbackPriority;
  /* 0x0040 */ unsigned long Size;
  /* 0x0044 */ long __PADDING__[1];
} TP_CALLBACK_ENVIRON, *PTP_CALLBACK_ENVIRON; /* size: 0x0048 */

typedef struct _WHEA_ERROR_PACKET
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ union _WHEA_ERROR_PACKET_FLAGS Flags;
  /* 0x0010 */ enum _WHEA_ERROR_TYPE ErrorType;
  /* 0x0014 */ enum _WHEA_ERROR_SEVERITY ErrorSeverity;
  /* 0x0018 */ unsigned long ErrorSourceId;
  /* 0x001c */ enum _WHEA_ERROR_SOURCE_TYPE ErrorSourceType;
  /* 0x0020 */ struct _GUID NotifyType;
  /* 0x0030 */ unsigned __int64 Context;
  /* 0x0038 */ enum _WHEA_ERROR_PACKET_DATA_FORMAT DataFormat;
  /* 0x003c */ unsigned long Reserved1;
  /* 0x0040 */ unsigned long DataOffset;
  /* 0x0044 */ unsigned long DataLength;
  /* 0x0048 */ unsigned long PshedDataOffset;
  /* 0x004c */ unsigned long PshedDataLength;
} WHEA_ERROR_PACKET, *PWHEA_ERROR_PACKET; /* size: 0x0050 */

struct WMIMOFLIST
{
  /* 0x0000 */ unsigned long MofListCount;
  /* 0x0004 */ struct WMIMOFENTRY MofEntry[1];
}; /* size: 0x0010 */

typedef struct _POP_DYNAMIC_IRP_WORKER
{
  /* 0x0000 */ struct _KSEMAPHORE* StartedSemaphore;
} POP_DYNAMIC_IRP_WORKER, *PPOP_DYNAMIC_IRP_WORKER; /* size: 0x0008 */

struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::INDEX_ENTRY
{
  /* 0x0000 */ unsigned long Key;
  /* 0x0004 */ long Padding_1198;
  /* 0x0008 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE* Child;
}; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY
{
  /* 0x0000 */ unsigned long Key;
  /* 0x0004 */ union _SM_PAGE_KEY PageKey;
}; /* size: 0x0008 */

struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE
{
  /* 0x0000 */ long Padding_1199[2];
  union
  {
    struct
    {
      /* 0x0008 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE* Child1;
      /* 0x0010 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::INDEX_ENTRY Keys[5];
    } /* size: 0x0058 */ Index;
    struct
    {
      struct
      {
        /* 0x0008 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE* Next;
        /* 0x0010 */ struct ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY Entries[4];
      } /* size: 0x0028 */ Leaf;
      /* 0x0030 */ long __PADDING__[12];
    }; /* size: 0x0058 */
  }; /* size: 0x0058 */
}; /* size: 0x0060 */

typedef struct _MAPPING_TABLE
{
  /* 0x0000 */ unsigned long SegmentCount;
  /* 0x0004 */ long Padding_1200;
  /* 0x0008 */ void* BaseAllocation;
  /* 0x0010 */ unsigned short* StartCode;
  /* 0x0018 */ unsigned short* EndCode;
  /* 0x0020 */ short* Delta;
  /* 0x0028 */ unsigned short* RangeOffset;
  /* 0x0030 */ unsigned short* GlyphIdArray;
} MAPPING_TABLE, *PMAPPING_TABLE; /* size: 0x0038 */

typedef struct _SYSID_1394
{
  /* 0x0000 */ unsigned char x1394[8];
} SYSID_1394, *PSYSID_1394; /* size: 0x0008 */

struct WMIGUIDLISTINFO
{
  /* 0x0000 */ unsigned long TotalGuidCount;
  /* 0x0004 */ unsigned long ReturnedGuidCount;
  /* 0x0008 */ struct WMIGUIDPROPERTIES GuidList[1];
}; /* size: 0x002c */

struct WMIQUERYGUIDINFO
{
  /* 0x0000 */ union HANDLE3264 KernelHandle;
  /* 0x0008 */ unsigned char IsExpensive;
  /* 0x0009 */ char __PADDING__[7];
}; /* size: 0x0010 */

typedef struct _POP_PPM_PERF_DISTRIBUTION_DATA
{
  /* 0x0000 */ struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION* Distribution;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ unsigned long Offset;
  /* 0x0010 */ unsigned long CurrentIndex;
  /* 0x0014 */ long __PADDING__[1];
} POP_PPM_PERF_DISTRIBUTION_DATA, *PPOP_PPM_PERF_DISTRIBUTION_DATA; /* size: 0x0018 */

struct WHEAWMIGUIDREGINFO
{
  /* 0x0000 */ const struct _GUID* Guid;
  /* 0x0008 */ unsigned long InstanceCount;
  /* 0x000c */ unsigned long Flags;
}; /* size: 0x0010 */

typedef struct _SEVALIDATEIMAGE_CALLBACKS
{
  /* 0x0000 */ void* ValidateImageHeader /* function */;
  /* 0x0008 */ void* ValidateImageData /* function */;
  /* 0x0010 */ void* QueryInformation /* function */;
} SEVALIDATEIMAGE_CALLBACKS, *PSEVALIDATEIMAGE_CALLBACKS; /* size: 0x0018 */

typedef struct _RTLP_RANGE_LIST_ENTRY
{
  /* 0x0000 */ unsigned __int64 Start;
  /* 0x0008 */ unsigned __int64 End;
  union
  {
    struct
    {
      /* 0x0010 */ void* UserData;
      /* 0x0018 */ void* Owner;
    } /* size: 0x0010 */ Allocated;
    struct
    {
      /* 0x0010 */ struct _LIST_ENTRY ListHead;
    } /* size: 0x0010 */ Merged;
  }; /* size: 0x0010 */
  /* 0x0020 */ unsigned char Attributes;
  /* 0x0021 */ unsigned char PublicFlags;
  /* 0x0022 */ unsigned short PrivateFlags;
  /* 0x0024 */ long Padding_1201;
  /* 0x0028 */ struct _LIST_ENTRY ListEntry;
} RTLP_RANGE_LIST_ENTRY, *PRTLP_RANGE_LIST_ENTRY; /* size: 0x0038 */

typedef struct _NORM_TABLES_HEADER
{
  /* 0x0000 */ unsigned short signature[16];
  /* 0x0020 */ unsigned short version[4];
  /* 0x0028 */ unsigned short normalizationForm;
  /* 0x002a */ unsigned short maxReplacementSize;
  /* 0x002c */ unsigned short quickSkip;
  /* 0x002e */ unsigned short replacementHash;
  /* 0x0030 */ unsigned short compositionHash;
  /* 0x0032 */ unsigned short flags;
  /* 0x0034 */ unsigned short offsetClassMap;
  /* 0x0036 */ unsigned short offsetMainIndex;
  /* 0x0038 */ unsigned short offsetCharInfo;
  /* 0x003a */ unsigned short offsetReplacementHashTable;
  /* 0x003c */ unsigned short offsetReplacementIndex;
  /* 0x003e */ unsigned short offsetReplacementData;
  /* 0x0040 */ unsigned short offsetCompositionIndex;
  /* 0x0042 */ unsigned short offsetCompositionData;
  /* 0x0044 */ unsigned char firstTableByte[1];
  /* 0x0045 */ char __PADDING__[1];
} NORM_TABLES_HEADER, *PNORM_TABLES_HEADER; /* size: 0x0046 */

typedef struct _DRIVER_SPECIFIED_VERIFIER_THUNKS
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _KLDR_DATA_TABLE_ENTRY* DataTableEntry;
  /* 0x0018 */ unsigned long NumberOfThunks;
  /* 0x001c */ long __PADDING__[1];
} DRIVER_SPECIFIED_VERIFIER_THUNKS, *PDRIVER_SPECIFIED_VERIFIER_THUNKS; /* size: 0x0020 */

typedef struct _WMILIB_INFO
{
  /* 0x0000 */ struct _DEVICE_OBJECT* LowerDeviceObject;
  /* 0x0008 */ struct _DEVICE_OBJECT* LowerPDO;
  /* 0x0010 */ unsigned long GuidCount;
  /* 0x0014 */ long Padding_1202;
  /* 0x0018 */ struct GUIDREGINFO* GuidList;
  /* 0x0020 */ void* QueryWmiRegInfo /* function */;
  /* 0x0028 */ void* QueryWmiDataBlock /* function */;
  /* 0x0030 */ void* SetWmiDataBlock /* function */;
  /* 0x0038 */ void* SetWmiDataItem /* function */;
  /* 0x0040 */ void* ExecuteWmiMethod /* function */;
  /* 0x0048 */ void* WmiFunctionControl /* function */;
} WMILIB_INFO, *PWMILIB_INFO; /* size: 0x0050 */

typedef struct _SH_LOCK
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  /* 0x0008 */ struct _FILE_LOCK_INFO LockInfo;
} SH_LOCK, *PSH_LOCK; /* size: 0x0038 */

typedef struct _CM_THAW_SIGNAL_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _KEVENT Event;
} CM_THAW_SIGNAL_BLOCK, *PCM_THAW_SIGNAL_BLOCK; /* size: 0x0028 */

typedef struct _DPC_ENTRY
{
  /* 0x0000 */ struct _KDPC* Dpc;
  /* 0x0008 */ void* Routine /* function */;
  /* 0x0010 */ void* Context;
} DPC_ENTRY, *PDPC_ENTRY; /* size: 0x0018 */

struct context
{
  struct
  {
    /* 0x0000 */ unsigned char* ptr;
  } /* size: 0x0008 */ stat;
  /* 0x0008 */ int chain;
  /* 0x000c */ int max_size;
  struct
  {
    /* 0x0010 */ unsigned char* beg;
    /* 0x0018 */ unsigned char* ptr;
  } /* size: 0x0010 */ comp;
  struct
  {
    /* 0x0020 */ unsigned short* hash;
    /* 0x0028 */ unsigned char* beg;
    /* 0x0030 */ unsigned char* ptr;
    /* 0x0038 */ unsigned char* tag_ptr;
    /* 0x0040 */ int tag_mask;
    /* 0x0044 */ long __PADDING__[1];
  } /* size: 0x0028 */ temp;
  struct
  {
    /* 0x0048 */ int len;
    /* 0x004c */ int pos;
  } /* size: 0x0008 */ match;
  struct
  {
    /* 0x0050 */ int pos;
    /* 0x0054 */ int size;
    /* 0x0058 */ int stop;
    /* 0x005c */ int progress;
    /* 0x0060 */ const unsigned char* ptr;
    /* 0x0068 */ const unsigned char* end;
    /* 0x0070 */ const unsigned char* end_16;
    /* 0x0078 */ const unsigned char* end_3;
    /* 0x0080 */ const unsigned char* ptr_stop;
  } /* size: 0x0038 */ orig;
}; /* size: 0x0088 */

struct IRPCOMPCTX
{
  /* 0x0000 */ struct _REGENTRY* RegEntry;
  /* 0x0008 */ struct _KEVENT Event;
}; /* size: 0x0020 */

typedef struct _PSP_ACL_INFO
{
  /* 0x0000 */ unsigned char AclDefaulted;
  /* 0x0001 */ unsigned char AclPresent;
  /* 0x0002 */ char Padding_1203[6];
  /* 0x0008 */ struct _ACL* OldAcl;
  /* 0x0010 */ struct _ACL* NewAcl;
  /* 0x0018 */ unsigned long NewAclSize;
  /* 0x001c */ struct _ACL_REVISION_INFORMATION RevisionInfo;
  /* 0x0020 */ struct _ACL_SIZE_INFORMATION SizeInfo;
  /* 0x002c */ long __PADDING__[1];
} PSP_ACL_INFO, *PPSP_ACL_INFO; /* size: 0x0030 */

typedef struct _AEL_REQUEST_MESSAGE
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMessage;
  /* 0x0028 */ enum _AEL_MSG_NUMBER MessageNumber;
  /* 0x002c */ long Status;
  union
  {
    union
    {
      /* 0x0030 */ struct _AEL_CACHE_EXE_MESSAGE CacheExeMessage;
      /* 0x0030 */ struct _AEL_QUERY_STATE_MESSAGE QueryStateMessage;
    }; /* size: 0x0030 */
  } /* size: 0x0030 */ u;
  /* 0x0060 */ unsigned long End;
  /* 0x0064 */ long __PADDING__[1];
} AEL_REQUEST_MESSAGE, *PAEL_REQUEST_MESSAGE; /* size: 0x0068 */

typedef struct _RESCDHEADER
{
  /* 0x0000 */ unsigned __int64 ullMagic;
  /* 0x0008 */ unsigned int ulVersion;
  /* 0x000c */ unsigned int ulSystemIndex;
  /* 0x0010 */ unsigned int ulGeneration;
  /* 0x0014 */ unsigned int ulNodeLastMoved;
  /* 0x0018 */ unsigned int ulNodeLastChanged;
  /* 0x001c */ unsigned int ulOwnerPID;
  /* 0x0020 */ unsigned __int64 ullHeartbeat;
  /* 0x0028 */ unsigned __int64 ullLastUpdateTime;
  /* 0x0030 */ unsigned long fStatus;
  /* 0x0034 */ unsigned int ulMaxNumSegments;
  /* 0x0038 */ unsigned int ulMaxStringsSize;
  /* 0x003c */ unsigned int ulMaxNumEntries;
  /* 0x0040 */ unsigned int ulMaxSegmentSize;
  /* 0x0044 */ unsigned int ulNumSegments;
  /* 0x0048 */ unsigned int ulNumEntries;
  /* 0x004c */ unsigned int ulNumTrackingEntries;
  /* 0x0050 */ unsigned int ulSizeStrings;
  /* 0x0054 */ int lBaseFolder;
  /* 0x0058 */ int lFirstEntry;
  /* 0x005c */ int lFirstFree;
  /* 0x0060 */ int lLastFree;
  /* 0x0064 */ long __PADDING__[1];
} RESCDHEADER, *PRESCDHEADER; /* size: 0x0068 */

typedef struct _WAITING_LOCK
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  /* 0x0008 */ void* CompleteLockIrpRoutine /* function */;
  /* 0x0010 */ void* Context;
  /* 0x0018 */ struct _IRP* Irp;
} WAITING_LOCK, *PWAITING_LOCK; /* size: 0x0020 */

typedef struct _HEAP_ENTRY_EXTRA
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short AllocatorBackTraceIndex;
      /* 0x0002 */ unsigned short TagIndex;
      /* 0x0004 */ long Padding_1204;
      /* 0x0008 */ unsigned __int64 Settable;
    }; /* size: 0x000c */
    struct
    {
      /* 0x0000 */ unsigned __int64 ZeroInit;
      /* 0x0008 */ unsigned __int64 ZeroInit1;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} HEAP_ENTRY_EXTRA, *PHEAP_ENTRY_EXTRA; /* size: 0x0010 */

typedef struct _VI_TARGET_COUNTERS_PARAMETERS
{
  /* 0x0000 */ struct _VF_SUSPECT_DRIVER_ENTRY* SuspectDriverEntry;
  /* 0x0008 */ struct _SYSTEM_VERIFIER_INFORMATION* VerifierInformation;
  /* 0x0010 */ unsigned long GetAdditionalCounters;
  /* 0x0014 */ long __PADDING__[1];
} VI_TARGET_COUNTERS_PARAMETERS, *PVI_TARGET_COUNTERS_PARAMETERS; /* size: 0x0018 */

typedef struct _POP_IRP_WORKER_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _ETHREAD* Thread;
  /* 0x0018 */ struct _IRP* Irp;
  /* 0x0020 */ struct _DEVICE_OBJECT* Device;
  /* 0x0028 */ unsigned char Static;
  /* 0x0029 */ char __PADDING__[7];
} POP_IRP_WORKER_ENTRY, *PPOP_IRP_WORKER_ENTRY; /* size: 0x0030 */

typedef struct _GLYPH_DATA
{
  /* 0x0000 */ short NumberOfContours;
  /* 0x0002 */ long XMin;
  /* 0x0006 */ long YMin;
  /* 0x000a */ long XMax;
  /* 0x000e */ long YMax;
  /* 0x0012 */ long MetricsXMin;
  /* 0x0016 */ unsigned short InstructionLength;
  /* 0x0018 */ unsigned short NumberOfPoints;
  /* 0x001a */ unsigned short* EndPtsOfContours;
  /* 0x0022 */ unsigned char* Instructions;
  /* 0x002a */ unsigned char* Flags;
  /* 0x0032 */ long* XCoordinates;
  /* 0x003a */ long* YCoordinates;
} GLYPH_DATA, *PGLYPH_DATA; /* size: 0x0042 */

typedef struct _RTL_ATOM_TABLE_ENTRY
{
  /* 0x0000 */ struct _RTL_ATOM_TABLE_ENTRY* HashLink;
  /* 0x0008 */ unsigned short HandleIndex;
  /* 0x000a */ unsigned short Atom;
  /* 0x000c */ unsigned short ReferenceCount;
  /* 0x000e */ unsigned char Flags;
  /* 0x000f */ unsigned char NameLength;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[6];
} RTL_ATOM_TABLE_ENTRY, *PRTL_ATOM_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _HARDDRIVE_DEVICE_PATH
{
  /* 0x0000 */ struct _EFI_DEVICE_PATH Header;
  /* 0x0004 */ unsigned int PartitionNumber;
  /* 0x0008 */ unsigned __int64 PartitionStart;
  /* 0x0010 */ unsigned __int64 PartitionSize;
  /* 0x0018 */ unsigned char Signature[16];
  /* 0x0028 */ unsigned char MBRType;
  /* 0x0029 */ unsigned char SignatureType;
} HARDDRIVE_DEVICE_PATH, *PHARDDRIVE_DEVICE_PATH; /* size: 0x002a */

typedef struct _PTE_TRACKER
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _MDL* Mdl;
  /* 0x0018 */ unsigned __int64 Count;
  /* 0x0020 */ void* SystemVa;
  /* 0x0028 */ void* StartVa;
  /* 0x0030 */ unsigned long Offset;
  /* 0x0034 */ unsigned long Length;
  /* 0x0038 */ unsigned __int64 Page;
  struct /* bitfield */
  {
    /* 0x0040 */ unsigned long IoMapping : 1; /* bit position: 0 */
    /* 0x0040 */ unsigned long Matched : 1; /* bit position: 1 */
    /* 0x0040 */ unsigned long CacheAttribute : 2; /* bit position: 2 */
    /* 0x0040 */ unsigned long Spare : 28; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0044 */ long Padding_1205;
  /* 0x0048 */ void* CallingAddress;
  /* 0x0050 */ void* CallersCaller;
} PTE_TRACKER, *PPTE_TRACKER; /* size: 0x0058 */

typedef struct _OBJECT_TYPE_ARRAY
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_1206;
  /* 0x0008 */ struct _OBJECT_HEADER_CREATOR_INFO* CreatorInfoArray[1];
} OBJECT_TYPE_ARRAY, *POBJECT_TYPE_ARRAY; /* size: 0x0010 */

typedef union _PFP_ENTRY_INFO_KEY
{
  union
  {
    /* 0x0000 */ unsigned __int64 EntryType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Value;
  }; /* size: 0x0008 */
} PFP_ENTRY_INFO_KEY, *PPFP_ENTRY_INFO_KEY; /* size: 0x0008 */

typedef struct _PF_ENTRY_INFO_FILE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 InfoType : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 HasOnlyKey : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 Metafile : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 FileKeyLo : 60; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 FileInfo1;
  }; /* size: 0x0008 */
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned short FileKeyHi : 4; /* bit position: 0 */
        /* 0x0008 */ unsigned short HasFileName : 1; /* bit position: 4 */
        /* 0x0008 */ unsigned short NameInCache : 1; /* bit position: 5 */
        /* 0x0008 */ unsigned short PagingFile : 1; /* bit position: 6 */
        /* 0x0008 */ unsigned short OpenError : 1; /* bit position: 7 */
        /* 0x0008 */ unsigned short Spare0 : 8; /* bit position: 8 */
      }; /* bitfield */
      /* 0x000a */ unsigned short VolumeIndex;
    }; /* size: 0x0004 */
    /* 0x0008 */ unsigned long FileInfo2;
  }; /* size: 0x0004 */
  /* 0x000c */ long Padding_1207;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned long FileIdLo;
      /* 0x0014 */ unsigned long FileIdHi;
    }; /* size: 0x0008 */
    /* 0x0010 */ struct _PFSC_ENTRY* FilePathEntry;
    /* 0x0010 */ unsigned short* FileName;
    /* 0x0010 */ unsigned __int64 FileNameOffset;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long NameLength;
  /* 0x001c */ long __PADDING__[1];
} PF_ENTRY_INFO_FILE, *PPF_ENTRY_INFO_FILE; /* size: 0x0020 */

typedef struct _PF_ENTRY_INFO_PROCESS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 InfoType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 HasOnlyKey : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 UniqueProcessHash : 61; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0008 */ unsigned __int64 EProcess;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long ImagePathHash;
} PF_ENTRY_INFO_PROCESS, *PPF_ENTRY_INFO_PROCESS; /* size: 0x0018 */

typedef struct _PF_ENTRY_INFO_VOLUME
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 InfoType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 HasOnlyKey : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 Spare0 : 61; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0008 */ unsigned long VolumeInfoSize;
  /* 0x000c */ long Padding_1208;
  union
  {
    /* 0x0010 */ struct _PFS_VOLUME_INFO* VolumeInfo;
    /* 0x0010 */ unsigned __int64 VolumeInfoOffset;
  }; /* size: 0x0008 */
} PF_ENTRY_INFO_VOLUME, *PPF_ENTRY_INFO_VOLUME; /* size: 0x0018 */

typedef union _PF_ENTRY_INFO
{
  union
  {
    /* 0x0000 */ struct _PF_ENTRY_INFO_FILE FileInfo;
    /* 0x0000 */ struct _PF_ENTRY_INFO_PROCESS ProcessInfo;
    /* 0x0000 */ struct _PF_ENTRY_INFO_VOLUME VolumeInfo;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 InfoType : 2; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 HasOnlyKey : 1; /* bit position: 2 */
      }; /* bitfield */
    } /* size: 0x0008 */ ValueInfo;
  }; /* size: 0x0020 */
} PF_ENTRY_INFO, *PPF_ENTRY_INFO; /* size: 0x0020 */

typedef struct _PFP_ENTRY_INFO_HASH_ITEM
{
  /* 0x0000 */ union _PFP_ENTRY_INFO_KEY Key;
  /* 0x0008 */ union _PF_ENTRY_INFO EntryInfo;
} PFP_ENTRY_INFO_HASH_ITEM, *PPFP_ENTRY_INFO_HASH_ITEM; /* size: 0x0028 */

typedef struct _PFNL_DELETE_ENTRY_INFO
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Type : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long FileDeleted : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Spare : 29; /* bit position: 3 */
    }; /* bitfield */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long DeleteFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1209;
  /* 0x0008 */ unsigned __int64 Key;
} PFNL_DELETE_ENTRY_INFO, *PPFNL_DELETE_ENTRY_INFO; /* size: 0x0010 */

typedef struct _EX_WFC
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ unsigned long ReleaseCount;
  /* 0x000c */ unsigned long WaitingWorkerCount;
  /* 0x0010 */ unsigned char Inserted;
  /* 0x0011 */ unsigned char FactoryShutdown;
  /* 0x0012 */ unsigned char FactoryDeleted;
  /* 0x0013 */ char Padding_1210[5];
  /* 0x0018 */ struct _KQUEUE* CompletionPort;
  /* 0x0020 */ void* CompletionPacket;
} EX_WFC, *PEX_WFC; /* size: 0x0028 */

typedef struct _ETW_UMGL_CONTEXT
{
  /* 0x0000 */ unsigned long UmglIndex;
  /* 0x0004 */ unsigned char Enable;
  /* 0x0005 */ char __PADDING__[3];
} ETW_UMGL_CONTEXT, *PETW_UMGL_CONTEXT; /* size: 0x0008 */

typedef struct _FONT_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _FONT_FILE_DATA* ParentFontFile;
  /* 0x0018 */ struct _MAPPING_TABLE* MappingTable;
  /* 0x0020 */ unsigned short* FamilyName;
  /* 0x0028 */ unsigned long FontIndex;
  /* 0x002c */ unsigned long OffsetTableOffset;
  /* 0x0030 */ unsigned long CmapOffset;
  /* 0x0034 */ unsigned long EbdtOffset;
  /* 0x0038 */ unsigned long EblcOffset;
  /* 0x003c */ unsigned long GlyfOffset;
  /* 0x0040 */ unsigned long HeadOffset;
  /* 0x0044 */ unsigned long HmtxOffset;
  /* 0x0048 */ unsigned long LocaOffset;
  /* 0x004c */ unsigned short LocaFormat;
  /* 0x004e */ unsigned short AdvanceWidthMax;
  /* 0x0050 */ short Ascender;
  /* 0x0052 */ short Descender;
  /* 0x0054 */ short Baseline;
  /* 0x0056 */ unsigned short NumberOfHorizontalMetrics;
  /* 0x0058 */ unsigned long NumberOfStrikes;
  /* 0x005c */ unsigned long ResolutionDPI;
  /* 0x0060 */ struct _LIST_ENTRY StrikeListHead;
  /* 0x0070 */ unsigned short UnitsPerEm;
  /* 0x0072 */ char __PADDING__[6];
} FONT_DATA, *PFONT_DATA; /* size: 0x0078 */

typedef struct _EBLC_LINE_METRICS
{
  /* 0x0000 */ char Ascender;
  /* 0x0001 */ char Descender;
  /* 0x0002 */ unsigned char WidthMax;
  /* 0x0003 */ char CaretSlopeNumerator;
  /* 0x0004 */ char CaretSlopeDenominator;
  /* 0x0005 */ char CaretOffset;
  /* 0x0006 */ char MinOriginSB;
  /* 0x0007 */ char MinAdvanceSB;
  /* 0x0008 */ char MaxBeforeBL;
  /* 0x0009 */ char MinAfterBL;
  /* 0x000a */ char Pad1;
  /* 0x000b */ char Pad2;
} EBLC_LINE_METRICS, *PEBLC_LINE_METRICS; /* size: 0x000c */

typedef struct _SM_CACHE_STATS
{
  /* 0x0000 */ struct _SM_CACHE_STATS_BUCKET StatsBuckets[8];
  /* 0x0440 */ struct _ST_READ_LATENCY_BUCKET ReadLatency[8];
} SM_CACHE_STATS, *PSM_CACHE_STATS; /* size: 0x0480 */

typedef struct _SMC_STORE_DELETE_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long CacheId;
  /* 0x0008 */ enum _SM_STORE_MANAGER_TYPE StoreManagerType;
  /* 0x000c */ unsigned long StoreId;
} SMC_STORE_DELETE_REQUEST, *PSMC_STORE_DELETE_REQUEST; /* size: 0x0010 */

typedef struct _ST_STATS_SPACE_BITMAP
{
  /* 0x0000 */ unsigned __int64 CompressedBytes;
  /* 0x0008 */ unsigned long BytesPerBit;
  /* 0x000c */ unsigned char StoreBitmap[1];
  /* 0x000d */ char __PADDING__[3];
} ST_STATS_SPACE_BITMAP, *PST_STATS_SPACE_BITMAP; /* size: 0x0010 */

typedef struct _POOL_BLOCK_HEAD
{
  /* 0x0000 */ struct _POOL_HEADER Header;
  /* 0x0010 */ struct _LIST_ENTRY List;
} POOL_BLOCK_HEAD, *PPOOL_BLOCK_HEAD; /* size: 0x0020 */

struct TMP_OBJ_SECURITY_INFO
{
  /* 0x0000 */ void* SecurityDescriptor;
  /* 0x0008 */ unsigned long SecurityDescriptorLength;
  /* 0x000c */ unsigned char WasAllocated;
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::SEARCH_RESULT
{
  /* 0x0000 */ struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY* SearchPathA;
  /* 0x0008 */ struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY SearchResult;
  /* 0x0018 */ unsigned long EntryCount;
  /* 0x001c */ unsigned long EntryMax;
  /* 0x0020 */ unsigned long ReadOnlyAccess : 1; /* bit position: 0 */
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct NP_CONTEXT::NP_CALLBACKS
{
  /* 0x0000 */ void* EnumBTreeNodes /* function */;
  /* 0x0008 */ void* LeafPageOut /* function */;
  /* 0x0010 */ void* LeafPageIn /* function */;
  /* 0x0018 */ void* LeafDelete /* function */;
}; /* size: 0x0020 */

struct NP_CONTEXT::_NP_PARAMETERS
{
  /* 0x0000 */ unsigned long NodeCountMax;
  /* 0x0004 */ unsigned long ReservedNodeCount;
  /* 0x0008 */ struct NP_CONTEXT::NP_CALLBACKS Cb;
}; /* size: 0x0028 */

struct NP_CONTEXT
{
  /* 0x0000 */ struct NP_CONTEXT::_NP_PARAMETERS Params;
  /* 0x0028 */ unsigned long AllocatedCount;
  /* 0x002c */ unsigned long PagedOutCount;
  /* 0x0030 */ unsigned long CleanCount;
  /* 0x0034 */ unsigned long BaseTime;
  /* 0x0038 */ union _NP_LEAF_PTR* EntryToPageOut;
  /* 0x0040 */ struct _PF_QUEUE ReservedNodes;
  struct
  {
    /* 0x0050 */ unsigned long PageOutCount;
    /* 0x0054 */ unsigned long PageInCount;
    /* 0x0058 */ unsigned long PageOutErrors;
    /* 0x005c */ unsigned long PageInErrors;
  } /* size: 0x0010 */ Stats;
}; /* size: 0x0060 */

typedef struct _HEADLESS_LOG_ENTRY
{
  /* 0x0000 */ struct _SYSTEM_TIMEOFDAY_INFORMATION TimeOfEntry;
  /* 0x0030 */ unsigned short* String;
} HEADLESS_LOG_ENTRY, *PHEADLESS_LOG_ENTRY; /* size: 0x0038 */

typedef struct _LZNT1_FRAGMENT_WORKSPACE
{
  /* 0x0000 */ unsigned char Buffer[4096];
} LZNT1_FRAGMENT_WORKSPACE, *PLZNT1_FRAGMENT_WORKSPACE; /* size: 0x1000 */

struct NP_CONTEXT::NP_CTX
{
  /* 0x0000 */ struct NP_CONTEXT* NodePool;
}; /* size: 0x0008 */

struct sockaddr
{
  /* 0x0000 */ unsigned short sa_family;
  /* 0x0002 */ char sa_data[14];
}; /* size: 0x0010 */

typedef struct _PFP_PREFETCH_REQUEST_RANGE
{
  /* 0x0000 */ unsigned long Position;
  /* 0x0004 */ unsigned long End;
  /* 0x0008 */ unsigned long Count;
} PFP_PREFETCH_REQUEST_RANGE, *PPFP_PREFETCH_REQUEST_RANGE; /* size: 0x000c */

struct NLS_MAIN_TABLE_OFFSET
{
  /* 0x0000 */ unsigned long offsetCType;
  /* 0x0004 */ unsigned long offsetPadding;
  /* 0x0008 */ unsigned long offsetPadding2;
  /* 0x000c */ unsigned long offsetPadding3;
  /* 0x0010 */ unsigned long offsetLocale;
  /* 0x0014 */ unsigned long offsetUnicode;
  /* 0x0018 */ unsigned long offsetGeo;
  /* 0x001c */ unsigned long offsetUnicodeScripts;
}; /* size: 0x0020 */

typedef struct _DRIVE_MAPPING
{
  /* 0x0000 */ wchar_t DriveLetter;
  /* 0x0002 */ char Padding_1211[6];
  /* 0x0008 */ struct _UNICODE_STRING DeviceName;
} DRIVE_MAPPING, *PDRIVE_MAPPING; /* size: 0x0018 */

typedef struct _ACPI_BIOS_MULTI_NODE
{
  /* 0x0000 */ union _LARGE_INTEGER RsdtAddress;
  /* 0x0008 */ unsigned __int64 Count;
  /* 0x0010 */ struct ACPI_E820_ENTRY E820Entry[1];
} ACPI_BIOS_MULTI_NODE, *PACPI_BIOS_MULTI_NODE; /* size: 0x0028 */

struct CcFrame
{
  /* 0x0000 */ unsigned long EFlags;
  /* 0x0004 */ unsigned long Fill;
}; /* size: 0x0008 */

typedef struct _VI_DEADLOCK_STATE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long AllocationFailures : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long KernelVerifierEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long DriverVerifierForAllEnabled : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long SequenceNumberOverflow : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long DeadlockParticipantsOverflow : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long ResourceNodeCountOverflow : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Reserved : 15; /* bit position: 6 */
  }; /* bitfield */
} VI_DEADLOCK_STATE, *PVI_DEADLOCK_STATE; /* size: 0x0004 */

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoVersion;
  /* 0x0008 */ unsigned char* pbNonce;
  /* 0x0010 */ unsigned long cbNonce;
  /* 0x0014 */ long Padding_1212;
  /* 0x0018 */ unsigned char* pbAuthData;
  /* 0x0020 */ unsigned long cbAuthData;
  /* 0x0024 */ long Padding_1213;
  /* 0x0028 */ unsigned char* pbTag;
  /* 0x0030 */ unsigned long cbTag;
  /* 0x0034 */ long Padding_1214;
  /* 0x0038 */ unsigned char* pbMacContext;
  /* 0x0040 */ unsigned long cbMacContext;
  /* 0x0044 */ unsigned long cbAAD;
  /* 0x0048 */ unsigned __int64 cbData;
  /* 0x0050 */ unsigned long dwFlags;
  /* 0x0054 */ long __PADDING__[1];
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO; /* size: 0x0058 */

typedef struct _SMCR_ENCRYPT_CONTEXT
{
  /* 0x0000 */ void* AlgorithmHandle;
  /* 0x0008 */ unsigned long BlockSize;
  /* 0x000c */ long Padding_1215;
  /* 0x0010 */ unsigned char* KeyBuffer;
  /* 0x0018 */ unsigned long KeySize;
  /* 0x001c */ long Padding_1216;
  /* 0x0020 */ void* KeyHandle;
  /* 0x0028 */ unsigned char* KeyObject;
  /* 0x0030 */ unsigned char* IVBuffer;
  /* 0x0038 */ struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO AuthInfo;
} SMCR_ENCRYPT_CONTEXT, *PSMCR_ENCRYPT_CONTEXT; /* size: 0x0090 */

typedef struct _SM_STORE_EMPTY_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long StoreCount : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long Spare : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long StoreId[8];
} SM_STORE_EMPTY_REQUEST, *PSM_STORE_EMPTY_REQUEST; /* size: 0x0024 */

struct DcFrame
{
  /* 0x0000 */ unsigned __int64 SavedRbp;
  /* 0x0008 */ unsigned __int64 SavedRbx;
  /* 0x0010 */ unsigned __int64 SavedRdi;
  /* 0x0018 */ unsigned __int64 SavedRsi;
  /* 0x0020 */ unsigned __int64 SavedR12;
}; /* size: 0x0028 */

struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>
{
  /* 0x0000 */ struct B_TREE_HEADER<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY>::NODE* Root;
  /* 0x0008 */ unsigned __int64 EntryCount;
}; /* size: 0x0010 */

typedef struct _SM_DELETE_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long StoreId;
} SM_DELETE_REQUEST, *PSM_DELETE_REQUEST; /* size: 0x0008 */

typedef struct _SMKM_IO_STREAM
{
  /* 0x0000 */ unsigned long StartOffset;
  /* 0x0004 */ unsigned long EndOffset;
  /* 0x0008 */ unsigned long IoCount;
  /* 0x000c */ unsigned short IntermediateIos;
  /* 0x000e */ unsigned short Age;
} SMKM_IO_STREAM, *PSMKM_IO_STREAM; /* size: 0x0010 */

typedef struct _SMKM_IO_STREAM_CTX
{
  /* 0x0000 */ struct _SMKM_IO_STREAM Streams[4];
  /* 0x0040 */ unsigned long RepurposeIndex;
} SMKM_IO_STREAM_CTX, *PSMKM_IO_STREAM_CTX; /* size: 0x0044 */

typedef struct _SMKM_STORE_ADD_PARAMS
{
  /* 0x0000 */ struct _SM_STORE_BASIC_PARAMS* StoreParams;
  /* 0x0008 */ struct _KTHREAD* StoreThread;
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned long UnpersistInProgress : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned long KernelModeCreate : 1; /* bit position: 1 */
    /* 0x0010 */ unsigned long Spare : 30; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0014 */ unsigned long Priority;
} SMKM_STORE_ADD_PARAMS, *PSMKM_STORE_ADD_PARAMS; /* size: 0x0018 */

typedef struct _HEAP_USERDATA_HEADER
{
  union
  {
    /* 0x0000 */ struct _SINGLE_LIST_ENTRY SFreeListEntry;
    /* 0x0000 */ struct _HEAP_SUBSEGMENT* SubSegment;
  }; /* size: 0x0008 */
  /* 0x0008 */ void* Reserved;
  /* 0x0010 */ unsigned __int64 SizeIndex;
  /* 0x0018 */ unsigned __int64 Signature;
} HEAP_USERDATA_HEADER, *PHEAP_USERDATA_HEADER; /* size: 0x0020 */

typedef struct _ST_IO_STATS_PERIOD
{
  /* 0x0000 */ unsigned long PageCounts[5];
} ST_IO_STATS_PERIOD, *PST_IO_STATS_PERIOD; /* size: 0x0014 */

typedef struct _ST_IO_COUNTS
{
  /* 0x0000 */ struct _ST_IO_STATS_PERIOD* CurrentPeriod;
  /* 0x0008 */ unsigned long PeriodIndex;
  /* 0x000c */ long Padding_1217;
  /* 0x0010 */ unsigned __int64 PeriodEndTime;
  /* 0x0018 */ struct _ST_IO_STATS_PERIOD Periods[64];
} ST_IO_COUNTS, *PST_IO_COUNTS; /* size: 0x0518 */

typedef struct _SM_LOG_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long RequestVersion : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long LogVersion : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long Spare : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long EntryCount;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ long Padding_1218;
  /* 0x0010 */ struct _SM_LOG_ENTRY* Buffer;
} SM_LOG_REQUEST, *PSM_LOG_REQUEST; /* size: 0x0018 */

typedef struct _SM_PAGE_KEY_DESCRIPTOR
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 ProcessKey;
      /* 0x0008 */ unsigned __int64 VirtualAddress;
    }; /* size: 0x0010 */
    struct
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long PageType : 2; /* bit position: 0 */
          /* 0x0000 */ unsigned long Spare : 1; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ Flags;
      /* 0x0004 */ long __PADDING__[3];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} SM_PAGE_KEY_DESCRIPTOR, *PSM_PAGE_KEY_DESCRIPTOR; /* size: 0x0010 */

typedef union _SM_LOG_ENTRY_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Type : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long Priority : 3; /* bit position: 2 */
      /* 0x0000 */ unsigned long DidNotCompress : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Spare : 2; /* bit position: 6 */
      /* 0x0000 */ unsigned long StoreSet : 8; /* bit position: 8 */
    }; /* bitfield */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long OverlapsWithType : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long Empty : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Spare1 : 5; /* bit position: 3 */
      /* 0x0000 */ unsigned long OverlapsWithStoreSet : 8; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} SM_LOG_ENTRY_FLAGS, *PSM_LOG_ENTRY_FLAGS; /* size: 0x0004 */

typedef struct _SM_LOG_ENTRY
{
  /* 0x0000 */ struct _SM_PAGE_KEY_DESCRIPTOR KeyDescriptor;
  union
  {
    /* 0x0010 */ union _SM_LOG_ENTRY_FLAGS Flags;
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned __int64 AllFlags : 16; /* bit position: 0 */
      /* 0x0010 */ unsigned __int64 PageCount : 48; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} SM_LOG_ENTRY, *PSM_LOG_ENTRY; /* size: 0x0018 */

typedef struct _CRYPT_PROPERTY_REF
{
  /* 0x0000 */ unsigned short* pszProperty;
  /* 0x0008 */ unsigned long cbValue;
  /* 0x000c */ long Padding_1219;
  /* 0x0010 */ unsigned char* pbValue;
} CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF; /* size: 0x0018 */

typedef struct _STORE_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _STORE_INFORMATION_CLASS InfoClass;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long __PADDING__[1];
} STORE_INFORMATION, *PSTORE_INFORMATION; /* size: 0x0018 */

typedef struct _B_TREE_NODE_STATS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long EntriesPerBlock;
  /* 0x0008 */ unsigned long FillPercentBuckets[10];
} B_TREE_NODE_STATS, *PB_TREE_NODE_STATS; /* size: 0x0030 */

typedef struct _SMC_CACHE_PERSIST_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long CacheCount : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long Unpersist : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long PrepareForUnpersist : 1; /* bit position: 17 */
    /* 0x0000 */ unsigned long Spare : 14; /* bit position: 18 */
  }; /* bitfield */
  union
  {
    /* 0x0004 */ unsigned long PersistCacheId[16];
    /* 0x0004 */ wchar_t UnpersistFilePath[256];
  }; /* size: 0x0200 */
} SMC_CACHE_PERSIST_REQUEST, *PSMC_CACHE_PERSIST_REQUEST; /* size: 0x0204 */

typedef struct _ST_PROPERTIES
{
  /* 0x0000 */ struct _ST_PARAMETERS Params;
  /* 0x0038 */ unsigned long OffsetMask;
  /* 0x003c */ unsigned long RegionShift;
  /* 0x0040 */ unsigned long RegionAddThreshold;
  /* 0x0044 */ unsigned long RegionSpaceMax;
  /* 0x0048 */ unsigned long MacSize;
  /* 0x004c */ long __PADDING__[1];
} ST_PROPERTIES, *PST_PROPERTIES; /* size: 0x0050 */

typedef struct _SMC_STORE_CREATE_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ struct _SM_STORE_BASIC_PARAMS StoreParams;
  /* 0x0014 */ unsigned long CacheId;
  /* 0x0018 */ enum _SM_STORE_MANAGER_TYPE StoreManagerType;
  /* 0x001c */ unsigned long StoreId;
} SMC_STORE_CREATE_REQUEST, *PSMC_STORE_CREATE_REQUEST; /* size: 0x0020 */

typedef struct _KNODE::_flags
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Removable : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char GroupAssigned : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char GroupCommitted : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char GroupAssignmentFixed : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Fill : 4; /* bit position: 4 */
  }; /* bitfield */
} KNODE::_flags, *PKNODE::_flags; /* size: 0x0001 */

typedef struct _SM_REGISTRATION_INFO
{
  /* 0x0000 */ void* CachesUpdatedEvent;
  /* 0x0008 */ void* LogEntriesReadyEvent;
} SM_REGISTRATION_INFO, *PSM_REGISTRATION_INFO; /* size: 0x0010 */

typedef struct _SM_REGISTRATION_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1220;
  /* 0x0008 */ struct _SM_REGISTRATION_INFO RegInfo;
} SM_REGISTRATION_REQUEST, *PSM_REGISTRATION_REQUEST; /* size: 0x0018 */

typedef struct _PF_ROBUST_FILE_ENTRY
{
  /* 0x0000 */ unsigned __int64 FilePathHash;
} PF_ROBUST_FILE_ENTRY, *PPF_ROBUST_FILE_ENTRY; /* size: 0x0008 */

typedef struct _ST_IO_STATS
{
  /* 0x0000 */ unsigned long PeriodCount;
  /* 0x0004 */ struct _ST_IO_STATS_PERIOD Periods[64];
} ST_IO_STATS, *PST_IO_STATS; /* size: 0x0504 */

typedef struct _SMKM_KEY_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ wchar_t* Id;
  /* 0x0018 */ char* Key;
  /* 0x0020 */ unsigned long KeySize;
  /* 0x0024 */ long __PADDING__[1];
} SMKM_KEY_ENTRY, *PSMKM_KEY_ENTRY; /* size: 0x0028 */

struct DUMMY_LOCK
{
  /* 0x0000 */ char Dummy;
}; /* size: 0x0001 */

typedef struct _SM_CACHE_STATS_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1221;
  /* 0x0008 */ struct _SM_CACHE_STATS CacheStats;
} SM_CACHE_STATS_REQUEST, *PSM_CACHE_STATS_REQUEST; /* size: 0x0488 */

typedef struct _HEAP_FREE_ENTRY_EXTRA
{
  /* 0x0000 */ unsigned short TagIndex;
  /* 0x0002 */ unsigned short FreeBackTraceIndex;
} HEAP_FREE_ENTRY_EXTRA, *PHEAP_FREE_ENTRY_EXTRA; /* size: 0x0004 */

typedef struct _MI_QUEUED_DEADSTACK
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Next;
  /* 0x0008 */ unsigned long NumberOfPtes;
  /* 0x000c */ long __PADDING__[1];
} MI_QUEUED_DEADSTACK, *PMI_QUEUED_DEADSTACK; /* size: 0x0010 */

typedef struct _SM_STORE_FILE_TOC_ENTRY
{
  /* 0x0000 */ struct _SM_STORE_BASIC_PARAMS StoreParams;
  /* 0x0010 */ struct _SMC_PERSIST_STORE_INFO CacheInfo;
  /* 0x001c */ long Padding_1222;
  union
  {
    /* 0x0020 */ unsigned long StorePersistCtxOffset;
    /* 0x0020 */ void* StorePersistCtx;
  }; /* size: 0x0008 */
} SM_STORE_FILE_TOC_ENTRY, *PSM_STORE_FILE_TOC_ENTRY; /* size: 0x0028 */

typedef struct _SM_STORE_PERSIST_ENTRY
{
  /* 0x0000 */ unsigned long StoreId;
  /* 0x0004 */ long Padding_1223;
  /* 0x0008 */ struct _SM_STORE_FILE_TOC_ENTRY TOCEntry;
} SM_STORE_PERSIST_ENTRY, *PSM_STORE_PERSIST_ENTRY; /* size: 0x0030 */

typedef struct _SM_PERSISTENCE_ID
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long UniqueValues[2];
} SM_PERSISTENCE_ID, *PSM_PERSISTENCE_ID; /* size: 0x0018 */

typedef struct _SM_STORE_UNPERSIST_PARAMS
{
  /* 0x0000 */ struct _SM_STORE_PERSIST_ENTRY UnpersistEntry;
  /* 0x0030 */ struct _SM_PERSISTENCE_ID UnpersistId;
  /* 0x0048 */ struct _SM_STORE_CACHE_BACKED_PARAMS CacheBacked;
  /* 0x0070 */ unsigned long Priority;
  /* 0x0074 */ long __PADDING__[1];
} SM_STORE_UNPERSIST_PARAMS, *PSM_STORE_UNPERSIST_PARAMS; /* size: 0x0078 */

typedef union _PSP_IFEO_NODE_OPTIONS
{
  union
  {
    /* 0x0000 */ unsigned long Data;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Mode : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long Options : 24; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PSP_IFEO_NODE_OPTIONS, *PPSP_IFEO_NODE_OPTIONS; /* size: 0x0004 */

typedef struct _MI_ALLOCATION_DESCRIPTOR
{
  /* 0x0000 */ struct _MM_ALLOCATION_DESCRIPTOR* Next;
  /* 0x0008 */ unsigned __int64 ConsumedPages;
  /* 0x0010 */ enum _TYPE_OF_MEMORY MemoryType;
  /* 0x0014 */ long Padding_1224;
  /* 0x0018 */ unsigned __int64 BasePage;
  /* 0x0020 */ unsigned __int64 PageCount;
} MI_ALLOCATION_DESCRIPTOR, *PMI_ALLOCATION_DESCRIPTOR; /* size: 0x0028 */

typedef struct _MM_ALLOCATION_DESCRIPTOR
{
  union
  {
    /* 0x0000 */ struct _MEMORY_ALLOCATION_DESCRIPTOR Ldr;
    /* 0x0000 */ struct _MI_ALLOCATION_DESCRIPTOR Mi;
  }; /* size: 0x0028 */
} MM_ALLOCATION_DESCRIPTOR, *PMM_ALLOCATION_DESCRIPTOR; /* size: 0x0028 */

typedef struct _ACPI_BIOS_INFORMATION
{
  /* 0x0000 */ unsigned long BootArchitecture;
  /* 0x0004 */ unsigned long PreferredProfile;
  /* 0x0008 */ unsigned long Capabilities;
} ACPI_BIOS_INFORMATION, *PACPI_BIOS_INFORMATION; /* size: 0x000c */

typedef struct _ST_STATS_REGION_SPACE
{
  /* 0x0000 */ unsigned short SpaceUsedByRegion[1];
} ST_STATS_REGION_SPACE, *PST_STATS_REGION_SPACE; /* size: 0x0002 */

typedef struct _RTL_ACQUIRE_STATE
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ void* OldImpersonationToken;
  /* 0x0010 */ struct _TOKEN_PRIVILEGES* OldPrivileges;
  /* 0x0018 */ struct _TOKEN_PRIVILEGES* NewPrivileges;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned char OldPrivBuffer[1024];
  /* 0x0424 */ long __PADDING__[1];
} RTL_ACQUIRE_STATE, *PRTL_ACQUIRE_STATE; /* size: 0x0428 */

typedef struct _ST_ETA_ESTIMATE
{
  /* 0x0000 */ unsigned long MaxSize;
  /* 0x0004 */ unsigned long EstimateInUs;
} ST_ETA_ESTIMATE, *PST_ETA_ESTIMATE; /* size: 0x0008 */

struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>
{
  /* 0x0000 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE* Root;
  /* 0x0008 */ unsigned __int64 EntryCount;
}; /* size: 0x0010 */

struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::INDEX_ENTRY
{
  /* 0x0000 */ union _SM_PAGE_KEY Key;
  /* 0x0004 */ long Padding_1225;
  /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE* Child;
}; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY
{
  /* 0x0000 */ union _SM_PAGE_KEY Key;
  /* 0x0004 */ unsigned long Offset;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long CompressedSize : 12; /* bit position: 0 */
    /* 0x0008 */ unsigned long Spare : 8; /* bit position: 12 */
    /* 0x0008 */ unsigned long SeqNumberHi : 12; /* bit position: 20 */
  }; /* bitfield */
  /* 0x000c */ unsigned long SeqNumberLo;
}; /* size: 0x0010 */

struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE
{
  /* 0x0000 */ long Padding_1226[2];
  union
  {
    struct
    {
      /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE* Child1;
      /* 0x0010 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::INDEX_ENTRY Keys[5];
    } /* size: 0x0058 */ Index;
    struct
    {
      struct
      {
        /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE* Next;
        /* 0x0010 */ struct ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY Entries[4];
      } /* size: 0x0048 */ Leaf;
      /* 0x0050 */ long __PADDING__[4];
    }; /* size: 0x0058 */
  }; /* size: 0x0058 */
}; /* size: 0x0060 */

typedef struct _PNP_PARENT_KEY
{
  /* 0x0000 */ struct HKEY__* Key;
  /* 0x0008 */ struct _PNP_PARENT_KEY* Parent;
} PNP_PARENT_KEY, *PPNP_PARENT_KEY; /* size: 0x0010 */

typedef struct _RTL_NORMALIZATION_LOCK
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
} RTL_NORMALIZATION_LOCK, *PRTL_NORMALIZATION_LOCK; /* size: 0x0008 */

typedef union _PSP_NOTIFY_ROUTINES
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ volatile unsigned long ImageNotifyEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ volatile unsigned long ProcessNotifyEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ volatile unsigned long ProcessNotifyExEnabled : 1; /* bit position: 2 */
      /* 0x0000 */ volatile unsigned long ThreadNotifyEnabled : 1; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PSP_NOTIFY_ROUTINES, *PPSP_NOTIFY_ROUTINES; /* size: 0x0004 */

typedef struct _SMC_CACHE_LIST_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long CacheCount : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long Spare : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long CacheId[16];
} SMC_CACHE_LIST_REQUEST, *PSMC_CACHE_LIST_REQUEST; /* size: 0x0044 */

typedef struct _SM_STORE_PERSIST_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long StoreCount : 8; /* bit position: 8 */
    /* 0x0000 */ unsigned long Unpersist : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long Spare : 15; /* bit position: 17 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1227;
  union
  {
    /* 0x0008 */ struct _SM_STORE_PERSIST_ENTRY PersistEntries[8];
    struct
    {
      /* 0x0008 */ struct _SM_STORE_UNPERSIST_PARAMS UnpersistParams;
      /* 0x0080 */ long __PADDING__[66];
    }; /* size: 0x0180 */
  }; /* size: 0x0180 */
} SM_STORE_PERSIST_REQUEST, *PSM_STORE_PERSIST_REQUEST; /* size: 0x0188 */

typedef struct _BITMAPINFOHEADER
{
  /* 0x0000 */ unsigned long biSize;
  /* 0x0004 */ long biWidth;
  /* 0x0008 */ long biHeight;
  /* 0x000c */ unsigned short biPlanes;
  /* 0x000e */ unsigned short biBitCount;
  /* 0x0010 */ unsigned long biCompression;
  /* 0x0014 */ unsigned long biSizeImage;
  /* 0x0018 */ long biXPelsPerMeter;
  /* 0x001c */ long biYPelsPerMeter;
  /* 0x0020 */ unsigned long biClrUsed;
  /* 0x0024 */ unsigned long biClrImportant;
} BITMAPINFOHEADER, *PBITMAPINFOHEADER; /* size: 0x0028 */

typedef struct _SM_FP_CONFIG_ENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Type : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned long Size : 16; /* bit position: 4 */
    /* 0x0000 */ unsigned long Count : 8; /* bit position: 20 */
  }; /* bitfield */
} SM_FP_CONFIG_ENTRY, *PSM_FP_CONFIG_ENTRY; /* size: 0x0004 */

struct B_TREE_DUMMY_NODE_POOL
{
}; /* size: 0x0001 */

struct B_TREE_DUMMY_NODE_POOL::NP_CTX
{
}; /* size: 0x0001 */

struct B_TREE_NODE_HDR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long EntryCount : 16; /* bit position: 0 */
    /* 0x0000 */ unsigned long Depth : 8; /* bit position: 16 */
    /* 0x0000 */ unsigned long LeafNode : 8; /* bit position: 24 */
  }; /* bitfield */
}; /* size: 0x0004 */

typedef union _SM_PAGE_ADD_PARAM
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long AddBitmap : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long RemoveBitmap : 8; /* bit position: 8 */
      /* 0x0000 */ unsigned long Priority : 3; /* bit position: 16 */
      /* 0x0000 */ unsigned long IssuedByMm : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long IsWriteUpdate : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long Spare : 11; /* bit position: 21 */
    }; /* bitfield */
    /* 0x0000 */ void* AllBits;
  }; /* size: 0x0008 */
} SM_PAGE_ADD_PARAM, *PSM_PAGE_ADD_PARAM; /* size: 0x0008 */

typedef struct _SM_PAGE_REQUEST
{
  /* 0x0000 */ enum _SM_PAGE_REQUEST_TYPE RequestType;
  /* 0x0004 */ long Padding_1228;
  /* 0x0008 */ union _SM_PAGE_ADD_PARAM StoreParam;
  /* 0x0010 */ union _SM_PAGE_KEY PageKey;
  /* 0x0014 */ long Padding_1229;
  /* 0x0018 */ struct _SM_PAGE_KEY_DESCRIPTOR PageKeyDescriptor;
  /* 0x0028 */ unsigned long WasInStore : 1; /* bit position: 0 */
  /* 0x002c */ long Padding_1230;
  union
  {
    /* 0x0030 */ void* Data;
    /* 0x0030 */ unsigned long PageCount;
  }; /* size: 0x0008 */
  /* 0x0038 */ unsigned __int64 Information;
} SM_PAGE_REQUEST, *PSM_PAGE_REQUEST; /* size: 0x0040 */

typedef struct _SMC_CACHE_CREATE_PARAMETERS
{
  /* 0x0000 */ struct _SMC_CACHE_PARAMETERS CacheParameters;
  /* 0x0018 */ wchar_t TemplateFilePath[512];
} SMC_CACHE_CREATE_PARAMETERS, *PSMC_CACHE_CREATE_PARAMETERS; /* size: 0x0418 */

typedef struct _ST_LATENCY_ENTRY
{
  /* 0x0000 */ unsigned __int64 MaxDuration;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long __PADDING__[1];
} ST_LATENCY_ENTRY, *PST_LATENCY_ENTRY; /* size: 0x0010 */

typedef struct _SMC_CACHE_STATS
{
  /* 0x0000 */ unsigned __int64 TotalFileSize;
  /* 0x0008 */ unsigned long StoreCount;
  /* 0x000c */ unsigned long RegionCount;
  /* 0x0010 */ unsigned long RegionSizeBytes;
  struct /* bitfield */
  {
    /* 0x0014 */ unsigned long FileCount : 6; /* bit position: 0 */
    /* 0x0014 */ unsigned long PerformsFileIo : 1; /* bit position: 6 */
    /* 0x0014 */ unsigned long Spare : 25; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0018 */ unsigned long StoreIds[16];
  /* 0x0058 */ unsigned long PhysicalStoreBitmap;
  /* 0x005c */ unsigned long Priority;
  /* 0x0060 */ wchar_t TemplateFilePath[512];
} SMC_CACHE_STATS, *PSMC_CACHE_STATS; /* size: 0x0460 */

typedef struct _SMC_CACHE_STATS_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long NoFilePath : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned long Spare : 23; /* bit position: 9 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long CacheId;
  /* 0x0008 */ struct _SMC_CACHE_STATS CacheStats;
} SMC_CACHE_STATS_REQUEST, *PSMC_CACHE_STATS_REQUEST; /* size: 0x0468 */

typedef struct _ST_DATA_MGR_STATS
{
  /* 0x0000 */ unsigned long RegionCount;
  /* 0x0004 */ unsigned long PagesStored;
  /* 0x0008 */ unsigned long RegionsInUse;
  /* 0x000c */ unsigned long TotalSpaceUsed;
} ST_DATA_MGR_STATS, *PST_DATA_MGR_STATS; /* size: 0x0010 */

struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>
{
  /* 0x0000 */ struct B_TREE_HEADER<_SM_PAGE_KEY,SMKM_STORE_MGR<SM_TRAITS>::SMKM_FRONTEND_ENTRY>::NODE* Root;
  /* 0x0008 */ unsigned __int64 EntryCount;
}; /* size: 0x0010 */

typedef union _SMKM_IO_STREAM_RESULT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char Type;
      /* 0x0001 */ unsigned char Index;
      /* 0x0002 */ unsigned short IntermediateIoCount;
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long Ulong;
  }; /* size: 0x0004 */
} SMKM_IO_STREAM_RESULT, *PSMKM_IO_STREAM_RESULT; /* size: 0x0004 */

typedef struct _HEAP_LOOKUP_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY* Hint;
  /* 0x0008 */ unsigned __int64 Usage;
} HEAP_LOOKUP_ENTRY, *PHEAP_LOOKUP_ENTRY; /* size: 0x0010 */

typedef struct _IOPERF_COMPLETION_CONTEXT
{
  /* 0x0000 */ struct _IO_STACK_LOCATION* StackPointer;
  /* 0x0008 */ void* IrpContext;
  /* 0x0010 */ void* CompletionRoutine /* function */;
  /* 0x0018 */ unsigned long UniqMatchId;
  /* 0x001c */ unsigned char Control;
  /* 0x001d */ char __PADDING__[3];
} IOPERF_COMPLETION_CONTEXT, *PIOPERF_COMPLETION_CONTEXT; /* size: 0x0020 */

typedef struct _XIP_BOOT_PARAMETERS
{
  /* 0x0000 */ unsigned char SystemDrive;
  /* 0x0001 */ unsigned char ReadOnly;
  /* 0x0002 */ char Padding_1231[6];
  /* 0x0008 */ unsigned __int64 BasePage;
  /* 0x0010 */ unsigned __int64 PageCount;
} XIP_BOOT_PARAMETERS, *PXIP_BOOT_PARAMETERS; /* size: 0x0018 */

struct tagSHIMCACHEWORKITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM Item;
  /* 0x0020 */ struct _AEL_REQUEST_MESSAGE* Message;
  /* 0x0028 */ struct _ALPC_MESSAGE_ATTRIBUTES* MessageAttributes;
}; /* size: 0x0030 */

typedef struct _ST_STATS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Level : 4; /* bit position: 8 */
    /* 0x0000 */ unsigned long StoreType : 4; /* bit position: 12 */
    /* 0x0000 */ unsigned long NoDuplication : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long StaticPopulation : 1; /* bit position: 17 */
    /* 0x0000 */ unsigned long NoCompression : 1; /* bit position: 18 */
    /* 0x0000 */ unsigned long EncryptionStrength : 12; /* bit position: 19 */
    /* 0x0000 */ unsigned long Spare : 1; /* bit position: 31 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long Size;
  struct
  {
    /* 0x0008 */ unsigned long RegionSize;
    /* 0x000c */ unsigned long RegionCount;
    /* 0x0010 */ unsigned long Granularity;
    /* 0x0014 */ struct _ST_DATA_MGR_STATS UserData;
    /* 0x0024 */ struct _ST_DATA_MGR_STATS Metadata;
  } /* size: 0x002c */ Basic;
  struct
  {
    /* 0x0034 */ struct _ST_IO_STATS IoStats;
    /* 0x0538 */ struct _ST_READ_LATENCY_STATS ReadLatencyStats;
  } /* size: 0x0544 */ Io;
} ST_STATS, *PST_STATS; /* size: 0x0578 */

typedef struct _SM_REGION
{
  /* 0x0000 */ struct _MDL* Mdl;
} SM_REGION, *PSM_REGION; /* size: 0x0008 */

struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>
{
}; /* size: 0x0018 */

struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY
{
  /* 0x0000 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::NODE* Node;
  union
  {
    /* 0x0008 */ struct ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY* LeafEntry;
    /* 0x0008 */ struct B_TREE_HEADER<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY>::INDEX_ENTRY* IndexEntry;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::SEARCH_RESULT
{
  /* 0x0000 */ struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY* SearchPathA;
  /* 0x0008 */ struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY SearchResult;
  /* 0x0018 */ unsigned long EntryCount;
  /* 0x001c */ unsigned long EntryMax;
  /* 0x0020 */ unsigned long ReadOnlyAccess : 1; /* bit position: 0 */
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct ST_STORE<SM_TRAITS>::_ST_STAGING_REGION
{
  /* 0x0000 */ unsigned long RegionIndex;
  /* 0x0004 */ long Padding_1232;
  /* 0x0008 */ char* Buffer;
  /* 0x0010 */ struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM* IoWorkItem;
}; /* size: 0x0018 */

struct ST_STORE<SM_TRAITS>::_ST_META_KEY
{
  /* 0x0000 */ unsigned __int64 Index;
  /* 0x0008 */ unsigned __int64 Min;
  /* 0x0010 */ unsigned __int64 Max;
}; /* size: 0x0018 */

struct ST_STORE<SM_TRAITS>::_STNP_CONTEXT
{
  /* 0x0000 */ struct NP_CONTEXT Np;
  /* 0x0060 */ enum ST_STORE<SM_TRAITS>::_STNP_TREE_TYPE TreeType;
  /* 0x0064 */ long Padding_1233;
  /* 0x0068 */ struct ST_STORE<SM_TRAITS>::_ST_META_KEY MetaKey;
  /* 0x0080 */ struct ST_STORE<SM_TRAITS>::_ST_DATA_MGR* DataMgr;
}; /* size: 0x0088 */

typedef struct _STFP_BUFFER
{
  union
  {
    /* 0x0000 */ unsigned long InUse : 1; /* bit position: 0 */
    /* 0x0000 */ void* Buffer;
  }; /* size: 0x0008 */
} STFP_BUFFER, *PSTFP_BUFFER; /* size: 0x0008 */

struct ST_STORE<SM_TRAITS>::_ST_DATA_MGR
{
  /* 0x0000 */ struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT> PageTree;
  /* 0x0018 */ struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::SEARCH_RESULT PageTreeSearchResult;
  /* 0x0040 */ struct DUMMY_LOCK PageTreeLock;
  /* 0x0041 */ char Padding_1234[7];
  /* 0x0048 */ struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT> RegionTree;
  /* 0x0060 */ struct B_TREE<unsigned long,ST_STORE<SM_TRAITS>::_ST_REGION_ENTRY,4096,NP_CONTEXT>::SEARCH_RESULT RegionTreeSearchResult;
  /* 0x0088 */ struct _ST_PROPERTIES Store;
  /* 0x00d8 */ struct _STDM_PARAMETERS Params;
  /* 0x00e4 */ long Padding_1235;
  /* 0x00e8 */ struct
  {
    /* 0x00e8 */ int XpressEncodeDummy;
  } /* size: 0x0004 */** EncodeStream;
  /* 0x00f0 */ struct
  {
    /* 0x00f0 */ int XpressDecodeDummy;
  } /* size: 0x0004 */** DecodeStream;
  /* 0x00f8 */ struct _ST_ETA_CONTEXT* EtaContext;
  /* 0x0100 */ unsigned long DiskLatency;
  /* 0x0104 */ unsigned long BailCount;
  /* 0x0108 */ struct _SMCR_ENCRYPT_CONTEXT* EncryptCtx;
  /* 0x0110 */ union _ULARGE_INTEGER GlobalSeqNumber;
  /* 0x0118 */ union ST_STORE<SM_TRAITS>::_ST_REGION_STATE* RegionState;
  /* 0x0120 */ unsigned char* RegionReads;
  /* 0x0128 */ unsigned char* RegionLAT;
  /* 0x0130 */ unsigned long StoreTime;
  /* 0x0134 */ long Padding_1236;
  /* 0x0138 */ struct ST_STORE<SM_TRAITS>::_ST_STAGING_REGION StagingRegions[6];
  /* 0x01c8 */ unsigned long CurrentRegionIndex;
  /* 0x01cc */ unsigned long CurrentRegionOffset;
  /* 0x01d0 */ char* CurrentRegion;
  /* 0x01d8 */ struct ST_STORE<SM_TRAITS>::_STNP_CONTEXT NodePoolPT;
  /* 0x0260 */ struct ST_STORE<SM_TRAITS>::_STNP_CONTEXT NodePoolRT;
  /* 0x02e8 */ char* PageBuffer;
  struct
  {
    /* 0x02f0 */ struct _STFP_BUFFER CompactionBuffer;
    /* 0x02f8 */ struct _STFP_BUFFER ReadBuffer;
    /* 0x0300 */ struct _STFP_BUFFER IoWorkItem;
  } /* size: 0x0018 */ FP;
  struct
  {
    /* 0x0308 */ struct ST_STORE<SM_TRAITS>::_ST_STATS_CTX* StoreStats;
    /* 0x0310 */ unsigned long RegionsInUse;
    /* 0x0314 */ unsigned long TotalSpaceUsed;
    /* 0x0318 */ unsigned long RegionWriteFailures;
    /* 0x031c */ unsigned long RegionReadFailures;
  } /* size: 0x0018 */ Stats;
  /* 0x0320 */ struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM LazyWorkItem;
  struct /* bitfield */
  {
    /* 0x0340 */ unsigned char CompactionState : 2; /* bit position: 0 */
    /* 0x0340 */ unsigned char CompactionPostponed : 1; /* bit position: 2 */
    /* 0x0340 */ unsigned char Spare0 : 5; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0341 */ char Padding_1237[7];
  /* 0x0348 */ struct ST_STORE<SM_TRAITS>::_ST_PERSIST_STATE* PersistState;
}; /* size: 0x0350 */

struct ST_STORE<SM_TRAITS>::_ST_DEVICE_HEALTH_STATS
{
  /* 0x0000 */ unsigned long SuccessCount;
  struct
  {
    /* 0x0004 */ unsigned long Count;
    /* 0x0008 */ unsigned long LastSuccessCount;
  } /* size: 0x0008 */ Corrupt;
  struct
  {
    /* 0x000c */ unsigned long RunStartTime;
    /* 0x0010 */ unsigned long LastSuccessCount;
  } /* size: 0x0008 */ IoFail;
}; /* size: 0x0014 */

typedef struct _ST_LATENCY_CTX
{
  /* 0x0000 */ struct _ST_LATENCY_ENTRY* LastBucket;
  /* 0x0008 */ unsigned long BucketCount;
  /* 0x000c */ long Padding_1238;
  /* 0x0010 */ struct _ST_LATENCY_ENTRY* Buckets;
} ST_LATENCY_CTX, *PST_LATENCY_CTX; /* size: 0x0018 */

struct ST_STORE<SM_TRAITS>::_ST_STATS_CTX
{
  /* 0x0000 */ struct ST_STORE<SM_TRAITS>::_ST_DEVICE_HEALTH_STATS DeviceStats;
  /* 0x0014 */ long Padding_1239;
  /* 0x0018 */ struct _ST_IO_COUNTS IoStats;
  /* 0x0530 */ struct _ST_LATENCY_CTX ReadLatency;
  /* 0x0548 */ struct _ST_LATENCY_ENTRY LatencyBuckets[8];
}; /* size: 0x05c8 */

struct ST_STORE<SM_TRAITS>::_ST_PERSIST_STATE
{
  /* 0x0000 */ enum ST_STORE<SM_TRAITS>::_ST_PERSIST_PHASE State;
  /* 0x0004 */ union _SM_PAGE_KEY LazyRestoreKey;
}; /* size: 0x0008 */

struct ST_STORE<SM_TRAITS>
{
  /* 0x0000 */ struct _ST_PROPERTIES Properties;
  /* 0x0050 */ union ST_STORE<SM_TRAITS>::_ST_REGION_STATE* RegionState;
  /* 0x0058 */ unsigned char* RegionReads;
  /* 0x0060 */ unsigned char* RegionLAT;
  /* 0x0068 */ struct ST_STORE<SM_TRAITS>::_ST_DATA_MGR UserData;
  /* 0x03b8 */ struct ST_STORE<SM_TRAITS>::_ST_DATA_MGR Metadata;
  /* 0x0708 */ struct _ST_ETA_CONTEXT* EtaContext;
  /* 0x0710 */ struct _ST_ETA_CONTEXT LocalEtaContext;
  /* 0x0748 */ struct
  {
    /* 0x0748 */ int XpressEncodeDummy;
  } /* size: 0x0004 */* EncodeStream;
  /* 0x0750 */ struct
  {
    /* 0x0750 */ int XpressDecodeDummy;
  } /* size: 0x0004 */* DecodeStream;
  /* 0x0758 */ struct _SMCR_ENCRYPT_CONTEXT EncryptContext;
  /* 0x07e8 */ char* PageBuffer;
  /* 0x07f0 */ struct ST_STORE<SM_TRAITS>::_ST_STATS_CTX Stats;
  /* 0x0db8 */ struct ST_STORE<SM_TRAITS>::_ST_PERSIST_STATE PersistState;
}; /* size: 0x0dc0 */

struct SMKM_STORE<SM_TRAITS>
{
  /* 0x0000 */ struct ST_STORE<SM_TRAITS> Store;
  /* 0x0dc0 */ unsigned long StoreId;
  /* 0x0dc4 */ unsigned char StoreType;
  /* 0x0dc5 */ unsigned char ShuttingDown : 1; /* bit position: 0 */
  /* 0x0dc6 */ char Padding_1240[2];
  /* 0x0dc8 */ struct _SMKM_STORE_QUEUE Queue;
  /* 0x0e38 */ struct _KEVENT StopEvent;
  /* 0x0e50 */ struct _KEVENT SyncIoEvent;
  /* 0x0e68 */ struct _KTHREAD* WorkerThread;
  /* 0x0e70 */ unsigned long RegionSize;
  /* 0x0e74 */ unsigned long RegionCount;
  union
  {
    struct
    {
      /* 0x0e78 */ struct _SM_REGION* Regions;
      /* 0x0e80 */ struct SM_TRAITS::SMST_MEMORY_STORE_SUPPORT* MsSupport;
    }; /* size: 0x0010 */
    /* 0x0e78 */ struct _SMKM_FILE_INFO File;
  }; /* size: 0x0040 */
  /* 0x0eb8 */ struct _SM_PERSISTENCE_ID PersistId;
  /* 0x0ed0 */ struct _PF_QUEUE DeferredWorkItems;
  /* 0x0ee0 */ union _LARGE_INTEGER Timeout;
  /* 0x0ee8 */ struct _SM_FORWARD_PROGRESS_CTX FpContext;
  /* 0x0f38 */ void* StoreMgr;
  /* 0x0f40 */ long NormalCPUPriority;
  /* 0x0f44 */ long __PADDING__[1];
}; /* size: 0x0f48 */

struct tagAHCACHESERVICEDATACACHE
{
  /* 0x0000 */ unsigned long probed;
  /* 0x0004 */ unsigned long probeResult;
  /* 0x0008 */ void* FileHandle;
  /* 0x0010 */ struct _UNICODE_STRING FileName;
  /* 0x0020 */ unsigned long CustomDataSize;
  /* 0x0024 */ long Padding_1241;
  /* 0x0028 */ unsigned char* CustomData;
}; /* size: 0x0030 */

typedef struct _PFSN_TRACING_STATE_TIMER
{
  /* 0x0000 */ struct _KTIMER Timer;
  /* 0x0040 */ struct _KDPC Dpc;
  /* 0x0080 */ struct _WORK_QUEUE_ITEM ExWorkItem;
} PFSN_TRACING_STATE_TIMER, *PPFSN_TRACING_STATE_TIMER; /* size: 0x00a0 */

union ST_STORE<SM_TRAITS>::_ST_REGION_STATE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short SpaceUsed : 14; /* bit position: 0 */
      /* 0x0000 */ unsigned short ReadInProgress : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned short WriteInProgress : 1; /* bit position: 15 */
    }; /* bitfield */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short DontUse : 14; /* bit position: 0 */
      /* 0x0000 */ unsigned short IoInProgress : 2; /* bit position: 14 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short EntireUshort;
  }; /* size: 0x0002 */
}; /* size: 0x0002 */

struct VERIFIER_EXTENSION
{
  /* 0x0000 */ struct _DEVICE_OBJECT* PhysicalDeviceObject;
  /* 0x0008 */ struct _DEVICE_OBJECT* LowerDeviceObject;
  /* 0x0010 */ struct _DEVICE_OBJECT* Self;
  /* 0x0018 */ enum VF_DEVOBJ_TYPE DevObjType;
  /* 0x001c */ long Padding_1242;
  /* 0x0020 */ struct _IO_REMOVE_LOCK RemoveLock;
}; /* size: 0x0040 */

struct positional_param
{
  /* 0x0000 */ enum ARG_TYPE arg_type;
  /* 0x0004 */ long Padding_1243;
  /* 0x0008 */ char* arg_ptr;
  /* 0x0010 */ wchar_t type;
  /* 0x0012 */ char Padding_1244[2];
  /* 0x0014 */ int flags;
}; /* size: 0x0018 */

typedef struct _PF_EVENT_PROCESS_EXIT
{
  /* 0x0000 */ unsigned __int64 ProcessKey;
  /* 0x0008 */ unsigned __int64 UniqueProcessHash;
  /* 0x0010 */ unsigned long ProcessId;
  /* 0x0014 */ unsigned long ImagePathHash;
} PF_EVENT_PROCESS_EXIT, *PPF_EVENT_PROCESS_EXIT; /* size: 0x0018 */

struct CultureIndexByName
{
  /* 0x0000 */ wchar_t* cultureName;
  /* 0x0008 */ int cultureDataItem;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _POP_WAKE_SOURCE
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ long Padding_1245;
  union
  {
    struct
    {
      /* 0x0018 */ struct _UNICODE_STRING InstancePath;
      /* 0x0028 */ struct _UNICODE_STRING FriendlyName;
      /* 0x0038 */ struct _UNICODE_STRING Description;
      /* 0x0048 */ unsigned long Level;
      /* 0x004c */ long __PADDING__[1];
    } /* size: 0x0038 */ Device;
    struct
    {
      /* 0x0018 */ unsigned long Mask;
    } /* size: 0x0004 */ Fixed;
    struct
    {
      struct
      {
        /* 0x0018 */ struct _DIAGNOSTIC_BUFFER* Reason;
      } /* size: 0x0008 */ Timer;
      /* 0x0020 */ long __PADDING__[12];
    }; /* size: 0x0038 */
  }; /* size: 0x0038 */
} POP_WAKE_SOURCE, *PPOP_WAKE_SOURCE; /* size: 0x0050 */

typedef struct _VI_CTX_ISR_CONTEXT
{
  /* 0x0000 */ void* DriverServiceRoutine /* function */;
  /* 0x0008 */ void* DriverServiceContext;
  /* 0x0010 */ void* DriverMessageServiceRoutine /* function */;
} VI_CTX_ISR_CONTEXT, *PVI_CTX_ISR_CONTEXT; /* size: 0x0018 */

typedef struct _GLYPH_POINT
{
  /* 0x0000 */ long OutlineX;
  /* 0x0004 */ long OutlineY;
  /* 0x0008 */ long AdjustX;
  /* 0x000c */ long AdjustY;
  /* 0x0010 */ unsigned char Flags;
} GLYPH_POINT, *PGLYPH_POINT; /* size: 0x0011 */

typedef struct _MAP_REGISTER
{
  /* 0x0000 */ void* MappedToSa;
  /* 0x0008 */ unsigned long BytesMapped;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ void* MapRegisterStart;
  /* 0x0018 */ void* MappedToSaCopy;
} MAP_REGISTER, *PMAP_REGISTER; /* size: 0x0020 */

typedef struct _MAP_REGISTER_FILE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_1246;
  /* 0x0008 */ struct _LIST_ENTRY ListEntry;
  /* 0x0018 */ unsigned char ContiguousMap;
  /* 0x0019 */ unsigned char ScatterGather;
  /* 0x001a */ char Padding_1247[2];
  /* 0x001c */ unsigned long NumberOfMapRegisters;
  /* 0x0020 */ unsigned long NumberOfRegistersMapped;
  /* 0x0024 */ long Padding_1248;
  /* 0x0028 */ struct _MDL* DmaMdl;
  /* 0x0030 */ void* MapRegisterBaseFromHal;
  /* 0x0038 */ struct _MDL* MapRegisterMdl;
  /* 0x0040 */ void* MapRegisterBuffer;
  /* 0x0048 */ void* OriginalBuffer;
  /* 0x0050 */ unsigned __int64 AllocationLock;
  /* 0x0058 */ struct _MAP_REGISTER MapRegisters[1];
} MAP_REGISTER_FILE, *PMAP_REGISTER_FILE; /* size: 0x0078 */

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ unsigned short* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwFlags;
} BCRYPT_ALGORITHM_IDENTIFIER, *PBCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0010 */

typedef struct _LONG_HORIZONTAL_METRIC
{
  /* 0x0000 */ unsigned short AdvanceWidth;
  /* 0x0002 */ short LeftSideBearing;
} LONG_HORIZONTAL_METRIC, *PLONG_HORIZONTAL_METRIC; /* size: 0x0004 */

typedef struct _HAL_VERIFIER_LOCKED_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ unsigned __int64 SpinLock;
} HAL_VERIFIER_LOCKED_LIST, *PHAL_VERIFIER_LOCKED_LIST; /* size: 0x0018 */

typedef struct _VF_WAIT_CONTEXT_BLOCK
{
  /* 0x0000 */ void* RealContext;
  /* 0x0008 */ void* RealCallback;
  /* 0x0010 */ struct _MDL* RealMdl;
  /* 0x0018 */ void* RealStartVa;
  /* 0x0020 */ unsigned long RealLength;
  /* 0x0024 */ unsigned long NumberOfMapRegisters;
  /* 0x0028 */ struct _ADAPTER_INFORMATION* AdapterInformation;
  /* 0x0030 */ struct _SCATTER_GATHER_LIST* ScatterGatherList;
  /* 0x0038 */ struct _LIST_ENTRY ListEntry;
  /* 0x0048 */ struct _MAP_REGISTER_FILE* MapRegisterFile;
  /* 0x0050 */ struct _MDL Mdl;
} VF_WAIT_CONTEXT_BLOCK, *PVF_WAIT_CONTEXT_BLOCK; /* size: 0x0080 */

typedef struct _ADAPTER_INFORMATION
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DMA_ADAPTER* DmaAdapter;
  /* 0x0018 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0020 */ unsigned char DeferredRemove;
  /* 0x0021 */ unsigned char UseContiguousBuffers;
  /* 0x0022 */ unsigned char UseDmaChannel;
  /* 0x0023 */ unsigned char Inactive;
  /* 0x0024 */ long Padding_1249;
  /* 0x0028 */ void* CallingAddress;
  /* 0x0030 */ struct _DMA_OPERATIONS* RealDmaOperations;
  /* 0x0038 */ struct _HAL_VERIFIER_LOCKED_LIST ScatterGatherLists;
  /* 0x0050 */ struct _HAL_VERIFIER_LOCKED_LIST CommonBuffers;
  /* 0x0068 */ struct _HAL_VERIFIER_LOCKED_LIST MapRegisterFiles;
  /* 0x0080 */ unsigned long MaximumMapRegisters;
  /* 0x0084 */ unsigned long AllocatedMapRegisters;
  /* 0x0088 */ long ActiveMapRegisters;
  /* 0x008c */ unsigned long AllocatedScatterGatherLists;
  /* 0x0090 */ long ActiveScatterGatherLists;
  /* 0x0094 */ unsigned long AllocatedCommonBuffers;
  /* 0x0098 */ unsigned long FreedCommonBuffers;
  /* 0x009c */ unsigned long AllocatedAdapterChannels;
  /* 0x00a0 */ unsigned long FreedAdapterChannels;
  /* 0x00a4 */ unsigned long MappedTransferWithoutFlushing;
  /* 0x00a8 */ struct _DEVICE_DESCRIPTION DeviceDescription;
  /* 0x00d0 */ unsigned long AdapterChannelMapRegisters;
  /* 0x00d4 */ long Padding_1250;
  /* 0x00d8 */ struct _VF_WAIT_CONTEXT_BLOCK AdapterChannelContextBlock;
  /* 0x0158 */ void** ContiguousBuffers;
  /* 0x0160 */ unsigned long SuccessfulContiguousAllocations;
  /* 0x0164 */ unsigned long FailedContiguousAllocations;
  /* 0x0168 */ unsigned __int64 AllocationLock;
  /* 0x0170 */ unsigned long AllocationStorage[1];
  /* 0x0174 */ long Padding_1251;
  /* 0x0178 */ struct _RTL_BITMAP AllocationMap;
  /* 0x0188 */ unsigned long ContiguousMapRegisters;
  /* 0x018c */ unsigned long NonContiguousMapRegisters;
} ADAPTER_INFORMATION, *PADAPTER_INFORMATION; /* size: 0x0190 */

typedef struct _HEAP_ENTRY
{
  union
  {
    struct
    {
      /* 0x0000 */ void* PreviousBlockPrivateData;
      union
      {
        struct
        {
          /* 0x0008 */ unsigned short Size;
          /* 0x000a */ unsigned char Flags;
          /* 0x000b */ unsigned char SmallTagIndex;
          /* 0x000c */ unsigned short PreviousSize;
          union
          {
            /* 0x000e */ unsigned char SegmentOffset;
            struct
            {
              /* 0x000e */ unsigned char LFHFlags;
              /* 0x000f */ unsigned char UnusedBytes;
            }; /* size: 0x0002 */
          }; /* size: 0x0002 */
        }; /* size: 0x0008 */
        /* 0x0008 */ unsigned __int64 CompactHeader;
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ void* Reserved;
      union
      {
        struct
        {
          /* 0x0008 */ unsigned short FunctionIndex;
          /* 0x000a */ unsigned short ContextValue;
        }; /* size: 0x0004 */
        struct
        {
          /* 0x0008 */ unsigned long InterceptorValue;
          /* 0x000c */ unsigned short UnusedBytesLength;
          /* 0x000e */ unsigned char EntryOffset;
          /* 0x000f */ unsigned char ExtendedBlockSignature;
        }; /* size: 0x0008 */
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ void* ReservedForAlignment;
      union
      {
        struct
        {
          /* 0x0008 */ unsigned long Code1;
          /* 0x000c */ unsigned short Code2;
          /* 0x000e */ unsigned char Code3;
          /* 0x000f */ unsigned char Code4;
        }; /* size: 0x0008 */
        /* 0x0008 */ unsigned __int64 AgregateCode;
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} HEAP_ENTRY, *PHEAP_ENTRY; /* size: 0x0010 */

typedef struct _KERNSNAP_APC_CONTROL
{
  /* 0x0000 */ long State;
  /* 0x0004 */ long Padding_1252;
  /* 0x0008 */ struct _DUMP_FILE_DESCRIPTOR* DumpFile;
  /* 0x0010 */ struct _SYSDBG_TRIAGE_DUMP* TriageDumpRequest;
  /* 0x0018 */ struct _KERNSNAP_THREAD_DATA* ThreadData;
  /* 0x0020 */ struct _KEVENT SyncEvent;
} KERNSNAP_APC_CONTROL, *PKERNSNAP_APC_CONTROL; /* size: 0x0038 */

typedef struct _KERNSNAP_APC
{
  /* 0x0000 */ struct _KAPC Apc;
  /* 0x0058 */ struct _KERNSNAP_APC_CONTROL ApcControl;
} KERNSNAP_APC, *PKERNSNAP_APC; /* size: 0x0090 */

typedef struct _HEAP_PSEUDO_TAG_ENTRY
{
  /* 0x0000 */ unsigned long Allocs;
  /* 0x0004 */ unsigned long Frees;
  /* 0x0008 */ unsigned __int64 Size;
} HEAP_PSEUDO_TAG_ENTRY, *PHEAP_PSEUDO_TAG_ENTRY; /* size: 0x0010 */

typedef struct _SMC_CACHE_DELETE_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long CacheId;
} SMC_CACHE_DELETE_REQUEST, *PSMC_CACHE_DELETE_REQUEST; /* size: 0x0008 */

typedef struct _PFS_LOG_ENTRY_EVENT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 PfLogEntryType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 SpannedEntries : 10; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 EventType : 5; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 HasTime : 1; /* bit position: 17 */
  }; /* bitfield */
  union
  {
    /* 0x0008 */ unsigned long EventTime;
    /* 0x0008 */ unsigned __int64 PhysicalPageNumber;
    struct
    {
      /* 0x0008 */ unsigned long StreamSequenceNumber;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PFS_LOG_ENTRY_EVENT, *PPFS_LOG_ENTRY_EVENT; /* size: 0x0010 */

typedef struct _SMKM_WORK_ITEM
{
  /* 0x0000 */ void* Worker /* function */;
  /* 0x0008 */ void* Parameter;
  /* 0x0010 */ struct _WORK_QUEUE_ITEM WorkItem;
} SMKM_WORK_ITEM, *PSMKM_WORK_ITEM; /* size: 0x0030 */

typedef struct _SM_CREATE_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1253;
  /* 0x0008 */ struct _SM_STORE_PARAMETERS Params;
  /* 0x0220 */ unsigned long StoreId;
  /* 0x0224 */ long __PADDING__[1];
} SM_CREATE_REQUEST, *PSM_CREATE_REQUEST; /* size: 0x0228 */

typedef struct _SMC_VOLUME_ARRIVAL_CONTEXT
{
  /* 0x0000 */ struct _SMKM_WORK_ITEM WorkItem;
  /* 0x0030 */ wchar_t CacheFilePath[1];
  /* 0x0032 */ char __PADDING__[6];
} SMC_VOLUME_ARRIVAL_CONTEXT, *PSMC_VOLUME_ARRIVAL_CONTEXT; /* size: 0x0038 */

typedef struct _MI_STORE_EVICT_THREAD_PARAMS
{
  /* 0x0000 */ struct _KEVENT StartEvent;
  /* 0x0018 */ unsigned long TerminateThread;
  /* 0x001c */ long __PADDING__[1];
} MI_STORE_EVICT_THREAD_PARAMS, *PMI_STORE_EVICT_THREAD_PARAMS; /* size: 0x0020 */

struct B_TREE_DBG_NODE_POOL
{
}; /* size: 0x0001 */

struct SaFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ __m128 SavedXmm6;
  /* 0x0030 */ __m128 SavedXmm7;
  /* 0x0040 */ __m128 SavedXmm8;
  /* 0x0050 */ __m128 SavedXmm9;
  /* 0x0060 */ __m128 SavedXmm10;
  /* 0x0070 */ __m128 SavedXmm11;
  /* 0x0080 */ __m128 SavedXmm12;
  /* 0x0090 */ __m128 SavedXmm13;
  /* 0x00a0 */ __m128 SavedXmm14;
  /* 0x00b0 */ __m128 SavedXmm15;
  /* 0x00c0 */ unsigned __int64 SavedRbx;
  /* 0x00c8 */ unsigned __int64 SavedRbp;
  /* 0x00d0 */ unsigned __int64 SavedRsi;
  /* 0x00d8 */ unsigned __int64 SavedRdi;
  /* 0x00e0 */ unsigned __int64 SavedR12;
  /* 0x00e8 */ unsigned __int64 SavedR13;
  /* 0x00f0 */ unsigned __int64 SavedR14;
  /* 0x00f8 */ unsigned __int64 SavedR15;
  /* 0x0100 */ unsigned __int64 Gate;
}; /* size: 0x0108 */

struct B_TREE_DBG_NODE_POOL::NP_CTX
{
  /* 0x0000 */ unsigned long NodeCount;
  /* 0x0004 */ long Padding_1254;
  /* 0x0008 */ void* RefLeaves[4];
}; /* size: 0x0028 */

typedef struct _VF_ADDRESS_RANGE
{
  /* 0x0000 */ unsigned char* Start;
  /* 0x0008 */ unsigned char* End;
} VF_ADDRESS_RANGE, *PVF_ADDRESS_RANGE; /* size: 0x0010 */

typedef struct _VI_DEADLOCK_GLOBALS
{
  /* 0x0000 */ __int64 TimeAcquire;
  /* 0x0008 */ __int64 TimeRelease;
  /* 0x0010 */ struct _LIST_ENTRY* ResourceDatabase;
  /* 0x0018 */ unsigned __int64 ResourceDatabaseCount;
  /* 0x0020 */ struct _VF_ADDRESS_RANGE ResourceAddressRange[1023];
  /* 0x4010 */ struct _LIST_ENTRY* ThreadDatabase;
  /* 0x4018 */ unsigned __int64 ThreadDatabaseCount;
  /* 0x4020 */ struct _VF_ADDRESS_RANGE ThreadAddressRange[1023];
  /* 0x8010 */ unsigned long AllocationFailures;
  /* 0x8014 */ unsigned long NodesTrimmedBasedOnAge;
  /* 0x8018 */ unsigned long NodesTrimmedBasedOnCount;
  /* 0x801c */ unsigned long NodesSearched;
  /* 0x8020 */ unsigned long MaxNodesSearched;
  /* 0x8024 */ unsigned long SequenceNumber;
  /* 0x8028 */ unsigned long RecursionDepthLimit;
  /* 0x802c */ unsigned long SearchedNodesLimit;
  /* 0x8030 */ unsigned long DepthLimitHits;
  /* 0x8034 */ unsigned long SearchLimitHits;
  /* 0x8038 */ unsigned long ABC_ACB_Skipped;
  /* 0x803c */ unsigned long OutOfOrderReleases;
  /* 0x8040 */ unsigned long NodesReleasedOutOfOrder;
  /* 0x8044 */ unsigned long TotalReleases;
  /* 0x8048 */ unsigned long RootNodesDeleted;
  /* 0x804c */ unsigned long ForgetHistoryCounter;
  /* 0x8050 */ void* Instigator;
  /* 0x8058 */ unsigned long NumberOfParticipants;
  /* 0x805c */ long Padding_1255;
  /* 0x8060 */ struct _VI_DEADLOCK_NODE* Participant[32];
  /* 0x8160 */ long ChildrenCountWatermark;
  /* 0x8164 */ long __PADDING__[1];
} VI_DEADLOCK_GLOBALS, *PVI_DEADLOCK_GLOBALS; /* size: 0x8168 */

typedef struct _ST_ETW_CORRUPTION_FLAGS
{
  /* 0x0000 */ unsigned char FileBackedStore;
  /* 0x0001 */ unsigned char CorruptionType;
  /* 0x0002 */ char Padding_1256[2];
  union
  {
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long FromStagingRegion : 1; /* bit position: 0 */
      /* 0x0004 */ unsigned long Spare : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0004 */ unsigned long Flags;
  }; /* size: 0x0004 */
} ST_ETW_CORRUPTION_FLAGS, *PST_ETW_CORRUPTION_FLAGS; /* size: 0x0008 */

struct LscFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 SavedRcx;
  /* 0x0028 */ unsigned __int64 SavedRdx;
  /* 0x0030 */ unsigned __int64 SavedR8;
  /* 0x0038 */ unsigned __int64 SavedR9;
  /* 0x0040 */ unsigned __int64 SavedR10;
  /* 0x0048 */ unsigned __int64 Fill;
}; /* size: 0x0050 */

typedef struct _VI_DEADLOCK_NODE
{
  /* 0x0000 */ struct _VI_DEADLOCK_NODE* Parent;
  /* 0x0008 */ struct _LIST_ENTRY ChildrenList;
  /* 0x0018 */ struct _LIST_ENTRY SiblingsList;
  union
  {
    /* 0x0028 */ struct _LIST_ENTRY ResourceList;
    /* 0x0028 */ struct _LIST_ENTRY FreeListEntry;
  }; /* size: 0x0010 */
  /* 0x0038 */ struct _VI_DEADLOCK_RESOURCE* Root;
  /* 0x0040 */ struct _VI_DEADLOCK_THREAD* ThreadEntry;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0048 */ unsigned long Active : 1; /* bit position: 0 */
        /* 0x0048 */ unsigned long OnlyTryAcquireUsed : 1; /* bit position: 1 */
        /* 0x0048 */ unsigned long ReleasedOutOfOrder : 1; /* bit position: 2 */
        /* 0x0048 */ unsigned long SequenceNumber : 29; /* bit position: 3 */
      }; /* bitfield */
      /* 0x0048 */ unsigned long Whole;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  /* 0x004c */ long ChildrenCount;
  /* 0x0050 */ void* StackTrace[8];
  /* 0x0090 */ void* ParentStackTrace[8];
} VI_DEADLOCK_NODE, *PVI_DEADLOCK_NODE; /* size: 0x00d0 */

typedef struct _VI_DEADLOCK_THREAD
{
  /* 0x0000 */ struct _KTHREAD* Thread;
  /* 0x0008 */ struct _VI_DEADLOCK_NODE* CurrentSpinNode;
  /* 0x0010 */ struct _VI_DEADLOCK_NODE* CurrentOtherNode;
  union
  {
    /* 0x0018 */ struct _LIST_ENTRY ListEntry;
    /* 0x0018 */ struct _LIST_ENTRY FreeListEntry;
  }; /* size: 0x0010 */
  /* 0x0028 */ unsigned long NodeCount;
  /* 0x002c */ unsigned long PagingCount;
  /* 0x0030 */ unsigned char ThreadUsesEresources;
  /* 0x0031 */ char __PADDING__[7];
} VI_DEADLOCK_THREAD, *PVI_DEADLOCK_THREAD; /* size: 0x0038 */

struct EhFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Context;
}; /* size: 0x0028 */

typedef struct _EXP_SL_KMEM_LIST_ELEM
{
  /* 0x0000 */ unsigned char Tag;
  /* 0x0001 */ char Padding_1257[7];
  union
  {
    /* 0x0008 */ struct _UNICODE_STRING* String;
    /* 0x0008 */ struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR* Descriptor;
  }; /* size: 0x0008 */
} EXP_SL_KMEM_LIST_ELEM, *PEXP_SL_KMEM_LIST_ELEM; /* size: 0x0010 */

typedef struct _INTERLOCK_SEQ
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short Depth;
      /* 0x0002 */ unsigned short FreeEntryOffset;
    }; /* size: 0x0004 */
    struct
    {
      /* 0x0000 */ volatile unsigned long OffsetAndDepth;
      /* 0x0004 */ volatile unsigned long Sequence;
    }; /* size: 0x0008 */
    /* 0x0000 */ volatile __int64 Exchg;
  }; /* size: 0x0008 */
} INTERLOCK_SEQ, *PINTERLOCK_SEQ; /* size: 0x0008 */

typedef struct _PFBL_GLOBALS
{
  /* 0x0000 */ struct _PFBL_TRACE_INFO* TraceInfo;
  /* 0x0008 */ struct _EX_PUSH_LOCK TraceInfoLock;
  /* 0x0010 */ struct _KEVENT* TraceReadyEvent;
} PFBL_GLOBALS, *PPFBL_GLOBALS; /* size: 0x0018 */

typedef struct _HEAP_STOP_ON_TAG
{
  union
  {
    /* 0x0000 */ unsigned long HeapAndTagIndex;
    struct
    {
      /* 0x0000 */ unsigned short TagIndex;
      /* 0x0002 */ unsigned short HeapIndex;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} HEAP_STOP_ON_TAG, *PHEAP_STOP_ON_TAG; /* size: 0x0004 */

struct PF_EVENT_HARD_FAULT_TIMESTAMP
{
  /* 0x0000 */ unsigned __int64 Process;
  union
  {
    /* 0x0008 */ unsigned __int64 UniqueProcHash;
    /* 0x0008 */ unsigned long SessionId;
  }; /* size: 0x0008 */
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0010 */ unsigned __int64 Image : 1; /* bit position: 0 */
        /* 0x0010 */ unsigned __int64 ServiceTime : 11; /* bit position: 1 */
        /* 0x0010 */ unsigned __int64 VirtualAddress : 52; /* bit position: 12 */
      }; /* bitfield */
    } /* size: 0x0008 */ Private;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0010 */ unsigned __int64 Image : 1; /* bit position: 0 */
        /* 0x0010 */ unsigned __int64 ServiceTime : 11; /* bit position: 1 */
        /* 0x0010 */ unsigned __int64 FileOffset : 52; /* bit position: 12 */
      }; /* bitfield */
    } /* size: 0x0008 */ File;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ unsigned __int64 FileKey;
    struct /* bitfield */
    {
      /* 0x0018 */ unsigned __int64 FileIndex : 16; /* bit position: 0 */
      /* 0x0018 */ unsigned __int64 PrivatePage : 1; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0008 */
}; /* size: 0x0020 */

typedef struct _LZNT1_STANDARD_WORKSPACE
{
  /* 0x0000 */ unsigned char* UncompressedBuffer;
  /* 0x0008 */ unsigned char* EndOfUncompressedBufferPlus1;
  /* 0x0010 */ unsigned long MaxLength;
  /* 0x0014 */ long Padding_1258;
  /* 0x0018 */ unsigned char* MatchedString;
  /* 0x0020 */ unsigned char* IndexPTable[2][4096];
} LZNT1_STANDARD_WORKSPACE, *PLZNT1_STANDARD_WORKSPACE; /* size: 0x10020 */

typedef struct _GS_HANDLER_DATA
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long EHandler : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned long UHandler : 1; /* bit position: 1 */
          /* 0x0000 */ unsigned long HasAlignment : 1; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
      /* 0x0000 */ long CookieOffset;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x0004 */ long AlignedBaseOffset;
  /* 0x0008 */ long Alignment;
} GS_HANDLER_DATA, *PGS_HANDLER_DATA; /* size: 0x000c */

typedef struct _LZNT1_MAXIMUM_WORKSPACE
{
  /* 0x0000 */ unsigned char* UncompressedBuffer;
  /* 0x0008 */ unsigned char* EndOfUncompressedBufferPlus1;
  /* 0x0010 */ unsigned long MaxLength;
  /* 0x0014 */ long Padding_1259;
  /* 0x0018 */ unsigned char* MatchedString;
} LZNT1_MAXIMUM_WORKSPACE, *PLZNT1_MAXIMUM_WORKSPACE; /* size: 0x0020 */

typedef struct _B_TREE_STATS
{
  /* 0x0000 */ unsigned __int64 EntryCount;
  /* 0x0008 */ unsigned long BlockSize;
  /* 0x000c */ unsigned long Depth;
  /* 0x0010 */ struct _B_TREE_NODE_STATS NodeType[3];
} B_TREE_STATS, *PB_TREE_STATS; /* size: 0x00a0 */

struct CbFrame
{
  /* 0x0000 */ unsigned __int64 Fill;
  /* 0x0008 */ unsigned __int64 SavedRdi;
  /* 0x0010 */ unsigned __int64 SavedRsi;
}; /* size: 0x0018 */

struct SM_TRAITS
{
}; /* size: 0x0001 */

union SMKM_STORE_MGR<SM_TRAITS>::_SM_FE_CHECK_PRESENT_BITMAP
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Bitmap : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long BeingAddedBitmap : 8; /* bit position: 8 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AllBits;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_QUEUE_CONTEXT
{
  /* 0x0000 */ struct _PF_QUEUE Queue;
  /* 0x0010 */ void* VAPayload;
  /* 0x0018 */ struct SMKM_STORE_MGR<SM_TRAITS>::_SM_IO_CONTEXT* IoCtxToQueue;
}; /* size: 0x0020 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_EVICT_CALLBACK_CONTEXT
{
  /* 0x0000 */ void* Context;
  /* 0x0008 */ union _SM_PAGE_KEY EvictedKey;
  /* 0x000c */ unsigned long EvictedPageCount;
  /* 0x0010 */ unsigned long EvictedBitmap;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct KoFrame
{
  /* 0x0000 */ unsigned char LargeCommit;
  /* 0x0001 */ unsigned char Fill;
  /* 0x0002 */ char Padding_1260[6];
  /* 0x0008 */ unsigned __int64 SavedRdi;
  /* 0x0010 */ unsigned __int64 SavedRsi;
}; /* size: 0x0018 */

struct SMKM_STORE_MGR<SM_TRAITS>::_SM_PREREAD_CALLBACK_CONTEXT
{
  /* 0x0000 */ void* Context;
  /* 0x0008 */ union _SM_PAGE_KEY DataKey;
  /* 0x000c */ unsigned short StoreIndex;
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

typedef struct _EXLOCK
{
  /* 0x0000 */ unsigned __int64 SpinLock;
  /* 0x0008 */ unsigned char Irql;
  /* 0x0009 */ char __PADDING__[7];
} EXLOCK, *PEXLOCK; /* size: 0x0010 */

struct BeFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned __int64 Flags;
}; /* size: 0x0038 */

typedef struct _SMST_PARAMETERS
{
  /* 0x0000 */ struct _SM_STORE_PARAMETERS* CreateParams;
  /* 0x0008 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0010 */ char* EncryptionKey;
  /* 0x0018 */ unsigned long EncryptionKeySize;
  /* 0x001c */ long Padding_1261;
  /* 0x0020 */ struct _ST_ETA_CONTEXT* EtaContext;
  /* 0x0028 */ void* StoreMgr;
  /* 0x0030 */ long NormalCPUPriority;
  /* 0x0034 */ unsigned long EncryptOptions : 8; /* bit position: 0 */
} SMST_PARAMETERS, *PSMST_PARAMETERS; /* size: 0x0038 */

typedef struct _PF_LIST_ENTRY
{
  /* 0x0000 */ unsigned __int64 Flink;
  /* 0x0008 */ unsigned __int64 Blink;
} PF_LIST_ENTRY, *PPF_LIST_ENTRY; /* size: 0x0010 */

struct ST_STORE<SM_TRAITS>::_ST_DEBUG_LOG;

struct ST_STORE<SM_TRAITS>::_ST_DBG_TRACE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Timestamp;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long Operation : 4; /* bit position: 0 */
        /* 0x0004 */ unsigned long Result : 2; /* bit position: 4 */
        /* 0x0004 */ unsigned long Metadata : 1; /* bit position: 6 */
        /* 0x0004 */ unsigned long Spare : 1; /* bit position: 7 */
        /* 0x0004 */ unsigned long Status : 24; /* bit position: 8 */
      }; /* bitfield */
      /* 0x0008 */ unsigned long Offset;
      struct /* bitfield */
      {
        /* 0x000c */ unsigned long CompressedSize : 12; /* bit position: 0 */
        /* 0x000c */ unsigned long Crc : 20; /* bit position: 12 */
      }; /* bitfield */
      /* 0x0010 */ union _SM_PAGE_KEY Key;
    }; /* size: 0x0014 */
    struct
    {
      /* 0x0000 */ unsigned long Timestamp;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OverlapsOperation : 4; /* bit position: 0 */
        /* 0x0004 */ unsigned long CompactionState : 2; /* bit position: 4 */
        /* 0x0004 */ unsigned long EmptySpace : 26; /* bit position: 6 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned long IdlenessState : 2; /* bit position: 0 */
        /* 0x0008 */ unsigned long Result : 2; /* bit position: 2 */
        /* 0x0008 */ unsigned long Metadata : 1; /* bit position: 4 */
        /* 0x0008 */ unsigned long Spare : 1; /* bit position: 5 */
        /* 0x0008 */ unsigned long EmptyLimit : 26; /* bit position: 6 */
      }; /* bitfield */
      /* 0x000c */ unsigned long RegionsInUse;
    } /* size: 0x0010 */ Compact;
    struct
    {
      /* 0x0000 */ unsigned long Timestamp;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long Operation : 4; /* bit position: 0 */
        /* 0x0004 */ unsigned long StagingRegionIndex : 3; /* bit position: 4 */
        /* 0x0004 */ unsigned long Metadata : 1; /* bit position: 7 */
        /* 0x0004 */ unsigned long Status : 24; /* bit position: 8 */
      }; /* bitfield */
      /* 0x0008 */ unsigned long RegionIndex;
    } /* size: 0x000c */ Region;
    struct
    {
      /* 0x0000 */ unsigned long Timestamp;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long Operation : 4; /* bit position: 0 */
        /* 0x0004 */ unsigned long Type : 3; /* bit position: 4 */
      }; /* bitfield */
      /* 0x0008 */ unsigned long MetaPageCount : 26; /* bit position: 0 */
      /* 0x000c */ unsigned long UserPageCount;
      /* 0x0010 */ long Status;
    } /* size: 0x0014 */ StateChange;
    struct
    {
      /* 0x0000 */ unsigned long Timestamp;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long Operation : 4; /* bit position: 0 */
        /* 0x0004 */ unsigned long Success : 1; /* bit position: 4 */
        /* 0x0004 */ unsigned long Metadata : 1; /* bit position: 5 */
        /* 0x0004 */ unsigned long SyncIo : 1; /* bit position: 6 */
        /* 0x0004 */ unsigned long ReadSize : 25; /* bit position: 7 */
      }; /* bitfield */
      /* 0x0008 */ unsigned long StartOffset;
      /* 0x000c */ unsigned long DeviceIoLow;
      /* 0x0010 */ unsigned long DeviceIoHigh;
    } /* size: 0x0014 */ ReadIssue;
    struct
    {
      /* 0x0000 */ unsigned long Timestamp;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long Operation : 4; /* bit position: 0 */
        /* 0x0004 */ unsigned long Success : 1; /* bit position: 4 */
        /* 0x0004 */ unsigned long Metadata : 1; /* bit position: 5 */
        /* 0x0004 */ unsigned long WorkItemHigh : 26; /* bit position: 6 */
      }; /* bitfield */
      /* 0x0008 */ unsigned long WorkItemLow;
      /* 0x000c */ unsigned long DeviceIoLow;
      /* 0x0010 */ unsigned long DeviceIoHigh;
    } /* size: 0x0014 */ ReadComplete;
  }; /* size: 0x0014 */
}; /* size: 0x0014 */

struct SyFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned long OldIrql;
  /* 0x0024 */ unsigned long Fill0;
  /* 0x0028 */ unsigned __int64 Fill1;
  /* 0x0030 */ unsigned __int64 SavedRsi;
  /* 0x0038 */ unsigned __int64 ReturnAddress;
  /* 0x0040 */ unsigned __int64 PrevP1Home;
  /* 0x0048 */ unsigned __int64 PrevP2Home;
  /* 0x0050 */ unsigned __int64 PrevP3Home;
  /* 0x0058 */ unsigned __int64 PrevP4Home;
}; /* size: 0x0060 */

typedef struct _RTL_ATOM_TABLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_1262;
  /* 0x0008 */ struct _EX_PUSH_LOCK PushLock;
  /* 0x0010 */ struct _HANDLE_TABLE* ExHandleTable;
  /* 0x0018 */ unsigned long NumberOfBuckets;
  /* 0x001c */ long Padding_1263;
  /* 0x0020 */ struct _RTL_ATOM_TABLE_ENTRY* Buckets[1];
} RTL_ATOM_TABLE, *PRTL_ATOM_TABLE; /* size: 0x0028 */

struct ST_STORE<SM_TRAITS>::_ST_IV_BUFFER
{
  /* 0x0000 */ unsigned long CompressedSize;
  /* 0x0004 */ unsigned long SeqNumberLo;
  /* 0x0008 */ unsigned long SeqNumberHi;
}; /* size: 0x000c */

typedef struct _PERFDIAG_WORK_QUEUE_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ enum _PERFDIAG_TRACESTATE RequestedState;
  /* 0x0024 */ long __PADDING__[1];
} PERFDIAG_WORK_QUEUE_ITEM, *PPERFDIAG_WORK_QUEUE_ITEM; /* size: 0x0028 */

typedef struct _SMKM_STORE_TERMINATE_WORK_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ struct _SMKM_STORE_LIST* StoreMgr;
  /* 0x0028 */ struct _SMKM_FILE_INFO* FileInfo;
  /* 0x0030 */ unsigned long StoreId;
  /* 0x0034 */ enum _SM_STORE_MANAGER_TYPE StoreMgrType;
  /* 0x0038 */ enum _ST_ETW_TERMINATION_REASON TerminateReason;
  /* 0x003c */ long FailStatus;
} SMKM_STORE_TERMINATE_WORK_ITEM, *PSMKM_STORE_TERMINATE_WORK_ITEM; /* size: 0x0040 */

typedef struct _RTLP_ATOM_QUOTA
{
  /* 0x0000 */ void* QuotaReference;
  /* 0x0008 */ unsigned __int64 PagedAmount;
} RTLP_ATOM_QUOTA, *PRTLP_ATOM_QUOTA; /* size: 0x0010 */

typedef struct _SMC_CACHE_CREATE_REQUEST
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long CacheId;
  /* 0x0008 */ struct _SMC_CACHE_CREATE_PARAMETERS CacheCreateParams;
} SMC_CACHE_CREATE_REQUEST, *PSMC_CACHE_CREATE_REQUEST; /* size: 0x0420 */

typedef struct _CALLBACK_REGISTRATION
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _CALLBACK_OBJECT* CallbackObject;
  /* 0x0018 */ void* CallbackFunction /* function */;
  /* 0x0020 */ void* CallbackContext;
  /* 0x0028 */ unsigned long Busy;
  /* 0x002c */ unsigned char UnregisterWaiting;
  /* 0x002d */ char __PADDING__[3];
} CALLBACK_REGISTRATION, *PCALLBACK_REGISTRATION; /* size: 0x0030 */

struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::_B_TREE_DESERIALIZE_CTX;

struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::ITERATOR
{
  /* 0x0000 */ struct B_TREE<_SM_PAGE_KEY,ST_STORE<SM_TRAITS>::_ST_PAGE_ENTRY,4096,NP_CONTEXT>::PATH_ENTRY Entry;
}; /* size: 0x0010 */

typedef struct _EXTRA_COVER_DATA_500
{
  /* 0x0000 */ unsigned long ExtraCoverDataSize;
  /* 0x0004 */ unsigned long BinaryNameOffset;
  /* 0x0008 */ unsigned long CustomVersionOffset;
  /* 0x000c */ unsigned long CheckSumOfBinary;
  /* 0x0010 */ unsigned __int64 CoverageVectorForUserMode;
} EXTRA_COVER_DATA_500, *PEXTRA_COVER_DATA_500; /* size: 0x0018 */

typedef struct _PF_SCENARIO_ID
{
  /* 0x0000 */ wchar_t ScenName[30];
  /* 0x003c */ unsigned long HashId;
} PF_SCENARIO_ID, *PPF_SCENARIO_ID; /* size: 0x0040 */

typedef struct _PFSN_TRACE_HEADER
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ long Padding_1264;
  /* 0x0008 */ struct _LIST_ENTRY ActiveTracesLink;
  /* 0x0018 */ struct _PF_SCENARIO_ID ScenarioId;
  /* 0x0058 */ enum _PF_SCENARIO_TYPE ScenarioType;
  /* 0x005c */ unsigned long EventEntryIdxs[8];
  /* 0x007c */ unsigned long NumEventEntryIdxs;
  /* 0x0080 */ struct _PFSN_LOG_ENTRIES* volatile CurrentTraceBuffer;
  /* 0x0088 */ struct _LIST_ENTRY TraceBuffersList;
  /* 0x0098 */ unsigned long NumTraceBuffers;
  /* 0x009c */ long Padding_1265;
  /* 0x00a0 */ unsigned __int64 TraceBufferSpinLock;
  /* 0x00a8 */ struct _KTIMER TraceTimer;
  /* 0x00e8 */ union _LARGE_INTEGER TraceTimerPeriod;
  /* 0x00f0 */ struct _KDPC TraceTimerDpc;
  /* 0x0130 */ unsigned __int64 TraceTimerSpinLock;
  struct /* bitfield */
  {
    /* 0x0138 */ unsigned long TimerStarted : 1; /* bit position: 0 */
    /* 0x0138 */ unsigned long TimerAskedToStop : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x013c */ unsigned long FaultsPerPeriod[10];
  /* 0x0164 */ long LastNumFaults;
  /* 0x0168 */ long CurPeriod;
  /* 0x016c */ volatile long NumFaults;
  /* 0x0170 */ long MaxFaults;
  /* 0x0174 */ long Padding_1266;
  /* 0x0178 */ struct _EPROCESS* Process;
  /* 0x0180 */ struct _EX_RUNDOWN_REF RefCount;
  /* 0x0188 */ struct _WORK_QUEUE_ITEM EndTraceWorkItem;
  /* 0x01a8 */ long EndTraceCalled;
  /* 0x01ac */ long Padding_1267;
  /* 0x01b0 */ struct _PFSN_TRACE_DUMP* TraceDump;
  /* 0x01b8 */ long TraceDumpStatus;
  /* 0x01bc */ long Padding_1268;
  /* 0x01c0 */ union _LARGE_INTEGER LaunchTime;
  /* 0x01c8 */ struct _PF_SECTION_INFO* SectionInfo;
  /* 0x01d0 */ unsigned long SectionInfoCount;
  /* 0x01d4 */ long __PADDING__[1];
} PFSN_TRACE_HEADER, *PPFSN_TRACE_HEADER; /* size: 0x01d8 */

typedef struct _EXTRA_COVER_DATA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1269;
  /* 0x0008 */ struct _EXTRA_COVER_DATA_500 ExtraCoverData500;
} EXTRA_COVER_DATA, *PEXTRA_COVER_DATA; /* size: 0x0020 */

typedef struct _CM_PARSE_CACHE_TABLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_1270;
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY Buckets[32];
} CM_PARSE_CACHE_TABLE, *PCM_PARSE_CACHE_TABLE; /* size: 0x0108 */

typedef struct _STACK_OVERFLOW_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM Item;
  /* 0x0020 */ void* StackOverflowRoutine /* function */;
  /* 0x0028 */ void* Context;
  /* 0x0030 */ struct _KEVENT* Event;
} STACK_OVERFLOW_ITEM, *PSTACK_OVERFLOW_ITEM; /* size: 0x0038 */

typedef struct _RTL_CALLBACK_REGISTER
{
  /* 0x0000 */ long Flags;
  /* 0x0004 */ long Padding_1271;
  /* 0x0008 */ struct _EX_RUNDOWN_REF RundownReference;
  /* 0x0010 */ void* DebugPrintCallback /* function */;
  /* 0x0018 */ struct _LIST_ENTRY ListEntry;
} RTL_CALLBACK_REGISTER, *PRTL_CALLBACK_REGISTER; /* size: 0x0028 */

typedef struct _PF_SCENARIO_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long MagicNumber;
  /* 0x0008 */ unsigned long ServiceVersion;
  /* 0x000c */ unsigned long Size;
  /* 0x0010 */ struct _PF_SCENARIO_ID ScenarioId;
  /* 0x0050 */ enum _PF_SCENARIO_TYPE ScenarioType;
  /* 0x0054 */ unsigned long SectionInfoOffset;
  /* 0x0058 */ unsigned long NumSections;
  /* 0x005c */ unsigned long PageInfoOffset;
  /* 0x0060 */ unsigned long NumPages;
  /* 0x0064 */ unsigned long FileNameInfoOffset;
  /* 0x0068 */ unsigned long FileNameInfoSize;
  /* 0x006c */ unsigned long MetadataInfoOffset;
  /* 0x0070 */ unsigned long NumMetadataRecords;
  /* 0x0074 */ unsigned long MetadataInfoSize;
  /* 0x0078 */ unsigned long DirectoryPrefetchCount;
  /* 0x007c */ unsigned long NumPhases;
  /* 0x0080 */ union _LARGE_INTEGER LastLaunchTime;
  /* 0x0088 */ union _LARGE_INTEGER MinRePrefetchTime;
  /* 0x0090 */ union _LARGE_INTEGER MinReTraceTime;
  /* 0x0098 */ unsigned long NumLaunches;
  /* 0x009c */ unsigned long Sensitivity;
  /* 0x00a0 */ unsigned __int64 Reserved[10];
} PF_SCENARIO_HEADER, *PPF_SCENARIO_HEADER; /* size: 0x00f0 */

typedef struct __OBP_SET_HANDLE_ATTRIBUTES
{
  /* 0x0000 */ struct _OBJECT_HANDLE_FLAG_INFORMATION ObjectInformation;
  /* 0x0002 */ char PreviousMode;
} _OBP_SET_HANDLE_ATTRIBUTES, *P_OBP_SET_HANDLE_ATTRIBUTES; /* size: 0x0003 */

typedef struct _SMKM_STORE_REG_PARAMS
{
  /* 0x0000 */ struct _SMKM_CRYPTO_REG_PARAMS Crypto;
} SMKM_STORE_REG_PARAMS, *PSMKM_STORE_REG_PARAMS; /* size: 0x0008 */

typedef struct _SM_STORE_FILE_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long HeaderSize;
  /* 0x000c */ unsigned long HeaderCrc;
  /* 0x0010 */ struct _SMC_CACHE_PARAMETERS CacheParameters;
  /* 0x0028 */ struct _SM_PERSISTENCE_ID PersistenceId;
  /* 0x0040 */ unsigned long StoreCount;
  /* 0x0044 */ long Padding_1272;
  /* 0x0048 */ struct _SM_STORE_FILE_TOC_ENTRY Stores[8];
} SM_STORE_FILE_HEADER, *PSM_STORE_FILE_HEADER; /* size: 0x0188 */

typedef struct _PFP_LOGGING_WORKER_CONTEXT
{
  /* 0x0000 */ struct _ETHREAD* TraceGenThreadPtr;
  /* 0x0008 */ struct _KEVENT LogBufferThresholdEvent;
  /* 0x0020 */ struct _KEVENT GenerateTraceStartEvent;
  /* 0x0038 */ struct _KEVENT GenerateTraceCompleteEvent;
  /* 0x0050 */ long CreateTraceDump;
  /* 0x0054 */ long Padding_1273;
  /* 0x0058 */ struct _KEVENT StopEvent;
} PFP_LOGGING_WORKER_CONTEXT, *PPFP_LOGGING_WORKER_CONTEXT; /* size: 0x0070 */

typedef struct _IOV_COMPLETION_CONTEXT
{
  /* 0x0000 */ struct _IO_STACK_LOCATION* StackPointer;
  /* 0x0008 */ void* IrpContext;
  /* 0x0010 */ void* GlobalContext;
  /* 0x0018 */ void* CompletionRoutine /* function */;
  /* 0x0020 */ struct _IO_STACK_LOCATION OldStackContents;
} IOV_COMPLETION_CONTEXT, *PIOV_COMPLETION_CONTEXT; /* size: 0x0068 */

typedef struct _IOV_DRIVER_LIST_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY listEntry;
  /* 0x0008 */ struct _DRIVER_OBJECT* DriverObject;
} IOV_DRIVER_LIST_ENTRY, *PIOV_DRIVER_LIST_ENTRY; /* size: 0x0010 */

typedef struct _MMPAGE_FILE_EXPANSION
{
  /* 0x0000 */ struct _SEGMENT* Segment;
  /* 0x0008 */ struct _LIST_ENTRY DereferenceList;
  /* 0x0018 */ unsigned __int64 RequestedExpansionSize;
  /* 0x0020 */ unsigned __int64 ActualExpansion;
  /* 0x0028 */ struct _KEVENT Event;
  /* 0x0040 */ volatile long InProgress;
  /* 0x0044 */ unsigned long PageFileNumber;
  /* 0x0048 */ unsigned long IgnoreCurrentCommit;
  /* 0x004c */ long Padding_1274;
  /* 0x0050 */ void** volatile ActiveEntry;
} MMPAGE_FILE_EXPANSION, *PMMPAGE_FILE_EXPANSION; /* size: 0x0058 */

typedef struct _MI_PAGEFILE_CLUSTER_INFO
{
  /* 0x0000 */ unsigned long ClusteredActive;
  /* 0x0004 */ unsigned long ClusteredModified;
  /* 0x0008 */ unsigned long AttachSame;
  /* 0x000c */ unsigned long AttachNew;
  /* 0x0010 */ unsigned long ClusterProcessRejected;
  /* 0x0014 */ unsigned long ClusterProcessNoWs;
  /* 0x0018 */ unsigned long ClusterProcessAttemptWs;
  /* 0x001c */ unsigned long ClusterProcessAcquiredWs;
  /* 0x0020 */ unsigned long ClusterStartTruncated;
  /* 0x0024 */ unsigned long ClusterStartAligned;
  /* 0x0028 */ unsigned long ClusterStartFull;
  /* 0x002c */ unsigned long TooManyLocked;
  /* 0x0030 */ unsigned long LockCollision;
  /* 0x0034 */ unsigned long ValidPte;
  /* 0x0038 */ unsigned long ValidDirtyPte;
  /* 0x003c */ unsigned long ValidPteUseless;
  /* 0x0040 */ unsigned long ProtoPte;
  /* 0x0044 */ unsigned long TransitionDirtyPte;
  /* 0x0048 */ unsigned long TransitionPteUseless;
  /* 0x004c */ unsigned long InvalidPte;
  /* 0x0050 */ unsigned long NoVad;
  /* 0x0054 */ unsigned long OddVad;
  /* 0x0058 */ unsigned long ClustersBuilt;
  /* 0x005c */ unsigned long ClusteredPages;
  /* 0x0060 */ unsigned long ClusterFailPageGone;
} MI_PAGEFILE_CLUSTER_INFO, *PMI_PAGEFILE_CLUSTER_INFO; /* size: 0x0064 */

typedef struct _MMDEREFERENCE_SEGMENT_HEADER
{
  /* 0x0000 */ struct _KSEMAPHORE Semaphore;
  /* 0x0020 */ struct _LIST_ENTRY ListHead;
} MMDEREFERENCE_SEGMENT_HEADER, *PMMDEREFERENCE_SEGMENT_HEADER; /* size: 0x0030 */

typedef struct _ALPC_COMPLETION_LIST_DATABASE_LOG_ENTRY
{
  /* 0x0000 */ struct _EPROCESS* Process;
  /* 0x0008 */ struct _CLIENT_ID ClientId;
  /* 0x0018 */ void* UserVa;
  /* 0x0020 */ void* UserLimit;
} ALPC_COMPLETION_LIST_DATABASE_LOG_ENTRY, *PALPC_COMPLETION_LIST_DATABASE_LOG_ENTRY; /* size: 0x0028 */

typedef struct _ALPC_COMPLETION_LIST_DATABASE
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long Padding_1275;
  /* 0x0010 */ struct _LIST_ENTRY ListHead;
  /* 0x0020 */ unsigned long LogNext;
  /* 0x0024 */ long Padding_1276;
  /* 0x0028 */ struct _ALPC_COMPLETION_LIST_DATABASE_LOG_ENTRY LogEntry[4096];
} ALPC_COMPLETION_LIST_DATABASE, *PALPC_COMPLETION_LIST_DATABASE; /* size: 0x28028 */

typedef struct _KI_START_PROFILE_CONTEXT
{
  /* 0x0000 */ struct _KPROFILE* Profile;
  /* 0x0008 */ unsigned long* Buffer;
  /* 0x0010 */ volatile long Gate;
  /* 0x0014 */ volatile long Barrier;
  /* 0x0018 */ volatile struct _KAFFINITY_EX ActivatedSet;
  /* 0x0040 */ struct _KACTIVE_PROFILE_SOURCE* AllocatedPool;
  /* 0x0048 */ unsigned char Started;
  /* 0x0049 */ char __PADDING__[7];
} KI_START_PROFILE_CONTEXT, *PKI_START_PROFILE_CONTEXT; /* size: 0x0050 */

typedef struct _KACTIVE_PROFILE_SOURCE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _KPROFILE_SOURCE Source;
  /* 0x0014 */ long Padding_1277;
  /* 0x0018 */ struct _KAFFINITY_EX Affinity;
  /* 0x0040 */ unsigned long ProcessorCount[1];
  /* 0x0044 */ long __PADDING__[1];
} KACTIVE_PROFILE_SOURCE, *PKACTIVE_PROFILE_SOURCE; /* size: 0x0048 */

typedef struct _KI_STOP_PROFILE_CONTEXT
{
  /* 0x0000 */ struct _KPROFILE* Profile;
  /* 0x0008 */ volatile long Gate;
  /* 0x000c */ volatile long Barrier;
  /* 0x0010 */ volatile struct _KAFFINITY_EX DeactivatedSet;
  /* 0x0038 */ struct _KACTIVE_PROFILE_SOURCE* PoolToFree;
  /* 0x0040 */ unsigned char Stopped;
  /* 0x0041 */ char __PADDING__[7];
} KI_STOP_PROFILE_CONTEXT, *PKI_STOP_PROFILE_CONTEXT; /* size: 0x0048 */

typedef union _PPM_OVERRIDE
{
  union
  {
    /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
    struct
    {
      /* 0x0000 */ struct _KTIMER Timer;
      /* 0x0040 */ struct _KDPC Dpc;
    } /* size: 0x0080 */ Queue;
  }; /* size: 0x0080 */
} PPM_OVERRIDE, *PPPM_OVERRIDE; /* size: 0x0080 */

typedef struct _BCDE_STRING
{
  /* 0x0000 */ wchar_t String[1];
} BCDE_STRING, *PBCDE_STRING; /* size: 0x0002 */

typedef struct _IDENTIFIER_OBJECT
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _GUID ObjectIdentifier;
  /* 0x0020 */ unsigned long BootEntryId;
  /* 0x0024 */ long Padding_1278;
  /* 0x0028 */ struct _BOOT_ENTRY* BootEntry;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0030 */ unsigned long BootEntryExists : 1; /* bit position: 0 */
      /* 0x0030 */ unsigned long FirmwareVariableExists : 1; /* bit position: 1 */
      /* 0x0030 */ unsigned long BcdObjectExists : 1; /* bit position: 2 */
      /* 0x0030 */ unsigned long FirmwareUnknown : 1; /* bit position: 3 */
      /* 0x0030 */ unsigned long Reserved : 28; /* bit position: 4 */
    }; /* bitfield */
  } /* size: 0x0004 */ Flags;
  /* 0x0034 */ long __PADDING__[1];
} IDENTIFIER_OBJECT, *PIDENTIFIER_OBJECT; /* size: 0x0038 */

typedef struct _PFP_PRIVSOURCE_QUERY_CONTEXT
{
  /* 0x0000 */ unsigned long SourceCount;
  /* 0x0004 */ unsigned long SourceIndex;
  /* 0x0008 */ unsigned long SourceMax;
  /* 0x000c */ long Padding_1279;
  /* 0x0010 */ struct _PF_PRIVSOURCE_INFO* UserBuffer;
} PFP_PRIVSOURCE_QUERY_CONTEXT, *PPFP_PRIVSOURCE_QUERY_CONTEXT; /* size: 0x0018 */

typedef struct _VERSION_DATA_KEY
{
  /* 0x0000 */ unsigned short* InitialKeyPath;
  /* 0x0008 */ unsigned short* AdditionalKeyPath;
} VERSION_DATA_KEY, *PVERSION_DATA_KEY; /* size: 0x0010 */

typedef struct _CMP_BOOT_LOAD_CONTROL
{
  /* 0x0000 */ unsigned short* LoadPath;
  /* 0x0008 */ unsigned long ArrayIndex;
  /* 0x000c */ unsigned long HashKey;
  /* 0x0010 */ long Flags;
  /* 0x0014 */ long Reference;
} CMP_BOOT_LOAD_CONTROL, *PCMP_BOOT_LOAD_CONTROL; /* size: 0x0018 */

typedef struct _PFP_TRANSPARENT_OPEN_HANDLE
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ struct _FILE_OBJECT* Object;
  /* 0x0010 */ void* OpaqueFIObject;
  struct /* bitfield */
  {
    /* 0x0018 */ unsigned __int64 SequenceNumber : 32; /* bit position: 0 */
    /* 0x0018 */ unsigned __int64 OpenError : 1; /* bit position: 32 */
    /* 0x0018 */ unsigned __int64 Initialized : 1; /* bit position: 33 */
    /* 0x0018 */ unsigned __int64 Opened : 1; /* bit position: 34 */
    /* 0x0018 */ unsigned __int64 Closed : 1; /* bit position: 35 */
  }; /* bitfield */
} PFP_TRANSPARENT_OPEN_HANDLE, *PPFP_TRANSPARENT_OPEN_HANDLE; /* size: 0x0020 */

typedef struct _PFP_READLIST_SUPPORT
{
  /* 0x0000 */ struct _READ_LIST* ReadList;
  /* 0x0008 */ struct _PFP_TRANSPARENT_OPEN_HANDLE FileHandle;
  /* 0x0028 */ void* SectionHandle;
  /* 0x0030 */ struct _NT_PREFETCH_FILE* FileRequest;
} PFP_READLIST_SUPPORT, *PPFP_READLIST_SUPPORT; /* size: 0x0038 */

typedef struct _SMKM_ISSUE_IO_PARAMS
{
  /* 0x0000 */ void* IoTypeParam;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long RegionOffset;
  /* 0x0018 */ unsigned long RegionIndex;
  /* 0x001c */ unsigned long RegionSize;
  /* 0x0020 */ unsigned long IssueRead : 1; /* bit position: 0 */
  /* 0x0024 */ long __PADDING__[1];
} SMKM_ISSUE_IO_PARAMS, *PSMKM_ISSUE_IO_PARAMS; /* size: 0x0028 */

typedef struct _BAPD_ITEM_DESCRIPTOR
{
  union
  {
    union
    {
      /* 0x0000 */ union _LARGE_INTEGER PhysAddr;
      /* 0x0000 */ void* VirtualAddr;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
  /* 0x0008 */ unsigned long Length;
} BAPD_ITEM_DESCRIPTOR, *PBAPD_ITEM_DESCRIPTOR; /* size: 0x000c */

typedef struct _SM_CACHE_FILE_IO_CONTEXT
{
  /* 0x0000 */ struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM StData;
  /* 0x0020 */ struct _IO_STATUS_BLOCK IoStatus;
} SM_CACHE_FILE_IO_CONTEXT, *PSM_CACHE_FILE_IO_CONTEXT; /* size: 0x0030 */

typedef struct _SM_CACHE_VOLUME_IO_CONTEXT
{
  /* 0x0000 */ struct ST_STORE<SM_TRAITS>::_ST_WORK_ITEM StData;
  /* 0x0020 */ unsigned long IoSize;
  /* 0x0024 */ long Padding_1280;
  /* 0x0028 */ struct SMKM_STORE<SM_TRAITS>* StoreCtx;
  /* 0x0030 */ struct _MDL Mdl;
} SM_CACHE_VOLUME_IO_CONTEXT, *PSM_CACHE_VOLUME_IO_CONTEXT; /* size: 0x0060 */

typedef struct _PF_TRIM_WHILE_AGING_CONTROL
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _PF_TRIM_WHILE_AGING_STATE TrimWhileAgingState;
} PF_TRIM_WHILE_AGING_CONTROL, *PPF_TRIM_WHILE_AGING_CONTROL; /* size: 0x0008 */

union SMKM_STORE_MGR<SM_TRAITS>::_SM_FE_IO_COMPLETION_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NeedToLog : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long OtherStoresPresent : 1; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AllFlags;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _PPM_PARK_NODE
{
  /* 0x0000 */ unsigned long CheckCount;
  /* 0x0004 */ unsigned short Group;
  /* 0x0006 */ char Padding_1281[2];
  /* 0x0008 */ unsigned __int64 Members;
  /* 0x0010 */ unsigned __int64 Parked;
  /* 0x0018 */ unsigned char Count;
  /* 0x0019 */ unsigned char Min;
  /* 0x001a */ unsigned char Max;
  union
  {
    union
    {
      /* 0x001b */ unsigned char AsUCHAR;
      /* 0x001b */ unsigned char Forced : 1; /* bit position: 0 */
    }; /* size: 0x0001 */
  } /* size: 0x0001 */ Flags;
  /* 0x001c */ long __PADDING__[1];
} PPM_PARK_NODE, *PPPM_PARK_NODE; /* size: 0x0020 */

typedef struct _PFS_PRIVATE_PAGE_SOURCE
{
  /* 0x0000 */ enum _PFS_PRIVATE_PAGE_SOURCE_TYPE Type;
  union
  {
    /* 0x0004 */ unsigned long SessionId;
    /* 0x0004 */ unsigned long ProcessId;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ImagePathHash;
  /* 0x000c */ long Padding_1282;
  /* 0x0010 */ unsigned __int64 UniqueProcessHash;
} PFS_PRIVATE_PAGE_SOURCE, *PPFS_PRIVATE_PAGE_SOURCE; /* size: 0x0018 */

typedef struct _PF_PRIVSOURCE_INFO
{
  /* 0x0000 */ struct _PFS_PRIVATE_PAGE_SOURCE DbInfo;
  union
  {
    /* 0x0018 */ unsigned __int64 EProcess;
    /* 0x0018 */ unsigned __int64 GlobalVA;
  }; /* size: 0x0008 */
  /* 0x0020 */ unsigned __int64 WsPrivatePages;
  /* 0x0028 */ unsigned __int64 TotalPrivatePages;
  /* 0x0030 */ unsigned long SessionID;
  /* 0x0034 */ char ImageName[16];
  /* 0x0044 */ long __PADDING__[1];
} PF_PRIVSOURCE_INFO, *PPF_PRIVSOURCE_INFO; /* size: 0x0048 */

typedef struct _PF_PRIVSOURCE_QUERY_REQUEST
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long InfoCount;
  /* 0x0008 */ struct _PF_PRIVSOURCE_INFO InfoArray[1];
} PF_PRIVSOURCE_QUERY_REQUEST, *PPF_PRIVSOURCE_QUERY_REQUEST; /* size: 0x0050 */

typedef struct _BOOT_DISPLAY_CONTEXT
{
  /* 0x0000 */ union _LARGE_INTEGER FrameBuffer;
  /* 0x0008 */ unsigned long Width;
  /* 0x000c */ unsigned long Height;
  /* 0x0010 */ unsigned long PixelStride;
  /* 0x0014 */ unsigned long Format;
} BOOT_DISPLAY_CONTEXT, *PBOOT_DISPLAY_CONTEXT; /* size: 0x0018 */

typedef struct _BG_INTERNAL_CONTEXT
{
  /* 0x0000 */ struct _BOOT_DISPLAY_CONTEXT DisplayContext;
  /* 0x0018 */ void* FrameBuffer;
  /* 0x0020 */ struct _FILE_IMAGE* SystemFont;
  /* 0x0028 */ struct _FILE_IMAGE* BootResourceMui;
  /* 0x0030 */ void* TextRegion;
  /* 0x0038 */ unsigned long Flags;
  /* 0x003c */ struct _GUID Application;
  /* 0x004c */ long Padding_1283;
  /* 0x0050 */ struct _BG_RESOURCE_PACK* Resources;
} BG_INTERNAL_CONTEXT, *PBG_INTERNAL_CONTEXT; /* size: 0x0058 */

typedef struct _BL_LOG_ENTRY_HEADER
{
  /* 0x0000 */ unsigned long Timestamp;
  /* 0x0004 */ unsigned long DataSize;
  /* 0x0008 */ enum BL_LOG_ENTRY_TYPE LogType;
} BL_LOG_ENTRY_HEADER, *PBL_LOG_ENTRY_HEADER; /* size: 0x000c */

typedef struct _BL_LOG_HEADER
{
  /* 0x0000 */ struct _BL_LOG_ENTRY_HEADER Header;
  /* 0x000c */ long Padding_1284;
  /* 0x0010 */ unsigned __int64 TraceSize;
  /* 0x0018 */ unsigned long Version;
  /* 0x001c */ unsigned long ScenarioType;
  union
  {
    struct
    {
      /* 0x0020 */ unsigned __int64 HiberFileSize;
    } /* size: 0x0008 */ Resume;
    struct
    {
      /* 0x0020 */ unsigned __int64 Spare;
    } /* size: 0x0008 */ Boot;
  }; /* size: 0x0008 */
} BL_LOG_HEADER, *PBL_LOG_HEADER; /* size: 0x0028 */

typedef struct _OFFSET
{
  /* 0x0000 */ unsigned long X;
  /* 0x0004 */ unsigned long Y;
} OFFSET, *POFFSET; /* size: 0x0008 */

typedef struct _BG_RESOURCE_PACK
{
  /* 0x0000 */ void* Background;
  /* 0x0008 */ void* AnimationFrameSet;
  /* 0x0010 */ struct _OFFSET Offset;
  /* 0x0018 */ struct _BG_ANIMATION* Animation[2];
} BG_RESOURCE_PACK, *PBG_RESOURCE_PACK; /* size: 0x0028 */

typedef struct _PFP_TRACE_DUMP_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY* LogBufferList;
  /* 0x0008 */ struct _LIST_ENTRY* EntryInfoTableList;
  /* 0x0010 */ struct _PFP_ENTRY_INFO_TABLE* CurrentEntryInfoTable;
  /* 0x0018 */ struct _PFP_ENTRY_INFO_TABLE* LastEntryInfoTable;
  /* 0x0020 */ unsigned short* TranslationTable;
  /* 0x0028 */ unsigned short MinEntryInfoIndex;
  /* 0x002a */ char Padding_1285[2];
  /* 0x002c */ unsigned long TableEntryCount;
  /* 0x0030 */ struct _PFS_TRACE_HEADER* Trace;
  /* 0x0038 */ struct _PFS_LOG_ENTRY* TraceLogEntryBase;
  /* 0x0040 */ union _PF_ENTRY_INFO* TraceEntryInfoBase;
  /* 0x0048 */ char* TraceExtraDataPtr;
  /* 0x0050 */ unsigned long TraceLogEntryIndex;
  /* 0x0054 */ unsigned short TraceEntryInfoIndex;
  /* 0x0056 */ unsigned short VolumeCount;
  /* 0x0058 */ unsigned __int64 TraceEnd;
} PFP_TRACE_DUMP_CONTEXT, *PPFP_TRACE_DUMP_CONTEXT; /* size: 0x0060 */

typedef struct _RECTANGLE
{
  /* 0x0000 */ unsigned long Width;
  /* 0x0004 */ unsigned long Height;
  /* 0x0008 */ unsigned long Stride;
} RECTANGLE, *PRECTANGLE; /* size: 0x000c */

typedef struct _BG_ANIMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _OFFSET Offset;
  /* 0x000c */ struct _RECTANGLE FrameSize;
  /* 0x0018 */ unsigned long FrameRate;
  /* 0x001c */ unsigned long FrameCount;
  /* 0x0020 */ unsigned long FrameIndex;
  /* 0x0024 */ unsigned long SegmentCount;
  /* 0x0028 */ unsigned long FadeFrameCount;
  /* 0x002c */ unsigned long FirstSegmentFrame;
  /* 0x0030 */ void* Callback /* function */;
  /* 0x0038 */ struct _GRAPHICS_RECTANGLE* Background;
  /* 0x0040 */ struct _GRAPHICS_RECTANGLE* Frame[1];
} BG_ANIMATION, *PBG_ANIMATION; /* size: 0x0048 */

typedef struct _KERNSNAP_SWITCH_FRAME
{
  /* 0x0000 */ struct _KSWITCH_FRAME SwitchFrame;
} KERNSNAP_SWITCH_FRAME, *PKERNSNAP_SWITCH_FRAME; /* size: 0x0040 */

typedef union _NBQUEUE_POINTER
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ __int64 Node : 48; /* bit position: 0 */
      /* 0x0000 */ __int64 Count : 16; /* bit position: 48 */
    }; /* bitfield */
    /* 0x0000 */ volatile __int64 Data;
  }; /* size: 0x0008 */
} NBQUEUE_POINTER, *PNBQUEUE_POINTER; /* size: 0x0008 */

typedef struct _NBQUEUE_HEADER
{
  /* 0x0000 */ union _NBQUEUE_POINTER Head;
  /* 0x0008 */ union _NBQUEUE_POINTER Tail;
  /* 0x0010 */ union _SLIST_HEADER* SlistHead;
} NBQUEUE_HEADER, *PNBQUEUE_HEADER; /* size: 0x0018 */

typedef struct _BITMAP_IMAGE
{
  /* 0x0000 */ unsigned long HeaderSize;
  /* 0x0004 */ unsigned long Width;
  /* 0x0008 */ unsigned long Height;
  /* 0x000c */ unsigned short Planes;
  /* 0x000e */ unsigned short BitsPerPixel;
  /* 0x0010 */ unsigned long Compression;
  /* 0x0014 */ unsigned long DataSize;
  /* 0x0018 */ unsigned long HorizontalResolution;
  /* 0x001c */ unsigned long VerticalResolution;
  /* 0x0020 */ unsigned long NumberOfColors;
  /* 0x0024 */ unsigned long NumberOfImportantColors;
} BITMAP_IMAGE, *PBITMAP_IMAGE; /* size: 0x0028 */

typedef struct _GRAPHICS_RECTANGLE
{
  /* 0x0000 */ unsigned long Height;
  /* 0x0004 */ unsigned long Width;
  /* 0x0008 */ unsigned long BitsPerPixel;
  /* 0x000c */ unsigned long Size;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long Padding_1286;
  /* 0x0018 */ void* Data;
  /* 0x0020 */ struct _BITMAP_IMAGE Bitmap;
} GRAPHICS_RECTANGLE, *PGRAPHICS_RECTANGLE; /* size: 0x0048 */

typedef struct _BGR_PIXEL
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char Blue;
      /* 0x0001 */ unsigned char Green;
      /* 0x0002 */ unsigned char Red;
      /* 0x0003 */ unsigned char Alpha;
    }; /* size: 0x0004 */
    /* 0x0000 */ unsigned long Color;
  }; /* size: 0x0004 */
} BGR_PIXEL, *PBGR_PIXEL; /* size: 0x0004 */

typedef struct _TEXT_ATTRIBUTES
{
  /* 0x0000 */ struct _BGR_PIXEL BackgroundColor;
  /* 0x0004 */ struct _BGR_PIXEL ForegroundColor;
  /* 0x0008 */ void* FontHandle;
  /* 0x0010 */ unsigned long PointSize;
  /* 0x0014 */ long __PADDING__[1];
} TEXT_ATTRIBUTES, *PTEXT_ATTRIBUTES; /* size: 0x0018 */

typedef struct _BG_EXTERNAL_CONTEXT
{
  /* 0x0000 */ struct _BOOT_DISPLAY_CONTEXT DisplayContext;
  /* 0x0018 */ void* SystemFontImage;
  /* 0x0020 */ unsigned long FontImageSize;
  /* 0x0024 */ struct _GUID Application;
  /* 0x0034 */ unsigned long Version;
  /* 0x0038 */ void* MuiFileBase;
  /* 0x0040 */ unsigned long MuiFileSize;
  /* 0x0044 */ long Padding_1287;
  /* 0x0048 */ void* BackgroundImage;
  /* 0x0050 */ void* AnimationFrameSet;
} BG_EXTERNAL_CONTEXT, *PBG_EXTERNAL_CONTEXT; /* size: 0x0058 */

typedef struct _PFNL_FILE_INFO
{
  /* 0x0000 */ unsigned __int64 Key;
  /* 0x0008 */ unsigned __int64 VolumeKey;
  /* 0x0010 */ unsigned long VolumeSequenceNumber;
  /* 0x0014 */ long Padding_1288;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0018 */ unsigned long Metafile : 1; /* bit position: 0 */
        /* 0x0018 */ unsigned long FileRenamed : 1; /* bit position: 1 */
        /* 0x0018 */ unsigned long PagingFile : 1; /* bit position: 2 */
        /* 0x0018 */ unsigned long Spare : 13; /* bit position: 3 */
        /* 0x0018 */ unsigned long NameLength : 16; /* bit position: 16 */
      }; /* bitfield */
      /* 0x001c */ wchar_t Filename[1];
    }; /* size: 0x0006 */
    /* 0x0018 */ unsigned __int64 FilePathEntry;
    /* 0x0018 */ struct _PFSC_ENTRY* FilePathEntryDbg;
  }; /* size: 0x0008 */
} PFNL_FILE_INFO, *PPFNL_FILE_INFO; /* size: 0x0020 */

typedef struct _EPROFILE
{
  /* 0x0000 */ struct _KPROCESS* Process;
  /* 0x0008 */ void* RangeBase;
  /* 0x0010 */ unsigned __int64 RangeSize;
  /* 0x0018 */ void* Buffer;
  /* 0x0020 */ unsigned long BufferSize;
  /* 0x0024 */ unsigned long BucketSize;
  /* 0x0028 */ struct _KPROFILE* ProfileObject;
  /* 0x0030 */ void* LockedBufferAddress;
  /* 0x0038 */ struct _MDL* Mdl;
  /* 0x0040 */ unsigned long Segment;
  /* 0x0044 */ enum _KPROFILE_SOURCE ProfileSource;
  /* 0x0048 */ struct _KAFFINITY_EX Affinity;
} EPROFILE, *PEPROFILE; /* size: 0x0070 */

typedef struct _PERFINFO_INTERRUPT_EVENT_DATA
{
  /* 0x0000 */ void* ServiceRoutine;
  union
  {
    /* 0x0008 */ unsigned long InterruptData;
    struct
    {
      /* 0x0008 */ unsigned char ReturnValue;
      /* 0x0009 */ unsigned char Vector;
      /* 0x000a */ unsigned short Reserved;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long MessageIndex;
} PERFINFO_INTERRUPT_EVENT_DATA, *PPERFINFO_INTERRUPT_EVENT_DATA; /* size: 0x0010 */

typedef struct _TEXT_REGION
{
  /* 0x0000 */ struct _OFFSET DisplayOffset;
  /* 0x0008 */ struct _RECTANGLE Region;
  /* 0x0014 */ long Padding_1289;
  /* 0x0018 */ struct _GRAPHICS_RECTANGLE* Background;
  /* 0x0020 */ struct _TEXT_ATTRIBUTES TextAttributes;
  /* 0x0038 */ struct _OFFSET RegionOffset;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ long __PADDING__[1];
} TEXT_REGION, *PTEXT_REGION; /* size: 0x0048 */

typedef struct _TEXT_METRICS
{
  /* 0x0000 */ unsigned long CellWidth;
  /* 0x0004 */ unsigned long CellHeight;
} TEXT_METRICS, *PTEXT_METRICS; /* size: 0x0008 */

typedef struct _PUSH_STACK_INFO_CONTEXT
{
  /* 0x0000 */ void* NextContext;
  /* 0x0008 */ struct _OBJECT_HEADER* ObjectHeader;
  /* 0x0010 */ unsigned char IsRef;
  /* 0x0011 */ char Padding_1290;
  /* 0x0012 */ unsigned short NumTraces;
  /* 0x0014 */ unsigned long Tag;
  /* 0x0018 */ unsigned long StackSequence;
  /* 0x001c */ long Padding_1291;
  /* 0x0020 */ struct _OBJECT_REF_TRACE Stack;
} PUSH_STACK_INFO_CONTEXT, *PPUSH_STACK_INFO_CONTEXT; /* size: 0x00a0 */

typedef struct _BOOT_DISK_CONTEXT
{
  /* 0x0000 */ struct _PARTITION_INFORMATION_EX* PartitionInformation;
  /* 0x0008 */ void* Signature;
  /* 0x0010 */ unsigned short* RelativePath;
  /* 0x0018 */ unsigned long* VolumeNumber;
} BOOT_DISK_CONTEXT, *PBOOT_DISK_CONTEXT; /* size: 0x0020 */

typedef struct _EBLC_TABLE_INFORMATION
{
  /* 0x0000 */ void* IndexTableBase;
  /* 0x0008 */ unsigned long IndexTableSize;
  /* 0x000c */ unsigned long NumberOfSubTables;
  /* 0x0010 */ struct _EBLC_SUBTABLE_INFORMATION* SubTableArray;
} EBLC_TABLE_INFORMATION, *PEBLC_TABLE_INFORMATION; /* size: 0x0018 */

typedef struct _OBTRACE_WORK_ITEM_BLOCK
{
  /* 0x0000 */ struct _SLIST_ENTRY ListEntry;
  /* 0x0010 */ struct _PUSH_STACK_INFO_CONTEXT StackInfoContext;
} OBTRACE_WORK_ITEM_BLOCK, *POBTRACE_WORK_ITEM_BLOCK; /* size: 0x00b0 */

typedef struct _PFP_BUFFER
{
  union
  {
    /* 0x0000 */ struct _SINGLE_LIST_ENTRY FreeLink;
    /* 0x0000 */ struct _LIST_ENTRY BufferLink;
  }; /* size: 0x0010 */
} PFP_BUFFER, *PPFP_BUFFER; /* size: 0x0010 */

typedef struct _PFP_ENTRY_INFO_TABLE
{
  /* 0x0000 */ struct _PFP_BUFFER Link;
  /* 0x0010 */ unsigned long EntryHints[3];
  /* 0x001c */ unsigned long EntryCount;
  /* 0x0020 */ unsigned long EntryMax;
  /* 0x0024 */ unsigned short StartingEntryIndex;
  /* 0x0026 */ char __PADDING__[2];
} PFP_ENTRY_INFO_TABLE, *PPFP_ENTRY_INFO_TABLE; /* size: 0x0028 */

typedef struct _SMKM_GLOBALS
{
  /* 0x0000 */ struct _EPROCESS* InitialSystemProcess;
} SMKM_GLOBALS, *PSMKM_GLOBALS; /* size: 0x0008 */

typedef struct _SMKM_FILE_EXTENT
{
  /* 0x0000 */ __int64 Length;
  /* 0x0008 */ __int64 StartingOffset;
} SMKM_FILE_EXTENT, *PSMKM_FILE_EXTENT; /* size: 0x0010 */

typedef struct _PFP_VA_ARRAY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long CountMax;
  /* 0x0008 */ void** Array;
} PFP_VA_ARRAY, *PPFP_VA_ARRAY; /* size: 0x0010 */

typedef struct _PF_TRACE_WORKER_INFO
{
  /* 0x0000 */ long CpuPriority;
} PF_TRACE_WORKER_INFO, *PPF_TRACE_WORKER_INFO; /* size: 0x0004 */

typedef struct _MOUNTDEV_UNIQUE_ID
{
  /* 0x0000 */ unsigned short UniqueIdLength;
  /* 0x0002 */ unsigned char UniqueId[1];
  /* 0x0003 */ char __PADDING__[1];
} MOUNTDEV_UNIQUE_ID, *PMOUNTDEV_UNIQUE_ID; /* size: 0x0004 */

typedef struct _PF_PFN_PRIO_REQUEST
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long RequestFlags;
  /* 0x0008 */ unsigned __int64 PfnCount;
  /* 0x0010 */ struct _SYSTEM_MEMORY_LIST_INFORMATION MemInfo;
  /* 0x00b8 */ struct _MMPFN_IDENTITY PageData[256];
} PF_PFN_PRIO_REQUEST, *PPF_PFN_PRIO_REQUEST; /* size: 0x18b8 */

typedef struct _SM_FP_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  union
  {
    /* 0x0008 */ void* Resource;
    struct
    {
      /* 0x0008 */ unsigned long InUse : 1; /* bit position: 0 */
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} SM_FP_ENTRY, *PSM_FP_ENTRY; /* size: 0x0010 */

typedef struct _PF_TIME_CONTROL
{
  /* 0x0000 */ long TimeAdjustment;
} PF_TIME_CONTROL, *PPF_TIME_CONTROL; /* size: 0x0004 */

typedef struct _PFFI_FILEINFO_STREAM_INFO
{
  /* 0x0000 */ unsigned __int64 VolumeKey;
  /* 0x0008 */ unsigned __int64 StreamKey;
  /* 0x0010 */ unsigned short* StreamPath;
  struct /* bitfield */
  {
    /* 0x0018 */ unsigned long VolumePathLength : 16; /* bit position: 0 */
    /* 0x0018 */ unsigned long StreamPathLength : 16; /* bit position: 16 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x001c */ unsigned long MetaFile : 1; /* bit position: 0 */
    /* 0x001c */ unsigned long PageFile : 1; /* bit position: 1 */
    /* 0x001c */ unsigned long Internal : 1; /* bit position: 2 */
    /* 0x001c */ unsigned long FileDeleted : 1; /* bit position: 3 */
    /* 0x001c */ unsigned long FileRenamed : 1; /* bit position: 4 */
    /* 0x001c */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
  /* 0x0020 */ unsigned long CreateTime;
  /* 0x0024 */ unsigned long SequenceNumber;
  /* 0x0028 */ unsigned long VolumeSequenceNumber;
  /* 0x002c */ long __PADDING__[1];
} PFFI_FILEINFO_STREAM_INFO, *PPFFI_FILEINFO_STREAM_INFO; /* size: 0x0030 */

typedef struct _TRIAGE_DUMP_OBJECT
{
  /* 0x0000 */ struct _MEMORY_DUMP64* MemoryDump;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long SavedNextDataBlockOffset;
  /* 0x0010 */ unsigned long SavedDataBlocksOffset;
  /* 0x0014 */ unsigned long SavedDataBlocksCount;
  /* 0x0018 */ unsigned long NextDataBlockOffset;
  /* 0x001c */ long Padding_1292;
  /* 0x0020 */ struct _TRIAGE_DATA_BLOCK** PresentBlocks;
  /* 0x0028 */ unsigned long PresentBlocksCount;
  /* 0x002c */ long __PADDING__[1];
} TRIAGE_DUMP_OBJECT, *PTRIAGE_DUMP_OBJECT; /* size: 0x0030 */

typedef struct _DUMP_WRITER_CALL_TABLE
{
  /* 0x0000 */ void* FillHeaders /* function */;
  /* 0x0008 */ void* IsMemoryBlockPresent /* function */;
  /* 0x0010 */ void* SnapData /* function */;
  /* 0x0018 */ void* SaveState /* function */;
  /* 0x0020 */ void* RestoreState /* function */;
  /* 0x0028 */ void* Write /* function */;
} DUMP_WRITER_CALL_TABLE, *PDUMP_WRITER_CALL_TABLE; /* size: 0x0030 */

typedef struct _DUMP_FILE_DESCRIPTOR
{
  /* 0x0000 */ struct _KPRCB* InDumpPrcbs[256];
  union
  {
    /* 0x0800 */ struct _TRIAGE_DUMP_OBJECT TriageDumpObject;
  } /* size: 0x0030 */ DumpObject;
  /* 0x0830 */ struct _DUMP_WRITER_CALL_TABLE CallTable;
} DUMP_FILE_DESCRIPTOR, *PDUMP_FILE_DESCRIPTOR; /* size: 0x0860 */

typedef struct _PFFI_FILE_TRUNCATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long TruncateType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 30; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long SequenceNumber;
  /* 0x0008 */ unsigned __int64 FileKey;
  /* 0x0010 */ unsigned __int64 NewFileSize;
} PFFI_FILE_TRUNCATION, *PPFFI_FILE_TRUNCATION; /* size: 0x0018 */

typedef struct _MI_ALLOC_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long EntireFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Attached : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AcquireExclusive : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ChargedExactQuota : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ChargedJobCommit : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ChangeProtection : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long NeedPhysicalVadRoot : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long UpdateVadHint : 1; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} MI_ALLOC_FLAGS, *PMI_ALLOC_FLAGS; /* size: 0x0004 */

typedef struct _PNP_DEVICE_OVERRIDE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _UNICODE_STRING HardwareId;
} PNP_DEVICE_OVERRIDE_ENTRY, *PPNP_DEVICE_OVERRIDE_ENTRY; /* size: 0x0020 */

typedef struct _PFFI_FILE_DEFRAG
{
  /* 0x0000 */ unsigned __int64 DefragSequenceNumber;
  /* 0x0008 */ unsigned __int64 FileKey;
} PFFI_FILE_DEFRAG, *PPFFI_FILE_DEFRAG; /* size: 0x0010 */

typedef struct _PNP_DEVICE_OVERRIDE_CONTEXT
{
  /* 0x0000 */ struct _UNICODE_STRING UnicodeKeyName;
  /* 0x0010 */ void* LocationPathsEntryHandle;
  /* 0x0018 */ unsigned long LocationPathCount;
  /* 0x001c */ long __PADDING__[1];
} PNP_DEVICE_OVERRIDE_CONTEXT, *PPNP_DEVICE_OVERRIDE_CONTEXT; /* size: 0x0020 */

typedef struct _MMSECURE_ENTRY
{
  /* 0x0000 */ struct _MMADDRESS_LIST u;
  /* 0x0010 */ struct _LIST_ENTRY List;
} MMSECURE_ENTRY, *PMMSECURE_ENTRY; /* size: 0x0020 */

typedef struct _PTE
{
  /* 0x0000 */ unsigned char ActiveFlag;
  /* 0x0001 */ unsigned char StartingTrack;
  /* 0x0002 */ unsigned short StartingCylinder;
  /* 0x0004 */ unsigned char PartitionType;
  /* 0x0005 */ unsigned char EndingTrack;
  /* 0x0006 */ unsigned short EndingCylinder;
  /* 0x0008 */ unsigned long StartingSector;
  /* 0x000c */ unsigned long PartitionLength;
} PTE, *PPTE; /* size: 0x0010 */

typedef struct _PARTITION_TABLE
{
  /* 0x0000 */ struct _PARTITION_INFORMATION PartitionEntry[4];
} PARTITION_TABLE, *PPARTITION_TABLE; /* size: 0x0080 */

typedef struct _PFP_FILE_ACCESS
{
  /* 0x0000 */ unsigned __int64 FileKey;
  /* 0x0008 */ unsigned __int64 PageOffset;
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned __int64 PageCount : 63; /* bit position: 0 */
    /* 0x0010 */ unsigned __int64 AccessType : 1; /* bit position: 63 */
  }; /* bitfield */
  /* 0x0018 */ unsigned __int64 ProcessKey;
  /* 0x0020 */ unsigned long SequenceNumber;
  /* 0x0024 */ unsigned long ProcessId;
} PFP_FILE_ACCESS, *PPFP_FILE_ACCESS; /* size: 0x0028 */

typedef struct _BOOT_SECTOR_INFO
{
  /* 0x0000 */ unsigned char JumpByte[1];
  /* 0x0001 */ unsigned char Ignore1[2];
  /* 0x0003 */ unsigned char OemData[8];
  /* 0x000b */ unsigned char BytesPerSector[2];
  /* 0x000d */ unsigned char Ignore2[6];
  /* 0x0013 */ unsigned char NumberOfSectors[2];
  /* 0x0015 */ unsigned char MediaByte[1];
  /* 0x0016 */ unsigned char Ignore3[2];
  /* 0x0018 */ unsigned char SectorsPerTrack[2];
  /* 0x001a */ unsigned char NumberOfHeads[2];
} BOOT_SECTOR_INFO, *PBOOT_SECTOR_INFO; /* size: 0x001c */

typedef struct _DISK_LAYOUT
{
  /* 0x0000 */ unsigned long TableCount;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ struct _PARTITION_TABLE PartitionTable[1];
} DISK_LAYOUT, *PDISK_LAYOUT; /* size: 0x0088 */

typedef struct _PATCH_BUFFER
{
  /* 0x0000 */ unsigned short PointerIndex;
  /* 0x0002 */ unsigned short Fill1;
  /* 0x0004 */ unsigned short BufferSize;
  /* 0x0006 */ unsigned short Fill2;
  /* 0x0008 */ unsigned __int64 Buffer[127];
} PATCH_BUFFER, *PPATCH_BUFFER; /* size: 0x0400 */

typedef struct _HOTPATCH_HOOK
{
  /* 0x0000 */ unsigned short HookType;
  /* 0x0002 */ unsigned short HookOptions;
  /* 0x0004 */ unsigned long HookRva;
  /* 0x0008 */ unsigned long HotpRva;
  /* 0x000c */ unsigned long ValidationRva;
} HOTPATCH_HOOK, *PHOTPATCH_HOOK; /* size: 0x0010 */

typedef struct _HOTPATCH_DEBUG_SIGNATURE
{
  /* 0x0000 */ unsigned short HotpatchVersion;
  /* 0x0002 */ unsigned short Signature;
} HOTPATCH_DEBUG_SIGNATURE, *PHOTPATCH_DEBUG_SIGNATURE; /* size: 0x0004 */

typedef struct _HOTPATCH_VALIDATION
{
  /* 0x0000 */ unsigned long SourceRva;
  /* 0x0004 */ unsigned long TargetRva;
  /* 0x0008 */ unsigned short ByteCount;
  /* 0x000a */ unsigned short OptionFlags;
} HOTPATCH_VALIDATION, *PHOTPATCH_VALIDATION; /* size: 0x000c */

typedef struct _HOTPATCH_FIXUP_ENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short RvaOffset : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short FixupType : 4; /* bit position: 12 */
  }; /* bitfield */
} HOTPATCH_FIXUP_ENTRY, *PHOTPATCH_FIXUP_ENTRY; /* size: 0x0002 */

typedef struct _HOTPATCH_FIXUP_REGION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long RvaHi : 20; /* bit position: 0 */
    /* 0x0000 */ unsigned long Count : 12; /* bit position: 20 */
  }; /* bitfield */
  /* 0x0004 */ unsigned short Fixup[2];
} HOTPATCH_FIXUP_REGION, *PHOTPATCH_FIXUP_REGION; /* size: 0x0008 */

typedef struct _HOTPATCH_DEBUG_DATA
{
  /* 0x0000 */ unsigned __int64 PEHashData;
  /* 0x0008 */ unsigned __int64 ChecksumData;
} HOTPATCH_DEBUG_DATA, *PHOTPATCH_DEBUG_DATA; /* size: 0x0010 */

typedef struct _ETIMER
{
  /* 0x0000 */ struct _KTIMER KeTimer;
  /* 0x0040 */ struct _KAPC TimerApc;
  /* 0x0098 */ struct _KDPC TimerDpc;
  /* 0x00d8 */ struct _LIST_ENTRY ActiveTimerListEntry;
  /* 0x00e8 */ unsigned __int64 Lock;
  /* 0x00f0 */ unsigned long Period;
  /* 0x00f4 */ unsigned char ApcAssociated;
  /* 0x00f5 */ char Padding_1293[3];
  /* 0x00f8 */ struct _DIAGNOSTIC_CONTEXT* volatile WakeReason;
  /* 0x0100 */ struct _LIST_ENTRY WakeTimerListEntry;
} ETIMER, *PETIMER; /* size: 0x0110 */

typedef struct _MBR_PARTITION_RECORD
{
  /* 0x0000 */ unsigned char BootIndicator;
  /* 0x0001 */ unsigned char StartHead;
  /* 0x0002 */ unsigned char StartSector;
  /* 0x0003 */ unsigned char StartTrack;
  /* 0x0004 */ unsigned char OSIndicator;
  /* 0x0005 */ unsigned char EndHead;
  /* 0x0006 */ unsigned char EndSector;
  /* 0x0007 */ unsigned char EndTrack;
  /* 0x0008 */ unsigned int StartingLBA;
  /* 0x000c */ unsigned int SizeInLBA;
} MBR_PARTITION_RECORD, *PMBR_PARTITION_RECORD; /* size: 0x0010 */

typedef struct _INTERNAL_DISK_GEOMETRY
{
  /* 0x0000 */ struct _DISK_GEOMETRY Geometry;
  /* 0x0018 */ union _LARGE_INTEGER DiskSize;
} INTERNAL_DISK_GEOMETRY, *PINTERNAL_DISK_GEOMETRY; /* size: 0x0020 */

typedef struct _DISK_INFORMATION
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ unsigned long SectorSize;
  /* 0x000c */ long Padding_1294;
  /* 0x0010 */ struct _INTERNAL_DISK_GEOMETRY Geometry;
  /* 0x0030 */ void* ScratchBuffer;
  /* 0x0038 */ unsigned __int64 SectorCount;
} DISK_INFORMATION, *PDISK_INFORMATION; /* size: 0x0040 */

typedef struct _EFI_PARTITION_ENTRY
{
  /* 0x0000 */ struct _GUID PartitionType;
  /* 0x0010 */ struct _GUID UniquePartition;
  /* 0x0020 */ unsigned __int64 StartingLBA;
  /* 0x0028 */ unsigned __int64 EndingLBA;
  /* 0x0030 */ unsigned __int64 Attributes;
  /* 0x0038 */ wchar_t Name[36];
} EFI_PARTITION_ENTRY, *PEFI_PARTITION_ENTRY; /* size: 0x0080 */

typedef struct _PFP_BUFFER_MANAGER
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long BufferType : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned long BufferSize : 28; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long BufferCount;
  /* 0x0008 */ unsigned short FreeBufferThreshold;
  /* 0x000a */ unsigned short FreeBufferCount;
  /* 0x000c */ long Padding_1295;
  /* 0x0010 */ struct _SINGLE_LIST_ENTRY FreeBufferListHead;
  /* 0x0018 */ struct _LIST_ENTRY ActiveBufferListHead;
} PFP_BUFFER_MANAGER, *PPFP_BUFFER_MANAGER; /* size: 0x0028 */

typedef struct _PFP_LOG_BUFFER_MANAGER
{
  /* 0x0000 */ struct _PFP_BUFFER_MANAGER Mgr;
} PFP_LOG_BUFFER_MANAGER, *PPFP_LOG_BUFFER_MANAGER; /* size: 0x0028 */

typedef struct _EFI_PARTITION_HEADER
{
  /* 0x0000 */ unsigned __int64 Signature;
  /* 0x0008 */ unsigned int Revision;
  /* 0x000c */ unsigned int HeaderSize;
  /* 0x0010 */ unsigned int HeaderCRC32;
  /* 0x0014 */ unsigned int Reserved;
  /* 0x0018 */ unsigned __int64 MyLBA;
  /* 0x0020 */ unsigned __int64 AlternateLBA;
  /* 0x0028 */ unsigned __int64 FirstUsableLBA;
  /* 0x0030 */ unsigned __int64 LastUsableLBA;
  /* 0x0038 */ struct _GUID DiskGUID;
  /* 0x0048 */ unsigned __int64 PartitionEntryLBA;
  /* 0x0050 */ unsigned int NumberOfEntries;
  /* 0x0054 */ unsigned int SizeOfPartitionEntry;
  /* 0x0058 */ unsigned int PartitionEntryCRC32;
} EFI_PARTITION_HEADER, *PEFI_PARTITION_HEADER; /* size: 0x005c */

typedef struct _MASTER_BOOT_RECORD
{
  /* 0x0000 */ unsigned char BootStrapCode[440];
  /* 0x01b8 */ unsigned long DiskSignature;
  /* 0x01bc */ unsigned short Unused;
  /* 0x01be */ struct _MBR_PARTITION_RECORD Partition[4];
  /* 0x01fe */ unsigned short Signature;
} MASTER_BOOT_RECORD, *PMASTER_BOOT_RECORD; /* size: 0x0200 */

typedef struct _PFSN_PREFETCH_SECTION_INFO
{
  /* 0x0000 */ struct _PFP_TRANSPARENT_OPEN_HANDLE FileHandle;
  /* 0x0020 */ struct _SECTION* ImageSection;
  /* 0x0028 */ struct _SECTION* DataSection;
  struct /* bitfield */
  {
    /* 0x0030 */ unsigned long NeedToDeRefImageSection : 1; /* bit position: 0 */
    /* 0x0030 */ unsigned long NeedToDeRefDataSection : 1; /* bit position: 1 */
    /* 0x0030 */ unsigned long NeedToCleanupFileInfo : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0034 */ long __PADDING__[1];
} PFSN_PREFETCH_SECTION_INFO, *PPFSN_PREFETCH_SECTION_INFO; /* size: 0x0038 */

typedef struct _LDR_RES_LANGUAGE
{
  /* 0x0000 */ unsigned short LangId;
  /* 0x0002 */ char Padding_1296[2];
  /* 0x0004 */ enum _LDR_RES_LANGUAGE_TYPES LangType;
} LDR_RES_LANGUAGE, *PLDR_RES_LANGUAGE; /* size: 0x0008 */

typedef struct _LDR_FALLBACK_LANGUAGES
{
  /* 0x0000 */ unsigned short NumberOfLanguages;
  /* 0x0002 */ char Padding_1297[2];
  /* 0x0004 */ struct _LDR_RES_LANGUAGE LangIds[64];
  /* 0x0204 */ unsigned char fIsGivenLanguage;
  /* 0x0205 */ char __PADDING__[3];
} LDR_FALLBACK_LANGUAGES, *PLDR_FALLBACK_LANGUAGES; /* size: 0x0208 */

typedef struct _PFP_PREFETCH_CONTEXT
{
  /* 0x0000 */ struct _NT_PREFETCH_REQUEST* Request;
  /* 0x0008 */ struct _PFP_PREFETCH_VOLUME_CONTEXT* VolumeHandles;
  /* 0x0010 */ struct _FILE_PREFETCH_EX* MetadataPrefetch;
  /* 0x0018 */ unsigned long MetadataCountMax;
  /* 0x001c */ long Padding_1298;
  /* 0x0020 */ struct _PFP_PREFETCH_CONTEXT_SHARED* SharedContext;
  /* 0x0028 */ struct _SYSTEM_MEMORY_LIST_INFORMATION MemInfo;
} PFP_PREFETCH_CONTEXT, *PPFP_PREFETCH_CONTEXT; /* size: 0x00d0 */

typedef struct _MEMORY_HEADER
{
  /* 0x0000 */ unsigned long Tag;
  /* 0x0004 */ long Padding_1299;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ struct _MDL* Mdl;
} MEMORY_HEADER, *PMEMORY_HEADER; /* size: 0x0018 */

typedef struct _OBJECT_BOUNDARY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Items;
  /* 0x0008 */ unsigned long TotalSize;
  /* 0x000c */ unsigned long Reserved;
} OBJECT_BOUNDARY_DESCRIPTOR, *POBJECT_BOUNDARY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _OBNS_ENTRY_COMPARE_CONTEXT
{
  /* 0x0000 */ struct _OBJECT_NAMESPACE_ENTRY* Entry1;
  /* 0x0008 */ struct _OBJECT_NAMESPACE_ENTRY* Entry2;
  /* 0x0010 */ struct _OBJECT_BOUNDARY_ENTRY* Level1Entry;
  /* 0x0018 */ unsigned long InProgress;
  /* 0x001c */ unsigned long MatchingItems;
  /* 0x0020 */ long Status;
  /* 0x0024 */ long __PADDING__[1];
} OBNS_ENTRY_COMPARE_CONTEXT, *POBNS_ENTRY_COMPARE_CONTEXT; /* size: 0x0028 */

typedef struct _PF_SYSTEM_SUPERFETCH_PARAMETERS
{
  /* 0x0000 */ unsigned long EnabledComponents;
  /* 0x0004 */ unsigned long BootID;
  /* 0x0008 */ unsigned long SavedSectInfoTracesMax;
  /* 0x000c */ unsigned long SavedPageAccessTracesMax;
  /* 0x0010 */ unsigned long ScenarioPrefetchTimeoutStandby;
  /* 0x0014 */ unsigned long ScenarioPrefetchTimeoutHibernate;
} PF_SYSTEM_SUPERFETCH_PARAMETERS, *PPF_SYSTEM_SUPERFETCH_PARAMETERS; /* size: 0x0018 */

typedef struct _PF_TRACE_LIMITS
{
  /* 0x0000 */ unsigned long MaxNumPages;
  /* 0x0004 */ unsigned long MaxNumSections;
  /* 0x0008 */ __int64 TimerPeriod;
} PF_TRACE_LIMITS, *PPF_TRACE_LIMITS; /* size: 0x0010 */

typedef struct _PF_SYSTEM_PREFETCH_PARAMETERS
{
  /* 0x0000 */ enum _PF_ENABLE_STATUS EnableStatus[2];
  /* 0x0008 */ struct _PF_TRACE_LIMITS TraceLimits[2];
  /* 0x0028 */ unsigned long MaxNumActiveTraces;
  /* 0x002c */ unsigned long MaxNumSavedTraces;
  /* 0x0030 */ wchar_t RootDirPath[32];
  /* 0x0070 */ wchar_t HostingApplicationList[128];
} PF_SYSTEM_PREFETCH_PARAMETERS, *PPF_SYSTEM_PREFETCH_PARAMETERS; /* size: 0x0170 */

typedef struct _PFP_SUPERFETCH_PARAMETERS
{
  /* 0x0000 */ struct _KEVENT* ParametersChangedEvent;
  /* 0x0008 */ void* ParametersKey;
  /* 0x0010 */ struct _IO_STATUS_BLOCK RegistryWatchIosb;
  /* 0x0020 */ struct _WORK_QUEUE_ITEM RegistryWatchWorkItem;
  /* 0x0040 */ unsigned long RegistryWatchBuffer;
  /* 0x0044 */ struct _PF_SYSTEM_SUPERFETCH_PARAMETERS Parameters;
  /* 0x005c */ long Padding_1300;
  /* 0x0060 */ struct _PF_SYSTEM_PREFETCH_PARAMETERS PfSnParams;
  /* 0x01d0 */ struct _EX_PUSH_LOCK ParametersLock;
  /* 0x01d8 */ long ParametersVersion;
  /* 0x01dc */ long Padding_1301;
  /* 0x01e0 */ unsigned short* ScenarioTypePrefixes[2];
  /* 0x01f0 */ unsigned long SafeBootMode;
  /* 0x01f4 */ unsigned long BaseTime;
} PFP_SUPERFETCH_PARAMETERS, *PPFP_SUPERFETCH_PARAMETERS; /* size: 0x01f8 */

typedef struct _OBJECT_BOUNDARY_ENTRY
{
  /* 0x0000 */ enum _BOUNDARY_ENTRY_TYPE EntryType;
  /* 0x0004 */ unsigned long EntrySize;
} OBJECT_BOUNDARY_ENTRY, *POBJECT_BOUNDARY_ENTRY; /* size: 0x0008 */

struct IO_GET_LEGACY_VETO_LIST_CONTEXT
{
  /* 0x0000 */ unsigned short** VetoList;
  /* 0x0008 */ unsigned long VetoListLength;
  /* 0x000c */ long Padding_1302;
  /* 0x0010 */ enum _PNP_VETO_TYPE* VetoType;
  /* 0x0018 */ long* Status;
}; /* size: 0x0020 */

typedef struct _RECT
{
  /* 0x0000 */ unsigned long x1;
  /* 0x0004 */ unsigned long y1;
  /* 0x0008 */ unsigned long x2;
  /* 0x000c */ unsigned long y2;
} RECT, *PRECT; /* size: 0x0010 */

typedef struct _PNP_DEVICE_EJECT
{
  /* 0x0000 */ void* Callback /* function */;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0018 */ long Status;
  /* 0x001c */ long Padding_1303;
  /* 0x0020 */ struct _WORK_QUEUE_ITEM WorkQueueItem;
  /* 0x0040 */ wchar_t InstancePath[200];
  /* 0x01d0 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x01d4 */ wchar_t VetoName[512];
  /* 0x05d4 */ long __PADDING__[1];
} PNP_DEVICE_EJECT, *PPNP_DEVICE_EJECT; /* size: 0x05d8 */

typedef struct _PFP_LOG_BUFFER
{
  /* 0x0000 */ struct _PFP_BUFFER Link;
  /* 0x0010 */ unsigned long LogEntryCount;
  /* 0x0014 */ unsigned long LogEntryMax;
} PFP_LOG_BUFFER, *PPFP_LOG_BUFFER; /* size: 0x0018 */

typedef struct _STORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_RESPONSE
{
  /* 0x0000 */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
  /* 0x0014 */ unsigned long SymbolicLinkOffset;
  /* 0x0018 */ unsigned long SymbolicLinkLength;
} STORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_RESPONSE, *PSTORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_RESPONSE; /* size: 0x001c */

typedef struct _PF_TRACE_COMMON_HEADER
{
  /* 0x0000 */ unsigned short VersionMajor;
  /* 0x0002 */ unsigned short VersionMinor;
  /* 0x0004 */ unsigned long Magic;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ enum _PF_TRACE_TYPE Type;
} PF_TRACE_COMMON_HEADER, *PPF_TRACE_COMMON_HEADER; /* size: 0x0010 */

typedef struct _DEVICE_WORK_ITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0028 */ void* Context;
} DEVICE_WORK_ITEM, *PDEVICE_WORK_ITEM; /* size: 0x0030 */

typedef struct _IO_INTERRUPT_STRUCTURE
{
  /* 0x0000 */ unsigned __int64 SpinLock;
  /* 0x0008 */ unsigned __int64 TargetProcessors;
  /* 0x0010 */ struct _INTERRUPT_CONNECTION_DATA ConnectionData;
  /* 0x0058 */ struct _KINTERRUPT UserInterruptObject;
  /* 0x00f8 */ struct _KINTERRUPT* InterruptObject[1];
} IO_INTERRUPT_STRUCTURE, *PIO_INTERRUPT_STRUCTURE; /* size: 0x0100 */

typedef struct _PoShutdownThreadListEntry
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ShutdownThreadList;
  /* 0x0008 */ struct _ETHREAD* Thread;
} PoShutdownThreadListEntry, *PPoShutdownThreadListEntry; /* size: 0x0010 */

typedef struct _PFFI_FILEINFO_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _PFFI_FILEINFO_INFO_TYPE Type;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long LogForSuperfetch : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long LogForETW : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long SuperfetchCommand : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x000c */ unsigned long ETWLoggerId;
  union
  {
    /* 0x0010 */ struct _PFFI_FILEINFO_VOLUME_INFO* Volume;
    /* 0x0010 */ struct _PFFI_FILEINFO_STREAM_INFO* Stream;
    /* 0x0010 */ struct _PFFI_FILE_ACCESS* FileAccess;
    /* 0x0010 */ unsigned long SequenceNumber;
    /* 0x0010 */ struct _PFFI_FILE_TRUNCATION* FileTruncation;
    /* 0x0010 */ struct _PFFI_FILE_CREATE* FileCreate;
    /* 0x0010 */ struct _PFFI_FILEINFO_INTERFACE* Interface;
    /* 0x0010 */ struct _PFFI_FILE_DEFRAG* FileDefrag;
  }; /* size: 0x0008 */
} PFFI_FILEINFO_INFO, *PPFFI_FILEINFO_INFO; /* size: 0x0018 */

typedef struct _DLL_EXPORT_ENTRY
{
  /* 0x0000 */ char* Name;
  union
  {
    /* 0x0008 */ unsigned __int64 EntryPoint;
    struct
    {
      /* 0x0008 */ enum _WOW64_SHARED_INFORMATION Id;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} DLL_EXPORT_ENTRY, *PDLL_EXPORT_ENTRY; /* size: 0x0010 */

typedef struct _EXP_PRODUCTINFO_SUITE_TYPE_MAP
{
  /* 0x0000 */ unsigned long ProductInfo;
  /* 0x0004 */ unsigned long SuiteMask;
  /* 0x0008 */ unsigned long ProductType;
} EXP_PRODUCTINFO_SUITE_TYPE_MAP, *PEXP_PRODUCTINFO_SUITE_TYPE_MAP; /* size: 0x000c */

typedef struct _DLL_EXPORT_INFORMATION
{
  /* 0x0000 */ struct _DLL_EXPORT_ENTRY* Entries;
  /* 0x0008 */ unsigned long NumberOfEntries;
  /* 0x000c */ long __PADDING__[1];
} DLL_EXPORT_INFORMATION, *PDLL_EXPORT_INFORMATION; /* size: 0x0010 */

typedef struct _CM_CALLBACK_CONTEXT_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY CallbackListEntry;
  /* 0x0010 */ long PreCallListCount;
  /* 0x0014 */ long Padding_1304;
  /* 0x0018 */ union _LARGE_INTEGER Cookie;
  /* 0x0020 */ void* CallerContext;
  /* 0x0028 */ void* Function /* function */;
  /* 0x0030 */ struct _UNICODE_STRING Altitude;
  /* 0x0040 */ struct _LIST_ENTRY ObjectContextListHead;
} CM_CALLBACK_CONTEXT_BLOCK, *PCM_CALLBACK_CONTEXT_BLOCK; /* size: 0x0050 */

typedef struct _CM_CALLBACK_CONTEXT_CALL_INSTANCE
{
  /* 0x0000 */ struct _LIST_ENTRY ThreadListEntry;
  /* 0x0010 */ struct _SINGLE_LIST_ENTRY PreCallListEntry;
  /* 0x0018 */ struct _CM_CALLBACK_CONTEXT_BLOCK* ContextBlock;
  /* 0x0020 */ void* CallContext;
} CM_CALLBACK_CONTEXT_CALL_INSTANCE, *PCM_CALLBACK_CONTEXT_CALL_INSTANCE; /* size: 0x0028 */

typedef struct _LOCK_TRACKER
{
  union
  {
    union
    {
      /* 0x0000 */ __int64 Balance : 2; /* bit position: 0 */
      /* 0x0000 */ struct _MMADDRESS_NODE* Parent;
      /* 0x0000 */ struct _MI_PER_SESSION_PROTOS* NextToFree;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ struct _MMADDRESS_NODE* LeftChild;
  /* 0x0010 */ struct _MMADDRESS_NODE* RightChild;
  union
  {
    /* 0x0018 */ unsigned __int64 StartingVpn;
    /* 0x0018 */ struct _MDL* Mdl;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0020 */ unsigned __int64 EndingVpn;
    /* 0x0020 */ struct _MDL* MdlEnd;
  }; /* size: 0x0008 */
  /* 0x0028 */ void* StartVa;
  /* 0x0030 */ unsigned __int64 Count;
  /* 0x0038 */ unsigned long Offset;
  /* 0x003c */ unsigned long Length;
  /* 0x0040 */ unsigned __int64 Page;
  /* 0x0048 */ void* CallingAddress;
  /* 0x0050 */ void* CallersCaller;
  /* 0x0058 */ unsigned long Who;
  /* 0x005c */ long Padding_1305;
  /* 0x0060 */ struct _EPROCESS* Process;
} LOCK_TRACKER, *PLOCK_TRACKER; /* size: 0x0068 */

typedef struct _LOCK_HEADER
{
  /* 0x0000 */ struct _MMADDRESS_NODE BalancedRoot;
  struct /* bitfield */
  {
    /* 0x0028 */ unsigned __int64 DepthOfTree : 5; /* bit position: 0 */
    /* 0x0028 */ unsigned __int64 Unused : 3; /* bit position: 5 */
    /* 0x0028 */ unsigned __int64 NumberGenericTableElements : 56; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0030 */ unsigned __int64 Count;
  /* 0x0038 */ unsigned __int64 Lock;
  /* 0x0040 */ unsigned long Valid;
  /* 0x0044 */ long __PADDING__[1];
} LOCK_HEADER, *PLOCK_HEADER; /* size: 0x0048 */

typedef struct _NAME_RECORD
{
  /* 0x0000 */ unsigned short PlatformId;
  /* 0x0002 */ unsigned short EncodingId;
  /* 0x0004 */ unsigned short LanguageId;
  /* 0x0006 */ unsigned short NameId;
  /* 0x0008 */ unsigned short Length;
  /* 0x000a */ unsigned short Offset;
} NAME_RECORD, *PNAME_RECORD; /* size: 0x000c */

struct xpress_info
{
  /* 0x0000 */ int magic;
  /* 0x0004 */ long Padding_1306;
  /* 0x0008 */ void* memory;
  /* 0x0010 */ struct prs* p;
  /* 0x0018 */ unsigned char* temp;
  /* 0x0020 */ unsigned int max_size;
  /* 0x0024 */ int chain;
}; /* size: 0x0028 */

struct prs
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned short z_next[16];
      /* 0x0000 */ const unsigned char* q_last[16];
    }; /* size: 0x0080 */
  } /* size: 0x0080 */ x;
  /* 0x0080 */ struct context c;
}; /* size: 0x0108 */

typedef struct _PFFI_CLOSE_PARAMETERS
{
  /* 0x0000 */ struct _PFFI_CONFLICT_NOTIFY_CONTEXT* NotifyContext;
  /* 0x0008 */ void* FileHandle;
  /* 0x0010 */ struct _FILE_OBJECT* FileObject;
  /* 0x0018 */ void* OpaqueFIObject;
} PFFI_CLOSE_PARAMETERS, *PPFFI_CLOSE_PARAMETERS; /* size: 0x0020 */

typedef struct _PFFB_BUFFER_LIST_PARAMS
{
  /* 0x0000 */ enum _PFFB_BUFFER_TYPE Type;
  /* 0x0004 */ unsigned long PoolTag;
  /* 0x0008 */ enum _POOL_TYPE PoolType;
  /* 0x000c */ unsigned long BufferHeaderSize;
  /* 0x0010 */ unsigned long BufferNearFullThreshold;
  /* 0x0014 */ long TotalAllocationMax;
  /* 0x0018 */ void* HandleOutOfBuffers /* function */;
  /* 0x0020 */ void* HandleFullBuffer /* function */;
} PFFB_BUFFER_LIST_PARAMS, *PPFFB_BUFFER_LIST_PARAMS; /* size: 0x0028 */

typedef struct _PFFB_BUFFER_LIST
{
  /* 0x0000 */ struct _EX_RUNDOWN_REF RefCount;
  /* 0x0008 */ long Padding_1307[2];
  /* 0x0010 */ union _SLIST_HEADER FreeList;
  /* 0x0020 */ union _SLIST_HEADER StandbyList;
  /* 0x0030 */ union _SLIST_HEADER AllocationList;
  /* 0x0040 */ struct _PFFB_BUFFER_LIST_PARAMS Params;
  /* 0x0068 */ long TotalAllocation;
  /* 0x006c */ unsigned long FailedReserves;
  /* 0x0070 */ unsigned long FailedReservesInBytes;
  /* 0x0074 */ long __PADDING__[3];
} PFFB_BUFFER_LIST, *PPFFB_BUFFER_LIST; /* size: 0x0080 */

typedef struct _ALPC_LOG_CALLBACK
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* LogRoutine /* function */;
} ALPC_LOG_CALLBACK, *PALPC_LOG_CALLBACK; /* size: 0x0018 */

typedef struct _REG_BINARY_CONTEXT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_1308;
  /* 0x0008 */ void* Location;
} REG_BINARY_CONTEXT, *PREG_BINARY_CONTEXT; /* size: 0x0010 */

typedef struct _BOOT_VHD_SQM
{
  /* 0x0000 */ unsigned long DiskType;
  /* 0x0004 */ unsigned long ParentSystemPartition;
  /* 0x0008 */ unsigned long PhysicalSize;
  /* 0x000c */ unsigned long VirtualSize;
  /* 0x0010 */ struct _GUID OsLoaderId;
} BOOT_VHD_SQM, *PBOOT_VHD_SQM; /* size: 0x0020 */

typedef struct _PSP_FAIR_SHARE_CPU_DATA
{
  /* 0x0000 */ struct _KDPC CpuQuotaDpc;
  /* 0x0040 */ unsigned __int64 TotalCycleCredit;
  /* 0x0048 */ unsigned __int64 TotalCyclesAccumulated;
  /* 0x0050 */ unsigned long CurrentGeneration;
  /* 0x0054 */ long Padding_1309;
  /* 0x0058 */ struct _PSP_CPU_QUOTA_WAIT_BLOCK* ThreadWaitBlockForRelease;
  /* 0x0060 */ unsigned __int64 IdleOnlyQueueListLock;
  /* 0x0068 */ struct _LIST_ENTRY SortedQuotaBlockListHead;
  /* 0x0078 */ long __PADDING__[2];
} PSP_FAIR_SHARE_CPU_DATA, *PPSP_FAIR_SHARE_CPU_DATA; /* size: 0x0080 */

typedef struct _PF_PHYSICAL_MEMORY_RANGE
{
  /* 0x0000 */ unsigned __int64 BasePfn;
  /* 0x0008 */ unsigned __int64 PageCount;
} PF_PHYSICAL_MEMORY_RANGE, *PPF_PHYSICAL_MEMORY_RANGE; /* size: 0x0010 */

typedef struct _PF_PHYSICAL_MEMORY_RANGE_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long RangeCount;
  /* 0x0008 */ struct _PF_PHYSICAL_MEMORY_RANGE Ranges[1];
} PF_PHYSICAL_MEMORY_RANGE_INFO, *PPF_PHYSICAL_MEMORY_RANGE_INFO; /* size: 0x0018 */

typedef struct _PSP_CPU_QUOTA_WAIT_BLOCK
{
  union
  {
    /* 0x0000 */ struct _LIST_ENTRY IdleOnlyListEntry;
    /* 0x0000 */ struct _LIST_ENTRY SuspendQueueListEntry;
  }; /* size: 0x0010 */
  /* 0x0010 */ struct _KEVENT ResumeExecutionEvent;
  /* 0x0028 */ struct _ETHREAD* OwnerThread;
} PSP_CPU_QUOTA_WAIT_BLOCK, *PPSP_CPU_QUOTA_WAIT_BLOCK; /* size: 0x0030 */

typedef struct _PSP_RATE_CONTROL_CPU_DATA
{
  /* 0x0000 */ struct _KDPC CpuQuotaDpc;
} PSP_RATE_CONTROL_CPU_DATA, *PPSP_RATE_CONTROL_CPU_DATA; /* size: 0x0040 */

typedef struct _BAPD_ITEM_V1
{
  /* 0x0000 */ struct _GUID Application;
  /* 0x0010 */ struct _GUID DataType;
  /* 0x0020 */ unsigned long Revision;
  /* 0x0024 */ unsigned long DataSize;
  /* 0x0028 */ unsigned long DataOffset;
} BAPD_ITEM_V1, *PBAPD_ITEM_V1; /* size: 0x002c */

typedef struct _PSP_QUOTA_EXPANSION_DESCRIPTOR
{
  /* 0x0000 */ unsigned long UseSpinLock;
  /* 0x0004 */ long Padding_1310;
  /* 0x0008 */ unsigned __int64 GiveBackThreshold;
  union
  {
    /* 0x0010 */ unsigned __int64 ExpansionSpinLock;
    /* 0x0010 */ struct _EX_PUSH_LOCK ExpansionPushLock;
  }; /* size: 0x0008 */
  /* 0x0018 */ void* ExpansionRoutine /* function */;
  /* 0x0020 */ void* ReturnRoutine /* function */;
  /* 0x0028 */ struct _LIST_ENTRY ExpansionList;
} PSP_QUOTA_EXPANSION_DESCRIPTOR, *PPSP_QUOTA_EXPANSION_DESCRIPTOR; /* size: 0x0038 */

typedef struct _PFP_VAPREFETCH_SUPPORT
{
  /* 0x0000 */ enum _PFS_PRIVATE_PAGE_SOURCE_TYPE Type;
  /* 0x0004 */ long Padding_1311;
  /* 0x0008 */ void* AddressSpaceHandle;
} PFP_VAPREFETCH_SUPPORT, *PPFP_VAPREFETCH_SUPPORT; /* size: 0x0010 */

typedef struct _DDBCACHE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ struct _UNICODE_STRING Name;
  /* 0x0020 */ unsigned long TimeDateStamp;
  /* 0x0024 */ long Status;
  /* 0x0028 */ struct _GUID Guid;
} DDBCACHE_ENTRY, *PDDBCACHE_ENTRY; /* size: 0x0038 */

typedef struct _VdmQueryDirInfo
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ void* FileInformation;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_1312;
  /* 0x0018 */ struct _UNICODE_STRING* FileName;
  /* 0x0020 */ unsigned long FileIndex;
  /* 0x0024 */ long __PADDING__[1];
} VdmQueryDirInfo, *PVdmQueryDirInfo; /* size: 0x0028 */

typedef struct _NT_PREFETCH_VOLUME
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ unsigned long SerialNumber;
  struct /* bitfield */
  {
    /* 0x000c */ unsigned long DontSpinUpDisk : 1; /* bit position: 0 */
    /* 0x000c */ unsigned long FileCount : 31; /* bit position: 1 */
  }; /* bitfield */
  union
  {
    /* 0x0010 */ struct _NT_PREFETCH_FILE* FileArray;
    /* 0x0010 */ unsigned long FileArrayOffset;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long PathLength;
  /* 0x001c */ long Padding_1313;
  union
  {
    /* 0x0020 */ unsigned short* Path;
    struct
    {
      /* 0x0020 */ unsigned long PathOffset;
      /* 0x0024 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} NT_PREFETCH_VOLUME, *PNT_PREFETCH_VOLUME; /* size: 0x0028 */

typedef struct _PSP_RESOURCE_DATA
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ char Padding_1314[3];
  /* 0x0004 */ long FailureCode;
} PSP_RESOURCE_DATA, *PPSP_RESOURCE_DATA; /* size: 0x0008 */

typedef struct _PSP_QUOTA_BUCKET
{
  /* 0x0000 */ struct _EX_PUSH_LOCK ListLock;
  /* 0x0008 */ struct _LIST_ENTRY ListHead;
} PSP_QUOTA_BUCKET, *PPSP_QUOTA_BUCKET; /* size: 0x0018 */

typedef struct _PSP_CPU_QUOTA_SET_SESSION_CAPTURE
{
  /* 0x0000 */ void* SessionObject;
  /* 0x0008 */ struct _PS_CPU_QUOTA_BLOCK* CpuQuotaBlock;
  /* 0x0010 */ unsigned long Weight;
  /* 0x0014 */ long __PADDING__[1];
} PSP_CPU_QUOTA_SET_SESSION_CAPTURE, *PPSP_CPU_QUOTA_SET_SESSION_CAPTURE; /* size: 0x0018 */

typedef struct _CM_LOCK_ELEMENT
{
  union
  {
    /* 0x0000 */ void* Thread;
    /* 0x0000 */ void* Entry;
  }; /* size: 0x0008 */
  /* 0x0008 */ void* Lock;
} CM_LOCK_ELEMENT, *PCM_LOCK_ELEMENT; /* size: 0x0010 */

typedef struct _CM_LOCK_TABLE
{
  /* 0x0000 */ union _SLIST_HEADER ListHead;
  /* 0x0010 */ long Count;
  /* 0x0014 */ long ThresholdSlot;
  /* 0x0018 */ long Padding_1315[2];
  /* 0x0020 */ struct _CM_LOCK_ELEMENT LockElements[1];
} CM_LOCK_TABLE, *PCM_LOCK_TABLE; /* size: 0x0030 */

typedef struct _NT_PREFETCH_RANGE_ARRAY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1316;
  union
  {
    /* 0x0008 */ struct _PREFETCH_REQUEST_RANGE* Array;
    struct
    {
      /* 0x0008 */ unsigned long ArrayOffset;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} NT_PREFETCH_RANGE_ARRAY, *PNT_PREFETCH_RANGE_ARRAY; /* size: 0x0010 */

typedef struct _NT_PREFETCH_PRIVATE
{
  /* 0x0000 */ struct _PFS_PRIVATE_PAGE_SOURCE SourceInfo;
  /* 0x0018 */ struct _NT_PREFETCH_RANGE_ARRAY Ranges;
} NT_PREFETCH_PRIVATE, *PNT_PREFETCH_PRIVATE; /* size: 0x0028 */

typedef struct _PFFI_CONFLICT_NOTIFY_CONTEXT
{
  /* 0x0000 */ void* NotifyRoutine /* function */;
  /* 0x0008 */ void* CalleeContext;
} PFFI_CONFLICT_NOTIFY_CONTEXT, *PPFFI_CONFLICT_NOTIFY_CONTEXT; /* size: 0x0010 */

typedef struct _WPP_TRACE_BUFFER
{
  /* 0x0000 */ struct _EVENT_TRACE_HEADER Header;
  /* 0x0030 */ struct _MOF_FIELD MofField[8];
} WPP_TRACE_BUFFER, *PWPP_TRACE_BUFFER; /* size: 0x00b0 */

typedef struct _WPP_TRACE_ENABLE_CONTEXT
{
  /* 0x0000 */ unsigned short LoggerId;
  /* 0x0002 */ unsigned char Level;
  /* 0x0003 */ unsigned char InternalFlag;
  /* 0x0004 */ unsigned long EnableFlags;
} WPP_TRACE_ENABLE_CONTEXT, *PWPP_TRACE_ENABLE_CONTEXT; /* size: 0x0008 */

typedef struct _MI_BAD_MEMORY_EVENT_ENTRY
{
  /* 0x0000 */ unsigned long BugCheckCode;
  /* 0x0004 */ long Active;
  /* 0x0008 */ unsigned long Data;
  /* 0x000c */ long Padding_1317;
  /* 0x0010 */ union _LARGE_INTEGER PhysicalAddress;
  /* 0x0018 */ struct _WORK_QUEUE_ITEM WorkItem;
} MI_BAD_MEMORY_EVENT_ENTRY, *PMI_BAD_MEMORY_EVENT_ENTRY; /* size: 0x0038 */

typedef union _RESCACHEMAGIC
{
  union
  {
    /* 0x0000 */ unsigned char bMagic[8];
    /* 0x0000 */ unsigned __int64 ullMagic;
  }; /* size: 0x0008 */
} RESCACHEMAGIC, *PRESCACHEMAGIC; /* size: 0x0008 */

typedef struct _CMFThreadParams
{
  /* 0x0000 */ unsigned long AllocationAttributes;
  /* 0x0004 */ unsigned long CacheIndex;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ unsigned char Detached;
  /* 0x000d */ char Padding_1318[3];
  /* 0x0010 */ struct _KEVENT* DoneEvent;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long Index;
  /* 0x0020 */ unsigned long PageAccess;
  /* 0x0024 */ long Status;
  /* 0x0028 */ void** TargetModule;
  /* 0x0030 */ unsigned long What;
  /* 0x0034 */ long __PADDING__[1];
} CMFThreadParams, *PCMFThreadParams; /* size: 0x0038 */

typedef struct _MUIRegistryThreadParams
{
  /* 0x0000 */ struct _KEVENT* DoneEvent;
  /* 0x0008 */ void* RegistryInfo;
  /* 0x0010 */ unsigned long RegistryInfoSize;
  /* 0x0014 */ unsigned long ulNumberInstalled;
  /* 0x0018 */ unsigned long ulInstallLanguage2Check;
  /* 0x001c */ unsigned long ulInstallLanguage2CheckExists;
  /* 0x0020 */ unsigned long ulMachineLanguage2Check;
  /* 0x0024 */ unsigned long ulMachineLanguage2CheckExists;
  /* 0x0028 */ long Status;
  /* 0x002c */ long __PADDING__[1];
} MUIRegistryThreadParams, *PMUIRegistryThreadParams; /* size: 0x0030 */

typedef struct _RESCSHEADER
{
  /* 0x0000 */ unsigned __int64 ullMagic;
  /* 0x0008 */ unsigned int ulVersion;
  /* 0x000c */ unsigned int ulIndex;
  /* 0x0010 */ unsigned int ulGeneration;
  /* 0x0014 */ unsigned int ulNumEntries;
  /* 0x0018 */ unsigned int ulWastage;
  /* 0x001c */ unsigned int ulTotalSize;
  /* 0x0020 */ unsigned int ulMaxSize;
  /* 0x0024 */ int fMatchAnyCulture;
  /* 0x0028 */ int fMatchAnyAffinity;
  /* 0x002c */ unsigned int ulCultureMatch[4];
  /* 0x003c */ int lAffinityMatch[4];
  /* 0x004c */ int fCompressed;
  /* 0x0050 */ unsigned int ulBlockSize;
  /* 0x0054 */ unsigned int ulBlockCount;
  /* 0x0058 */ unsigned int ulLastBlockSize;
  /* 0x005c */ unsigned int ulBlockOffset[1024];
  /* 0x105c */ long __PADDING__[1];
} RESCSHEADER, *PRESCSHEADER; /* size: 0x1060 */

typedef struct _POOL_HACKER
{
  /* 0x0000 */ struct _POOL_HEADER Header;
  /* 0x0010 */ unsigned long Contents[8];
} POOL_HACKER, *PPOOL_HACKER; /* size: 0x0030 */

typedef struct _OFFSET_TABLE
{
  /* 0x0000 */ unsigned long SfntVersion;
  /* 0x0004 */ unsigned short NumberOfTables;
  /* 0x0006 */ unsigned short SearchRange;
  /* 0x0008 */ unsigned short EntrySelector;
  /* 0x000a */ unsigned short RangeShift;
} OFFSET_TABLE, *POFFSET_TABLE; /* size: 0x000c */

typedef struct _FONT_FILE_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _FILE_IMAGE* FileHandle;
  /* 0x0018 */ unsigned long NumberOfFonts;
  struct
  {
    struct /* bitfield */
    {
      /* 0x001c */ unsigned long TtcTableDirectory : 1; /* bit position: 0 */
      /* 0x001c */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  } /* size: 0x0004 */ Flags;
  /* 0x0020 */ struct _LIST_ENTRY FontListHead;
} FONT_FILE_DATA, *PFONT_FILE_DATA; /* size: 0x0030 */

typedef struct _NAMING_TABLE
{
  /* 0x0000 */ unsigned short Format;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ unsigned short StringOffset;
  /* 0x0006 */ struct _NAME_RECORD NameRecord[1];
} NAMING_TABLE, *PNAMING_TABLE; /* size: 0x0012 */

typedef struct _ENCODING_RECORD
{
  /* 0x0000 */ unsigned short PlatformId;
  /* 0x0002 */ unsigned short EncodingId;
  /* 0x0004 */ unsigned long Offset;
} ENCODING_RECORD, *PENCODING_RECORD; /* size: 0x0008 */

struct sockaddr_in
{
  /* 0x0000 */ unsigned short sin_family;
  /* 0x0002 */ unsigned short sin_port;
  /* 0x0004 */ struct in_addr sin_addr;
  /* 0x0008 */ char sin_zero[8];
}; /* size: 0x0010 */

typedef struct _CMAP_TABLE
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short NumTables;
  /* 0x0004 */ struct _ENCODING_RECORD EncodingRecord[1];
} CMAP_TABLE, *PCMAP_TABLE; /* size: 0x000c */

typedef struct _SEGMENT_MAP_HEADER
{
  /* 0x0000 */ unsigned short Format;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned short Language;
  /* 0x0006 */ unsigned short SegmentCountx2;
  /* 0x0008 */ unsigned short SearchRange;
  /* 0x000a */ unsigned short EntrySelector;
  /* 0x000c */ unsigned short RangeShift;
} SEGMENT_MAP_HEADER, *PSEGMENT_MAP_HEADER; /* size: 0x000e */

typedef struct _EBLC_STRIKE_TABLE
{
  /* 0x0000 */ unsigned long IndexSubTableArrayOffset;
  /* 0x0004 */ unsigned long IndexTableSize;
  /* 0x0008 */ unsigned long NumberOfIndexSubTables;
  /* 0x000c */ unsigned long ColorReference;
  /* 0x0010 */ struct _EBLC_LINE_METRICS HorizontalLineMetrics;
  /* 0x001c */ struct _EBLC_LINE_METRICS VerticalLineMetrics;
  /* 0x0028 */ unsigned short StartGlyphIndex;
  /* 0x002a */ unsigned short EndGlyphIndex;
  /* 0x002c */ unsigned char PpemX;
  /* 0x002d */ unsigned char PpemY;
  /* 0x002e */ unsigned char BitDepth;
  /* 0x002f */ unsigned char Flags;
} EBLC_STRIKE_TABLE, *PEBLC_STRIKE_TABLE; /* size: 0x0030 */

struct PiFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Source;
  /* 0x0028 */ unsigned __int64 ListHead;
  /* 0x0030 */ unsigned __int64 TrapFrame;
}; /* size: 0x0038 */

typedef struct _TABLE_DIRECTORY_ENTRY
{
  /* 0x0000 */ unsigned long Tag;
  /* 0x0004 */ unsigned long CheckSum;
  /* 0x0008 */ unsigned long Offset;
  /* 0x000c */ unsigned long Length;
} TABLE_DIRECTORY_ENTRY, *PTABLE_DIRECTORY_ENTRY; /* size: 0x0010 */

typedef struct _STRIKE_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _FONT_DATA* ParentFontData;
  /* 0x0018 */ unsigned long StrikeIndex;
  /* 0x001c */ struct _EBLC_STRIKE_TABLE BitmapSizeTable;
  /* 0x004c */ long Padding_1319;
  /* 0x0050 */ struct _EBLC_TABLE_INFORMATION* IndexTableInformation;
} STRIKE_DATA, *PSTRIKE_DATA; /* size: 0x0058 */

struct LocalFrame
{
  /* 0x0000 */ unsigned __int64 SavedRbp;
  /* 0x0008 */ unsigned __int64 SavedRbx;
  /* 0x0010 */ unsigned __int64 SavedRdi;
  /* 0x0018 */ unsigned __int64 SavedRsi;
  /* 0x0020 */ unsigned __int64 SavedR12;
  /* 0x0028 */ unsigned __int64 RetAddr;
  /* 0x0030 */ unsigned __int64 HomeRCX;
  /* 0x0038 */ unsigned __int64 HomeRDX;
  /* 0x0040 */ unsigned __int64 HomeR8;
  /* 0x0048 */ unsigned __int64 HomeR9;
  /* 0x0050 */ unsigned __int64 FinalUncompressedChunkSize;
}; /* size: 0x0058 */

typedef struct _WDIP_SEM_MEMORY_POOL
{
  /* 0x0000 */ struct _LIST_ENTRY BlockList;
  /* 0x0010 */ unsigned long NumFreeBytes;
  /* 0x0014 */ long Padding_1320;
  /* 0x0018 */ unsigned char* Address;
  /* 0x0020 */ struct _EX_PUSH_LOCK Lock;
  /* 0x0028 */ long Padding_1321[2];
  /* 0x0030 */ union _SLIST_HEADER StandbyLists[6];
} WDIP_SEM_MEMORY_POOL, *PWDIP_SEM_MEMORY_POOL; /* size: 0x0090 */

typedef struct _EBLC_SUBTABLE_INFORMATION
{
  /* 0x0000 */ unsigned short FirstGlyphIndex;
  /* 0x0002 */ unsigned short LastGlyphIndex;
  /* 0x0004 */ long Padding_1322;
  /* 0x0008 */ void* SubTableBase;
} EBLC_SUBTABLE_INFORMATION, *PEBLC_SUBTABLE_INFORMATION; /* size: 0x0010 */

typedef struct _PFP_SCENARIO_CONTEXT
{
  /* 0x0000 */ struct _EX_PUSH_LOCK Lock;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0008 */ unsigned long State : 2; /* bit position: 0 */
      /* 0x0008 */ unsigned long WaiterState : 2; /* bit position: 2 */
    }; /* bitfield */
  } /* size: 0x0004 */ PrefetchState;
  /* 0x000c */ long Padding_1323;
  /* 0x0010 */ struct _KEVENT PrefetchEvent;
  /* 0x0028 */ struct _KEVENT* PrefetchAbortEvent;
  /* 0x0030 */ enum _PF_PHASED_SCENARIO_TYPE CurrentScenario;
  /* 0x0034 */ unsigned long ScenarioSequenceNumber;
  /* 0x0038 */ unsigned __int64 FUSUserId;
  /* 0x0040 */ struct _KEVENT* ScenarioNotifyEvent;
  /* 0x0048 */ void* ServiceThreadId;
  /* 0x0050 */ union _LARGE_INTEGER ServiceThreadCreateTime;
  /* 0x0058 */ struct _ETHREAD* ServiceThread;
  /* 0x0060 */ long ServiceThreadOldPri;
  /* 0x0064 */ long Padding_1324;
  /* 0x0068 */ unsigned __int64 SequenceNumberLock;
  /* 0x0070 */ long BoostSequenceNumber;
  /* 0x0074 */ long StandbySequenceNumber;
} PFP_SCENARIO_CONTEXT, *PPFP_SCENARIO_CONTEXT; /* size: 0x0078 */

typedef struct _PFP_FILE_KEY_ENTRY
{
  /* 0x0000 */ struct _RTL_HASH_ENTRY HashEntry;
  /* 0x0010 */ unsigned __int64 FileNameHash;
} PFP_FILE_KEY_ENTRY, *PPFP_FILE_KEY_ENTRY; /* size: 0x0018 */

typedef struct _PFPRP_CONTEXT
{
  /* 0x0000 */ struct _RTL_HASH_TABLE FileKeyHash;
  /* 0x0010 */ struct _PFP_FILE_KEY_ENTRY* FileKeyCache;
  /* 0x0018 */ struct _PFP_FILE_KEY_ENTRY DummyFileKeyEntry;
  /* 0x0030 */ struct _EX_PUSH_LOCK FileKeyLock;
  /* 0x0038 */ struct _RTL_CHASH_TABLE ExemptFileHash;
  /* 0x0050 */ unsigned __int64 ExemptFileCache;
  /* 0x0058 */ struct _EX_PUSH_LOCK ExemptFileLock;
  /* 0x0060 */ struct _RTL_CHASH_TABLE DeprioProcessHash;
  /* 0x0078 */ struct _EX_PUSH_LOCK DeprioProcessLock;
  /* 0x0080 */ struct _EX_PUSH_LOCK CHashGrowLock;
  /* 0x0088 */ struct _EX_RUNDOWN_REF RefCount;
  /* 0x0090 */ union _LARGE_INTEGER LastRobustionTicks;
  /* 0x0098 */ unsigned long Enabled : 1; /* bit position: 0 */
  /* 0x009c */ long __PADDING__[1];
} PFPRP_CONTEXT, *PPFPRP_CONTEXT; /* size: 0x00a0 */

typedef struct _PFP_SUPERFETCH_GLOBALS
{
  /* 0x0000 */ struct _PFP_SUPERFETCH_PARAMETERS Parameters;
  /* 0x01f8 */ struct _PFP_SCENARIO_CONTEXT ScenContext;
  /* 0x0270 */ struct _PFPRP_CONTEXT RpContext;
  /* 0x0310 */ struct _PFFI_FILEINFO_INTERFACE* FIInterface;
  /* 0x0318 */ struct _EX_RUNDOWN_REF FIInterfaceRefCount;
  /* 0x0320 */ struct _EX_PUSH_LOCK FIInterfaceLock;
  /* 0x0328 */ struct _EX_PUSH_LOCK PrefetchListLock;
  /* 0x0330 */ struct _LIST_ENTRY PrefetchList;
  /* 0x0340 */ unsigned long PrefetchListRundown : 1; /* bit position: 0 */
  /* 0x0344 */ long PrefetchConflictCount;
  /* 0x0348 */ unsigned __int64 RepurposedByPrefetchPageCount;
} PFP_SUPERFETCH_GLOBALS, *PPFP_SUPERFETCH_GLOBALS; /* size: 0x0350 */

typedef struct _PI_BUS_EXTENSION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned char NumberCSNs;
  /* 0x0005 */ char Padding_1325[3];
  /* 0x0008 */ unsigned char* ReadDataPort;
  /* 0x0010 */ unsigned char DataPortMapped;
  /* 0x0011 */ char Padding_1326[7];
  /* 0x0018 */ unsigned char* AddressPort;
  /* 0x0020 */ unsigned char AddrPortMapped;
  /* 0x0021 */ char Padding_1327[7];
  /* 0x0028 */ unsigned char* CommandPort;
  /* 0x0030 */ unsigned char CmdPortMapped;
  /* 0x0031 */ char Padding_1328[3];
  /* 0x0034 */ unsigned long NextSlotNumber;
  /* 0x0038 */ struct _SINGLE_LIST_ENTRY DeviceList;
  /* 0x0040 */ struct _SINGLE_LIST_ENTRY CardList;
  /* 0x0048 */ struct _DEVICE_OBJECT* PhysicalBusDevice;
  /* 0x0050 */ struct _DEVICE_OBJECT* FunctionalBusDevice;
  /* 0x0058 */ struct _DEVICE_OBJECT* AttachedDevice;
  /* 0x0060 */ unsigned long BusNumber;
  /* 0x0064 */ enum _SYSTEM_POWER_STATE SystemPowerState;
  /* 0x0068 */ enum _DEVICE_POWER_STATE DevicePowerState;
  /* 0x006c */ long __PADDING__[1];
} PI_BUS_EXTENSION, *PPI_BUS_EXTENSION; /* size: 0x0070 */

typedef struct _PFFI_FILEINFO_INTERFACE
{
  /* 0x0000 */ void* Open /* function */;
  /* 0x0008 */ void* Close /* function */;
} PFFI_FILEINFO_INTERFACE, *PPFFI_FILEINFO_INTERFACE; /* size: 0x0010 */

typedef struct _PFFI_OPEN_PARAMETERS
{
  /* 0x0000 */ struct _PFFI_CONFLICT_NOTIFY_CONTEXT* NotifyContext;
  /* 0x0008 */ struct _FILE_OBJECT* VolumeFileObject;
  /* 0x0010 */ struct _OBJECT_ATTRIBUTES ObjectAttributes;
  /* 0x0040 */ unsigned long DesiredAccess;
  /* 0x0044 */ unsigned long FileAttributes;
  /* 0x0048 */ unsigned long CreateOptions;
  /* 0x004c */ long Padding_1329;
  /* 0x0050 */ void* FileHandleOut;
  /* 0x0058 */ struct _FILE_OBJECT* FileObjectOut;
  /* 0x0060 */ void* OpaqueFIObjectOut;
  /* 0x0068 */ enum _PFFI_SUBSTATUS SubStatusOut;
  /* 0x006c */ unsigned long SequenceNumberOut;
} PFFI_OPEN_PARAMETERS, *PPFFI_OPEN_PARAMETERS; /* size: 0x0070 */

typedef struct _PFFI_DEBUG_TIME
{
  /* 0x0000 */ unsigned long TickCountMs;
  /* 0x0004 */ long DebugSequenceNumber;
} PFFI_DEBUG_TIME, *PPFFI_DEBUG_TIME; /* size: 0x0008 */

typedef struct _PFFI_CONFLICT_INFO
{
  /* 0x0000 */ void* OpenedHandle;
  /* 0x0008 */ struct _FILE_OBJECT* OpenedObject;
  /* 0x0010 */ struct _ETHREAD* ConflictedOnThread;
  /* 0x0018 */ struct _PFFI_DEBUG_TIME ConflictTime;
  /* 0x0020 */ enum _PFFI_CONFLICT_TYPE ConflictType;
  /* 0x0024 */ long __PADDING__[1];
} PFFI_CONFLICT_INFO, *PPFFI_CONFLICT_INFO; /* size: 0x0028 */

typedef struct _IOP_SESSION_NOTIFICATION_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _DRIVER_OBJECT* DriverObject;
  /* 0x0018 */ void* CallbackFunction /* function */;
  /* 0x0020 */ void* CallbackRegistration;
  /* 0x0028 */ void* IoObject;
  /* 0x0030 */ void* SessionObject;
  /* 0x0038 */ unsigned long EventMask;
  /* 0x003c */ long Padding_1330;
  /* 0x0040 */ void* Context;
} IOP_SESSION_NOTIFICATION_ENTRY, *PIOP_SESSION_NOTIFICATION_ENTRY; /* size: 0x0048 */

typedef union _PFFB_BUFFER_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long AllFlags;
    /* 0x0000 */ unsigned long Temporary : 1; /* bit position: 0 */
  }; /* size: 0x0004 */
} PFFB_BUFFER_FLAGS, *PPFFB_BUFFER_FLAGS; /* size: 0x0004 */

typedef struct _HEAP_LOOKASIDE
{
  /* 0x0000 */ union _SLIST_HEADER ListHead;
  /* 0x0010 */ unsigned short Depth;
  /* 0x0012 */ unsigned short MaximumDepth;
  /* 0x0014 */ unsigned long TotalAllocates;
  /* 0x0018 */ unsigned long AllocateMisses;
  /* 0x001c */ unsigned long TotalFrees;
  /* 0x0020 */ unsigned long FreeMisses;
  /* 0x0024 */ unsigned long LastTotalAllocates;
  /* 0x0028 */ unsigned long LastAllocateMisses;
  /* 0x002c */ unsigned long Counters[2];
  /* 0x0034 */ long __PADDING__[3];
} HEAP_LOOKASIDE, *PHEAP_LOOKASIDE; /* size: 0x0040 */

typedef struct _PFFB_BUFFER
{
  /* 0x0000 */ struct _SLIST_ENTRY BufferLink;
  /* 0x0010 */ struct _PFFB_BUFFER_LIST* List;
  /* 0x0018 */ char* Position;
  /* 0x0020 */ char* BufferEnd;
  /* 0x0028 */ unsigned long LogEntryCount;
  /* 0x002c */ union _PFFB_BUFFER_FLAGS Flags;
} PFFB_BUFFER, *PPFFB_BUFFER; /* size: 0x0030 */

typedef struct _PFSN_PREFETCH_VOLUME_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY VolumeLink;
  /* 0x0010 */ unsigned short* VolumePath;
  /* 0x0018 */ unsigned long VolumePathLength;
  /* 0x001c */ long Padding_1331;
  /* 0x0020 */ struct _PFP_TRANSPARENT_OPEN_HANDLE VolumeHandle;
  /* 0x0040 */ unsigned long NextFileMetadataIndex;
  /* 0x0044 */ long Padding_1332;
  /* 0x0048 */ struct _PF_COUNTED_STRING* NextDirMetadataPath;
} PFSN_PREFETCH_VOLUME_INFO, *PPFSN_PREFETCH_VOLUME_INFO; /* size: 0x0050 */

typedef struct _PF_COUNTED_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ wchar_t String[1];
} PF_COUNTED_STRING, *PPF_COUNTED_STRING; /* size: 0x0004 */

typedef struct _PFP_TRACING_STATS
{
  /* 0x0000 */ unsigned long AccessTraceListFull;
  /* 0x0004 */ unsigned long SectInfoTraceListFull;
  /* 0x0008 */ unsigned long GeneratedTraces;
  /* 0x000c */ unsigned long EventsLogged;
} PFP_TRACING_STATS, *PPFP_TRACING_STATS; /* size: 0x0010 */

typedef struct _PFP_ENTRY_INFO_HASH
{
  /* 0x0000 */ struct _PFP_BUFFER_MANAGER Mgr;
} PFP_ENTRY_INFO_HASH, *PPFP_ENTRY_INFO_HASH; /* size: 0x0028 */

typedef struct _PFP_COMPLETED_TRACES
{
  /* 0x0000 */ struct _LIST_ENTRY CompletedTraces;
  /* 0x0010 */ struct _LIST_ENTRY SectionInfoTraces;
  /* 0x0020 */ unsigned long NumCompletedTraces;
  /* 0x0024 */ unsigned long MaxCompletedTraces;
  /* 0x0028 */ unsigned long NumSectionInfoTraces;
  /* 0x002c */ unsigned long MaxSectionInfoTraces;
  /* 0x0030 */ unsigned char NewTraceSinceFlush;
  /* 0x0031 */ char Padding_1333[7];
  /* 0x0038 */ struct _KGUARDED_MUTEX CompletedTracesLock;
  /* 0x0070 */ struct _KEVENT* CompletedTracesEvent;
} PFP_COMPLETED_TRACES, *PPFP_COMPLETED_TRACES; /* size: 0x0078 */

typedef struct _PFP_PREFETCH_CONTEXT_SHARED
{
  /* 0x0000 */ struct _LIST_ENTRY PrefetchLink;
  /* 0x0010 */ struct _ETHREAD* PrefetchThread;
  /* 0x0018 */ struct _PFP_PREFETCH_CONTEXT* PrefetchContext;
  /* 0x0020 */ struct _PFSN_PREFETCH_HEADER* PrefetchHeader;
  /* 0x0028 */ struct _PFFI_CONFLICT_NOTIFY_CONTEXT ConflictContext;
  /* 0x0038 */ unsigned long OpenRetryDelayMs;
  /* 0x003c */ unsigned long OpenRetryTotalDelayMsMax;
  /* 0x0040 */ unsigned long OpenRetryTotalDelayMs;
  struct /* bitfield */
  {
    /* 0x0044 */ unsigned long GotFIInterface : 1; /* bit position: 0 */
    /* 0x0044 */ unsigned long OriginalPrefetchingState : 1; /* bit position: 1 */
    /* 0x0044 */ unsigned long PrefetchRundown : 1; /* bit position: 2 */
    /* 0x0044 */ unsigned long EnteredCriticalRegion : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0048 */ unsigned long PrefetchConflict;
  /* 0x004c */ unsigned long OpenCount;
  /* 0x0050 */ unsigned long OpenErrorCount;
  /* 0x0054 */ unsigned long CloseCount;
  /* 0x0058 */ struct _KEVENT StopPrefetchEvent;
  /* 0x0070 */ long ConflictCount;
  /* 0x0074 */ long Padding_1334;
  /* 0x0078 */ struct _PFFI_CONFLICT_INFO ConflictInfo[8];
} PFP_PREFETCH_CONTEXT_SHARED, *PPFP_PREFETCH_CONTEXT_SHARED; /* size: 0x01b8 */

typedef struct _NT_PREFETCH_STATS
{
  /* 0x0000 */ unsigned long FileCount;
  /* 0x0004 */ unsigned long DirectoryCount;
  /* 0x0008 */ unsigned long PrivSourceCount;
  /* 0x000c */ unsigned long DataPages;
  /* 0x0010 */ unsigned long ImagePages;
  /* 0x0014 */ unsigned long PrivatePages;
  /* 0x0018 */ unsigned long MetaPrefetchDuration;
  union
  {
    struct
    {
      /* 0x001c */ unsigned long DataPrefetchDuration;
      /* 0x0020 */ unsigned long ImagePrefetchDuration;
    }; /* size: 0x0008 */
    /* 0x001c */ unsigned long FileTricklePrefetchDuration;
  }; /* size: 0x0008 */
  /* 0x0024 */ unsigned long PrivatePrefetchDuration;
} NT_PREFETCH_STATS, *PNT_PREFETCH_STATS; /* size: 0x0028 */

typedef struct _PREFETCH_STATS_ALL
{
  /* 0x0000 */ struct _NT_PREFETCH_STATS Stats;
  /* 0x0028 */ unsigned long FileOpenErrorCount;
} PREFETCH_STATS_ALL, *PPREFETCH_STATS_ALL; /* size: 0x002c */

typedef struct _NT_PREFETCH_REQUEST
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long VolumeCount;
  /* 0x000c */ long Padding_1335;
  union
  {
    /* 0x0010 */ struct _NT_PREFETCH_VOLUME* VolumeArray;
    /* 0x0010 */ unsigned long VolumeArrayOffset;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long TotalFileCount;
  /* 0x001c */ unsigned long FileArrayOffset;
  /* 0x0020 */ unsigned long TotalRangeCount;
  /* 0x0024 */ unsigned long RangeArrayOffset;
  /* 0x0028 */ unsigned long SourceCount;
  /* 0x002c */ long Padding_1336;
  union
  {
    /* 0x0030 */ struct _NT_PREFETCH_PRIVATE* SourceArray;
    /* 0x0030 */ unsigned long SourceArrayOffset;
  }; /* size: 0x0008 */
  /* 0x0038 */ unsigned long StringsOffset;
  /* 0x003c */ unsigned long StringsSize;
  /* 0x0040 */ struct _SYSTEM_PREFETCH_OPTIONS PrefetchOptions;
  struct /* bitfield */
  {
    /* 0x0044 */ unsigned long PagePriority : 16; /* bit position: 0 */
    /* 0x0044 */ unsigned long RepurposePriority : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0048 */ unsigned __int64 StoreParameter;
  /* 0x0050 */ struct _PREFETCH_STATS_ALL PrefetchStats;
  /* 0x007c */ long Padding_1337;
  union
  {
    /* 0x0080 */ void* StopEvent;
    /* 0x0080 */ void* EventObject;
  }; /* size: 0x0008 */
} NT_PREFETCH_REQUEST, *PNT_PREFETCH_REQUEST; /* size: 0x0088 */

typedef struct _PFS_COUNTED_STRING
{
  union
  {
    /* 0x0000 */ unsigned short* String;
    /* 0x0000 */ unsigned long StringOffset;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} PFS_COUNTED_STRING, *PPFS_COUNTED_STRING; /* size: 0x0010 */

typedef struct _NT_PREFETCH_FILE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Image : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Directory : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long OpenByFileId : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long OpenError : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long MFT : 1; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1338;
  /* 0x0008 */ unsigned __int64 FileIndexNumber;
  /* 0x0010 */ struct _NT_PREFETCH_RANGE_ARRAY Ranges;
  /* 0x0020 */ struct _PFS_COUNTED_STRING Path;
} NT_PREFETCH_FILE, *PNT_PREFETCH_FILE; /* size: 0x0030 */

typedef struct _PREFETCH_REQUEST_RANGE
{
  /* 0x0000 */ unsigned __int64 StartOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} PREFETCH_REQUEST_RANGE, *PPREFETCH_REQUEST_RANGE; /* size: 0x0010 */

typedef struct _PFP_PREFETCH_VOLUME_CONTEXT
{
  /* 0x0000 */ struct _PFP_TRANSPARENT_OPEN_HANDLE Volume;
  /* 0x0020 */ struct _PFP_TRANSPARENT_OPEN_HANDLE RootDirectory;
} PFP_PREFETCH_VOLUME_CONTEXT, *PPFP_PREFETCH_VOLUME_CONTEXT; /* size: 0x0040 */

typedef struct _PFSN_PREFETCH_HEADER
{
  /* 0x0000 */ struct _PF_SCENARIO_HEADER* Scenario;
  /* 0x0008 */ struct _PFP_PREFETCH_CONTEXT_SHARED SharedContext;
  /* 0x01c0 */ struct _PFSN_PREFETCH_VOLUME_INFO* VolumeNodes;
  /* 0x01c8 */ struct _LIST_ENTRY BadVolumeList;
  /* 0x01d8 */ struct _LIST_ENTRY OpenedVolumeList;
  /* 0x01e8 */ struct _PFSN_PREFETCH_SECTION_INFO* PrefetchSectionInfoTable;
  /* 0x01f0 */ struct _READ_LIST** ReadLists;
  /* 0x01f8 */ long* CleanupSectionIndexes;
  /* 0x0200 */ struct _FILE_PREFETCH_EX* MetadataPrefetch;
  /* 0x0208 */ unsigned long PagePriority;
  /* 0x020c */ unsigned long RepurposePriority;
  /* 0x0210 */ struct _PF_SECTION_INFO* SectionInfo;
  /* 0x0218 */ unsigned long SectionInfoCount;
  /* 0x021c */ unsigned long SectionInfoCountMax;
} PFSN_PREFETCH_HEADER, *PPFSN_PREFETCH_HEADER; /* size: 0x0220 */

struct tagAHCACHEFORWARDQUEUE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long QueueLimit;
  /* 0x0008 */ unsigned long CurInQueue;
  /* 0x000c */ unsigned long CurMaxInQueue;
}; /* size: 0x0010 */

struct tagAHCACHESERVICEDATAQUERY
{
  /* 0x0000 */ struct tagAHCACHESTATS Stats;
  /* 0x0078 */ struct tagAHCACHEFORWARDQUEUE Queue;
  /* 0x0088 */ unsigned long DataSize;
  /* 0x008c */ long Padding_1339;
  /* 0x0090 */ unsigned char* Data;
}; /* size: 0x0098 */

struct tagAHCACHESERVICEDATAFORWARD
{
  /* 0x0000 */ unsigned short ExecutableType;
  /* 0x0002 */ unsigned short Padding1;
  /* 0x0004 */ unsigned long Reason;
  /* 0x0008 */ struct _UNICODE_STRING ExecutablePath;
  /* 0x0018 */ void* FileHandle;
  /* 0x0020 */ struct _UNICODE_STRING Environment;
}; /* size: 0x0030 */

struct tagAHCACHESERVICEDATA
{
  /* 0x0000 */ struct tagAHCACHESERVICEDATAQUERY Query;
  /* 0x0098 */ struct tagAHCACHESERVICEDATACACHE Cache;
  /* 0x00c8 */ struct tagAHCACHESERVICEDATAFORWARD Forward;
}; /* size: 0x00f8 */

typedef struct _PF_SECTION_INFO
{
  /* 0x0000 */ unsigned __int64 FileKey;
  /* 0x0008 */ unsigned long FileSequenceNumber;
  /* 0x000c */ unsigned long FileIdLow;
  /* 0x0010 */ unsigned long FileIdHigh;
  /* 0x0014 */ long __PADDING__[1];
} PF_SECTION_INFO, *PPF_SECTION_INFO; /* size: 0x0018 */

typedef struct _PF_LOG_EVENT_DATA
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long EventType : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned long Flags : 2; /* bit position: 5 */
    /* 0x0000 */ unsigned long DataSize : 25; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1340;
  /* 0x0008 */ void* EventData;
} PF_LOG_EVENT_DATA, *PPF_LOG_EVENT_DATA; /* size: 0x0010 */

typedef struct _PF_EVENT_AGCX_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ContextKey;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long TypeInfo : 2; /* bit position: 0 */
    /* 0x0008 */ unsigned long SequenceNumber : 30; /* bit position: 2 */
  }; /* bitfield */
  /* 0x000c */ long __PADDING__[1];
} PF_EVENT_AGCX_CONTEXT, *PPF_EVENT_AGCX_CONTEXT; /* size: 0x0010 */

typedef struct _SUPERFETCH_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Magic;
  /* 0x0008 */ enum _SUPERFETCH_INFORMATION_CLASS InfoClass;
  /* 0x000c */ long Padding_1341;
  /* 0x0010 */ void* Data;
  /* 0x0018 */ unsigned long Length;
  /* 0x001c */ long __PADDING__[1];
} SUPERFETCH_INFORMATION, *PSUPERFETCH_INFORMATION; /* size: 0x0020 */

typedef struct _PF_MEMORY_LIST_NODE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Node : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Spare : 56; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0008 */ unsigned __int64 StandbyLowPageCount;
  /* 0x0010 */ unsigned __int64 StandbyMediumPageCount;
  /* 0x0018 */ unsigned __int64 StandbyHighPageCount;
  /* 0x0020 */ unsigned __int64 FreePageCount;
  /* 0x0028 */ unsigned __int64 ModifiedPageCount;
} PF_MEMORY_LIST_NODE, *PPF_MEMORY_LIST_NODE; /* size: 0x0030 */

typedef struct _PF_TRACING_HEALTH
{
  /* 0x0000 */ unsigned long AccessesNotBuffered;
  /* 0x0004 */ unsigned long EventsNotBuffered;
  /* 0x0008 */ unsigned long AccessTraceListFull;
  /* 0x000c */ unsigned long SectInfoTraceListFull;
  /* 0x0010 */ unsigned long AccessEntriesDropped;
  /* 0x0014 */ unsigned long SectInfoEntriesDropped;
} PF_TRACING_HEALTH, *PPF_TRACING_HEALTH; /* size: 0x0018 */

typedef struct _PFP_POWER_ACTION_DPC_CONTEXT
{
  /* 0x0000 */ struct _KDPC PowerActionDpc;
  /* 0x0040 */ struct _KTIMER PowerActionTimer;
  /* 0x0080 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x00a0 */ enum _PFP_POWER_ACTION_DPC_TYPE DpcType;
  /* 0x00a4 */ long SequenceNumber;
} PFP_POWER_ACTION_DPC_CONTEXT, *PPFP_POWER_ACTION_DPC_CONTEXT; /* size: 0x00a8 */

typedef struct _PF_PAGES_REPURPOSED_PREFETCH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1342;
  /* 0x0008 */ unsigned __int64 PagesRepurposed;
} PF_PAGES_REPURPOSED_PREFETCH, *PPF_PAGES_REPURPOSED_PREFETCH; /* size: 0x0010 */

typedef struct _PF_MEMORY_LIST_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long NodeCount;
  /* 0x000c */ long Padding_1343;
  /* 0x0010 */ struct _PF_MEMORY_LIST_NODE Nodes[1];
} PF_MEMORY_LIST_INFO, *PPF_MEMORY_LIST_INFO; /* size: 0x0040 */

typedef struct _PF_TRACE_DATA
{
  /* 0x0000 */ struct _PF_TRACING_HEALTH TraceHealth;
  union
  {
    /* 0x0018 */ unsigned long TraceOptions;
    struct /* bitfield */
    {
      /* 0x0018 */ unsigned long TracePrivatePages : 1; /* bit position: 0 */
      /* 0x0018 */ unsigned long CreateTraceDump : 1; /* bit position: 1 */
      /* 0x0018 */ unsigned long CreateHardfaultDB : 1; /* bit position: 2 */
      /* 0x0018 */ unsigned long SeperateHardfaults : 1; /* bit position: 3 */
      /* 0x0018 */ unsigned long LogSystemState : 1; /* bit position: 4 */
      /* 0x0018 */ unsigned long TracingPriority : 3; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x001c */ unsigned long Length;
  /* 0x0020 */ wchar_t TraceName[1];
  /* 0x0022 */ char __PADDING__[2];
} PF_TRACE_DATA, *PPF_TRACE_DATA; /* size: 0x0024 */

typedef struct _PF_EVENT_POWER_ACTION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long PhaseEnd : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long PhaseId : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long TickCount;
} PF_EVENT_POWER_ACTION, *PPF_EVENT_POWER_ACTION; /* size: 0x0008 */

typedef struct _PFP_TRACING_GLOBALS
{
  /* 0x0000 */ struct _EX_PUSH_LOCK GlobalsLock;
  /* 0x0008 */ unsigned long LoggingComponents;
  /* 0x000c */ unsigned long MmTraceStopReasons;
  /* 0x0010 */ struct _EX_PUSH_LOCK MmTracingStateLock;
  /* 0x0018 */ struct _PFP_LOG_BUFFER_MANAGER LogBuffers;
  /* 0x0040 */ struct _PFP_ENTRY_INFO_HASH EntryInfoHash;
  /* 0x0068 */ struct _PFP_LOGGING_WORKER_CONTEXT LoggingContext;
  /* 0x00d8 */ long Padding_1344[2];
  /* 0x00e0 */ struct _PFFB_BUFFER_LIST SectInfoList;
  /* 0x0160 */ struct _PFFB_BUFFER_LIST EventFBList;
  /* 0x01e0 */ union _SLIST_HEADER EventFullList;
  /* 0x01f0 */ unsigned long EventFullListMax;
  /* 0x01f4 */ long Padding_1345;
  /* 0x01f8 */ struct _PFP_COMPLETED_TRACES Traces;
  /* 0x0270 */ struct _KTIMER SectInfoDisableTimer;
  /* 0x02b0 */ struct _KDPC SectInfoDisableDpc;
  /* 0x02f0 */ struct _WORK_QUEUE_ITEM SectInfoDisableWorkItem;
  /* 0x0310 */ struct _PF_TRACING_HEALTH TracingHealth;
  /* 0x0328 */ struct _PFP_TRACING_STATS Stats;
  /* 0x0338 */ long __PADDING__[2];
} PFP_TRACING_GLOBALS, *PPFP_TRACING_GLOBALS; /* size: 0x0340 */

typedef struct _PFP_BOOST_SUPPORT
{
  /* 0x0000 */ struct _ETHREAD* Thread;
  /* 0x0008 */ struct _PFP_POWER_ACTION_DPC_CONTEXT* DpcContext;
} PFP_BOOST_SUPPORT, *PPFP_BOOST_SUPPORT; /* size: 0x0010 */

typedef struct _PF_ACCESS_TRACING_CONTROL
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Command;
  /* 0x0008 */ unsigned long ComponentMask;
} PF_ACCESS_TRACING_CONTROL, *PPF_ACCESS_TRACING_CONTROL; /* size: 0x000c */

typedef struct _PF_SCENARIO_PREFETCH_INFO
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short PrefetchEnd : 1; /* bit position: 0 */
  /* 0x0004 */ enum _PF_PHASED_SCENARIO_TYPE ScenType;
} PF_SCENARIO_PREFETCH_INFO, *PPF_SCENARIO_PREFETCH_INFO; /* size: 0x0008 */

typedef struct _PF_SCENARIO_PHASE_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _PF_PHASED_SCENARIO_TYPE ScenType;
  /* 0x0008 */ unsigned long PhaseId;
  /* 0x000c */ unsigned long SequenceNumber;
  union
  {
    /* 0x0010 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long PhaseEnd : 1; /* bit position: 0 */
      /* 0x0010 */ unsigned long Context : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0014 */ long Padding_1346;
  /* 0x0018 */ unsigned __int64 FUSUserId;
} PF_SCENARIO_PHASE_INFO, *PPF_SCENARIO_PHASE_INFO; /* size: 0x0020 */

typedef struct _KERNEL_SNAP_STACK_SEGMENT_CALLBACK_INFO
{
  /* 0x0000 */ struct _DUMP_FILE_DESCRIPTOR* DumpFile;
  /* 0x0008 */ unsigned __int64 StackPointer;
  /* 0x0010 */ unsigned char UseFakeSwitchFrame;
  /* 0x0011 */ char Padding_1347[7];
  /* 0x0018 */ struct _KERNSNAP_THREAD_DATA* ThreadData;
} KERNEL_SNAP_STACK_SEGMENT_CALLBACK_INFO, *PKERNEL_SNAP_STACK_SEGMENT_CALLBACK_INFO; /* size: 0x0020 */

typedef struct _BITMAP_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _BITMAP_IMAGE* BitmapImage;
} BITMAP_ENTRY, *PBITMAP_ENTRY; /* size: 0x0018 */

typedef struct _PF_TRACE_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long MagicNumber;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ struct _PF_SCENARIO_ID ScenarioId;
  /* 0x004c */ enum _PF_SCENARIO_TYPE ScenarioType;
  /* 0x0050 */ unsigned long EventEntryIdxs[8];
  /* 0x0070 */ unsigned long NumEventEntryIdxs;
  /* 0x0074 */ unsigned long TraceBufferOffset;
  /* 0x0078 */ unsigned long NumEntries;
  /* 0x007c */ unsigned long SectionInfoOffset;
  /* 0x0080 */ unsigned long NumSections;
  /* 0x0084 */ long Padding_1348;
  /* 0x0088 */ __int64 PeriodLength;
  /* 0x0090 */ unsigned long FaultsPerPeriod[10];
  /* 0x00b8 */ union _LARGE_INTEGER LaunchTime;
  /* 0x00c0 */ unsigned __int64 Reserved[5];
} PF_TRACE_HEADER, *PPF_TRACE_HEADER; /* size: 0x00e8 */

typedef struct _PFSN_TRACE_DUMP
{
  /* 0x0000 */ struct _LIST_ENTRY CompletedTracesLink;
  /* 0x0010 */ struct _PF_TRACE_HEADER Trace;
} PFSN_TRACE_DUMP, *PPFSN_TRACE_DUMP; /* size: 0x00f8 */

typedef struct _PFSN_PREFETCHER_GLOBALS
{
  /* 0x0000 */ struct _LIST_ENTRY ActiveTraces;
  /* 0x0010 */ unsigned __int64 ActiveTracesLock;
  /* 0x0018 */ struct _PFSN_TRACE_HEADER* SystemWideTrace;
  /* 0x0020 */ struct _LIST_ENTRY CompletedTraces;
  /* 0x0030 */ struct _FAST_MUTEX CompletedTracesLock;
  /* 0x0068 */ long NumCompletedTraces;
  /* 0x006c */ enum _PFSN_TRACING_STATE TracingState;
  /* 0x0070 */ struct _KEVENT* CompletedTracesEvent;
  /* 0x0078 */ long ActivePrefetches;
  /* 0x007c */ long Padding_1349;
  /* 0x0080 */ unsigned __int64 EtwProviderHandle;
  /* 0x0088 */ unsigned long SystemDriversStarted : 1; /* bit position: 0 */
  /* 0x008c */ long __PADDING__[1];
} PFSN_PREFETCHER_GLOBALS, *PPFSN_PREFETCHER_GLOBALS; /* size: 0x0090 */

struct _PFSC_ENTRY;

struct SsFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5;
  /* 0x0028 */ unsigned __int64 P6;
  /* 0x0030 */ unsigned __int64 SavedR15;
}; /* size: 0x0038 */

typedef struct _PFS_VOLUME_INFO
{
  union
  {
    /* 0x0000 */ union _LARGE_INTEGER ForAlignment;
    struct
    {
      /* 0x0000 */ unsigned long CreationTimeLo;
      /* 0x0004 */ unsigned long CreationTimeHi;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned long SerialNumber;
  /* 0x000c */ unsigned long OldUniqueId;
  union
  {
    /* 0x0010 */ struct _PFSC_ENTRY* PathEntry;
    /* 0x0010 */ unsigned short* Path;
    /* 0x0010 */ unsigned __int64 PathOffset;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned short PathLength;
  struct /* bitfield */
  {
    /* 0x001a */ unsigned short NameInCache : 1; /* bit position: 0 */
    /* 0x001a */ unsigned short DeviceType : 4; /* bit position: 1 */
    /* 0x001a */ unsigned short DeviceFlags : 4; /* bit position: 5 */
    /* 0x001a */ unsigned short DontSpinUpDisk : 1; /* bit position: 9 */
    /* 0x001a */ unsigned short Spare1 : 6; /* bit position: 10 */
  }; /* bitfield */
  /* 0x001c */ long __PADDING__[1];
} PFS_VOLUME_INFO, *PPFS_VOLUME_INFO; /* size: 0x0020 */

typedef struct _PFP_EVENT_BUFFER
{
  /* 0x0000 */ struct _PFFB_BUFFER Header;
} PFP_EVENT_BUFFER, *PPFP_EVENT_BUFFER; /* size: 0x0030 */

typedef struct _PFS_LOG_ENTRY_PRIVATE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 PfLogEntryType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 HardFault : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 Type : 2; /* bit position: 3 */
    /* 0x0000 */ unsigned __int64 Spare0 : 7; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 VirtualPageNumber : 52; /* bit position: 12 */
  }; /* bitfield */
  union
  {
    /* 0x0008 */ unsigned long SessionId;
    struct
    {
      /* 0x0008 */ unsigned short Spare1;
      /* 0x000a */ unsigned short ProcessIndex;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} PFS_LOG_ENTRY_PRIVATE, *PPFS_LOG_ENTRY_PRIVATE; /* size: 0x0010 */

struct CmFrame
{
  /* 0x0000 */ unsigned __int64 SavedRsi;
  /* 0x0008 */ unsigned __int64 SavedRdi;
}; /* size: 0x0010 */

typedef struct _PFP_ENTRY_INFO_DATA
{
  /* 0x0000 */ unsigned short EntryInfoIndex;
  /* 0x0002 */ char Padding_1350[6];
  /* 0x0008 */ struct _PFP_ENTRY_INFO_TABLE* EntryInfoTable;
  /* 0x0010 */ union _PF_ENTRY_INFO* EntryInfo;
} PFP_ENTRY_INFO_DATA, *PPFP_ENTRY_INFO_DATA; /* size: 0x0018 */

typedef struct _HEAP_SUBSEGMENT
{
  /* 0x0000 */ struct _HEAP_LOCAL_SEGMENT_INFO* LocalInfo;
  /* 0x0008 */ volatile struct _HEAP_USERDATA_HEADER* UserBlocks;
  /* 0x0010 */ struct _INTERLOCK_SEQ AggregateExchg;
  union
  {
    struct
    {
      /* 0x0018 */ unsigned short BlockSize;
      /* 0x001a */ unsigned short Flags;
      /* 0x001c */ unsigned short BlockCount;
      /* 0x001e */ unsigned char SizeIndex;
      /* 0x001f */ unsigned char AffinityIndex;
    }; /* size: 0x0008 */
    /* 0x0018 */ unsigned long Alignment[2];
  }; /* size: 0x0008 */
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY SFreeListEntry;
  /* 0x0028 */ volatile unsigned long Lock;
  /* 0x002c */ long __PADDING__[1];
} HEAP_SUBSEGMENT, *PHEAP_SUBSEGMENT; /* size: 0x0030 */

typedef struct _PF_TIME_RANGE
{
  /* 0x0000 */ unsigned long StartTime;
  /* 0x0004 */ unsigned long EndTime;
} PF_TIME_RANGE, *PPF_TIME_RANGE; /* size: 0x0008 */

typedef struct _PFNL_ENTRY_HEADER
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Type : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned long Size : 28; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long Timestamp;
  /* 0x0008 */ unsigned long SequenceNumber;
} PFNL_ENTRY_HEADER, *PPFNL_ENTRY_HEADER; /* size: 0x000c */

typedef struct _PFP_TRACE_DUMP
{
  /* 0x0000 */ struct _LIST_ENTRY CompletedTracesLink;
  /* 0x0010 */ struct _PF_TRACE_COMMON_HEADER Trace;
} PFP_TRACE_DUMP, *PPFP_TRACE_DUMP; /* size: 0x0020 */

typedef struct _PF_SECTION_INFO_TRACE_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long SectInfoTraceListFull;
  /* 0x0008 */ unsigned long SectInfoEntriesDropped;
  /* 0x000c */ unsigned long LogEntryOffset;
  /* 0x0010 */ unsigned long LogEntryCount;
} PF_SECTION_INFO_TRACE_HEADER, *PPF_SECTION_INFO_TRACE_HEADER; /* size: 0x0014 */

typedef union _PFP_NAME_LOGGING_BUFFER
{
  union
  {
    /* 0x0000 */ struct _PFFB_BUFFER FBHeader;
    struct
    {
      /* 0x0000 */ struct _PFP_TRACE_DUMP TraceDump;
      /* 0x0020 */ struct _PF_SECTION_INFO_TRACE_HEADER Header;
      /* 0x0034 */ unsigned long SavedBufferSize;
      /* 0x0038 */ union _PFFB_BUFFER_FLAGS SavedBufferFlags;
    }; /* size: 0x003c */
    /* 0x0000 */ unsigned __int64 Dummy;
  }; /* size: 0x003c */
} PFP_NAME_LOGGING_BUFFER, *PPFP_NAME_LOGGING_BUFFER; /* size: 0x0040 */

typedef struct _HEAP_STOP_ON_VALUES
{
  /* 0x0000 */ unsigned __int64 AllocAddress;
  /* 0x0008 */ struct _HEAP_STOP_ON_TAG AllocTag;
  /* 0x000c */ long Padding_1351;
  /* 0x0010 */ unsigned __int64 ReAllocAddress;
  /* 0x0018 */ struct _HEAP_STOP_ON_TAG ReAllocTag;
  /* 0x001c */ long Padding_1352;
  /* 0x0020 */ unsigned __int64 FreeAddress;
  /* 0x0028 */ struct _HEAP_STOP_ON_TAG FreeTag;
  /* 0x002c */ long __PADDING__[1];
} HEAP_STOP_ON_VALUES, *PHEAP_STOP_ON_VALUES; /* size: 0x0030 */

typedef struct _PF_EVENT_FILE_DEFRAG
{
  /* 0x0000 */ unsigned __int64 DefragSequenceNumber;
  /* 0x0008 */ unsigned __int64 FileKey;
  union
  {
    /* 0x0010 */ unsigned long FileSequenceNumber;
    struct
    {
      /* 0x0010 */ unsigned short FileInfoIndex;
      /* 0x0012 */ char __PADDING__[6];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PF_EVENT_FILE_DEFRAG, *PPF_EVENT_FILE_DEFRAG; /* size: 0x0018 */

typedef struct _PFS_LOG_ENTRY_EXTPAGE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 PfLogEntryType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 SpannedEntries : 10; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 ReadFile : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned __int64 WriteFile : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned __int64 HasTime : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned __int64 Spare : 9; /* bit position: 15 */
    /* 0x0000 */ unsigned __int64 SequenceNumberHi : 8; /* bit position: 24 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long PageCount : 8; /* bit position: 0 */
    /* 0x0008 */ unsigned long SequenceNumberLo : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x000c */ long __PADDING__[1];
} PFS_LOG_ENTRY_EXTPAGE, *PPFS_LOG_ENTRY_EXTPAGE; /* size: 0x0010 */

typedef struct _PFFI_FILEINFO_VOLUME_INFO
{
  /* 0x0000 */ unsigned __int64 VolumeKey;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ unsigned long SerialNumber;
  /* 0x0014 */ unsigned short DosPathLength;
  /* 0x0016 */ unsigned short VolumePathLength;
  /* 0x0018 */ unsigned short* DosPath;
  /* 0x0020 */ unsigned short* VolumePath;
  struct /* bitfield */
  {
    /* 0x0028 */ unsigned long DeviceType : 4; /* bit position: 0 */
    /* 0x0028 */ unsigned long DeviceFlags : 4; /* bit position: 4 */
    /* 0x0028 */ unsigned long Reserved : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x002c */ unsigned long CreateTime;
  /* 0x0030 */ unsigned long SequenceNumber;
  /* 0x0034 */ long __PADDING__[1];
} PFFI_FILEINFO_VOLUME_INFO, *PPFFI_FILEINFO_VOLUME_INFO; /* size: 0x0038 */

typedef struct _PFFI_FILE_ACCESS
{
  /* 0x0000 */ unsigned __int64 FileOffset;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long AccessType;
  /* 0x0010 */ unsigned __int64 FileKey;
  /* 0x0018 */ unsigned __int64 ProcessKey;
} PFFI_FILE_ACCESS, *PPFFI_FILE_ACCESS; /* size: 0x0020 */

typedef struct _PFFI_FILE_CREATE
{
  /* 0x0000 */ unsigned long SequenceNumber;
  /* 0x0004 */ unsigned long FileAttributes;
  /* 0x0008 */ unsigned __int64 FileKey;
  /* 0x0010 */ unsigned __int64 CreationTime;
  /* 0x0018 */ unsigned __int64 LastModifiedTime;
  /* 0x0020 */ unsigned __int64 LastAccessedTime;
  /* 0x0028 */ unsigned __int64 CurrentTime;
  /* 0x0030 */ unsigned __int64 EndOfFile;
  /* 0x0038 */ unsigned __int64 AllocationSize;
} PFFI_FILE_CREATE, *PPFFI_FILE_CREATE; /* size: 0x0040 */

typedef struct _PFS_LOG_ENTRY_EXTENDED
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long PfLogEntryType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned long SpannedEntries : 10; /* bit position: 2 */
  }; /* bitfield */
} PFS_LOG_ENTRY_EXTENDED, *PPFS_LOG_ENTRY_EXTENDED; /* size: 0x0004 */

typedef struct _PFS_LOG_ENTRY_FILE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 PfLogEntryType : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 HardFault : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned __int64 Image : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned __int64 FileOffset : 60; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0008 */ unsigned short FileInfoIndex;
  /* 0x000a */ unsigned short ProcessIndex;
  /* 0x000c */ long __PADDING__[1];
} PFS_LOG_ENTRY_FILE, *PPFS_LOG_ENTRY_FILE; /* size: 0x0010 */

typedef struct _PFS_LOG_ENTRY
{
  union
  {
    /* 0x0000 */ struct _PFS_LOG_ENTRY_EXTENDED Extended;
    /* 0x0000 */ struct _PFS_LOG_ENTRY_EVENT EventInfo;
    /* 0x0000 */ struct _PFS_LOG_ENTRY_FILE FilePage;
    /* 0x0000 */ struct _PFS_LOG_ENTRY_PRIVATE PrivatePage;
    /* 0x0000 */ struct _PFS_LOG_ENTRY_EXTPAGE ExtPage;
  }; /* size: 0x0010 */
} PFS_LOG_ENTRY, *PPFS_LOG_ENTRY; /* size: 0x0010 */

typedef struct _PF_EVENT_FILE_TRUNCATE
{
  union
  {
    /* 0x0000 */ unsigned long SequenceNumber;
    /* 0x0000 */ unsigned short FileIndex;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1353;
  /* 0x0008 */ unsigned __int64 FileKey;
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned __int64 HasFileInfo : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned __int64 TruncateType : 2; /* bit position: 1 */
    /* 0x0010 */ unsigned __int64 Spare : 9; /* bit position: 3 */
    /* 0x0010 */ unsigned __int64 FilePageCount : 52; /* bit position: 12 */
  }; /* bitfield */
} PF_EVENT_FILE_TRUNCATE, *PPF_EVENT_FILE_TRUNCATE; /* size: 0x0018 */

typedef struct _PFNL_PFBACKED_INFO
{
  /* 0x0000 */ unsigned __int64 Key;
  /* 0x0008 */ void* ProtoPteStart;
  /* 0x0010 */ void* ProtoPteEnd;
  union
  {
    struct
    {
      /* 0x0018 */ unsigned short NameLength;
      /* 0x001a */ wchar_t SectionName[1];
    }; /* size: 0x0004 */
    /* 0x0018 */ struct _PFSC_ENTRY* NameEntry;
  }; /* size: 0x0008 */
} PFNL_PFBACKED_INFO, *PPFNL_PFBACKED_INFO; /* size: 0x0020 */

typedef struct _PFS_TRACE_HEADER
{
  /* 0x0000 */ unsigned long LogEntryOffset;
  /* 0x0004 */ unsigned long LogEntryCount;
  /* 0x0008 */ unsigned long EntryInfoOffset;
  /* 0x000c */ unsigned short EntryInfoCount;
  /* 0x000e */ unsigned short VolumeCount;
  /* 0x0010 */ unsigned long ExtraDataOffset;
  /* 0x0014 */ unsigned long ExtraDataSize;
} PFS_TRACE_HEADER, *PPFS_TRACE_HEADER; /* size: 0x0018 */

typedef struct _PFNL_VOLUME_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ unsigned __int64 Key;
  /* 0x0010 */ unsigned long SerialNumber;
  struct /* bitfield */
  {
    /* 0x0014 */ unsigned long DeviceType : 4; /* bit position: 0 */
    /* 0x0014 */ unsigned long DeviceFlags : 4; /* bit position: 4 */
    /* 0x0014 */ unsigned long Reserved : 24; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0018 */ struct _OBJECT_NAME_INFORMATION Path;
  /* 0x0028 */ wchar_t VolumePath[1];
  /* 0x002a */ char __PADDING__[6];
} PFNL_VOLUME_INFO, *PPFNL_VOLUME_INFO; /* size: 0x0030 */

typedef struct _PFNL_LOG_ENTRY
{
  /* 0x0000 */ struct _PFNL_ENTRY_HEADER Header;
  /* 0x000c */ long Padding_1354;
  union
  {
    /* 0x0010 */ struct _PFNL_FILE_INFO FileInfo;
    /* 0x0010 */ struct _PFNL_PFBACKED_INFO PfBackedInfo;
    /* 0x0010 */ struct _PFNL_VOLUME_INFO VolumeInfo;
    struct
    {
      /* 0x0010 */ struct _PFNL_DELETE_ENTRY_INFO DeleteEntryInfo;
      /* 0x0020 */ long __PADDING__[8];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} PFNL_LOG_ENTRY, *PPFNL_LOG_ENTRY; /* size: 0x0040 */

typedef struct _PF_TRACE_INFO
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short TraceOffset;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 LastRobustionTicks;
} PF_TRACE_INFO, *PPF_TRACE_INFO; /* size: 0x0010 */

struct SiFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned char Return;
  /* 0x0021 */ unsigned char Fill;
  /* 0x0022 */ char Padding_1355[14];
  /* 0x0030 */ unsigned __int64 SavedRbx;
  /* 0x0038 */ unsigned __int64 SavedRdi;
  /* 0x0040 */ unsigned __int64 SavedR12;
}; /* size: 0x0048 */

typedef struct _NBQUEUE_NODE
{
  /* 0x0000 */ struct _SLIST_ENTRY SListEntry;
  /* 0x0010 */ union _NBQUEUE_POINTER Next;
  /* 0x0018 */ unsigned __int64 Value;
} NBQUEUE_NODE, *PNBQUEUE_NODE; /* size: 0x0020 */

typedef struct _HEAP_VIRTUAL_ALLOC_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ struct _HEAP_ENTRY_EXTRA ExtraStuff;
  /* 0x0020 */ unsigned __int64 CommitSize;
  /* 0x0028 */ unsigned __int64 ReserveSize;
  /* 0x0030 */ struct _HEAP_ENTRY BusyBlock;
} HEAP_VIRTUAL_ALLOC_ENTRY, *PHEAP_VIRTUAL_ALLOC_ENTRY; /* size: 0x0040 */

typedef struct _HEAP_TUNING_PARAMETERS
{
  /* 0x0000 */ unsigned long CommittThresholdShift;
  /* 0x0004 */ long Padding_1356;
  /* 0x0008 */ unsigned __int64 MaxPreCommittThreshold;
} HEAP_TUNING_PARAMETERS, *PHEAP_TUNING_PARAMETERS; /* size: 0x0010 */

typedef struct _DEBUG_EVENT
{
  /* 0x0000 */ struct _LIST_ENTRY EventList;
  /* 0x0010 */ struct _KEVENT ContinueEvent;
  /* 0x0028 */ struct _CLIENT_ID ClientId;
  /* 0x0038 */ struct _EPROCESS* Process;
  /* 0x0040 */ struct _ETHREAD* Thread;
  /* 0x0048 */ long Status;
  /* 0x004c */ unsigned long Flags;
  /* 0x0050 */ struct _ETHREAD* BackoutThread;
  /* 0x0058 */ struct _DBGKM_APIMSG ApiMsg;
} DEBUG_EVENT, *PDEBUG_EVENT; /* size: 0x0168 */

typedef struct _HEAP_LOCK
{
  union
  {
    union
    {
      /* 0x0000 */ struct _RTL_CRITICAL_SECTION CriticalSection;
      /* 0x0000 */ struct _ERESOURCE Resource;
    }; /* size: 0x0068 */
  } /* size: 0x0068 */ Lock;
} HEAP_LOCK, *PHEAP_LOCK; /* size: 0x0068 */

typedef struct _HEAP_SEGMENT
{
  /* 0x0000 */ struct _HEAP_ENTRY Entry;
  /* 0x0010 */ unsigned long SegmentSignature;
  /* 0x0014 */ unsigned long SegmentFlags;
  /* 0x0018 */ struct _LIST_ENTRY SegmentListEntry;
  /* 0x0028 */ struct _HEAP* Heap;
  /* 0x0030 */ void* BaseAddress;
  /* 0x0038 */ unsigned long NumberOfPages;
  /* 0x003c */ long Padding_1357;
  /* 0x0040 */ struct _HEAP_ENTRY* FirstEntry;
  /* 0x0048 */ struct _HEAP_ENTRY* LastValidEntry;
  /* 0x0050 */ unsigned long NumberOfUnCommittedPages;
  /* 0x0054 */ unsigned long NumberOfUnCommittedRanges;
  /* 0x0058 */ unsigned short SegmentAllocatorBackTraceIndex;
  /* 0x005a */ unsigned short Reserved;
  /* 0x005c */ long Padding_1358;
  /* 0x0060 */ struct _LIST_ENTRY UCRSegmentList;
} HEAP_SEGMENT, *PHEAP_SEGMENT; /* size: 0x0070 */

typedef struct _HEAP_COUNTERS
{
  /* 0x0000 */ unsigned __int64 TotalMemoryReserved;
  /* 0x0008 */ unsigned __int64 TotalMemoryCommitted;
  /* 0x0010 */ unsigned __int64 TotalMemoryLargeUCR;
  /* 0x0018 */ unsigned __int64 TotalSizeInVirtualBlocks;
  /* 0x0020 */ unsigned long TotalSegments;
  /* 0x0024 */ unsigned long TotalUCRs;
  /* 0x0028 */ unsigned long CommittOps;
  /* 0x002c */ unsigned long DeCommitOps;
  /* 0x0030 */ unsigned long LockAcquires;
  /* 0x0034 */ unsigned long LockCollisions;
  /* 0x0038 */ unsigned long CommitRate;
  /* 0x003c */ unsigned long DecommittRate;
  /* 0x0040 */ unsigned long CommitFailures;
  /* 0x0044 */ unsigned long InBlockCommitFailures;
  /* 0x0048 */ unsigned long CompactHeapCalls;
  /* 0x004c */ unsigned long CompactedUCRs;
  /* 0x0050 */ unsigned long AllocAndFreeOps;
  /* 0x0054 */ unsigned long InBlockDeccommits;
  /* 0x0058 */ unsigned __int64 InBlockDeccomitSize;
  /* 0x0060 */ unsigned __int64 HighWatermarkSize;
  /* 0x0068 */ unsigned __int64 LastPolledSize;
} HEAP_COUNTERS, *PHEAP_COUNTERS; /* size: 0x0070 */

typedef struct _HEAP
{
  /* 0x0000 */ struct _HEAP_ENTRY Entry;
  /* 0x0010 */ unsigned long SegmentSignature;
  /* 0x0014 */ unsigned long SegmentFlags;
  /* 0x0018 */ struct _LIST_ENTRY SegmentListEntry;
  /* 0x0028 */ struct _HEAP* Heap;
  /* 0x0030 */ void* BaseAddress;
  /* 0x0038 */ unsigned long NumberOfPages;
  /* 0x003c */ long Padding_1359;
  /* 0x0040 */ struct _HEAP_ENTRY* FirstEntry;
  /* 0x0048 */ struct _HEAP_ENTRY* LastValidEntry;
  /* 0x0050 */ unsigned long NumberOfUnCommittedPages;
  /* 0x0054 */ unsigned long NumberOfUnCommittedRanges;
  /* 0x0058 */ unsigned short SegmentAllocatorBackTraceIndex;
  /* 0x005a */ unsigned short Reserved;
  /* 0x005c */ long Padding_1360;
  /* 0x0060 */ struct _LIST_ENTRY UCRSegmentList;
  /* 0x0070 */ unsigned long Flags;
  /* 0x0074 */ unsigned long ForceFlags;
  /* 0x0078 */ unsigned long CompatibilityFlags;
  /* 0x007c */ unsigned long EncodeFlagMask;
  /* 0x0080 */ struct _HEAP_ENTRY Encoding;
  /* 0x0090 */ unsigned __int64 PointerKey;
  /* 0x0098 */ unsigned long Interceptor;
  /* 0x009c */ unsigned long VirtualMemoryThreshold;
  /* 0x00a0 */ unsigned long Signature;
  /* 0x00a4 */ long Padding_1361;
  /* 0x00a8 */ unsigned __int64 SegmentReserve;
  /* 0x00b0 */ unsigned __int64 SegmentCommit;
  /* 0x00b8 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x00c0 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x00c8 */ unsigned __int64 TotalFreeSize;
  /* 0x00d0 */ unsigned __int64 MaximumAllocationSize;
  /* 0x00d8 */ unsigned short ProcessHeapsListIndex;
  /* 0x00da */ unsigned short HeaderValidateLength;
  /* 0x00dc */ long Padding_1362;
  /* 0x00e0 */ void* HeaderValidateCopy;
  /* 0x00e8 */ unsigned short NextAvailableTagIndex;
  /* 0x00ea */ unsigned short MaximumTagIndex;
  /* 0x00ec */ long Padding_1363;
  /* 0x00f0 */ struct _HEAP_TAG_ENTRY* TagEntries;
  /* 0x00f8 */ struct _LIST_ENTRY UCRList;
  /* 0x0108 */ unsigned __int64 AlignRound;
  /* 0x0110 */ unsigned __int64 AlignMask;
  /* 0x0118 */ struct _LIST_ENTRY VirtualAllocdBlocks;
  /* 0x0128 */ struct _LIST_ENTRY SegmentList;
  /* 0x0138 */ unsigned short AllocatorBackTraceIndex;
  /* 0x013a */ char Padding_1364[2];
  /* 0x013c */ unsigned long NonDedicatedListLength;
  /* 0x0140 */ void* BlocksIndex;
  /* 0x0148 */ void* UCRIndex;
  /* 0x0150 */ struct _HEAP_PSEUDO_TAG_ENTRY* PseudoTagEntries;
  /* 0x0158 */ struct _LIST_ENTRY FreeLists;
  /* 0x0168 */ struct _HEAP_LOCK* LockVariable;
  /* 0x0170 */ void* CommitRoutine /* function */;
  /* 0x0178 */ void* FrontEndHeap;
  /* 0x0180 */ unsigned short FrontHeapLockCount;
  /* 0x0182 */ unsigned char FrontEndHeapType;
  /* 0x0183 */ char Padding_1365[5];
  /* 0x0188 */ struct _HEAP_COUNTERS Counters;
  /* 0x01f8 */ struct _HEAP_TUNING_PARAMETERS TuningParameters;
} HEAP, *PHEAP; /* size: 0x0208 */

typedef struct _HEAP_TAG_ENTRY
{
  /* 0x0000 */ unsigned long Allocs;
  /* 0x0004 */ unsigned long Frees;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned short TagIndex;
  /* 0x0012 */ unsigned short CreatorBackTraceIndex;
  /* 0x0014 */ wchar_t TagName[24];
  /* 0x0044 */ long __PADDING__[1];
} HEAP_TAG_ENTRY, *PHEAP_TAG_ENTRY; /* size: 0x0048 */

typedef struct _HEAP_FREE_ENTRY
{
  union
  {
    struct
    {
      /* 0x0000 */ void* PreviousBlockPrivateData;
      union
      {
        struct
        {
          /* 0x0008 */ unsigned short Size;
          /* 0x000a */ unsigned char Flags;
          /* 0x000b */ unsigned char SmallTagIndex;
          /* 0x000c */ unsigned short PreviousSize;
          union
          {
            /* 0x000e */ unsigned char SegmentOffset;
            struct
            {
              /* 0x000e */ unsigned char LFHFlags;
              /* 0x000f */ unsigned char UnusedBytes;
            }; /* size: 0x0002 */
          }; /* size: 0x0002 */
        }; /* size: 0x0008 */
        /* 0x0008 */ unsigned __int64 CompactHeader;
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ void* Reserved;
      union
      {
        struct
        {
          /* 0x0008 */ unsigned short FunctionIndex;
          /* 0x000a */ unsigned short ContextValue;
        }; /* size: 0x0004 */
        struct
        {
          /* 0x0008 */ unsigned long InterceptorValue;
          /* 0x000c */ unsigned short UnusedBytesLength;
          /* 0x000e */ unsigned char EntryOffset;
          /* 0x000f */ unsigned char ExtendedBlockSignature;
        }; /* size: 0x0008 */
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ void* ReservedForAlignment;
      union
      {
        struct
        {
          /* 0x0008 */ unsigned long Code1;
          /* 0x000c */ unsigned short Code2;
          /* 0x000e */ unsigned char Code3;
          /* 0x000f */ unsigned char Code4;
        }; /* size: 0x0008 */
        /* 0x0008 */ unsigned __int64 AgregateCode;
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0010 */ struct _LIST_ENTRY FreeList;
} HEAP_FREE_ENTRY, *PHEAP_FREE_ENTRY; /* size: 0x0020 */

typedef struct _HEAP_UCR_DESCRIPTOR
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _LIST_ENTRY SegmentEntry;
  /* 0x0020 */ void* Address;
  /* 0x0028 */ unsigned __int64 Size;
} HEAP_UCR_DESCRIPTOR, *PHEAP_UCR_DESCRIPTOR; /* size: 0x0030 */

typedef struct _HEAP_LIST_LOOKUP
{
  /* 0x0000 */ struct _HEAP_LIST_LOOKUP* ExtendedLookup;
  /* 0x0008 */ unsigned long ArraySize;
  /* 0x000c */ unsigned long ExtraItem;
  /* 0x0010 */ unsigned long ItemCount;
  /* 0x0014 */ unsigned long OutOfRangeItems;
  /* 0x0018 */ unsigned long BaseIndex;
  /* 0x001c */ long Padding_1366;
  /* 0x0020 */ struct _LIST_ENTRY* ListHead;
  /* 0x0028 */ unsigned long* ListsInUseUlong;
  /* 0x0030 */ struct _LIST_ENTRY** ListHints;
} HEAP_LIST_LOOKUP, *PHEAP_LIST_LOOKUP; /* size: 0x0038 */

typedef struct _ETW_RUNDOWN_CONTEXT
{
  /* 0x0000 */ struct _PERFINFO_GROUPMASK* GroupMasks;
  /* 0x0008 */ unsigned long LoggerId;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned char Start;
  /* 0x0011 */ unsigned char LogUserData;
  /* 0x0012 */ unsigned char ThreadStacks;
  /* 0x0013 */ unsigned char IdleLoop;
  /* 0x0014 */ long __PADDING__[1];
} ETW_RUNDOWN_CONTEXT, *PETW_RUNDOWN_CONTEXT; /* size: 0x0018 */

struct IRPLOG_HEAD
{
  /* 0x0000 */ unsigned long Locked;
  /* 0x0004 */ long Padding_1367;
  /* 0x0008 */ struct _LIST_ENTRY ListHead;
}; /* size: 0x0018 */

struct IRPLOG_DATA
{
  /* 0x0000 */ struct _DEVICE_OBJECT* DeviceObject;
  /* 0x0008 */ struct _LIST_ENTRY HashLink;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long DeviceType;
  /* 0x0020 */ unsigned long MaximumElementCount;
  /* 0x0024 */ unsigned long Head;
  /* 0x0028 */ struct _IRPLOG_SNAPSHOT SnapshotArray[1];
}; /* size: 0x0050 */

typedef struct _PF_ROBUST_PROCESS_ENTRY
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long ImagePathHash;
      /* 0x0004 */ unsigned long Pid;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} PF_ROBUST_PROCESS_ENTRY, *PPF_ROBUST_PROCESS_ENTRY; /* size: 0x0008 */

typedef struct _PF_ROBUSTNESS_CONTROL
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Command;
  /* 0x0004 */ unsigned long DeprioProcessCount;
  /* 0x0008 */ unsigned long ExemptProcessCount;
  /* 0x000c */ unsigned long DeprioFileCount;
  /* 0x0010 */ unsigned long ExemptFileCount;
  /* 0x0014 */ long Padding_1368;
  /* 0x0018 */ struct _PF_ROBUST_PROCESS_ENTRY ProcessEntries[1];
  /* 0x0020 */ struct _PF_ROBUST_FILE_ENTRY FileEntries[1];
} PF_ROBUSTNESS_CONTROL, *PPF_ROBUSTNESS_CONTROL; /* size: 0x0028 */

typedef struct _PF_EVENT_ROBUST_INFO
{
  /* 0x0000 */ unsigned __int64 FileKey;
  union
  {
    /* 0x0008 */ unsigned long SequenceNumber;
    /* 0x0008 */ unsigned short FileInfoIndex;
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long ImagePathHash;
  /* 0x0010 */ unsigned long MaxPageOffset;
  /* 0x0014 */ long __PADDING__[1];
} PF_EVENT_ROBUST_INFO, *PPF_EVENT_ROBUST_INFO; /* size: 0x0018 */

typedef struct _MI_QUEUED_DEADSTACK_WORKITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ volatile long Active;
  /* 0x0024 */ long __PADDING__[1];
} MI_QUEUED_DEADSTACK_WORKITEM, *PMI_QUEUED_DEADSTACK_WORKITEM; /* size: 0x0028 */

typedef struct _SECTION_OBJECT
{
  /* 0x0000 */ void* StartingVa;
  /* 0x0008 */ void* EndingVa;
  /* 0x0010 */ void* Parent;
  /* 0x0018 */ void* LeftChild;
  /* 0x0020 */ void* RightChild;
  /* 0x0028 */ struct _SEGMENT_OBJECT* Segment;
} SECTION_OBJECT, *PSECTION_OBJECT; /* size: 0x0030 */

typedef struct _HEAP_FAILURE_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long StructureSize;
  /* 0x0008 */ enum _HEAP_FAILURE_TYPE FailureType;
  /* 0x000c */ long Padding_1369;
  /* 0x0010 */ void* HeapAddress;
  /* 0x0018 */ void* Address;
  /* 0x0020 */ void* Param1;
  /* 0x0028 */ void* Param2;
  /* 0x0030 */ void* Param3;
  /* 0x0038 */ struct _HEAP_ENTRY* PreviousBlock;
  /* 0x0040 */ struct _HEAP_ENTRY* NextBlock;
  /* 0x0048 */ struct _HEAP_ENTRY ExpectedEncodedEntry;
  /* 0x0058 */ struct _HEAP_ENTRY ExpectedDecodedEntry;
  /* 0x0068 */ void* StackTrace[32];
} HEAP_FAILURE_INFORMATION, *PHEAP_FAILURE_INFORMATION; /* size: 0x0168 */

typedef struct _HEAP_STACK_TRACE_INLINE_HEADER
{
  /* 0x0000 */ unsigned __int64 StackSize;
  /* 0x0008 */ unsigned __int64 Checksum;
} HEAP_STACK_TRACE_INLINE_HEADER, *PHEAP_STACK_TRACE_INLINE_HEADER; /* size: 0x0010 */

typedef struct _MI_LARGE_VA_RANGES
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ void* EndVirtualAddress;
} MI_LARGE_VA_RANGES, *PMI_LARGE_VA_RANGES; /* size: 0x0010 */

struct CultureDataType
{
  /* 0x0000 */ unsigned short langID;
  /* 0x0002 */ char Padding_1370[6];
  /* 0x0008 */ wchar_t* cultureName;
  /* 0x0010 */ int parentItem;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _VF_CTX_XSAVE_DATA
{
  /* 0x0000 */ unsigned long Allocated;
  /* 0x0004 */ long InUse;
  /* 0x0008 */ struct _XSTATE_CONTEXT Context1;
  /* 0x0028 */ struct _XSTATE_CONTEXT Context2;
} VF_CTX_XSAVE_DATA, *PVF_CTX_XSAVE_DATA; /* size: 0x0048 */

typedef struct _CACHED_BITMAP
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ wchar_t Character;
  /* 0x0012 */ unsigned long PointSize;
  /* 0x0016 */ unsigned long FontIndex;
  /* 0x001a */ unsigned long AdvanceWidth;
  /* 0x001e */ unsigned long TopRow;
  /* 0x0022 */ unsigned long HorizontalFactor;
  /* 0x0026 */ unsigned long VerticalFactor;
  /* 0x002a */ struct _GRAPHICS_RECTANGLE* Bitmap;
} CACHED_BITMAP, *PCACHED_BITMAP; /* size: 0x0032 */

typedef struct _GLYPH_SEGMENT
{
  /* 0x0000 */ struct _GLYPH_POINT* PointA;
  /* 0x0008 */ struct _GLYPH_POINT* PointB;
  /* 0x0010 */ struct _GLYPH_POINT* PointC;
  /* 0x0018 */ unsigned char Type;
} GLYPH_SEGMENT, *PGLYPH_SEGMENT; /* size: 0x0019 */

typedef struct _OS2_TABLE
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ short AverageCharacterWidth;
  /* 0x0004 */ unsigned short WeightClass;
  /* 0x0006 */ unsigned short WidthClass;
  /* 0x0008 */ unsigned short FsType;
  /* 0x000a */ short YSubscriptXSize;
  /* 0x000c */ short YSubscriptYSize;
  /* 0x000e */ short YSubscriptXOffset;
  /* 0x0010 */ short YSubscriptYOffset;
  /* 0x0012 */ short YSuperscriptXSize;
  /* 0x0014 */ short YSuperscriptYSize;
  /* 0x0016 */ short YSuperscriptXOffset;
  /* 0x0018 */ short YSuperscriptYOffset;
  /* 0x001a */ short YStrikeoutSize;
  /* 0x001c */ short YStrikeoutPosition;
  /* 0x001e */ short FamilyClass;
  /* 0x0020 */ unsigned char Panose[10];
  /* 0x002a */ unsigned long UnicodeRange1;
  /* 0x002e */ unsigned long UnicodeRange2;
  /* 0x0032 */ unsigned long UnicodeRange3;
  /* 0x0036 */ unsigned long UnicodeRange4;
  /* 0x003a */ char AchVendID[4];
  /* 0x003e */ unsigned short FsSelection;
  /* 0x0040 */ unsigned short FirstCharacterIndex;
  /* 0x0042 */ unsigned short LastCharacterIndex;
  /* 0x0044 */ short TypoAscender;
  /* 0x0046 */ short TypoDescender;
  /* 0x0048 */ short TypoLineGap;
  /* 0x004a */ unsigned short WinAscent;
  /* 0x004c */ unsigned short WinDescent;
  /* 0x004e */ unsigned long CodePageRange1;
  /* 0x0052 */ unsigned long CodePageRange2;
  /* 0x0056 */ short XHeight;
  /* 0x0058 */ short CapHeight;
  /* 0x005a */ unsigned short DefaultChar;
  /* 0x005c */ unsigned short BreakChar;
  /* 0x005e */ unsigned short MaxContext;
} OS2_TABLE, *POS2_TABLE; /* size: 0x0060 */

typedef struct _SI_WBCL_PACKAGE
{
  /* 0x0000 */ unsigned int WbclByteCount;
  /* 0x0004 */ unsigned char Wbcl[1];
  /* 0x0005 */ char __PADDING__[3];
} SI_WBCL_PACKAGE, *PSI_WBCL_PACKAGE; /* size: 0x0008 */

typedef struct _HEAD_TABLE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long FontRevision;
  /* 0x0008 */ unsigned long CheckSumAdjustment;
  /* 0x000c */ unsigned long MagicNumber;
  /* 0x0010 */ unsigned short Flags;
  /* 0x0012 */ unsigned short UnitsPerEm;
  /* 0x0014 */ unsigned __int64 DateCreated;
  /* 0x001c */ unsigned __int64 DateModified;
  /* 0x0024 */ short XMin;
  /* 0x0026 */ short YMin;
  /* 0x0028 */ short XMax;
  /* 0x002a */ short YMax;
  /* 0x002c */ unsigned short MacStyle;
  /* 0x002e */ unsigned short LowestRecPPEM;
  /* 0x0030 */ short FontDirectionHint;
  /* 0x0032 */ short IndexToLocFormat;
  /* 0x0034 */ short GlyphDataFormat;
} HEAD_TABLE, *PHEAD_TABLE; /* size: 0x0036 */

typedef struct _GLYF_TABLE
{
  /* 0x0000 */ short NumberOfContours;
  /* 0x0002 */ short XMin;
  /* 0x0004 */ short YMin;
  /* 0x0006 */ short XMax;
  /* 0x0008 */ short YMax;
} GLYF_TABLE, *PGLYF_TABLE; /* size: 0x000a */

typedef struct _HHEA_TABLE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ short Ascender;
  /* 0x0006 */ short Descender;
  /* 0x0008 */ short LineGap;
  /* 0x000a */ unsigned short AdvanceWidthMax;
  /* 0x000c */ short MinLeftSideBearing;
  /* 0x000e */ short MinRightSideBearing;
  /* 0x0010 */ short XMaxExtent;
  /* 0x0012 */ short CaretSlopeRise;
  /* 0x0014 */ short CaretSlopeRun;
  /* 0x0016 */ short CaretOffset;
  /* 0x0018 */ short Reserved[4];
  /* 0x0020 */ short MetricDataFormat;
  /* 0x0022 */ short NumberOfHMetrics;
} HHEA_TABLE, *PHHEA_TABLE; /* size: 0x0024 */

typedef struct _COMPOSITE_GLYPH_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _GLYPH_DATA* GlyphData;
  /* 0x0018 */ unsigned short Flags;
  /* 0x001a */ unsigned short GlyphIndex;
  union
  {
    struct
    {
      /* 0x001c */ short First;
      /* 0x001e */ short Second;
    } /* size: 0x0004 */ WordArguments;
    struct
    {
      /* 0x001c */ char First;
      /* 0x001d */ char Second;
    } /* size: 0x0002 */ ByteArguments;
  }; /* size: 0x0004 */
  union
  {
    struct
    {
      /* 0x0020 */ short Scale;
    } /* size: 0x0002 */ BaseScale;
    struct
    {
      /* 0x0020 */ short XScale;
      /* 0x0022 */ short YScale;
    } /* size: 0x0004 */ XYScale;
    struct
    {
      /* 0x0020 */ short XScale;
      /* 0x0022 */ short Scale01;
      /* 0x0024 */ short Scale10;
      /* 0x0026 */ long YScale;
    } /* size: 0x000a */ TwoScale;
  }; /* size: 0x000a */
} COMPOSITE_GLYPH_DATA, *PCOMPOSITE_GLYPH_DATA; /* size: 0x002a */

typedef struct _PFSN_BOOT_TRACE_TIMER
{
  /* 0x0000 */ enum _PF_PREFETCH_TRACE_END_REASON Reason;
  /* 0x0004 */ long Padding_1371;
  /* 0x0008 */ struct _KTIMER Timer;
  /* 0x0048 */ struct _KDPC Dpc;
} PFSN_BOOT_TRACE_TIMER, *PPFSN_BOOT_TRACE_TIMER; /* size: 0x0088 */

typedef struct _DESCRIPTION_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned char Revision;
  /* 0x0009 */ unsigned char Checksum;
  /* 0x000a */ char OEMID[6];
  /* 0x0010 */ char OEMTableID[8];
  /* 0x0018 */ unsigned long OEMRevision;
  /* 0x001c */ char CreatorID[4];
  /* 0x0020 */ unsigned long CreatorRev;
} DESCRIPTION_HEADER, *PDESCRIPTION_HEADER; /* size: 0x0024 */

typedef struct _RSDT_32
{
  /* 0x0000 */ struct _DESCRIPTION_HEADER Header;
  /* 0x0024 */ unsigned long Tables[1];
} RSDT_32, *PRSDT_32; /* size: 0x0028 */

typedef struct _MI_PAGE_ACCESS_ENTRY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 FilePointerIndex : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 HardFault : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Spare0 : 6; /* bit position: 10 */
    /* 0x0000 */ __int64 PointerPte : 48; /* bit position: 16 */
  }; /* bitfield */
} MI_PAGE_ACCESS_ENTRY, *PMI_PAGE_ACCESS_ENTRY; /* size: 0x0008 */

typedef struct _FADT
{
  /* 0x0000 */ struct _DESCRIPTION_HEADER Header;
  /* 0x0024 */ unsigned long facs;
  /* 0x0028 */ unsigned long dsdt;
  /* 0x002c */ unsigned char int_model;
  /* 0x002d */ unsigned char pm_profile;
  /* 0x002e */ unsigned short sci_int_vector;
  /* 0x0030 */ unsigned long smi_cmd_io_port;
  /* 0x0034 */ unsigned char acpi_on_value;
  /* 0x0035 */ unsigned char acpi_off_value;
  /* 0x0036 */ unsigned char s4bios_req;
  /* 0x0037 */ unsigned char pstate_control;
  /* 0x0038 */ unsigned long pm1a_evt_blk_io_port;
  /* 0x003c */ unsigned long pm1b_evt_blk_io_port;
  /* 0x0040 */ unsigned long pm1a_ctrl_blk_io_port;
  /* 0x0044 */ unsigned long pm1b_ctrl_blk_io_port;
  /* 0x0048 */ unsigned long pm2_ctrl_blk_io_port;
  /* 0x004c */ unsigned long pm_tmr_blk_io_port;
  /* 0x0050 */ unsigned long gp0_blk_io_port;
  /* 0x0054 */ unsigned long gp1_blk_io_port;
  /* 0x0058 */ unsigned char pm1_evt_len;
  /* 0x0059 */ unsigned char pm1_ctrl_len;
  /* 0x005a */ unsigned char pm2_ctrl_len;
  /* 0x005b */ unsigned char pm_tmr_len;
  /* 0x005c */ unsigned char gp0_blk_len;
  /* 0x005d */ unsigned char gp1_blk_len;
  /* 0x005e */ unsigned char gp1_base;
  /* 0x005f */ unsigned char cstate_control;
  /* 0x0060 */ unsigned short lvl2_latency;
  /* 0x0062 */ unsigned short lvl3_latency;
  /* 0x0064 */ unsigned short flush_size;
  /* 0x0066 */ unsigned short flush_stride;
  /* 0x0068 */ unsigned char duty_offset;
  /* 0x0069 */ unsigned char duty_width;
  /* 0x006a */ unsigned char day_alarm_index;
  /* 0x006b */ unsigned char month_alarm_index;
  /* 0x006c */ unsigned char century_alarm_index;
  /* 0x006d */ unsigned short boot_arch;
  /* 0x006f */ unsigned char reserved3[1];
  /* 0x0070 */ unsigned long flags;
  /* 0x0074 */ struct _GEN_ADDR reset_reg;
  /* 0x0080 */ unsigned char reset_val;
  /* 0x0081 */ unsigned char reserved4[3];
  /* 0x0084 */ union _LARGE_INTEGER x_firmware_ctrl;
  /* 0x008c */ union _LARGE_INTEGER x_dsdt;
  /* 0x0094 */ struct _GEN_ADDR x_pm1a_evt_blk;
  /* 0x00a0 */ struct _GEN_ADDR x_pm1b_evt_blk;
  /* 0x00ac */ struct _GEN_ADDR x_pm1a_ctrl_blk;
  /* 0x00b8 */ struct _GEN_ADDR x_pm1b_ctrl_blk;
  /* 0x00c4 */ struct _GEN_ADDR x_pm2_ctrl_blk;
  /* 0x00d0 */ struct _GEN_ADDR x_pm_tmr_blk;
  /* 0x00dc */ struct _GEN_ADDR x_gp0_blk;
  /* 0x00e8 */ struct _GEN_ADDR x_gp1_blk;
} FADT, *PFADT; /* size: 0x00f4 */

typedef struct _LOCAL_VHD_BOOT_INFORMATION
{
  /* 0x0000 */ unsigned char OsDiskIsVhd;
  /* 0x0001 */ char Padding_1372[3];
  /* 0x0004 */ unsigned long OsVhdFilePathOffset;
  /* 0x0008 */ wchar_t OsVhdParentVolume[1];
  /* 0x000a */ char Padding_1373[2];
  /* 0x000c */ wchar_t OsVhdFilePath[1];
  /* 0x000e */ char __PADDING__[2];
} LOCAL_VHD_BOOT_INFORMATION, *PLOCAL_VHD_BOOT_INFORMATION; /* size: 0x0010 */

typedef struct _VI_DEADLOCK_RESOURCE
{
  /* 0x0000 */ enum _VI_DEADLOCK_RESOURCE_TYPE Type;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long NodeCount : 16; /* bit position: 0 */
    /* 0x0004 */ unsigned long RecursionCount : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0008 */ void* ResourceAddress;
  /* 0x0010 */ struct _VI_DEADLOCK_THREAD* ThreadOwner;
  /* 0x0018 */ struct _LIST_ENTRY ResourceList;
  union
  {
    /* 0x0028 */ struct _LIST_ENTRY HashChainList;
    /* 0x0028 */ struct _LIST_ENTRY FreeListEntry;
  }; /* size: 0x0010 */
  /* 0x0038 */ void* StackTrace[8];
  /* 0x0078 */ void* LastAcquireTrace[8];
  /* 0x00b8 */ void* LastReleaseTrace[8];
} VI_DEADLOCK_RESOURCE, *PVI_DEADLOCK_RESOURCE; /* size: 0x00f8 */

typedef struct _PREFETCHER_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Magic;
  /* 0x0008 */ enum _PREFETCHER_INFORMATION_CLASS PrefetcherInformationClass;
  /* 0x000c */ long Padding_1374;
  /* 0x0010 */ void* PrefetcherInformation;
  /* 0x0018 */ unsigned long PrefetcherInformationLength;
  /* 0x001c */ long __PADDING__[1];
} PREFETCHER_INFORMATION, *PPREFETCHER_INFORMATION; /* size: 0x0020 */

typedef struct _PF_METADATA_RECORD
{
  /* 0x0000 */ unsigned long VolumeNameOffset;
  /* 0x0004 */ unsigned long VolumeNameLength;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ unsigned long SerialNumber;
  /* 0x0014 */ unsigned long FilePrefetchInfoOffset;
  /* 0x0018 */ unsigned long FilePrefetchInfoSize;
  /* 0x001c */ unsigned long DirectoryPathsOffset;
  /* 0x0020 */ unsigned long NumDirectories;
  /* 0x0024 */ unsigned long FileMetadataPrefetchLength[8];
  /* 0x0044 */ unsigned long DirectoryMetadataPrefetchLength[8];
  /* 0x0064 */ long __PADDING__[1];
} PF_METADATA_RECORD, *PPF_METADATA_RECORD; /* size: 0x0068 */

typedef struct _PF_SECTION_RECORD
{
  /* 0x0000 */ long FirstPageIdx;
  /* 0x0004 */ unsigned long NumPages;
  /* 0x0008 */ unsigned long NumPagesNotIgnore;
  /* 0x000c */ unsigned long FileNameOffset;
  /* 0x0010 */ unsigned long FileNameLength;
  struct /* bitfield */
  {
    /* 0x0014 */ unsigned long IsIgnore : 1; /* bit position: 0 */
    /* 0x0014 */ unsigned long IsPrefetchedInDataPhase : 8; /* bit position: 1 */
    /* 0x0014 */ unsigned long IsPrefetchedInImagePhase : 8; /* bit position: 9 */
  }; /* bitfield */
  /* 0x0018 */ unsigned long FileIndexNumberLow;
  /* 0x001c */ unsigned long FileIndexNumberHigh;
} PF_SECTION_RECORD, *PPF_SECTION_RECORD; /* size: 0x0020 */

typedef struct _PF_PAGE_RECORD
{
  /* 0x0000 */ long NextPageIdx;
  /* 0x0004 */ unsigned long FileOffset;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long IsIgnore : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long IsImage : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long IsData : 1; /* bit position: 2 */
    /* 0x0008 */ unsigned long IsReloc : 1; /* bit position: 3 */
    /* 0x0008 */ unsigned long Spare : 4; /* bit position: 4 */
    /* 0x0008 */ unsigned long PrefetchPhase : 8; /* bit position: 8 */
    /* 0x0008 */ unsigned long UsageHistory : 8; /* bit position: 16 */
    /* 0x0008 */ unsigned long PrefetchHistory : 8; /* bit position: 24 */
  }; /* bitfield */
} PF_PAGE_RECORD, *PPF_PAGE_RECORD; /* size: 0x000c */

typedef struct _REGISTRY_MEMORY_RUN
{
  /* 0x0000 */ unsigned __int64 BasePage;
  /* 0x0008 */ unsigned __int64 PageCount;
  /* 0x0010 */ struct _MMPTE* PointerPte;
} REGISTRY_MEMORY_RUN, *PREGISTRY_MEMORY_RUN; /* size: 0x0018 */

typedef struct _PF_SESSION_INFO
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ long Padding_1375;
  /* 0x0008 */ unsigned __int64 SessionGlobalVA;
  /* 0x0010 */ unsigned __int64 IdleProcess;
} PF_SESSION_INFO, *PPF_SESSION_INFO; /* size: 0x0018 */

typedef struct _PF_EVENT_VIRTUAL_FREE
{
  /* 0x0000 */ unsigned __int64 ProcessKey;
  /* 0x0008 */ unsigned __int64 UniqueProcessHash;
  /* 0x0010 */ unsigned __int64 PageCount;
  union
  {
    /* 0x0018 */ unsigned __int64 Decommit : 1; /* bit position: 0 */
    /* 0x0018 */ unsigned __int64 BaseAddress;
  }; /* size: 0x0008 */
} PF_EVENT_VIRTUAL_FREE, *PPF_EVENT_VIRTUAL_FREE; /* size: 0x0020 */

typedef struct _PF_APPLAUNCH_DATA
{
  /* 0x0000 */ struct _PF_SESSION_INFO SessionInfo;
  /* 0x0018 */ unsigned long ImagePathHash;
  /* 0x001c */ unsigned long ProcessId;
  /* 0x0020 */ unsigned __int64 UniqueProcessHash;
  /* 0x0028 */ unsigned __int64 PageDirectoryBase;
  /* 0x0030 */ unsigned __int64 ProcessKey;
  /* 0x0038 */ unsigned long Reserved0 : 1; /* bit position: 0 */
  /* 0x003c */ unsigned short PathLength;
  /* 0x003e */ wchar_t ExePath[1];
} PF_APPLAUNCH_DATA, *PPF_APPLAUNCH_DATA; /* size: 0x0040 */

typedef struct _PF_FOREGROUND_PROCESS_INFO
{
  /* 0x0000 */ unsigned __int64 ProcessKey;
  /* 0x0008 */ unsigned long ImagePathHash;
  /* 0x000c */ long __PADDING__[1];
} PF_FOREGROUND_PROCESS_INFO, *PPF_FOREGROUND_PROCESS_INFO; /* size: 0x0010 */

typedef struct _PF_EVENT_HARDFAULT_TS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long HasFileInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Duration : 31; /* bit position: 1 */
  }; /* bitfield */
  union
  {
    /* 0x0004 */ unsigned long SequenceNumber;
    struct
    {
      /* 0x0004 */ unsigned short FileInfoIndex;
      /* 0x0006 */ unsigned short ProcessInfoIndex;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned __int64 FileOffset;
  /* 0x0010 */ unsigned __int64 VirtualAddress;
  /* 0x0018 */ unsigned __int64 FileKey;
  /* 0x0020 */ unsigned __int64 UProcessHash;
} PF_EVENT_HARDFAULT_TS, *PPF_EVENT_HARDFAULT_TS; /* size: 0x0028 */

typedef struct _LZNT1_FORMAT
{
  /* 0x0000 */ unsigned long LengthMask;
  /* 0x0004 */ unsigned long DisplacementMask;
  /* 0x0008 */ unsigned long MaxLength;
  /* 0x000c */ unsigned long MaxDisplacement;
  /* 0x0010 */ unsigned char DisplacementShift;
  /* 0x0011 */ char __PADDING__[3];
} LZNT1_FORMAT, *PLZNT1_FORMAT; /* size: 0x0014 */

typedef struct _LZNT1_HIBER_WORKSPACE
{
  /* 0x0000 */ unsigned long IndexTable[4096];
} LZNT1_HIBER_WORKSPACE, *PLZNT1_HIBER_WORKSPACE; /* size: 0x4000 */

typedef union _COMPRESSED_CHUNK_HEADER
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned short CompressedChunkSizeMinus3 : 12; /* bit position: 0 */
        /* 0x0000 */ unsigned short ChunkSignature : 3; /* bit position: 12 */
        /* 0x0000 */ unsigned short IsChunkCompressed : 1; /* bit position: 15 */
      }; /* bitfield */
    } /* size: 0x0002 */ Chunk;
    /* 0x0000 */ unsigned short Short;
  }; /* size: 0x0002 */
} COMPRESSED_CHUNK_HEADER, *PCOMPRESSED_CHUNK_HEADER; /* size: 0x0002 */

typedef struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS32
{
  /* 0x0000 */ unsigned long QueryFlags;
  /* 0x0004 */ long ProcessHandle;
} SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS32, *PSYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS32; /* size: 0x0008 */

typedef struct _MI_MEMORY_NODE
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0010 */ unsigned __int64 FirstPage;
  /* 0x0018 */ unsigned __int64 LastPage;
} MI_MEMORY_NODE, *PMI_MEMORY_NODE; /* size: 0x0020 */

typedef struct _MI_NODE_COST
{
  /* 0x0000 */ unsigned long NodeNumber;
  /* 0x0004 */ long Padding_1376;
  /* 0x0008 */ unsigned __int64 CycleCost;
} MI_NODE_COST, *PMI_NODE_COST; /* size: 0x0010 */

typedef struct _DPC_LOG_INFO
{
  /* 0x0000 */ unsigned short HookId;
  /* 0x0002 */ unsigned short Pad;
  /* 0x0004 */ unsigned long LogFlags;
} DPC_LOG_INFO, *PDPC_LOG_INFO; /* size: 0x0008 */

typedef struct _PFP_PREFETCH_REQUEST_VERIFY
{
  /* 0x0000 */ struct _PFP_PREFETCH_REQUEST_RANGE Volumes;
  /* 0x000c */ struct _PFP_PREFETCH_REQUEST_RANGE Files;
  /* 0x0018 */ struct _PFP_PREFETCH_REQUEST_RANGE Ranges;
  /* 0x0024 */ struct _PFP_PREFETCH_REQUEST_RANGE Sources;
  /* 0x0030 */ struct _PFP_PREFETCH_REQUEST_RANGE Strings;
} PFP_PREFETCH_REQUEST_VERIFY, *PPFP_PREFETCH_REQUEST_VERIFY; /* size: 0x003c */

struct ct_values_s
{
  /* 0x0000 */ unsigned short CType1;
  /* 0x0002 */ unsigned short CType2;
  /* 0x0004 */ unsigned short CType3;
}; /* size: 0x0006 */

typedef struct _MICROCODE_UPDATE_LOCK
{
  /* 0x0000 */ struct _KGUARDED_MUTEX LockMutex;
  /* 0x0038 */ unsigned long WaitCount;
  /* 0x003c */ long Padding_1377;
  /* 0x0040 */ struct _KEVENT WaitEvent;
} MICROCODE_UPDATE_LOCK, *PMICROCODE_UPDATE_LOCK; /* size: 0x0058 */

typedef struct _MCUPDATE_CONTEXT
{
  /* 0x0000 */ void* Function /* function */;
  /* 0x0008 */ struct _KEVENT Complete;
  /* 0x0020 */ long Status;
  /* 0x0024 */ long __PADDING__[1];
} MCUPDATE_CONTEXT, *PMCUPDATE_CONTEXT; /* size: 0x0028 */

typedef struct _CM_ALLOC_PAGE
{
  /* 0x0000 */ unsigned long FreeCount;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ void* AllocPage;
} CM_ALLOC_PAGE, *PCM_ALLOC_PAGE; /* size: 0x0010 */

typedef struct _RTL_NORMALIZATION_LIST
{
  /* 0x0000 */ struct _LIST_ENTRY ListHead;
  /* 0x0010 */ struct _RTL_NORMALIZATION_LOCK Lock;
} RTL_NORMALIZATION_LIST, *PRTL_NORMALIZATION_LIST; /* size: 0x0018 */

typedef struct _RTL_NORMALIZATION_LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ enum _RTL_NORM_FORM NormForm;
  /* 0x0014 */ long Padding_1378;
  /* 0x0018 */ struct _RTL_NORMALIZATION Normalization;
} RTL_NORMALIZATION_LIST_ENTRY, *PRTL_NORMALIZATION_LIST_ENTRY; /* size: 0x0090 */

typedef struct _InbvProgressState
{
  /* 0x0000 */ unsigned long Floor;
  /* 0x0004 */ unsigned long Ceiling;
  /* 0x0008 */ unsigned long Bias;
} InbvProgressState, *PInbvProgressState; /* size: 0x000c */

typedef struct _BT_PROGRESS_INDICATOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Expected;
  /* 0x0008 */ unsigned long Percentage;
} BT_PROGRESS_INDICATOR, *PBT_PROGRESS_INDICATOR; /* size: 0x000c */

typedef struct _CM_VIRTUAL_REPLICATION_STACK
{
  /* 0x0000 */ struct _UNICODE_STRING ChildName;
  /* 0x0010 */ struct _CM_KEY_NODE* VirtualParentNode;
  /* 0x0018 */ unsigned long VirtualParentCell;
  /* 0x001c */ unsigned long VirtualChildCell;
  /* 0x0020 */ enum HSTORAGE_TYPE StorageType;
  /* 0x0024 */ long __PADDING__[1];
} CM_VIRTUAL_REPLICATION_STACK, *PCM_VIRTUAL_REPLICATION_STACK; /* size: 0x0028 */

typedef struct _CM_SID_TO_HIVE_MAPPING
{
  /* 0x0000 */ struct _UNICODE_STRING String;
  /* 0x0010 */ unsigned long HashKey;
  /* 0x0014 */ long Padding_1379;
  /* 0x0018 */ struct _CMHIVE* CmHive;
} CM_SID_TO_HIVE_MAPPING, *PCM_SID_TO_HIVE_MAPPING; /* size: 0x0020 */

typedef struct _PFFB_ALLOCATION
{
  /* 0x0000 */ struct _SLIST_ENTRY AllocationLink;
  /* 0x0010 */ unsigned long BufferCount;
  /* 0x0014 */ unsigned long BufferSize;
  /* 0x0018 */ unsigned long TotalSize;
  /* 0x001c */ long __PADDING__[1];
} PFFB_ALLOCATION, *PPFFB_ALLOCATION; /* size: 0x0020 */

typedef struct _RGBQUAD
{
  /* 0x0000 */ unsigned char rgbBlue;
  /* 0x0001 */ unsigned char rgbGreen;
  /* 0x0002 */ unsigned char rgbRed;
  /* 0x0003 */ unsigned char rgbReserved;
} RGBQUAD, *PRGBQUAD; /* size: 0x0004 */

typedef struct _SYSTEMTIME
{
  /* 0x0000 */ short wYear;
  /* 0x0002 */ short wMonth;
  /* 0x0004 */ short wDayOfWeek;
  /* 0x0006 */ short wDay;
  /* 0x0008 */ short wHour;
  /* 0x000a */ short wMinute;
  /* 0x000c */ short wSecond;
  /* 0x000e */ short wMilliseconds;
} SYSTEMTIME, *PSYSTEMTIME; /* size: 0x0010 */

typedef struct _REG_TZI_FORMAT
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ long StandardBias;
  /* 0x0008 */ long DaylightBias;
  /* 0x000c */ struct _SYSTEMTIME StandardStart;
  /* 0x001c */ struct _SYSTEMTIME DaylightStart;
} REG_TZI_FORMAT, *PREG_TZI_FORMAT; /* size: 0x002c */

typedef struct _STORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_REQUEST
{
  /* 0x0000 */ unsigned long RequestLevel;
  /* 0x0004 */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
  /* 0x0018 */ unsigned long FileNameOffset;
  /* 0x001c */ unsigned long FileNameLength;
} STORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_REQUEST, *PSTORAGE_QUERY_VIRTUAL_DISK_SYMBOLIC_LINK_LEV1_REQUEST; /* size: 0x0020 */

typedef struct _EXP_SL_KMEM_CACHE_PROVIDER
{
  /* 0x0000 */ const wchar_t* PolicyName;
  /* 0x0008 */ void* CacheProvider /* function */;
} EXP_SL_KMEM_CACHE_PROVIDER, *PEXP_SL_KMEM_CACHE_PROVIDER; /* size: 0x0010 */

typedef struct _PFBL_TRACE_INFO
{
  /* 0x0000 */ char** Trace;
  /* 0x0008 */ unsigned long TraceSize;
  /* 0x000c */ long Padding_1380;
  /* 0x0010 */ struct _KTIMER Timer;
  /* 0x0050 */ struct _KDPC Dpc;
  /* 0x0090 */ struct _WORK_QUEUE_ITEM TraceDestroyWorkItem;
  /* 0x00b0 */ struct _EX_RUNDOWN_REF TraceInfoRef;
  /* 0x00b8 */ unsigned char StartedDelete;
  /* 0x00b9 */ char __PADDING__[7];
} PFBL_TRACE_INFO, *PPFBL_TRACE_INFO; /* size: 0x00c0 */

typedef struct _POOL_DPC_CONTEXT
{
  /* 0x0000 */ struct _POOL_TRACKER_TABLE* PoolTrackTable;
  /* 0x0008 */ unsigned __int64 PoolTrackTableSize;
  /* 0x0010 */ struct _POOL_TRACKER_TABLE* PoolTrackTableExpansion;
  /* 0x0018 */ unsigned __int64 PoolTrackTableSizeExpansion;
} POOL_DPC_CONTEXT, *PPOOL_DPC_CONTEXT; /* size: 0x0020 */

typedef struct _HEADLESS_GLOBALS
{
  /* 0x0000 */ unsigned __int64 SpinLock;
  /* 0x0008 */ void* PageLockHandle;
  /* 0x0010 */ struct _HEADLESS_LOG_ENTRY* LogEntries;
  /* 0x0018 */ unsigned char* TmpBuffer;
  /* 0x0020 */ unsigned char* InputBuffer;
  /* 0x0028 */ struct _HEADLESS_BLUE_SCREEN_DATA* BlueScreenData;
  union
  {
    struct /* bitfield */
    {
      /* 0x0030 */ unsigned long TerminalEnabled : 1; /* bit position: 0 */
      /* 0x0030 */ unsigned long InBugCheck : 1; /* bit position: 1 */
      /* 0x0030 */ unsigned long NewLogEntryAdded : 1; /* bit position: 2 */
      /* 0x0030 */ unsigned long UsedBiosSettings : 1; /* bit position: 3 */
      /* 0x0030 */ unsigned long InputProcessing : 1; /* bit position: 4 */
      /* 0x0030 */ unsigned long InputLineDone : 1; /* bit position: 5 */
      /* 0x0030 */ unsigned long ProcessingCmd : 1; /* bit position: 6 */
      /* 0x0030 */ unsigned long TerminalParity : 1; /* bit position: 7 */
      /* 0x0030 */ unsigned long TerminalStopBits : 1; /* bit position: 8 */
      /* 0x0030 */ unsigned long TerminalPortNumber : 3; /* bit position: 9 */
      /* 0x0030 */ unsigned long IsNonLegacyDevice : 1; /* bit position: 12 */
    }; /* bitfield */
    /* 0x0030 */ unsigned long AllFlags;
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long TerminalBaudRate;
  /* 0x0038 */ unsigned long TerminalPort;
  /* 0x003c */ long Padding_1381;
  /* 0x0040 */ unsigned char* TerminalPortAddress;
  /* 0x0048 */ union _LARGE_INTEGER DelayTime;
  /* 0x0050 */ unsigned long MicroSecondsDelayTime;
  /* 0x0054 */ unsigned char TerminalType;
  /* 0x0055 */ char Padding_1382[3];
  /* 0x0058 */ unsigned __int64 InputBufferIndex;
  /* 0x0060 */ unsigned short LogEntryLast;
  /* 0x0062 */ unsigned short LogEntryStart;
  /* 0x0064 */ struct _GUID SystemGUID;
  /* 0x0074 */ unsigned char IsMMIODevice;
  /* 0x0075 */ unsigned char IsLastCharCR;
  /* 0x0076 */ char __PADDING__[2];
} HEADLESS_GLOBALS, *PHEADLESS_GLOBALS; /* size: 0x0078 */

typedef struct _KTMOBJECT_NAMESPACE_CONTEXT
{
  /* 0x0000 */ void* Value;
  /* 0x0008 */ enum _CONTEXT_TYPE KeyOrObject;
  /* 0x000c */ long __PADDING__[1];
} KTMOBJECT_NAMESPACE_CONTEXT, *PKTMOBJECT_NAMESPACE_CONTEXT; /* size: 0x0010 */

typedef struct _PSP_IFEO_PERF_OPTIONS
{
  union
  {
    /* 0x0000 */ unsigned long AllFlags;
    /* 0x0000 */ unsigned long AnyPriority : 3; /* bit position: 0 */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long IoPriorityValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long PagePriorityValid : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long CpuPriorityValid : 1; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long WorkingSetLimitValid : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long SpareBits : 28; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0008 */ unsigned long IoPriority;
  /* 0x000c */ unsigned long PagePriority;
  /* 0x0010 */ unsigned long CpuPriorityClass;
  /* 0x0014 */ unsigned long WorkingSetPagesLimit;
} PSP_IFEO_PERF_OPTIONS, *PPSP_IFEO_PERF_OPTIONS; /* size: 0x0018 */

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER_NODE
{
  /* 0x0000 */ struct _SYSTEM_FIRMWARE_TABLE_HANDLER SystemFWHandler;
  /* 0x0018 */ struct _LIST_ENTRY FirmwareTableProviderList;
} SYSTEM_FIRMWARE_TABLE_HANDLER_NODE, *PSYSTEM_FIRMWARE_TABLE_HANDLER_NODE; /* size: 0x0028 */

typedef struct _WDIP_SEM_MEMORY_BLOCK
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
} WDIP_SEM_MEMORY_BLOCK, *PWDIP_SEM_MEMORY_BLOCK; /* size: 0x0010 */

typedef struct _BAPD_LIST_ITEM
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ struct _BAPD_ITEM_DESCRIPTOR ItemDesc;
} BAPD_LIST_ITEM, *PBAPD_LIST_ITEM; /* size: 0x001c */

typedef struct _KNMI_HANDLER_CALLBACK
{
  /* 0x0000 */ struct _KNMI_HANDLER_CALLBACK* Next;
  /* 0x0008 */ void* Callback /* function */;
  /* 0x0010 */ void* Context;
  /* 0x0018 */ void* Handle;
} KNMI_HANDLER_CALLBACK, *PKNMI_HANDLER_CALLBACK; /* size: 0x0020 */

typedef struct _BCryptBufferDesc
{
  /* 0x0000 */ unsigned long ulVersion;
  /* 0x0004 */ unsigned long cBuffers;
  /* 0x0008 */ struct _BCryptBuffer* pBuffers;
} BCryptBufferDesc, *PBCryptBufferDesc; /* size: 0x0010 */

typedef struct _BCryptBuffer
{
  /* 0x0000 */ unsigned long cbBuffer;
  /* 0x0004 */ unsigned long BufferType;
  /* 0x0008 */ void* pvBuffer;
} BCryptBuffer, *PBCryptBuffer; /* size: 0x0010 */

typedef struct _BCRYPT_PROVIDER_NAME
{
  /* 0x0000 */ unsigned short* pszProviderName;
} BCRYPT_PROVIDER_NAME, *PBCRYPT_PROVIDER_NAME; /* size: 0x0008 */

typedef struct _MT_RESULT_HEADER
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long BadPageCount;
  /* 0x000c */ unsigned long BadPagePfnArrayOffset;
  /* 0x0010 */ unsigned long BadPageOverflow;
  /* 0x0014 */ unsigned long TestResultCount;
  /* 0x0018 */ unsigned long TestResultArrayOffset;
  /* 0x001c */ struct _TIME_FIELDS TestTime;
  /* 0x002c */ unsigned long PagesTested;
  /* 0x0030 */ unsigned long PagesUntested;
  /* 0x0034 */ unsigned long Flags;
} MT_RESULT_HEADER, *PMT_RESULT_HEADER; /* size: 0x0038 */

typedef struct _KSEC_BCRYPT_EX_FUNCTIONS
{
  /* 0x0000 */ void* RegisterConfigChangeNotify /* function */;
  /* 0x0008 */ void* UnregisterConfigChangeNotify /* function */;
  /* 0x0010 */ void* ResolveProviders /* function */;
  /* 0x0018 */ void* GetFipsAlgorithmMode /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* CreateHash /* function */;
  /* 0x0030 */ void* Decrypt /* function */;
  /* 0x0038 */ void* DestroyHash /* function */;
  /* 0x0040 */ void* DestroyKey /* function */;
  /* 0x0048 */ void* DuplicateHash /* function */;
  /* 0x0050 */ void* DuplicateKey /* function */;
  /* 0x0058 */ void* Encrypt /* function */;
  /* 0x0060 */ void* EnumAlgorithms /* function */;
  /* 0x0068 */ void* EnumProviders /* function */;
  /* 0x0070 */ void* ExportKey /* function */;
  /* 0x0078 */ void* FinishHash /* function */;
  /* 0x0080 */ void* FinalizeKeyPair /* function */;
  /* 0x0088 */ void* FreeBuffer /* function */;
  /* 0x0090 */ void* GenerateKeyPair /* function */;
  /* 0x0098 */ void* GenerateSymmetricKey /* function */;
  /* 0x00a0 */ void* GenRandom /* function */;
  /* 0x00a8 */ void* GetProperty /* function */;
  /* 0x00b0 */ void* HashData /* function */;
  /* 0x00b8 */ void* ImportKey /* function */;
  /* 0x00c0 */ void* ImportKeyPair /* function */;
  /* 0x00c8 */ void* OpenAlgorithmProvider /* function */;
  /* 0x00d0 */ void* SecretAgreement /* function */;
  /* 0x00d8 */ void* DeriveKey /* function */;
  /* 0x00e0 */ void* DestroySecret /* function */;
  /* 0x00e8 */ void* SetProperty /* function */;
  /* 0x00f0 */ void* SignHash /* function */;
  /* 0x00f8 */ void* VerifySignature /* function */;
  /* 0x0100 */ void* DeriveKeyCapi /* function */;
  /* 0x0108 */ void* DeriveKeyPBKDF2 /* function */;
  /* 0x0110 */ void* SystemPrng /* function */;
} KSEC_BCRYPT_EX_FUNCTIONS, *PKSEC_BCRYPT_EX_FUNCTIONS; /* size: 0x0118 */

typedef struct _CRYPT_PROVIDER_REFS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_1383;
  /* 0x0008 */ struct _CRYPT_PROVIDER_REF** rgpProviders;
} CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS; /* size: 0x0010 */

typedef struct _CRYPT_PROVIDER_REF
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ long Padding_1384;
  /* 0x0008 */ unsigned short* pszFunction;
  /* 0x0010 */ unsigned short* pszProvider;
  /* 0x0018 */ unsigned long cProperties;
  /* 0x001c */ long Padding_1385;
  /* 0x0020 */ struct _CRYPT_PROPERTY_REF** rgpProperties;
  /* 0x0028 */ struct _CRYPT_IMAGE_REF* pUM;
  /* 0x0030 */ struct _CRYPT_IMAGE_REF* pKM;
} CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF; /* size: 0x0038 */

typedef struct _CRYPT_IMAGE_REF
{
  /* 0x0000 */ unsigned short* pszImage;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long __PADDING__[1];
} CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF; /* size: 0x0010 */

typedef struct _TRACKING_BUFFER
{
  /* 0x0000 */ struct _FILE_TRACKING_INFORMATION TrackingInformation;
  /* 0x0010 */ unsigned char Buffer[256];
} TRACKING_BUFFER, *PTRACKING_BUFFER; /* size: 0x0110 */

typedef struct _REMOTE_LINK_BUFFER
{
  /* 0x0000 */ struct _REMOTE_LINK_TRACKING_INFORMATION_ TrackingInformation;
  /* 0x0010 */ unsigned char Buffer[256];
} REMOTE_LINK_BUFFER, *PREMOTE_LINK_BUFFER; /* size: 0x0110 */

typedef struct _LINK_TRACKING_RESPONSE
{
  /* 0x0000 */ long Status;
} LINK_TRACKING_RESPONSE, *PLINK_TRACKING_RESPONSE; /* size: 0x0004 */

typedef struct _LINK_TRACKING_MESSAGE
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long Request;
  /* 0x0008 */ struct _LINK_TRACKING_INFORMATION SourceVolumeId;
  /* 0x001c */ struct _FILE_OBJECTID_BUFFER SourceObjectId;
  /* 0x005c */ struct _LINK_TRACKING_INFORMATION TargetVolumeId;
  /* 0x0070 */ struct _GUID TargetObjectId;
  /* 0x0080 */ struct _GUID TargetMachineId;
} LINK_TRACKING_MESSAGE, *PLINK_TRACKING_MESSAGE; /* size: 0x0090 */

typedef struct _BL_LOG_ETW_EVENT
{
  /* 0x0000 */ struct _BL_LOG_ENTRY_HEADER Header;
  /* 0x000c */ unsigned char Reserved[3];
  /* 0x000f */ unsigned char ActivityIdValid;
  /* 0x0010 */ struct _GUID ActivityId;
  /* 0x0020 */ struct _GUID ProviderId;
  /* 0x0030 */ struct _EVENT_DESCRIPTOR EventDescriptor;
  /* 0x0040 */ unsigned long DataSize;
  /* 0x0044 */ unsigned char Data[1];
  /* 0x0045 */ char __PADDING__[3];
} BL_LOG_ETW_EVENT, *PBL_LOG_ETW_EVENT; /* size: 0x0048 */

typedef struct _QueryDirPoolData
{
  /* 0x0000 */ struct _KEVENT kevent;
  /* 0x0018 */ struct _UNICODE_STRING FileName;
  /* 0x0028 */ wchar_t FileNameBuf[1];
  /* 0x002a */ char __PADDING__[6];
} QueryDirPoolData, *PQueryDirPoolData; /* size: 0x0030 */

typedef struct _PERFDIAG_GLOBALS
{
  /* 0x0000 */ unsigned __int64 BootSystemProxyProvider;
  /* 0x0008 */ unsigned __int64 BootUserProxyProvider;
  /* 0x0010 */ unsigned __int64 ShutdownProxyProvider;
  /* 0x0018 */ struct _EX_PUSH_LOCK GlobalsLock;
  /* 0x0020 */ enum _PERFDIAG_TRACESTATE TraceState;
  /* 0x0024 */ wchar_t LoggerName[31];
  /* 0x0062 */ char Padding_1386[6];
  /* 0x0068 */ struct _WMI_LOGGER_INFORMATION LoggerInfo;
  /* 0x0118 */ struct _TRACE_ENABLE_FLAG_EXT_HEADER LoggerInfo_ExtHeader;
  /* 0x011c */ struct _TRACE_ENABLE_FLAG_EXT_ITEM LoggerInfo_ExtItem;
  /* 0x0120 */ unsigned long LoggerInfo_EnableFlags[10];
} PERFDIAG_GLOBALS, *PPERFDIAG_GLOBALS; /* size: 0x0148 */

typedef struct _PERFDIAG_ENABLE_FLAGS_QUERYBUFFER
{
  /* 0x0000 */ unsigned long cbBufferSize;
  /* 0x0004 */ unsigned long ValueType;
  /* 0x0008 */ unsigned long EnableFlags[10];
} PERFDIAG_ENABLE_FLAGS_QUERYBUFFER, *PPERFDIAG_ENABLE_FLAGS_QUERYBUFFER; /* size: 0x0030 */

typedef struct _CPPORT
{
  /* 0x0000 */ unsigned char* Address;
  /* 0x0008 */ unsigned long Baud;
  /* 0x000c */ unsigned short Flags;
  /* 0x000e */ char __PADDING__[2];
} CPPORT, *PCPPORT; /* size: 0x0010 */

typedef struct _CM_PARSE_CACHE_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY NextEntry;
  /* 0x0008 */ struct _LIST_ENTRY NextHiveEntry;
  /* 0x0018 */ struct _UNICODE_STRING SearchString;
  /* 0x0028 */ unsigned long HashValue;
  /* 0x002c */ unsigned long Cell;
  /* 0x0030 */ struct _CM_KEY_CONTROL_BLOCK* RootKcb;
} CM_PARSE_CACHE_ENTRY, *PCM_PARSE_CACHE_ENTRY; /* size: 0x0038 */

typedef struct _POP_SLEEP_DISABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ enum _PO_SLEEP_DISABLE_REASON Reason;
  /* 0x0014 */ unsigned long Mask;
} POP_SLEEP_DISABLE_ENTRY, *PPOP_SLEEP_DISABLE_ENTRY; /* size: 0x0018 */

typedef struct _MM_PAGE_ACCESS_ENTRY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MI_PAGE_ACCESS_ENTRY e1;
      /* 0x0000 */ struct _MM_PAGE_ACCESS_INFO e2;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MM_PAGE_ACCESS_ENTRY, *PMM_PAGE_ACCESS_ENTRY; /* size: 0x0008 */

typedef struct _DBGKP_ERROR_PORT
{
  /* 0x0000 */ unsigned long RefCount;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ void* PortHandle;
} DBGKP_ERROR_PORT, *PDBGKP_ERROR_PORT; /* size: 0x0010 */

typedef struct _VOLUME_NUMBER
{
  /* 0x0000 */ unsigned long VolumeNumber;
  /* 0x0004 */ wchar_t VolumeManagerName[8];
} VOLUME_NUMBER, *PVOLUME_NUMBER; /* size: 0x0014 */

typedef struct _STORAGE_SURFACE_VIRTUAL_DISK_LEV1_REQUEST
{
  /* 0x0000 */ unsigned long RequestLevel;
  /* 0x0004 */ enum _ATTACH_VIRTUAL_DISK_FLAG Flags;
  /* 0x0008 */ unsigned long ProviderFlags;
  /* 0x000c */ unsigned long SecurityDescriptorOffset;
  /* 0x0010 */ unsigned long SecurityDescriptorLength;
  /* 0x0014 */ unsigned long Reserved;
} STORAGE_SURFACE_VIRTUAL_DISK_LEV1_REQUEST, *PSTORAGE_SURFACE_VIRTUAL_DISK_LEV1_REQUEST; /* size: 0x0018 */

typedef struct _VIRTUAL_DISK_EA_BUFFER
{
  /* 0x0000 */ struct _GUID Identifier;
  /* 0x0010 */ unsigned long EASize;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long AccessMask;
  /* 0x001c */ unsigned long RWDepth;
} VIRTUAL_DISK_EA_BUFFER, *PVIRTUAL_DISK_EA_BUFFER; /* size: 0x0020 */

typedef struct _KI_INTINIT_REC
{
  /* 0x0000 */ unsigned char Vector;
  /* 0x0001 */ unsigned char Dpl;
  /* 0x0002 */ unsigned char IstIndex;
  /* 0x0003 */ char Padding_1387[5];
  /* 0x0008 */ void* Handler /* function */;
} KI_INTINIT_REC, *PKI_INTINIT_REC; /* size: 0x0010 */

typedef struct _VERIFIER_STRING_INFO
{
  /* 0x0000 */ unsigned long BuildNumber;
  /* 0x0004 */ unsigned long DriverVerifierLevel;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Check;
} VERIFIER_STRING_INFO, *PVERIFIER_STRING_INFO; /* size: 0x0010 */

typedef struct _WDIP_SEM_INFLIGHT_SCENARIO_TABLE
{
  /* 0x0000 */ struct _WDI_SEM_INFLIGHT_SCENARIO_INFO* InflightScenarios[125];
  /* 0x03e8 */ unsigned long TableSize;
  /* 0x03ec */ long __PADDING__[1];
} WDIP_SEM_INFLIGHT_SCENARIO_TABLE, *PWDIP_SEM_INFLIGHT_SCENARIO_TABLE; /* size: 0x03f0 */

typedef struct _RAMDISK_CREATE_OPTIONS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Readonly : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Fixed : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long NoDriveLetter : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long NoDosDevice : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long Hidden : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long ExportAsCd : 1; /* bit position: 5 */
  }; /* bitfield */
} RAMDISK_CREATE_OPTIONS, *PRAMDISK_CREATE_OPTIONS; /* size: 0x0004 */

typedef struct _RAMDISK_CREATE_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID DiskGuid;
  /* 0x0014 */ unsigned long DiskType;
  /* 0x0018 */ struct _RAMDISK_CREATE_OPTIONS Options;
  /* 0x001c */ long Padding_1388;
  /* 0x0020 */ unsigned __int64 DiskLength;
  /* 0x0028 */ unsigned long DiskOffset;
  /* 0x002c */ long Padding_1389;
  union
  {
    struct
    {
      /* 0x0030 */ unsigned long ViewCount;
      /* 0x0034 */ unsigned long ViewLength;
      /* 0x0038 */ wchar_t FileName[1];
    }; /* size: 0x000a */
    struct
    {
      /* 0x0030 */ unsigned __int64 BasePage;
      /* 0x0038 */ wchar_t DriveLetter;
    }; /* size: 0x000a */
    struct
    {
      /* 0x0030 */ void* BaseAddress;
      /* 0x0038 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} RAMDISK_CREATE_INPUT, *PRAMDISK_CREATE_INPUT; /* size: 0x0040 */

struct VFWMI_DEVICE_EXTENSION
{
  /* 0x0000 */ unsigned long SiloNumber;
}; /* size: 0x0004 */

typedef struct _KERNSNAP_THREAD_DATA
{
  /* 0x0000 */ long StatusCode;
  /* 0x0004 */ unsigned long DataCaptured;
  /* 0x0008 */ unsigned long NumOfPendingIrps;
  /* 0x000c */ unsigned long NumOfIrpsCaptured;
} KERNSNAP_THREAD_DATA, *PKERNSNAP_THREAD_DATA; /* size: 0x0010 */

typedef struct _LIVE_DUMP_DIAGNOSTIC
{
  /* 0x0000 */ unsigned long NumThreads;
  /* 0x0004 */ long Padding_1390;
  /* 0x0008 */ long* ThreadCollectionStatus;
} LIVE_DUMP_DIAGNOSTIC, *PLIVE_DUMP_DIAGNOSTIC; /* size: 0x0010 */

typedef struct _PACKED_BIOS_PARAMETER_BLOCK
{
  /* 0x0000 */ unsigned char BytesPerSector[2];
  /* 0x0002 */ unsigned char SectorsPerCluster[1];
  /* 0x0003 */ unsigned char ReservedSectors[2];
  /* 0x0005 */ unsigned char Fats[1];
  /* 0x0006 */ unsigned char RootEntries[2];
  /* 0x0008 */ unsigned char Sectors[2];
  /* 0x000a */ unsigned char Media[1];
  /* 0x000b */ unsigned char SectorsPerFat[2];
  /* 0x000d */ unsigned char SectorsPerTrack[2];
  /* 0x000f */ unsigned char Heads[2];
  /* 0x0011 */ unsigned char HiddenSectors[4];
  /* 0x0015 */ unsigned char LargeSectors[4];
} PACKED_BIOS_PARAMETER_BLOCK, *PPACKED_BIOS_PARAMETER_BLOCK; /* size: 0x0019 */

struct BIOS_PARAMETER_BLOCK
{
  /* 0x0000 */ unsigned short BytesPerSector;
  /* 0x0002 */ unsigned char SectorsPerCluster;
  /* 0x0003 */ char Padding_1391;
  /* 0x0004 */ unsigned short ReservedSectors;
  /* 0x0006 */ unsigned char Fats;
  /* 0x0007 */ char Padding_1392;
  /* 0x0008 */ unsigned short RootEntries;
  /* 0x000a */ unsigned short Sectors;
  /* 0x000c */ unsigned char Media;
  /* 0x000d */ char Padding_1393;
  /* 0x000e */ unsigned short SectorsPerFat;
  /* 0x0010 */ unsigned short SectorsPerTrack;
  /* 0x0012 */ unsigned short Heads;
  /* 0x0014 */ unsigned int HiddenSectors;
  /* 0x0018 */ unsigned int LargeSectors;
  /* 0x001c */ unsigned int LargeSectorsPerFat;
  union
  {
    /* 0x0020 */ unsigned short ExtendedFlags;
    struct /* bitfield */
    {
      /* 0x0020 */ unsigned long ActiveFat : 4; /* bit position: 0 */
      /* 0x0020 */ unsigned long Reserved0 : 3; /* bit position: 4 */
      /* 0x0020 */ unsigned long MirrorDisabled : 1; /* bit position: 7 */
      /* 0x0020 */ unsigned long Reserved1 : 8; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0024 */ unsigned short FsVersion;
  /* 0x0026 */ char Padding_1394[2];
  /* 0x0028 */ unsigned int RootDirFirstCluster;
  /* 0x002c */ unsigned short FsInfoSector;
  /* 0x002e */ unsigned short BackupBootSector;
}; /* size: 0x0030 */

typedef struct _PACKED_BOOT_SECTOR
{
  /* 0x0000 */ unsigned char Jump[3];
  /* 0x0003 */ unsigned char Oem[8];
  /* 0x000b */ struct _PACKED_BIOS_PARAMETER_BLOCK PackedBpb;
  /* 0x0024 */ unsigned char PhysicalDriveNumber;
  /* 0x0025 */ unsigned char CurrentHead;
  /* 0x0026 */ unsigned char Signature;
  /* 0x0027 */ unsigned char Id[4];
  /* 0x002b */ unsigned char VolumeLabel[11];
  /* 0x0036 */ unsigned char SystemId[8];
} PACKED_BOOT_SECTOR, *PPACKED_BOOT_SECTOR; /* size: 0x003e */

typedef struct _XIP_CONFIGURATION
{
  /* 0x0000 */ struct _XIP_BOOT_PARAMETERS BootParameters;
  /* 0x0018 */ struct BIOS_PARAMETER_BLOCK BiosParameterBlock;
  /* 0x0048 */ unsigned long ClusterZeroPage;
  /* 0x004c */ long __PADDING__[1];
} XIP_CONFIGURATION, *PXIP_CONFIGURATION; /* size: 0x0050 */

typedef struct _VI_IO_CALLBACK_STATE
{
  /* 0x0000 */ unsigned char Irql;
  /* 0x0001 */ char Padding_1395[3];
  union
  {
    struct
    {
      /* 0x0004 */ short KernelApcDisable;
      /* 0x0006 */ short SpecialApcDisable;
    }; /* size: 0x0004 */
    /* 0x0004 */ unsigned long CombinedApcDisable;
  }; /* size: 0x0004 */
} VI_IO_CALLBACK_STATE, *PVI_IO_CALLBACK_STATE; /* size: 0x0008 */

struct tagSHIMCACHEHEADER
{
  /* 0x0000 */ struct _RTL_AVL_TABLE Table;
  /* 0x0068 */ struct _LIST_ENTRY ListHead;
}; /* size: 0x0078 */

typedef struct _IOP_SESSION_WORKITEM
{
  /* 0x0000 */ struct _WORK_QUEUE_ITEM WorkItem;
  /* 0x0020 */ enum _IO_SESSION_EVENT Event;
  /* 0x0024 */ enum _IO_SESSION_STATE NewState;
  /* 0x0028 */ unsigned long PayloadSize;
  /* 0x002c */ long Padding_1396;
  /* 0x0030 */ void* Payload;
  /* 0x0038 */ void* SessionObject;
} IOP_SESSION_WORKITEM, *PIOP_SESSION_WORKITEM; /* size: 0x0040 */

typedef struct _POP_WAKE_INFO
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ unsigned long RefCount;
  /* 0x0014 */ long Padding_1397;
  /* 0x0018 */ struct _LIST_ENTRY WakeSourceList;
  /* 0x0028 */ unsigned long WakeSourceCount;
  /* 0x002c */ long Padding_1398;
  union
  {
    struct
    {
      /* 0x0030 */ struct _KDPC Dpc;
      /* 0x0070 */ struct _KTIMER Timeout;
    }; /* size: 0x0080 */
    struct
    {
      /* 0x0030 */ struct _WORK_QUEUE_ITEM WorkItem;
      /* 0x0050 */ long __PADDING__[24];
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
} POP_WAKE_INFO, *PPOP_WAKE_INFO; /* size: 0x00b0 */

typedef struct _POP_WAKE_SOURCE_WORK
{
  /* 0x0000 */ struct _LIST_ENTRY Link;
  /* 0x0010 */ struct _DEVICE_OBJECT* Pdo;
  /* 0x0018 */ struct _POP_WAKE_INFO* WakeInfo;
  /* 0x0020 */ struct _KEVENT* TimeoutEvent;
} POP_WAKE_SOURCE_WORK, *PPOP_WAKE_SOURCE_WORK; /* size: 0x0028 */

struct tagFILEDIRECTORYATTRIBUTES
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwFileSizeHigh;
  /* 0x0008 */ unsigned long dwFileSizeLow;
}; /* size: 0x000c */

struct CgFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 SavedRbp;
}; /* size: 0x0028 */

struct SkFrame
{
  /* 0x0000 */ unsigned __int64 Fill;
  /* 0x0008 */ unsigned __int64 SavedRdi;
  /* 0x0010 */ unsigned __int64 SavedRsi;
}; /* size: 0x0018 */

struct KbFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 MfCode;
  /* 0x0028 */ unsigned __int64 MfRip;
  /* 0x0030 */ unsigned __int64 MfSegCs;
  /* 0x0038 */ unsigned __int64 MfEFlags;
  /* 0x0040 */ unsigned __int64 MfRsp;
  /* 0x0048 */ unsigned __int64 MfSeqSs;
}; /* size: 0x0050 */

struct KhFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Fill;
}; /* size: 0x0028 */

struct DiFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 SavedRbx;
}; /* size: 0x0028 */

struct IhFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Fill;
}; /* size: 0x0028 */

struct KfFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned long OldIrql;
  /* 0x002c */ unsigned long Fill1;
  /* 0x0030 */ __m128 SavedXmm6;
  /* 0x0040 */ __m128 SavedXmm7;
  /* 0x0050 */ __m128 SavedXmm8;
  /* 0x0060 */ __m128 SavedXmm9;
  /* 0x0070 */ __m128 SavedXmm10;
  /* 0x0080 */ __m128 SavedXmm11;
  /* 0x0090 */ __m128 SavedXmm12;
  /* 0x00a0 */ __m128 SavedXmm13;
  /* 0x00b0 */ __m128 SavedXmm14;
  /* 0x00c0 */ __m128 SavedXmm15;
  /* 0x00d0 */ unsigned __int64 SavedRbx;
}; /* size: 0x00d8 */

struct ShFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned __int64 Fill;
}; /* size: 0x0038 */

struct RcFrame
{
  /* 0x0000 */ unsigned char Mframe;
  /* 0x0001 */ char Padding_1399[39];
  /* 0x0028 */ unsigned __int64 Fill;
}; /* size: 0x0030 */

class <CrtImplementationDetails>::NativeDll
{
  union
  {
    /* 0x0000 */ const unsigned int ProcessDetach;
    /* 0x0000 */ const unsigned int ProcessAttach;
    /* 0x0000 */ const unsigned int ThreadAttach;
    /* 0x0000 */ const unsigned int ThreadDetach;
    /* 0x0000 */ const unsigned int ProcessVerifier;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef class _LocaleUpdate
{
  /* 0x0000 */ struct localeinfo_struct localeinfo;
  /* 0x0010 */ BOOL updated;
} LocaleUpdate, *PLocaleUpdate; /* size: 0x0018 */

typedef struct _is_ctype_compatible
{
  /* 0x0000 */ unsigned long id;
  /* 0x0004 */ int is_clike;
} is_ctype_compatible, *Pis_ctype_compatible; /* size: 0x0008 */

struct setloc_struct
{
  /* 0x0000 */ char* pchLanguage;
  /* 0x0008 */ char* pchCountry;
  /* 0x0010 */ int iLcidState;
  /* 0x0014 */ int iPrimaryLen;
  /* 0x0018 */ int bAbbrevLanguage;
  /* 0x001c */ int bAbbrevCountry;
  /* 0x0020 */ unsigned long lcidLanguage;
  /* 0x0024 */ unsigned long lcidCountry;
  /* 0x0028 */ struct tagLC_ID _cacheid;
  /* 0x002e */ char Padding_1400[2];
  /* 0x0030 */ unsigned int _cachecp;
  /* 0x0034 */ char _cachein[131];
  /* 0x00b7 */ char _cacheout[131];
  /* 0x013a */ char Padding_1401[2];
  /* 0x013c */ struct _is_ctype_compatible _Lcid_c[5];
  /* 0x0164 */ long __PADDING__[1];
}; /* size: 0x0168 */

struct LjFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long Excode;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned __int64 Associate;
  /* 0x0040 */ unsigned __int64 Address;
  /* 0x0048 */ unsigned long Number;
  /* 0x004c */ unsigned long Fill1;
  /* 0x0050 */ unsigned __int64 Jmpbuf;
  /* 0x0058 */ unsigned __int64 Fill2;
  /* 0x0060 */ unsigned char Context;
  /* 0x0061 */ char Padding_1402[1231];
  /* 0x0530 */ unsigned __int64 Fill3;
}; /* size: 0x0538 */

struct CaFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Fill;
}; /* size: 0x0028 */

struct sockaddr_dl
{
  /* 0x0000 */ unsigned short sdl_family;
  /* 0x0002 */ unsigned char sdl_data[8];
  /* 0x000a */ unsigned char sdl_zero[4];
}; /* size: 0x000e */

typedef struct _LSAP_ADT_OBJECT
{
  /* 0x0000 */ struct _LSAP_ADT_OBJECT* Next;
  /* 0x0008 */ struct _UNICODE_STRING Name;
  /* 0x0018 */ unsigned long BaseOffset;
  /* 0x001c */ long __PADDING__[1];
} LSAP_ADT_OBJECT, *PLSAP_ADT_OBJECT; /* size: 0x0020 */

typedef struct _LSAP_ADT_SOURCE
{
  /* 0x0000 */ struct _LSAP_ADT_SOURCE* Next;
  /* 0x0008 */ struct _UNICODE_STRING Name;
  /* 0x0018 */ struct _LSAP_ADT_OBJECT* Objects;
} LSAP_ADT_SOURCE, *PLSAP_ADT_SOURCE; /* size: 0x0020 */

struct _HEAP_LOCAL_SEGMENT_INFO;

typedef struct _SEGMENT_OBJECT
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long TotalNumberOfPtes;
  /* 0x000c */ long Padding_1403;
  /* 0x0010 */ union _LARGE_INTEGER SizeOfSegment;
  /* 0x0018 */ unsigned long NonExtendedPtes;
  /* 0x001c */ unsigned long ImageCommitment;
  /* 0x0020 */ struct _CONTROL_AREA* ControlArea;
  /* 0x0028 */ struct _SUBSECTION* Subsection;
  /* 0x0030 */ struct _MMSECTION_FLAGS* MmSectionFlags;
  /* 0x0038 */ struct _MMSUBSECTION_FLAGS* MmSubSectionFlags;
} SEGMENT_OBJECT, *PSEGMENT_OBJECT; /* size: 0x0040 */

typedef struct _HEAP_DEBUGGING_INFORMATION
{
  /* 0x0000 */ void* InterceptorFunction;
  /* 0x0008 */ unsigned short InterceptorValue;
  /* 0x000a */ char Padding_1404[2];
  /* 0x000c */ unsigned long ExtendedOptions;
  /* 0x0010 */ unsigned long StackTraceDepth;
  /* 0x0014 */ long Padding_1405;
  /* 0x0018 */ unsigned __int64 MinTotalBlockSize;
  /* 0x0020 */ unsigned __int64 MaxTotalBlockSize;
  /* 0x0028 */ void* HeapLeakEnumerationRoutine /* function */;
} HEAP_DEBUGGING_INFORMATION, *PHEAP_DEBUGGING_INFORMATION; /* size: 0x0030 */

#include <poppack.h>
